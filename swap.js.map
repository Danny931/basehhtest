{"version":3,"file":"../pages/swap.js","mappings":"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A;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://web/../../packages/ui/css/vars.css.ts","webpack://web/./src/components/CommitButton.tsx","webpack://web/./src/components/ImportTokenWarningModal.tsx","webpack://web/./src/components/Loader/Dots.tsx","webpack://web/./src/components/PairPriceDisplay.tsx","webpack://web/./src/components/Svg/RefreshIcon.tsx","webpack://web/./src/components/UnsupportedCurrencyFooter.tsx","webpack://web/./src/config/constants/warningTokens.ts","webpack://web/./src/config/constants/swapWarningTokens.ts","webpack://web/./src/hooks/useCurrentBlockTimestamp.ts","webpack://web/./src/hooks/useLast.ts","webpack://web/./src/hooks/useSwapCallArguments.ts","webpack://web/./src/hooks/useSwapCallback.ts","webpack://web/./src/hooks/useTransactionDeadline.ts","webpack://web/./src/hooks/useWrapCallback.ts","webpack://web/./src/pages/swap.tsx","webpack://web/./src/state/limitOrders/hooks.ts","webpack://web/./src/utils/maxAmountSpend.ts","webpack://web/./src/utils/shouldShowSwapWarning.ts","webpack://web/./src/utils/transactionErrorToUserReadableMessage.ts","webpack://web/./src/views/LimitOrders/utils/getPriceForOneToken.ts","webpack://web/./src/views/Swap/StableSwap/components/StableSwapCommitButton.tsx","webpack://web/./src/views/Swap/StableSwap/components/StableSwapForm.tsx","webpack://web/./src/views/Swap/StableSwap/components/StableSwapModalFooter.tsx","webpack://web/./src/views/Swap/StableSwap/components/StableSwapModalHeader.tsx","webpack://web/./src/views/Swap/StableSwap/hooks/useApproveCallbackFromStableTrade.ts","webpack://web/./src/views/Swap/StableSwap/hooks/useDerivedStableSwapInfo.ts","webpack://web/./src/views/Swap/StableSwap/hooks/useStableConfig.ts","webpack://web/./src/views/Swap/StableSwap/hooks/useStableSwapCallArgs.ts","webpack://web/./src/views/Swap/StableSwap/hooks/useStableTradeExactIn.ts","webpack://web/./src/views/Swap/StableSwap/hooks/useStableTradeExactOut.ts","webpack://web/./src/views/Swap/StableSwap/index.tsx","webpack://web/./src/views/Swap/components/AccessRisk/RiskMessage.tsx","webpack://web/./src/views/Swap/components/AccessRisk/index.tsx","webpack://web/./src/views/Swap/components/AddressInputPanel.tsx","webpack://web/./src/views/Swap/components/AdvancedSwapDetails.tsx","webpack://web/./src/views/Swap/components/AdvancedSwapDetailsDropdown.tsx","webpack://web/./src/views/Swap/components/Chart/BasicChart.tsx","webpack://web/./src/views/Swap/components/Chart/BnbWbnbNotice.tsx","webpack://web/./src/views/Swap/components/Chart/NoChartAvailable.tsx","webpack://web/./src/views/Swap/components/Chart/PriceChart.tsx","webpack://web/./src/views/Swap/components/Chart/PriceChartContainer.tsx","webpack://web/./src/views/Swap/components/Chart/styles.tsx","webpack://web/./src/views/Swap/components/ConfirmSwapModal.tsx","webpack://web/./src/views/Swap/components/ConfirmSwapModalContainer.tsx","webpack://web/./src/views/Swap/components/ConfirmationPendingContent.tsx","webpack://web/./src/views/Swap/components/CurrencyInputHeader.tsx","webpack://web/./src/views/Swap/components/FormattedPriceImpact.tsx","webpack://web/./src/views/Swap/components/ProgressSteps.tsx","webpack://web/./src/views/Swap/components/SwapCommitButton.tsx","webpack://web/./src/views/Swap/components/SwapForm.tsx","webpack://web/./src/views/Swap/components/SwapModalFooter.tsx","webpack://web/./src/views/Swap/components/SwapModalHeader.tsx","webpack://web/./src/views/Swap/components/SwapRoute.tsx","webpack://web/./src/views/Swap/components/SwapTab.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/Acknowledgement.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/BTTWarning.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/BondlyWarning.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/CcarWarning.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/FREEWarning.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/ItamWarning.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/RugPullWarning.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","webpack://web/./src/views/Swap/components/SwapWarningModal/index.tsx","webpack://web/./src/views/Swap/components/TransactionConfirmSwapContent.tsx","webpack://web/./src/views/Swap/components/confirmPriceImpactWithoutFee.ts","webpack://web/./src/views/Swap/components/styleds.tsx","webpack://web/./src/views/Swap/hooks/fetchTokenRisk.ts","webpack://web/./src/views/Swap/hooks/useRefreshBlockNumber.ts","webpack://web/./src/views/Swap/hooks/useWarningImport.tsx","webpack://web/./src/views/Swap/index.tsx","webpack://web/./src/views/Swap/styles.tsx","webpack://web/../../packages/uikit/src/components/Alert/theme.ts","webpack://web/../../packages/uikit/src/components/BottomDrawer/BottomDrawer.tsx","webpack://web/../../packages/uikit/src/components/Card/theme.ts","webpack://web/../../packages/uikit/src/components/Link/LinkExternal.tsx","webpack://web/../../packages/uikit/src/components/PancakeToggle/theme.ts","webpack://web/../../packages/uikit/src/components/Radio/theme.ts","webpack://web/../../packages/uikit/src/components/Svg/Icons/Chart.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/ChartDisable.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/ChevronRight.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Expand.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Info.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Shrink.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/SyncAlt.tsx","webpack://web/../../packages/uikit/src/components/Timeline/InfoTooltip.tsx","webpack://web/../../packages/uikit/src/components/Toggle/theme.ts","webpack://web/../../packages/uikit/src/components/Tooltip/theme.ts","webpack://web/../../packages/uikit/src/hooks/useDelayedUnmount.ts","webpack://web/../../packages/uikit/src/hooks/useOnClickOutside.ts","webpack://web/../../packages/uikit/src/hooks/useTooltip/StyledTooltip.tsx","webpack://web/../../packages/uikit/src/hooks/useTooltip/useTooltip.tsx","webpack://web/../../packages/uikit/src/theme/base.ts","webpack://web/../../packages/uikit/src/theme/colors.ts","webpack://web/../../packages/uikit/src/theme/dark.ts","webpack://web/../../packages/uikit/src/theme/light.ts","webpack://web/../../packages/uikit/src/util/getPortalRoot.ts","webpack://web/../../packages/uikit/src/util/isTouchDevice.ts","webpack://web/../../packages/uikit/src/widgets/Menu/theme.ts","webpack://web/../../packages/uikit/src/widgets/Modal/theme.ts","webpack://web/../../packages/utils/isZero.ts","webpack://web/external commonjs \"@ethersproject/abi\"","webpack://web/external commonjs \"@ethersproject/address\"","webpack://web/external commonjs \"@ethersproject/bignumber\"","webpack://web/external commonjs \"@ethersproject/bytes\"","webpack://web/external commonjs \"@ethersproject/constants\"","webpack://web/external commonjs \"@ethersproject/contracts\"","webpack://web/external commonjs \"@ethersproject/providers\"","webpack://web/external commonjs \"@ethersproject/solidity\"","webpack://web/external commonjs \"@ethersproject/strings\"","webpack://web/external commonjs \"@ethersproject/units\"","webpack://web/external commonjs \"@gelatonetwork/limit-orders-lib\"","webpack://web/external commonjs \"@gnosis.pm/safe-apps-wagmi\"","webpack://web/external commonjs \"@radix-ui/react-slot\"","webpack://web/external commonjs \"@reduxjs/toolkit\"","webpack://web/external commonjs \"@sentry/nextjs\"","webpack://web/external commonjs \"@uniswap/token-lists\"","webpack://web/external commonjs \"@vanilla-extract/recipes/createRuntimeFn\"","webpack://web/external commonjs \"@vanilla-extract/sprinkles/createRuntimeSprinkles\"","webpack://web/external commonjs \"ajv\"","webpack://web/external commonjs \"big.js\"","webpack://web/external commonjs \"bignumber.js\"","webpack://web/external commonjs \"clsx\"","webpack://web/external commonjs \"date-fns\"","webpack://web/external commonjs \"decimal.js-light\"","webpack://web/external commonjs \"fast-json-stable-stringify\"","webpack://web/external commonjs \"graphql-request\"","webpack://web/external commonjs \"jsbi\"","webpack://web/external commonjs \"local-storage\"","webpack://web/external commonjs \"localforage\"","webpack://web/external commonjs \"lodash/chunk\"","webpack://web/external commonjs \"lodash/flatMap\"","webpack://web/external commonjs \"lodash/fromPairs\"","webpack://web/external commonjs \"lodash/get\"","webpack://web/external commonjs \"lodash/groupBy\"","webpack://web/external commonjs \"lodash/isEmpty\"","webpack://web/external commonjs \"lodash/kebabCase\"","webpack://web/external commonjs \"lodash/keyBy\"","webpack://web/external commonjs \"lodash/mapValues\"","webpack://web/external commonjs \"lodash/memoize\"","webpack://web/external commonjs \"lodash/merge\"","webpack://web/external commonjs \"lodash/omitBy\"","webpack://web/external commonjs \"lodash/orderBy\"","webpack://web/external commonjs \"lodash/pickBy\"","webpack://web/external commonjs \"lodash/reduce\"","webpack://web/external commonjs \"lodash/times\"","webpack://web/external commonjs \"lodash/toNumber\"","webpack://web/external commonjs \"lodash/uniq\"","webpack://web/external commonjs \"lodash/uniqBy\"","webpack://web/external commonjs \"next-themes\"","webpack://web/external commonjs \"next/dist/shared/lib/app-router-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/head.js\"","webpack://web/external commonjs \"next/dist/shared/lib/i18n/normalize-locale-path.js\"","webpack://web/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://web/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://web/external commonjs \"next/dist/shared/lib/is-plain-object.js\"","webpack://web/external commonjs \"next/dist/shared/lib/loadable.js\"","webpack://web/external commonjs \"next/dist/shared/lib/mitt.js\"","webpack://web/external commonjs \"next/dist/shared/lib/page-path/denormalize-page-path.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/add-path-prefix.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/compare-states.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/format-next-pathname-info.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/format-url.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/get-asset-path-from-route.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/get-next-pathname-info.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/is-bot.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/is-dynamic.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/parse-path.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/parse-relative-url.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/path-has-prefix.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/querystring.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/remove-trailing-slash.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/resolve-rewrites.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/route-matcher.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/route-regex.js\"","webpack://web/external commonjs \"next/dist/shared/lib/utils.js\"","webpack://web/external commonjs \"next/head\"","webpack://web/external commonjs \"next/router\"","webpack://web/external commonjs \"numeral\"","webpack://web/external commonjs \"qrcode.react\"","webpack://web/external commonjs \"react\"","webpack://web/external commonjs \"react-device-detect\"","webpack://web/external commonjs \"react-dom\"","webpack://web/external commonjs \"react-popper\"","webpack://web/external commonjs \"react-redux\"","webpack://web/external commonjs \"react-window\"","webpack://web/external commonjs \"react/jsx-runtime\"","webpack://web/external commonjs \"redux-persist\"","webpack://web/external commonjs \"redux-persist/lib/storage\"","webpack://web/external commonjs \"styled-components\"","webpack://web/external commonjs \"styled-system\"","webpack://web/external commonjs \"tiny-invariant\"","webpack://web/external commonjs \"tiny-warning\"","webpack://web/external commonjs \"toformat\"","webpack://web/external commonjs \"wagmi\"","webpack://web/external commonjs \"wagmi/chains\"","webpack://web/external commonjs \"wagmi/connectors/coinbaseWallet\"","webpack://web/external commonjs \"wagmi/connectors/injected\"","webpack://web/external commonjs \"wagmi/connectors/metaMask\"","webpack://web/external commonjs \"wagmi/connectors/walletConnect\"","webpack://web/external commonjs \"wagmi/providers/jsonRpc\"","webpack://web/external module \"framer-motion\"","webpack://web/external module \"jotai\"","webpack://web/external module \"jotai/utils\"","webpack://web/external module \"js-cookie\"","webpack://web/external module \"swr\"","webpack://web/external module \"swr/immutable\""],"sourcesContent":["export var modeVars = {colors:{white:'var(--colors-white)',failure:'var(--colors-failure)',failure33:'var(--colors-failure33)',primary:'var(--colors-primary)',primary0f:'var(--colors-primary0f)',primary3D:'var(--colors-primary3D)',primaryBright:'var(--colors-primaryBright)',primaryDark:'var(--colors-primaryDark)',success:'var(--colors-success)',success19:'var(--colors-success19)',warning:'var(--colors-warning)',warning2D:'var(--colors-warning2D)',warning33:'var(--colors-warning33)',binance:'var(--colors-binance)',overlay:'var(--colors-overlay)',gold:'var(--colors-gold)',silver:'var(--colors-silver)',bronze:'var(--colors-bronze)',secondary:'var(--colors-secondary)',secondary80:'var(--colors-secondary80)',background:'var(--colors-background)',backgroundDisabled:'var(--colors-backgroundDisabled)',backgroundAlt:'var(--colors-backgroundAlt)',backgroundAlt2:'var(--colors-backgroundAlt2)',cardBorder:'var(--colors-cardBorder)',contrast:'var(--colors-contrast)',dropdown:'var(--colors-dropdown)',dropdownDeep:'var(--colors-dropdownDeep)',invertedContrast:'var(--colors-invertedContrast)',input:'var(--colors-input)',inputSecondary:'var(--colors-inputSecondary)',tertiary:'var(--colors-tertiary)',text:'var(--colors-text)',text99:'var(--colors-text99)',textDisabled:'var(--colors-textDisabled)',textSubtle:'var(--colors-textSubtle)',disabled:'var(--colors-disabled)',gradientBubblegum:'var(--colors-gradientBubblegum)',gradientInverseBubblegum:'var(--colors-gradientInverseBubblegum)',gradientCardHeader:'var(--colors-gradientCardHeader)',gradientBlue:'var(--colors-gradientBlue)',gradientViolet:'var(--colors-gradientViolet)',gradientVioletAlt:'var(--colors-gradientVioletAlt)',gradientGold:'var(--colors-gradientGold)',gradientBold:'var(--colors-gradientBold)'}};\nexport var vars = {colors:{light:{white:'var(--colors-light-white)',failure:'var(--colors-light-failure)',failure33:'var(--colors-light-failure33)',primary:'var(--colors-light-primary)',primary0f:'var(--colors-light-primary0f)',primary3D:'var(--colors-light-primary3D)',primaryBright:'var(--colors-light-primaryBright)',primaryDark:'var(--colors-light-primaryDark)',success:'var(--colors-light-success)',success19:'var(--colors-light-success19)',warning:'var(--colors-light-warning)',warning2D:'var(--colors-light-warning2D)',warning33:'var(--colors-light-warning33)',binance:'var(--colors-light-binance)',overlay:'var(--colors-light-overlay)',gold:'var(--colors-light-gold)',silver:'var(--colors-light-silver)',bronze:'var(--colors-light-bronze)',secondary:'var(--colors-light-secondary)',secondary80:'var(--colors-light-secondary80)',background:'var(--colors-light-background)',backgroundDisabled:'var(--colors-light-backgroundDisabled)',backgroundAlt:'var(--colors-light-backgroundAlt)',backgroundAlt2:'var(--colors-light-backgroundAlt2)',cardBorder:'var(--colors-light-cardBorder)',contrast:'var(--colors-light-contrast)',dropdown:'var(--colors-light-dropdown)',dropdownDeep:'var(--colors-light-dropdownDeep)',invertedContrast:'var(--colors-light-invertedContrast)',input:'var(--colors-light-input)',inputSecondary:'var(--colors-light-inputSecondary)',tertiary:'var(--colors-light-tertiary)',text:'var(--colors-light-text)',text99:'var(--colors-light-text99)',textDisabled:'var(--colors-light-textDisabled)',textSubtle:'var(--colors-light-textSubtle)',disabled:'var(--colors-light-disabled)',gradientBubblegum:'var(--colors-light-gradientBubblegum)',gradientInverseBubblegum:'var(--colors-light-gradientInverseBubblegum)',gradientCardHeader:'var(--colors-light-gradientCardHeader)',gradientBlue:'var(--colors-light-gradientBlue)',gradientViolet:'var(--colors-light-gradientViolet)',gradientVioletAlt:'var(--colors-light-gradientVioletAlt)',gradientGold:'var(--colors-light-gradientGold)',gradientBold:'var(--colors-light-gradientBold)'},dark:{white:'var(--colors-dark-white)',failure:'var(--colors-dark-failure)',failure33:'var(--colors-dark-failure33)',primary:'var(--colors-dark-primary)',primary0f:'var(--colors-dark-primary0f)',primary3D:'var(--colors-dark-primary3D)',primaryBright:'var(--colors-dark-primaryBright)',primaryDark:'var(--colors-dark-primaryDark)',success:'var(--colors-dark-success)',success19:'var(--colors-dark-success19)',warning:'var(--colors-dark-warning)',warning2D:'var(--colors-dark-warning2D)',warning33:'var(--colors-dark-warning33)',binance:'var(--colors-dark-binance)',overlay:'var(--colors-dark-overlay)',gold:'var(--colors-dark-gold)',silver:'var(--colors-dark-silver)',bronze:'var(--colors-dark-bronze)',secondary:'var(--colors-dark-secondary)',secondary80:'var(--colors-dark-secondary80)',background:'var(--colors-dark-background)',backgroundDisabled:'var(--colors-dark-backgroundDisabled)',backgroundAlt:'var(--colors-dark-backgroundAlt)',backgroundAlt2:'var(--colors-dark-backgroundAlt2)',cardBorder:'var(--colors-dark-cardBorder)',contrast:'var(--colors-dark-contrast)',dropdown:'var(--colors-dark-dropdown)',dropdownDeep:'var(--colors-dark-dropdownDeep)',invertedContrast:'var(--colors-dark-invertedContrast)',input:'var(--colors-dark-input)',inputSecondary:'var(--colors-dark-inputSecondary)',tertiary:'var(--colors-dark-tertiary)',text:'var(--colors-dark-text)',text99:'var(--colors-dark-text99)',textDisabled:'var(--colors-dark-textDisabled)',textSubtle:'var(--colors-dark-textSubtle)',disabled:'var(--colors-dark-disabled)',gradientBubblegum:'var(--colors-dark-gradientBubblegum)',gradientInverseBubblegum:'var(--colors-dark-gradientInverseBubblegum)',gradientCardHeader:'var(--colors-dark-gradientCardHeader)',gradientBlue:'var(--colors-dark-gradientBlue)',gradientViolet:'var(--colors-dark-gradientViolet)',gradientVioletAlt:'var(--colors-dark-gradientVioletAlt)',gradientGold:'var(--colors-dark-gradientGold)',gradientBold:'var(--colors-dark-gradientBold)'},white:'var(--colors-white)',failure:'var(--colors-failure)',failure33:'var(--colors-failure33)',primary:'var(--colors-primary)',primary0f:'var(--colors-primary0f)',primary3D:'var(--colors-primary3D)',primaryBright:'var(--colors-primaryBright)',primaryDark:'var(--colors-primaryDark)',success:'var(--colors-success)',success19:'var(--colors-success19)',warning:'var(--colors-warning)',warning2D:'var(--colors-warning2D)',warning33:'var(--colors-warning33)',binance:'var(--colors-binance)',overlay:'var(--colors-overlay)',gold:'var(--colors-gold)',silver:'var(--colors-silver)',bronze:'var(--colors-bronze)',secondary:'var(--colors-secondary)',secondary80:'var(--colors-secondary80)',background:'var(--colors-background)',backgroundDisabled:'var(--colors-backgroundDisabled)',backgroundAlt:'var(--colors-backgroundAlt)',backgroundAlt2:'var(--colors-backgroundAlt2)',cardBorder:'var(--colors-cardBorder)',contrast:'var(--colors-contrast)',dropdown:'var(--colors-dropdown)',dropdownDeep:'var(--colors-dropdownDeep)',invertedContrast:'var(--colors-invertedContrast)',input:'var(--colors-input)',inputSecondary:'var(--colors-inputSecondary)',tertiary:'var(--colors-tertiary)',text:'var(--colors-text)',text99:'var(--colors-text99)',textDisabled:'var(--colors-textDisabled)',textSubtle:'var(--colors-textSubtle)',disabled:'var(--colors-disabled)',gradientBubblegum:'var(--colors-gradientBubblegum)',gradientInverseBubblegum:'var(--colors-gradientInverseBubblegum)',gradientCardHeader:'var(--colors-gradientCardHeader)',gradientBlue:'var(--colors-gradientBlue)',gradientViolet:'var(--colors-gradientViolet)',gradientVioletAlt:'var(--colors-gradientVioletAlt)',gradientGold:'var(--colors-gradientGold)',gradientBold:'var(--colors-gradientBold)'},fonts:{normal:'var(--fonts-normal)',mono:'var(--fonts-mono)'},space:{'0':'var(--space-0)','1':'var(--space-1)','2':'var(--space-2)','3':'var(--space-3)','4':'var(--space-4)','5':'var(--space-5)','6':'var(--space-6)','7':'var(--space-7)','0px':'var(--space-0px)','1rem':'var(--space-1rem)','1px':'var(--space-1px)','2px':'var(--space-2px)','4px':'var(--space-4px)','8px':'var(--space-8px)','12px':'var(--space-12px)','14px':'var(--space-14px)','16px':'var(--space-16px)','20px':'var(--space-20px)','24px':'var(--space-24px)','32px':'var(--space-32px)','48px':'var(--space-48px)','56px':'var(--space-56px)','64px':'var(--space-64px)'},borderWidths:{'0':'var(--borderWidths-0)','1':'var(--borderWidths-1)','2':'var(--borderWidths-2)'},radii:{'0':'var(--radii-0)','8px':'var(--radii-8px)','12px':'var(--radii-12px)','20px':'var(--radii-20px)',small:'var(--radii-small)','default':'var(--radii-default)',card:'var(--radii-card)',circle:'var(--radii-circle)'},fontSizes:{'10px':'var(--fontSizes-10px)','12px':'var(--fontSizes-12px)','16px':'var(--fontSizes-16px)','14px':'var(--fontSizes-14px)','20px':'var(--fontSizes-20px)','40px':'var(--fontSizes-40px)'},shadows:{level1:'var(--shadows-level1)',active:'var(--shadows-active)',success:'var(--shadows-success)',warning:'var(--shadows-warning)',focus:'var(--shadows-focus)',inset:'var(--shadows-inset)',tooltip:'var(--shadows-tooltip)'}};","import { Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useSwitchNetworkLoading } from 'hooks/useSwitchNetworkLoading'\nimport { useSetAtom } from 'jotai'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { hideWrongNetworkModalAtom } from './NetworkModal'\nimport Trans from './Trans'\n\nconst wrongNetworkProps: ButtonProps = {\n  variant: 'danger',\n  disabled: false,\n  children: <Trans>Wrong Network</Trans>,\n}\n\nexport const CommitButton = (props: ButtonProps) => {\n  const { isWrongNetwork } = useActiveChainId()\n  const [switchNetworkLoading] = useSwitchNetworkLoading()\n  const setHideWrongNetwork = useSetAtom(hideWrongNetworkModalAtom)\n\n  return (\n    <Button\n      {...props}\n      onClick={(e) => {\n        if (isWrongNetwork) {\n          setHideWrongNetwork(false)\n        } else {\n          props.onClick?.(e)\n        }\n      }}\n      {...(switchNetworkLoading && { disabled: true })}\n      {...(isWrongNetwork && wrongNetworkProps)}\n    />\n  )\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { Modal, Box, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<React.PropsWithChildren<Props>> = ({ tokens, onDismiss, onCancel }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal\n      title={t('Import Token')}\n      onDismiss={() => {\n        onDismiss?.()\n        onCancel()\n      }}\n    >\n      <Box maxWidth=\"380px\">\n        <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { Flex, Skeleton, Text, FlexGap, FlexGapProps } from '@pancakeswap/uikit'\nimport { FC } from 'react'\nimport styled from 'styled-components'\nimport { formatAmount, formatAmountNotation } from 'utils/formatInfoNumbers'\n\nconst formatOptions = {\n  notation: 'standard' as formatAmountNotation,\n  displayThreshold: 0.001,\n  tokenPrecision: true,\n}\n\ninterface TokenDisplayProps extends FlexGapProps {\n  value?: number | string\n  inputSymbol?: string\n  outputSymbol?: string\n  format?: boolean\n}\n\nconst TextLabel = styled(Text)`\n  font-size: 32px;\n  line-height: 1.1;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 40px;\n  }\n`\n\nconst PairPriceDisplay: FC<React.PropsWithChildren<TokenDisplayProps>> = ({\n  value,\n  inputSymbol,\n  outputSymbol,\n  children,\n  format = true,\n  ...props\n}) => {\n  return value ? (\n    <FlexGap alignItems=\"baseline\" {...props}>\n      <Flex alignItems=\"inherit\">\n        <TextLabel mr=\"8px\" bold>\n          {format ? formatAmount(typeof value === 'string' ? parseFloat(value) : value, formatOptions) : value}\n        </TextLabel>\n        {inputSymbol && outputSymbol && (\n          <Text color=\"textSubtle\" fontSize=\"20px\" bold lineHeight={1.1}>\n            {`${inputSymbol}/${outputSymbol}`}\n          </Text>\n        )}\n      </Flex>\n      {children}\n    </FlexGap>\n  ) : (\n    <Skeleton height=\"36px\" width=\"128px\" {...props} />\n  )\n}\n\nexport default PairPriceDisplay\n","import { Svg } from '@pancakeswap/uikit'\n\n// NOTE: Temporary save icon here. Will move to uikit when the feature is done\n\nconst DisabledIcon = (props) => (\n  <Svg id=\"arrow_loading\" viewBox=\"0 0 24 24\" {...props}>\n    <path\n      stroke=\"none\"\n      fill=\"#D7CAEC\"\n      d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n    />\n    <defs>\n      <path\n        id=\"arrow\"\n        stroke=\"none\"\n        fill=\"none\"\n        d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n      />\n      <clipPath id=\"arrow-clip\">\n        <use xlinkHref=\"#arrow\" />\n      </clipPath>\n    </defs>\n  </Svg>\n)\n\nconst Icon = ({ disabled, ...props }) =>\n  disabled ? (\n    <DisabledIcon {...props} />\n  ) : (\n    <Svg id=\"arrow_loading\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        stroke=\"none\"\n        fill=\"#7A6EAA\"\n        d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n      />\n      <defs>\n        <path\n          id=\"arrow\"\n          stroke=\"none\"\n          fill=\"none\"\n          d=\"M16.2751 7.78995C13.932 5.44681 10.133 5.44681 7.78986 7.78995C7.02853 8.55128 6.51457 9.4663 6.24798 10.4351C6.24473 10.4499 6.24114 10.4646 6.23719 10.4793C6.17635 10.7064 6.12938 10.9339 6.09577 11.161C5.83159 12.9457 6.39255 14.7026 7.52624 15.9944C7.61054 16.0901 7.69842 16.1838 7.78986 16.2752C8.08307 16.5685 8.39909 16.825 8.7322 17.0448C9.25533 17.3892 9.84172 17.6568 10.4798 17.8278C10.7386 17.8971 10.9979 17.9484 11.2565 17.9825C12.9537 18.2061 14.6187 17.6866 15.8747 16.6415C16.0123 16.5265 16.1459 16.4044 16.2751 16.2752C16.2848 16.2655 16.2947 16.2561 16.3047 16.2469C17.0123 15.531 17.5491 14.627 17.8283 13.5851C17.9712 13.0517 18.5196 12.7351 19.053 12.878C19.5865 13.021 19.9031 13.5693 19.7602 14.1028C19.3141 15.7676 18.3745 17.1684 17.1409 18.1899C16.1883 18.9822 15.0949 19.5189 13.9515 19.8002C11.8607 20.3147 9.6028 19.9749 7.7328 18.7809C7.06855 18.3579 6.47841 17.8432 5.97519 17.2589C5.12341 16.2738 4.55173 15.1302 4.26015 13.9324C4.01698 12.9416 3.96104 11.8931 4.12168 10.8379C4.36697 9.20484 5.1183 7.63309 6.37564 6.37574C9.49984 3.25154 14.5652 3.25154 17.6894 6.37574L18.2332 6.91959L18.2337 5.49951C18.2338 5.05769 18.5921 4.69964 19.034 4.69979C19.4758 4.69995 19.8338 5.05825 19.8337 5.50007L19.8325 9.03277L19.8322 9.8325L19.0325 9.83249L18.9401 9.83249C18.8146 9.85665 18.6854 9.85665 18.5599 9.83248L15.5005 9.83245C15.0587 9.83245 14.7005 9.47427 14.7005 9.03244C14.7005 8.59062 15.0587 8.23245 15.5005 8.23245L16.7176 8.23246L16.2751 7.78995Z\"\n        />\n        <clipPath id=\"arrow-clip\">\n          <use xlinkHref=\"#arrow\" />\n        </clipPath>\n      </defs>\n      <g clipPath=\"url(#arrow-clip)\">\n        <circle\n          cx=\"12\"\n          cy=\"12\"\n          r=\"5\"\n          transform=\"rotate(365,12,12)\"\n          fill=\"none\"\n          stroke=\"#D7CAEC\"\n          strokeWidth=\"16\"\n          strokeDasharray=\"30\"\n          strokeDashoffset=\"0\"\n        >\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            values=\"0;-30\"\n            begin=\"arrow_loading.click; 0.7s\"\n            repeatCount=\"indefinite\"\n            dur=\"6.3s\"\n          />\n        </circle>\n      </g>\n      <use xlinkHref=\"#arrow\" />\n      <animateTransform\n        id=\"transform_0\"\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"0 0 0\"\n        to=\"-10 0 0\"\n        dur=\"0.07s\"\n        begin=\"arrow_loading.click;\"\n        repeatCount=\"1\"\n      />\n      <animateTransform\n        id=\"transform_1\"\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"-45 0 0\"\n        to=\"390 0 0\"\n        dur=\"0.6s\"\n        begin=\"transform_0.end\"\n        repeatCount=\"1\"\n      />\n      <animateTransform\n        id=\"transform_2\"\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"390 0 0\"\n        to=\"360 0 0\"\n        dur=\"0.15s\"\n        begin=\"transform_1.end\"\n        repeatCount=\"1\"\n      />\n    </Svg>\n  )\n\nexport default Icon\n","import { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBlockExploreLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<React.PropsWithChildren<Props>> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title={t('Unsupported Assets')} onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link\n                    external\n                    small\n                    color=\"primaryDark\"\n                    href={getBlockExploreLink(token.address, 'address', chainId)}\n                  >\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            {t(\n              'Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.',\n            )}\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const { t } = useTranslation()\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        {t('Read more about unsupported assets')}\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { ChainId, ERC20Token } from '@pancakeswap/sdk'\n\nexport const bscWarningTokens = {\n  pokemoney: new ERC20Token(ChainId.BSC, '0x32ff5b4C3B1744F0344D96fA2f87799Ed2805749', 18, 'PMY', 'Pokemoney Coin', ''),\n  free: new ERC20Token(\n    ChainId.BSC,\n    '0x880BCe9321c79cAc1D290De6d31DDE722C606165',\n    8,\n    'FREE',\n    'Freedom Protocol Token',\n    '',\n  ),\n  safemoon: new ERC20Token(\n    ChainId.BSC,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n}\n\nexport const bscTestnetWarningTokens = {}\n","import { Token } from '@pancakeswap/sdk'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { bscWarningTokens } from 'config/constants/warningTokens'\n\nconst { bondly, itam, ccar, bttold } = bscTokens\nconst { pokemoney, free, safemoon } = bscWarningTokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n  itam,\n  ccar,\n  bttold,\n  pokemoney,\n  free,\n}\n\nexport default SwapWarningTokens\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(() => (filterFn && filterFn(value) ? value : undefined))\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType, Currency } from '@pancakeswap/sdk'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMemo } from 'react'\nimport { BIPS_BASE } from 'config/constants/exchange'\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'config/constants'\nimport { useRouterContract } from 'utils/exchange'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nexport interface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nexport function useSwapCallArguments(\n  trade: Trade<Currency, Currency, TradeType> | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddress: string | null, // the address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId } = useActiveWeb3React()\n\n  const recipient = recipientAddress === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n  const contract = useRouterContract()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !account || !chainId || !deadline) return []\n\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, contract, deadline, recipient, trade])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { SwapParameters, Trade, Currency, TradeType } from '@pancakeswap/sdk'\nimport { useTranslation } from '@pancakeswap/localization'\nimport isZero from '@pancakeswap/utils/isZero'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMemo } from 'react'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { StableTrade } from 'views/Swap/StableSwap/hooks/useStableTradeExactIn'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, isAddress } from '../utils'\nimport { transactionErrorToUserReadableMessage } from '../utils/transactionErrorToUserReadableMessage'\nimport { basisPointsToPercent } from '../utils/exchange'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall extends SwapCallEstimate {\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall extends SwapCallEstimate {\n  error: string\n}\n\ninterface SwapCallEstimate {\n  call: SwapCall\n}\n\ntype ITrade = Trade<Currency, Currency, TradeType> | StableTrade | undefined\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: ITrade, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddress: string | null, // the address of the recipient of the trade, or null if swap should be returned to sender\n  swapCalls: SwapCall[],\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const addTransaction = useTransactionAdder()\n\n  const recipient = recipientAddress === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddress !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: SwapCallEstimate[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: t('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n\n                    return { call, error: transactionErrorToUserReadableMessage(callError, t) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw new Error(errorCalls[errorCalls.length - 1].error)\n          throw new Error(t('Unexpected error. Could not estimate gas for the swap.'))\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const pct = basisPointsToPercent(allowedSlippage)\n            const inputAmount =\n              trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.inputAmount.toSignificant(3)\n                : trade.maximumAmountIn(pct).toSignificant(3)\n            const outputAmount =\n              trade.tradeType === TradeType.EXACT_OUTPUT\n                ? trade.outputAmount.toSignificant(3)\n                : trade.minimumAmountOut(pct).toSignificant(3)\n\n            const base = `Swap ${\n              trade.tradeType === TradeType.EXACT_OUTPUT ? 'max.' : ''\n            } ${inputAmount} ${inputSymbol} for ${\n              trade.tradeType === TradeType.EXACT_INPUT ? 'min.' : ''\n            } ${outputAmount} ${outputSymbol}`\n\n            const recipientAddressText =\n              recipientAddress && isAddress(recipientAddress) ? truncateHash(recipientAddress) : recipientAddress\n\n            const withRecipient = recipient === account ? base : `${base} to ${recipientAddressText}`\n\n            const translatableWithRecipient =\n              trade.tradeType === TradeType.EXACT_OUTPUT\n                ? recipient === account\n                  ? 'Swap max. %inputAmount% %inputSymbol% for %outputAmount% %outputSymbol%'\n                  : 'Swap max. %inputAmount% %inputSymbol% for %outputAmount% %outputSymbol% to %recipientAddress%'\n                : recipient === account\n                ? 'Swap %inputAmount% %inputSymbol% for min. %outputAmount% %outputSymbol%'\n                : 'Swap %inputAmount% %inputSymbol% for min. %outputAmount% %outputSymbol% to %recipientAddress%'\n\n            addTransaction(response, {\n              summary: withRecipient,\n              translatableSummary: {\n                text: translatableWithRecipient,\n                data: {\n                  inputAmount,\n                  inputSymbol,\n                  outputAmount,\n                  outputSymbol,\n                  ...(recipient !== account && { recipientAddress: recipientAddressText }),\n                },\n              },\n              type: 'swap',\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(t('Swap failed: %message%', { message: transactionErrorToUserReadableMessage(error, t) }))\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, account, chainId, recipient, recipientAddress, swapCalls, t, addTransaction, allowedSlippage])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { Currency, WNATIVE } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWNativeContract } from './useContract'\nimport { useCallWithMarketGasPrice } from './useCallWithMarketGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { t } = useTranslation()\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithMarketGasPrice } = useCallWithMarketGasPrice()\n  const wbnbContract = useWNativeContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wbnbContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency?.isNative && WNATIVE[chainId]?.equals(outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithMarketGasPrice(wbnbContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.quotient.toString(16)}`,\n                  })\n                  const amount = inputAmount.toSignificant(6)\n                  const native = inputCurrency.symbol\n                  const wrap = WNATIVE[chainId].symbol\n                  addTransaction(txReceipt, {\n                    summary: `Wrap ${amount} ${native} to ${wrap}`,\n                    translatableSummary: { text: 'Wrap %amount% %native% to %wrap%', data: { amount, native, wrap } },\n                    type: 'wrap',\n                  })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance\n          ? undefined\n          : t('Insufficient %symbol% balance', { symbol: inputCurrency.symbol }),\n      }\n    }\n    if (WNATIVE[chainId]?.equals(inputCurrency) && outputCurrency?.isNative) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithMarketGasPrice(wbnbContract, 'withdraw', [\n                    `0x${inputAmount.quotient.toString(16)}`,\n                  ])\n                  const amount = inputAmount.toSignificant(6)\n                  const wrap = WNATIVE[chainId].symbol\n                  const native = outputCurrency.symbol\n                  addTransaction(txReceipt, {\n                    summary: `Unwrap ${amount} ${wrap} to ${native}`,\n                    translatableSummary: { text: 'Unwrap %amount% %wrap% to %native%', data: { amount, wrap, native } },\n                  })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance\n          ? undefined\n          : t('Insufficient %symbol% balance', { symbol: inputCurrency.symbol }),\n      }\n    }\n    return NOT_APPLICABLE\n  }, [\n    wbnbContract,\n    chainId,\n    inputCurrency,\n    outputCurrency,\n    t,\n    inputAmount,\n    balance,\n    addTransaction,\n    callWithMarketGasPrice,\n  ])\n}\n","import { CHAIN_IDS } from 'utils/wagmi'\nimport Swap from '../views/Swap'\n\nconst SwapPage = () => {\n  return <Swap />\n}\n\nSwapPage.chains = CHAIN_IDS\n\nexport default SwapPage\n","import JSBI from 'jsbi'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ParsedUrlQuery } from 'querystring'\nimport { Currency, CurrencyAmount, Trade, Token, Price, Native, TradeType } from '@pancakeswap/sdk'\nimport { useState, useEffect, useCallback, useMemo } from 'react'\nimport { DEFAULT_INPUT_CURRENCY, DEFAULT_OUTPUT_CURRENCY, BIG_INT_TEN } from 'config/constants/exchange'\nimport { useRouter } from 'next/router'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport getPriceForOneToken from 'views/LimitOrders/utils/getPriceForOneToken'\nimport { isAddress } from 'utils'\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { replaceLimitOrdersState, selectCurrency, setRateType, switchCurrencies, typeInput } from './actions'\nimport { Field, Rate, OrderState } from './types'\nimport { AppState, useAppDispatch } from '..'\n\n// Get desired input amount in output basis mode\nconst getDesiredInput = (\n  outputValue: string,\n  exchangeRate: string,\n  inputCurrency: Currency,\n  outputCurrency: Currency,\n  isInverted: boolean,\n) => {\n  if (!outputValue || !inputCurrency || !outputCurrency) {\n    return undefined\n  }\n  const parsedOutAmount = tryParseAmount(outputValue, isInverted ? inputCurrency : outputCurrency)\n  const parsedExchangeRate = tryParseAmount(exchangeRate, isInverted ? inputCurrency : outputCurrency)\n  if (!parsedOutAmount || !parsedExchangeRate) {\n    return undefined\n  }\n\n  if (isInverted) {\n    const invertedResultAsFraction = parsedOutAmount\n      .multiply(parsedExchangeRate.asFraction)\n      .multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals)))\n    const invertedResultAsAmount = CurrencyAmount.fromRawAmount(inputCurrency, invertedResultAsFraction.toFixed(0))\n\n    return invertedResultAsAmount\n  }\n  const resultAsFraction = parsedOutAmount\n    .divide(parsedExchangeRate.asFraction)\n    .multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals)))\n\n  return CurrencyAmount.fromRawAmount(inputCurrency, resultAsFraction.quotient.toString())\n}\n\n// Get desired output amount in input basis mode\nconst getDesiredOutput = (\n  inputValue: string,\n  exchangeRate: string,\n  inputCurrency: Currency,\n  outputCurrency: Currency,\n  isInverted: boolean,\n): CurrencyAmount<Native | Token> | undefined => {\n  if (!inputValue || !inputCurrency || !outputCurrency) {\n    return undefined\n  }\n  const parsedInputAmount = tryParseAmount(inputValue, isInverted ? outputCurrency : inputCurrency)\n  const parsedExchangeRate = tryParseAmount(exchangeRate, isInverted ? inputCurrency : outputCurrency)\n\n  if (!parsedExchangeRate || !parsedInputAmount) {\n    return undefined\n  }\n\n  if (isInverted) {\n    const invertedResultAsFraction = parsedInputAmount\n      .multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals)))\n      .divide(parsedExchangeRate.asFraction)\n    return CurrencyAmount.fromRawAmount(outputCurrency, invertedResultAsFraction.quotient)\n  }\n\n  const resultAsFraction = parsedInputAmount\n    .divide(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals)))\n    .multiply(parsedExchangeRate.asFraction)\n\n  return CurrencyAmount.fromRawAmount(outputCurrency, resultAsFraction.quotient.toString())\n}\n\n// Just returns Redux state for limitOrders\nexport const useOrderState = (): AppState['limitOrders'] => {\n  return useSelector<AppState, AppState['limitOrders']>((state) => state.limitOrders)\n}\n\n// Returns handlers to change user-defined parts of limitOrders state\nexport const useOrderActionHandlers = (): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRateType: (rateType: Rate) => void\n} => {\n  const dispatch = useDispatch()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency.isToken ? currency.address : currency.isNative ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRateType = useCallback(\n    (rateType: Rate) => {\n      dispatch(setRateType({ rateType }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRateType,\n  }\n}\n\nexport interface DerivedOrderInfo {\n  currencies: { input: Currency | Token | undefined; output: Currency | Token | undefined }\n  currencyBalances: {\n    input: CurrencyAmount<Currency> | undefined\n    output: CurrencyAmount<Currency> | undefined\n  }\n  inputError?: string\n  trade: Trade<Currency, Currency, TradeType> | undefined\n  parsedAmounts: {\n    input: CurrencyAmount<Currency> | undefined\n    output: CurrencyAmount<Currency> | undefined\n  }\n  formattedAmounts: {\n    input: string\n    output: string\n    price: string\n  }\n  rawAmounts: {\n    input: string | undefined\n    output: string | undefined\n  }\n  price: Price<Currency, Currency> | undefined\n  wrappedCurrencies: {\n    input: Token\n    output: Token\n  }\n  singleTokenPrice: {\n    [key: string]: number\n  }\n  currencyIds: {\n    input: string\n    output: string\n  }\n}\n\nconst getErrorMessage = (\n  account: string,\n  wrappedCurrencies: {\n    input: Token\n    output: Token\n  },\n  currencies: { input: Currency | Token; output: Currency | Token },\n  currencyBalances: { input: CurrencyAmount<Currency>; output: CurrencyAmount<Currency> },\n  parsedAmounts: { input: CurrencyAmount<Currency>; output: CurrencyAmount<Currency> },\n  trade: Trade<Currency, Currency, TradeType>,\n  price: Price<Currency, Currency>,\n  rateType: Rate,\n  t: any,\n) => {\n  if (!account) {\n    return t('Connect Wallet')\n  }\n  if (\n    wrappedCurrencies.input &&\n    wrappedCurrencies.output &&\n    wrappedCurrencies.input.address.toLowerCase() === wrappedCurrencies.output.address.toLowerCase()\n  ) {\n    return t('Order not allowed')\n  }\n  const hasBothTokensSelected = currencies.input && currencies.output\n  if (!hasBothTokensSelected) {\n    return t('Select a token')\n  }\n  const hasAtLeastOneParsedAmount = parsedAmounts.input || parsedAmounts.output\n\n  const tradeIsNotAvailable = !trade || !trade?.route\n  if (hasAtLeastOneParsedAmount && tradeIsNotAvailable) {\n    return t('Insufficient liquidity for this trade.')\n  }\n  const someParsedAmountIsMissing = !parsedAmounts.input || !parsedAmounts.output\n  if (someParsedAmountIsMissing) {\n    return t('Enter an amount')\n  }\n  if (currencyBalances.input && currencyBalances.input.lessThan(parsedAmounts.input)) {\n    return t(`Insufficient %symbol% balance`, { symbol: currencyBalances.input.currency.symbol })\n  }\n\n  if (price) {\n    if (\n      rateType === Rate.MUL &&\n      (price.lessThan(trade.executionPrice.asFraction) || price.equalTo(trade.executionPrice.asFraction))\n    ) {\n      return t('Only possible to place sell orders above market rate')\n    }\n    if (\n      rateType === Rate.DIV &&\n      (price.invert().greaterThan(trade.executionPrice.invert().asFraction) ||\n        price.invert().equalTo(trade.executionPrice.invert().asFraction))\n    ) {\n      return t('Only possible to place buy orders below market rate')\n    }\n  }\n\n  return undefined\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport const useDerivedOrderInfo = (): DerivedOrderInfo => {\n  const { account, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const {\n    independentField,\n    basisField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    rateType,\n    inputValue,\n    outputValue,\n  } = useOrderState()\n\n  // Get Currency objects based on currencyId strings\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const currencies = useMemo(\n    () => ({\n      input: inputCurrency ?? undefined,\n      output: outputCurrency ?? undefined,\n    }),\n    [inputCurrency, outputCurrency],\n  )\n\n  const wrappedCurrencies = useMemo(\n    () => ({\n      input: wrappedCurrency(currencies.input, chainId),\n      output: wrappedCurrency(currencies.output, chainId),\n    }),\n    [currencies.input, currencies.output, chainId],\n  )\n\n  // Get user balance for selected Currencies\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n  const currencyBalances = {\n    input: relevantTokenBalances[0],\n    output: relevantTokenBalances[1],\n  }\n\n  // Get CurrencyAmount for the inputCurrency amount specified by user\n  const inputAmount = useMemo(() => {\n    return tryParseAmount(inputValue, inputCurrency ?? undefined)\n  }, [inputValue, inputCurrency])\n\n  // Get CurrencyAmount for the outputCurrency amount specified by user\n  const outputAmount = useMemo(() => {\n    return tryParseAmount(outputValue, outputCurrency ?? undefined)\n  }, [outputValue, outputCurrency])\n\n  // Whether user modified the INPUT field most recently (also default initial state)\n  const isExactIn = independentField === Field.INPUT\n  // Whether to base calculations on output field\n  const isOutputBasis = basisField === Field.OUTPUT\n  // Whether user modified the PRICE field most recently\n  const isDesiredRateUpdate = independentField === Field.PRICE\n\n  // Get the amount of outputCurrency you'd receive at the desired price\n  const desiredOutputAsCurrencyAmount = isDesiredRateUpdate\n    ? getDesiredOutput(inputValue, typedValue, inputCurrency, outputCurrency, rateType === Rate.DIV)\n    : undefined\n\n  const desiredInputAsCurrencyAmount = isDesiredRateUpdate\n    ? getDesiredInput(outputValue, typedValue, inputCurrency, outputCurrency, rateType === Rate.DIV)\n    : undefined\n\n  // Convert output to string representation to parse later\n  const desiredOutputAsString =\n    isDesiredRateUpdate && desiredOutputAsCurrencyAmount ? desiredOutputAsCurrencyAmount?.toSignificant(6) : typedValue\n\n  // If independentField === Field.PRICE -> this won't be used\n  const parsedTypedAmount = !isDesiredRateUpdate\n    ? tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n    : undefined\n\n  // If not price - cast input or output typing to CurrencyAmount\n  // if price - whatever amount of tokens received on the desired price\n  const tradeAmount = isDesiredRateUpdate\n    ? isOutputBasis\n      ? outputAmount\n      : tryParseAmount(desiredOutputAsString, outputCurrency)\n    : tryParseAmount(typedValue, isExactIn ? inputCurrency : outputCurrency)\n\n  // Get trade object\n  // gonna be null if not isExactIn or if there is no outputCurrency selected\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? tradeAmount : undefined, outputCurrency)\n  // Works similarly to swap when you modify outputCurrency\n  // But also is used when desired rate is modified\n  // in other words it looks for a trade of inputCurrency for whatever the amount of tokens would be at desired rate\n  const bestTradeExactOut = useTradeExactOut(inputCurrency, !isExactIn || isOutputBasis ? tradeAmount : undefined)\n  const trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  // Get swap price for single token disregarding slippage and price impact\n  // needed for chart's latest value\n  const oneInputToken = tryParseAmount('1', currencies.input)\n  const singleTokenTrade = useTradeExactIn(oneInputToken, currencies.output)\n  const singleTokenPrice = parseFloat(singleTokenTrade?.executionPrice?.toSignificant(6))\n  const inverseSingleTokenPrice = 1 / singleTokenPrice\n\n  // Get \"final\" amounts\n  const parsedAmounts = useMemo(() => {\n    // Use trade amount as default\n    let input = trade?.inputAmount\n    if (!isOutputBasis) {\n      // If we're not in output basis mode then we're in input basis mode\n      // hence - no matter what keep input as specified by user\n      input = inputAmount\n    } else if (independentField === Field.INPUT) {\n      // If user touching input field -> whatever they type currently\n      input = parsedTypedAmount\n    } else if (isDesiredRateUpdate) {\n      // If user modifies the price AND is wishing for specific output amount -> hypothetical input amount at better price\n      input = desiredInputAsCurrencyAmount\n    }\n    // Use trade amount as default\n    // If we're in output basis mode - no matter what keep output as specified by user\n    let output: CurrencyAmount<Currency>\n    if (isOutputBasis) {\n      output = outputAmount\n    } else if (independentField === Field.OUTPUT) {\n      // If user touching input field -> whatever they type currently\n      output = parsedTypedAmount\n    } else if (isDesiredRateUpdate) {\n      // If user modifies the price AND is wishing for specific input amount -> hypothetical input amount at better price\n      output = desiredOutputAsCurrencyAmount\n    } else {\n      output = trade?.outputAmount\n    }\n    return {\n      input,\n      output,\n    }\n  }, [\n    independentField,\n    parsedTypedAmount,\n    inputAmount,\n    outputAmount,\n    trade,\n    isDesiredRateUpdate,\n    isOutputBasis,\n    desiredInputAsCurrencyAmount,\n    desiredOutputAsCurrencyAmount,\n  ])\n\n  // Calculate the price for specified swap\n  const price = useMemo(\n    () => getPriceForOneToken(parsedAmounts.input, parsedAmounts.output),\n    [parsedAmounts.input, parsedAmounts.output],\n  )\n\n  // Formatted amounts to use in the UI\n  const formattedAmounts = {\n    input: !isOutputBasis && inputValue && inputValue !== '' ? inputValue : parsedAmounts.input?.toSignificant(6) ?? '',\n    output:\n      isOutputBasis && outputValue && outputValue !== '' ? outputValue : parsedAmounts.output?.toSignificant(6) ?? '',\n    price:\n      independentField === Field.PRICE\n        ? typedValue\n        : rateType === Rate.MUL\n        ? price?.toSignificant(6) ?? ''\n        : price?.invert().toSignificant(6) ?? '',\n  }\n\n  // Get raw amounts that will be used in smart contract call\n  const rawAmounts = useMemo(\n    () => ({\n      input: inputCurrency\n        ? parsedAmounts.input?.multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(inputCurrency.decimals))).toFixed(0)\n        : undefined,\n\n      output: outputCurrency\n        ? parsedAmounts.output\n            ?.multiply(JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(outputCurrency.decimals)))\n            .toFixed(0)\n        : undefined,\n    }),\n    [inputCurrency, outputCurrency, parsedAmounts],\n  )\n\n  return {\n    currencies,\n    currencyBalances,\n    inputError: getErrorMessage(\n      account,\n      wrappedCurrencies,\n      currencies,\n      currencyBalances,\n      parsedAmounts,\n      trade,\n      price,\n      rateType,\n      t,\n    ),\n    formattedAmounts,\n    trade: trade ?? undefined,\n    parsedAmounts,\n    price,\n    rawAmounts,\n    wrappedCurrencies,\n    singleTokenPrice: {\n      [wrappedCurrencies.input?.address]: singleTokenPrice,\n      [wrappedCurrencies.output?.address]: inverseSingleTokenPrice,\n    },\n    currencyIds: {\n      input: inputCurrencyId,\n      output: outputCurrencyId,\n    },\n  }\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  return typeof urlParam === 'string' && !Number.isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return ''\n}\n\n// TODO: combine with swap's version but use generic type. Same for helpers above\n// Note: swap has recipient and other things. Merging these 2 would probably be much easier if we get rid of recipient\n// Also the whole thing doesn't make sense, in swap inputValue is not initialized but typedValue is. WTF\nconst queryParametersToSwapState = (parsedQs: ParsedUrlQuery): OrderState => {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency) || DEFAULT_INPUT_CURRENCY\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency) || DEFAULT_OUTPUT_CURRENCY\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    inputValue: '',\n    outputValue: '',\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    basisField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    rateType: Rate.MUL,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport const useDefaultsFromURLSearch = ():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const { query } = useRouter()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(query)\n\n    dispatch(replaceLimitOrdersState(parsed))\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n  }, [dispatch, chainId, query])\n\n  return result\n}\n","import { Currency, CurrencyAmount, JSBI } from '@pancakeswap/sdk'\nimport { BIG_INT_ZERO, MIN_BNB } from 'config/constants/exchange'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount<Currency>): CurrencyAmount<Currency> | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency?.isNative) {\n    if (JSBI.greaterThan(currencyAmount.quotient, MIN_BNB)) {\n      return CurrencyAmount.fromRawAmount(currencyAmount.currency, JSBI.subtract(currencyAmount.quotient, MIN_BNB))\n    }\n    return CurrencyAmount.fromRawAmount(currencyAmount.currency, BIG_INT_ZERO)\n  }\n  return currencyAmount\n}\n","import { Token } from '@pancakeswap/sdk'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\n\nconst swapWarningTokens = Object.values(SwapWarningTokens)\n\nconst shouldShowSwapWarning = (swapCurrency: Token) => {\n  return swapWarningTokens.some((warningToken) => warningToken.equals(swapCurrency))\n}\n\nexport default shouldShowSwapWarning\n","import { TranslateFunction } from '@pancakeswap/localization'\n\n/**\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\n * This object seems to be undocumented by ethers.\n * @param error an error from the ethers provider\n * @param t Translation function\n */\nexport function transactionErrorToUserReadableMessage(error: any, t: TranslateFunction) {\n  let reason: string | undefined\n  while (error) {\n    reason = error.reason ?? error.data?.message ?? error.message ?? reason\n    // eslint-disable-next-line no-param-reassign\n    error = error.error ?? error.data?.originalError\n  }\n\n  if (reason?.indexOf('execution reverted: ') === 0) reason = reason.substring('execution reverted: '.length)\n\n  switch (reason) {\n    case 'PancakeRouter: EXPIRED':\n      return t(\n        'The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.',\n      )\n    case 'PancakeRouter: INSUFFICIENT_OUTPUT_AMOUNT':\n    case 'PancakeRouter: EXCESSIVE_INPUT_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_A_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_B_AMOUNT':\n      return t(\n        'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.',\n      )\n    case 'TransferHelper: TRANSFER_FROM_FAILED':\n      return t('The input token cannot be transferred. There may be an issue with the input token.')\n    case 'Pancake: TRANSFER_FAILED':\n      return t('The output token cannot be transferred. There may be an issue with the output token.')\n    default:\n      if (reason?.indexOf('undefined is not an object') !== -1) {\n        console.error(error, reason)\n        return t(\n          'An error occurred when trying to execute this operation. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading.',\n        )\n      }\n      return t('Unknown error%reason%. Try increasing your slippage tolerance.', {\n        reason: reason ? `: \"${reason}\"` : '',\n      })\n  }\n}\n","import { CurrencyAmount, Price, Currency } from '@pancakeswap/sdk'\n\n/**\n * Given certain amount if input and output tokens\n * calculate the price for 1 input token in terms of output tokens\n */\nconst getPriceForOneToken = (inputAmount: CurrencyAmount<Currency>, outputAmount: CurrencyAmount<Currency>) => {\n  if (!inputAmount || !outputAmount || inputAmount.equalTo(0) || outputAmount.equalTo(0)) {\n    return undefined\n  }\n  return new Price({\n    baseAmount: inputAmount,\n    quoteAmount: outputAmount,\n  })\n}\n\nexport default getPriceForOneToken\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Text, useModal } from '@pancakeswap/uikit'\nimport { Currency, CurrencyAmount, Trade, TradeType } from '@pancakeswap/sdk'\n\nimport { GreyCard } from 'components/Card'\nimport { CommitButton } from 'components/CommitButton'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport { ApprovalState } from 'hooks/useApproveCallback'\nimport CircleLoader from 'components/Loader/CircleLoader'\nimport { Field } from 'state/swap/actions'\nimport SettingsModal, { withCustomOnDismiss } from 'components/Menu/GlobalSettings/SettingsModal'\nimport { SettingsMode } from 'components/Menu/GlobalSettings/types'\nimport { useCallback, useEffect, useState } from 'react'\nimport Column from 'components/Layout/Column'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\n\nimport ConfirmSwapModal from '../../components/ConfirmSwapModal'\nimport ProgressSteps from '../../components/ProgressSteps'\nimport { SwapCallbackError } from '../../components/styleds'\nimport useStableSwapCallArgs from '../hooks/useStableSwapCallArgs'\nimport { StableTrade } from '../hooks/useStableTradeExactIn'\n\nconst SettingsModalWithCustomDismiss = withCustomOnDismiss(SettingsModal)\n\ninterface StableSwapCommitButtonPropsType {\n  account: string\n  approval: ApprovalState\n  approveCallback: () => Promise<void>\n  approvalSubmitted: boolean\n  currencies: {\n    INPUT?: Currency\n    OUTPUT?: Currency\n  }\n  isExpertMode: boolean\n  trade: Trade<Currency, Currency, TradeType> | StableTrade\n  swapInputError: string\n  currencyBalances: {\n    INPUT?: CurrencyAmount<Currency>\n    OUTPUT?: CurrencyAmount<Currency>\n  }\n  allowedSlippage: number\n  onUserInput: (field: Field, typedValue: string) => void\n}\n\nexport default function StableSwapCommitButton({\n  account,\n  approval,\n  approveCallback,\n  approvalSubmitted,\n  currencies,\n  isExpertMode,\n  trade,\n  swapInputError,\n  currencyBalances,\n  allowedSlippage,\n  onUserInput,\n}: StableSwapCommitButtonPropsType) {\n  const { t } = useTranslation()\n  // the callback to execute the swap\n  const swapCalls = useStableSwapCallArgs(trade)\n\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, null, swapCalls)\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | StableTrade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // Handlers\n  const handleSwap = useCallback(() => {\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [swapCallback, tradeToConfirm, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash, setSwapState])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash, setSwapState])\n\n  // End Handlers\n\n  // Modals\n  const [indirectlyOpenConfirmModalState, setIndirectlyOpenConfirmModalState] = useState(false)\n\n  const [onPresentSettingsModal] = useModal(\n    <SettingsModalWithCustomDismiss\n      customOnDismiss={() => setIndirectlyOpenConfirmModalState(true)}\n      mode={SettingsMode.SWAP_LIQUIDITY}\n    />,\n  )\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      isStable\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      currencyBalances={currencyBalances}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={null}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n      openSettingModal={onPresentSettingsModal}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  // End Modals\n\n  const onSwapHandler = useCallback(() => {\n    if (isExpertMode) {\n      handleSwap()\n    } else {\n      setSwapState({\n        tradeToConfirm: trade,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n      })\n      onPresentConfirmModal()\n    }\n  }, [isExpertMode, handleSwap, onPresentConfirmModal, trade])\n\n  // useEffect\n  useEffect(() => {\n    if (indirectlyOpenConfirmModalState) {\n      setIndirectlyOpenConfirmModalState(false)\n      setSwapState((state) => ({\n        ...state,\n        swapErrorMessage: undefined,\n      }))\n      onPresentConfirmModal()\n    }\n  }, [indirectlyOpenConfirmModalState, onPresentConfirmModal, setSwapState])\n\n  if (!account) {\n    return <ConnectWalletButton width=\"100%\" />\n  }\n\n  const isSufficentLiquidity = false\n\n  if (isSufficentLiquidity) {\n    return (\n      <GreyCard style={{ textAlign: 'center', padding: '0.75rem' }}>\n        <Text color=\"textSubtle\">{t('Insufficient liquidity for this trade.')}</Text>\n      </GreyCard>\n    )\n  }\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED))\n  const isValid = !swapInputError\n\n  if (showApproveFlow) {\n    return (\n      <>\n        <RowBetween>\n          <CommitButton\n            variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n            onClick={approveCallback}\n            disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n            width=\"48%\"\n          >\n            {approval === ApprovalState.PENDING ? (\n              <AutoRow gap=\"6px\" justify=\"center\">\n                {t('Enabling')} <CircleLoader stroke=\"white\" />\n              </AutoRow>\n            ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n              t('Enabled')\n            ) : (\n              t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n            )}\n          </CommitButton>\n          <CommitButton\n            variant={isValid ? 'danger' : 'primary'}\n            onClick={() => {\n              onSwapHandler()\n            }}\n            width=\"48%\"\n            id=\"swap-button\"\n            disabled={!isValid || approval !== ApprovalState.APPROVED}\n          >\n            {t('Swap')}\n          </CommitButton>\n        </RowBetween>\n        <Column style={{ marginTop: '1rem' }}>\n          <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n        </Column>\n        {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <CommitButton\n        variant={isValid || !swapCallbackError ? 'primary' : 'danger'}\n        onClick={() => {\n          onSwapHandler()\n        }}\n        id=\"swap-button\"\n        width=\"100%\"\n        disabled={!isValid || !!swapCallbackError}\n      >\n        {swapInputError || t('Swap')}\n      </CommitButton>\n\n      {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n    </>\n  )\n}\n","import { SetStateAction, useCallback, useEffect, useState, Dispatch, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Currency, CurrencyAmount, Percent } from '@pancakeswap/sdk'\nimport {\n  Text,\n  ArrowDownIcon,\n  Box,\n  IconButton,\n  ArrowUpDownIcon,\n  Skeleton,\n  Flex,\n  Message,\n  MessageText,\n  Swap as SwapUI,\n} from '@pancakeswap/uikit'\nimport InfoTooltip from '@pancakeswap/uikit/src/components/Timeline/InfoTooltip'\n\nimport { useTranslation } from '@pancakeswap/localization'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { useSwapActionHandlers } from 'state/swap/useSwapActionHandlers'\n\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport { CommonBasesType } from 'components/SearchModal/types'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState } from 'hooks/useApproveCallback'\n\nimport { Field } from 'state/swap/actions'\nimport { useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance } from 'state/user/hooks'\n\nimport replaceBrowserHistory from '@pancakeswap/utils/replaceBrowserHistory'\nimport { currencyId } from 'utils/currencyId'\n\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport CurrencyInputHeader from '../../components/CurrencyInputHeader'\nimport useRefreshBlockNumberID from '../../hooks/useRefreshBlockNumber'\nimport { Wrapper } from '../../components/styleds'\nimport StableSwapCommitButton from './StableSwapCommitButton'\nimport { useDerivedStableSwapInfo } from '../hooks/useDerivedStableSwapInfo'\nimport useApproveCallbackFromStableTrade from '../hooks/useApproveCallbackFromStableTrade'\nimport { StableConfigContext } from '../hooks/useStableConfig'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nconst SwitchIconButton = styled(IconButton)`\n  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\n  .icon-up-down {\n    display: none;\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary};\n    .icon-down {\n      display: none;\n      fill: white;\n    }\n    .icon-up-down {\n      display: block;\n      fill: white;\n    }\n  }\n`\n\ninterface StableSwapForm {\n  isChartExpanded: boolean\n  isChartDisplayed: boolean\n  setIsChartDisplayed: Dispatch<SetStateAction<boolean>>\n}\n\nexport default function StableSwapForm({ setIsChartDisplayed, isChartDisplayed }) {\n  const { t } = useTranslation()\n  const { refreshBlockNumber, isLoading } = useRefreshBlockNumberID()\n  const { account } = useWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state & price data\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n\n  const stableConfig = useContext(StableConfigContext)\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  const {\n    v2Trade: trade,\n    currencyBalances,\n    parsedAmount,\n    inputError: swapInputError,\n  } = useDerivedStableSwapInfo(independentField, typedValue, inputCurrency, outputCurrency)\n\n  const parsedAmounts = {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n  }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput } = useSwapActionHandlers()\n\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromStableTrade({\n    trade,\n    allowedSlippage,\n    swapAddress: stableConfig.stableSwapConfig?.stableSwapAddress,\n  })\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount<Currency> | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  const handleInputSelect = useCallback(\n    (currencyInput) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, currencyInput)\n\n      replaceBrowserHistory('inputCurrency', currencyId(currencyInput))\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (currencyOutput) => {\n      onCurrencySelection(Field.OUTPUT, currencyOutput)\n\n      replaceBrowserHistory('outputCurrency', currencyId(currencyOutput))\n    },\n\n    [onCurrencySelection],\n  )\n\n  const handlePercentInput = useCallback(\n    (percent) => {\n      if (maxAmountInput) {\n        onUserInput(Field.INPUT, maxAmountInput.multiply(new Percent(percent, 100)).toExact())\n      }\n    },\n    [maxAmountInput, onUserInput],\n  )\n\n  const hasAmount = Boolean(parsedAmount)\n\n  const onRefreshPrice = useCallback(() => {\n    if (hasAmount) {\n      refreshBlockNumber()\n    }\n  }, [hasAmount, refreshBlockNumber])\n\n  return (\n    <>\n      <CurrencyInputHeader\n        title={\n          <Flex>\n            {t('StableSwap')}\n            <InfoTooltip\n              ml=\"4px\"\n              text={t('StableSwap provides better rates and lower fees for pairs with highly correlated prices')}\n            />\n          </Flex>\n        }\n        subtitle={t('Trade tokens in an instant')}\n        setIsChartDisplayed={setIsChartDisplayed}\n        isChartDisplayed={isChartDisplayed}\n        hasAmount={hasAmount}\n        onRefreshPrice={onRefreshPrice}\n      />\n      <Wrapper id=\"swap-page\" style={{ minHeight: '412px' }}>\n        <AutoColumn gap=\"sm\">\n          <CurrencyInputPanel\n            disableCurrencySelect\n            label={independentField === Field.OUTPUT && trade ? t('From (estimated)') : t('From')}\n            value={formattedAmounts[Field.INPUT]}\n            showMaxButton={!atMaxAmountInput}\n            showQuickInputButton\n            currency={currencies[Field.INPUT]}\n            onUserInput={handleTypeInput}\n            onPercentInput={handlePercentInput}\n            onMax={handleMaxInput}\n            onCurrencySelect={handleInputSelect}\n            otherCurrency={currencies[Field.OUTPUT]}\n            id=\"swap-currency-input\"\n            showCommonBases\n            commonBasesType={CommonBasesType.SWAP_LIMITORDER}\n          />\n\n          <AutoColumn justify=\"space-between\">\n            <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n              <SwitchIconButton\n                variant=\"light\"\n                scale=\"sm\"\n                onClick={() => {\n                  setApprovalSubmitted(false) // reset 2 step UI for approvals\n                  onSwitchTokens()\n                }}\n              >\n                <ArrowDownIcon\n                  className=\"icon-down\"\n                  color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                />\n                <ArrowUpDownIcon\n                  className=\"icon-up-down\"\n                  color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                />\n              </SwitchIconButton>\n            </AutoRow>\n          </AutoColumn>\n          <CurrencyInputPanel\n            disableCurrencySelect\n            value={formattedAmounts[Field.OUTPUT]}\n            onUserInput={handleTypeOutput}\n            label={independentField === Field.INPUT && trade ? t('To (estimated)') : t('To')}\n            showMaxButton={false}\n            currency={currencies[Field.OUTPUT]}\n            onCurrencySelect={handleOutputSelect}\n            otherCurrency={currencies[Field.INPUT]}\n            id=\"swap-currency-output\"\n            showCommonBases\n            commonBasesType={CommonBasesType.SWAP_LIMITORDER}\n          />\n\n          <AutoColumn gap=\"7px\" style={{ padding: '0 16px' }}>\n            <RowBetween align=\"center\">\n              {Boolean(trade) && (\n                <>\n                  <SwapUI.InfoLabel>{t('Price')}</SwapUI.InfoLabel>\n                  {isLoading ? (\n                    <Skeleton width=\"100%\" ml=\"8px\" height=\"24px\" />\n                  ) : (\n                    <SwapUI.TradePrice price={trade?.executionPrice} />\n                  )}\n                </>\n              )}\n            </RowBetween>\n            <RowBetween align=\"center\">\n              <Label>{t('Slippage Tolerance')}</Label>\n              <Text bold color=\"primary\">\n                {allowedSlippage / 100}%\n              </Text>\n            </RowBetween>\n          </AutoColumn>\n          {typedValue ? null : (\n            <AutoColumn>\n              <Message variant=\"warning\" mb=\"16px\">\n                <MessageText>{t('Trade stablecoins in StableSwap with lower slippage and trading fees!')}</MessageText>\n              </Message>\n            </AutoColumn>\n          )}\n        </AutoColumn>\n        <Box mt=\"0.25rem\">\n          <StableSwapCommitButton\n            account={account}\n            approval={approval}\n            approveCallback={approveCallback}\n            approvalSubmitted={approvalSubmitted}\n            currencies={currencies}\n            isExpertMode={isExpertMode}\n            trade={trade}\n            swapInputError={swapInputError}\n            currencyBalances={currencyBalances}\n            allowedSlippage={allowedSlippage}\n            onUserInput={onUserInput}\n          />\n        </Box>\n      </Wrapper>\n    </>\n  )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon, QuestionHelper } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Field } from 'state/swap/actions'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport { formatExecutionPrice } from 'utils/exchange'\nimport { StyledBalanceMaxMini, SwapCallbackError } from '../../components/styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function StableSwapModalFooter({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  onConfirm,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  onConfirm: () => void\n  swapErrorMessage?: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { basisPointsToPercent } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from '../../components/styleds'\n\nexport default function StableSwapModalHeader({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n  allowedSlippage,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n  allowedSlippage: number\n}) {\n  const { t } = useTranslation()\n\n  const inputTextColor =\n    showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT && isEnoughInputBalance\n      ? 'primary'\n      : trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance\n      ? 'failure'\n      : 'text'\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least or the transaction will revert.')\n      : t('Input is estimated. You will sell at most or the transaction will revert.')\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText fontSize=\"24px\" color={inputTextColor}>\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT ? 'primary' : 'text'}\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <RowFixed style={{ width: '100%' }}>\n          <Text color=\"secondary\" bold textTransform=\"uppercase\">\n            {t('Slippage Tolerance')}\n          </Text>\n          <Text bold color=\"primary\" ml=\"auto\" textAlign=\"end\">\n            {`${basisPointsToPercent(allowedSlippage).toFixed(1)}%`}\n          </Text>\n        </RowFixed>\n        {trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance && (\n          <Text small color=\"failure\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t('Insufficient input token balance. Your transaction may fail.')}\n          </Text>\n        )}\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import { useMemo } from 'react'\nimport { useApproveCallback } from 'hooks/useApproveCallback'\nimport { Field } from 'state/swap/actions'\nimport { computeSlippageAdjustedAmounts } from 'utils/exchange'\nimport { StableTrade } from './useStableTradeExactIn'\n\n// wraps useApproveCallback in the context of a swap\nexport default function useApproveCallbackFromStableTrade({\n  trade,\n  allowedSlippage = 0,\n  swapAddress,\n}: {\n  trade?: StableTrade\n  allowedSlippage: number\n  swapAddress: string\n}) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, swapAddress)\n}\n","import { useWeb3React } from '@pancakeswap/wagmi'\nimport { Currency, CurrencyAmount } from '@pancakeswap/sdk'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { isAddress } from 'utils'\n\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { Field } from 'state/swap/actions'\nimport { computeSlippageAdjustedAmounts } from 'utils/exchange'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { useCurrencyBalances } from 'state/wallet/hooks'\nimport useStableTradeExactIn, { StableTrade } from './useStableTradeExactIn'\nimport useStableTradeExactOut from './useStableTradeExactOut'\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedStableSwapInfo(\n  independentField: Field,\n  typedValue: string,\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmount: CurrencyAmount<Currency> | undefined\n  v2Trade: StableTrade | undefined\n  inputError?: string\n} {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n\n  const to: string | null = account ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useStableTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useStableTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n","import { useContract } from 'hooks/useContract'\nimport stableSwapABI from 'config/abi/stableSwap.json'\nimport stableSwapInfoABI from 'config/abi/infoStableSwap.json'\nimport stableLPABI from 'config/abi/stableLP.json'\nimport { Currency, CurrencyAmount, ERC20Token } from '@pancakeswap/sdk'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { createContext, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useSWRImmutable from 'swr/immutable'\nimport { getStableConfig } from '@pancakeswap/farms/constants'\nimport { deserializeToken } from '@pancakeswap/token-lists'\n\nexport function useStableFarms() {\n  const { chainId } = useActiveWeb3React()\n\n  const { data: stableFarms = [] } = useSWRImmutable(chainId && ['stable-farms', chainId], async () => {\n    const farms = await getStableConfig(chainId)\n\n    return farms.map(({ token, quoteToken, lpAddress, ...rest }) => ({\n      ...rest,\n      liquidityToken: new ERC20Token(chainId, lpAddress, 18, 'Stable-LP', 'Pancake StableSwap LPs'),\n      token0: deserializeToken(token),\n      token1: deserializeToken(quoteToken),\n    }))\n  })\n\n  return stableFarms\n}\n\nfunction useFindStablePair({ tokenA, tokenB }) {\n  const stableFarms = useStableFarms()\n\n  return useMemo(\n    () =>\n      stableFarms.find((stablePair) => {\n        return (\n          tokenA &&\n          tokenB &&\n          ((stablePair?.token0?.equals(tokenA) && stablePair?.token1?.equals(tokenB)) ||\n            (stablePair?.token1?.equals(tokenA) && stablePair?.token0?.equals(tokenB)))\n        )\n      }),\n    [tokenA, tokenB, stableFarms],\n  )\n}\n\nexport function useLPTokensWithBalanceByAccount(account) {\n  const lpTokens = useStableFarms()\n\n  const [stableBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    lpTokens.map(({ liquidityToken }) => liquidityToken),\n  )\n\n  const lpTokensWithBalance = useMemo(\n    () => lpTokens.filter(({ liquidityToken }) => stableBalances[liquidityToken.address]?.greaterThan('0')),\n    [lpTokens, stableBalances],\n  )\n\n  return lpTokensWithBalance.map((lpToken) => ({\n    ...lpToken,\n    tokenAmounts: [],\n    reserve0: CurrencyAmount.fromRawAmount(lpToken?.token0, '0'),\n    reserve1: CurrencyAmount.fromRawAmount(lpToken?.token1, '0'),\n    getLiquidityValue: () => CurrencyAmount.fromRawAmount(lpToken?.token0, '0'),\n  }))\n}\n\nexport const StableConfigContext = createContext(null)\n\nexport default function useStableConfig({ tokenA, tokenB }: { tokenA: Currency; tokenB: Currency }) {\n  const stablePair = useFindStablePair({ tokenA, tokenB })\n  const stableSwapContract = useContract(stablePair?.stableSwapAddress, stableSwapABI)\n  const stableSwapInfoContract = useContract(stablePair?.infoStableSwapAddress, stableSwapInfoABI)\n  const stableSwapLPContract = useContract(stablePair?.liquidityToken.address, stableLPABI)\n\n  return useMemo(\n    () => ({\n      stableSwapConfig: stablePair,\n      stableSwapContract,\n      stableSwapInfoContract,\n      stableSwapLPContract,\n    }),\n    [stablePair, stableSwapContract, stableSwapInfoContract, stableSwapLPContract],\n  )\n}\n","import { SwapCall } from 'hooks/useSwapCallArguments'\nimport { useContext, useMemo } from 'react'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { basisPointsToPercent } from 'utils/exchange'\n\nimport { StableConfigContext } from './useStableConfig'\n\nexport default function useStableSwapCallArgs(trade): SwapCall[] {\n  const stableConfig = useContext(StableConfigContext)\n  const swapContract = stableConfig?.stableSwapContract\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const swapCalls = useMemo(() => {\n    if (!trade) return []\n    const inputAmountAddress = trade?.inputAmount?.currency?.address\n    const outputAmountAddress = trade?.outputAmount?.currency?.address\n    const token0Address = stableConfig?.stableSwapConfig?.token0?.address\n    const token1Address = stableConfig?.stableSwapConfig?.token1?.address\n\n    const pct = basisPointsToPercent(allowedSlippage)\n\n    const tokenAmounts = {\n      [inputAmountAddress]: trade?.maximumAmountIn(pct)?.quotient?.toString(),\n      [outputAmountAddress]: trade?.minimumAmountOut(pct)?.quotient?.toString(),\n    }\n\n    const token0Amount = tokenAmounts[token0Address]\n    const token1Amount = tokenAmounts[token1Address]\n\n    const args =\n      inputAmountAddress === token0Address\n        ? ['0', '1', token0Amount, token1Amount]\n        : ['1', '0', token1Amount, token0Amount]\n\n    return [\n      {\n        parameters: {\n          methodName: 'exchange',\n          args,\n          value: '',\n        },\n        contract: swapContract,\n      },\n    ]\n  }, [\n    swapContract,\n    trade,\n    stableConfig?.stableSwapConfig?.token0?.address,\n    stableConfig?.stableSwapConfig?.token1?.address,\n    allowedSlippage,\n  ])\n\n  return swapCalls\n}\n","import { CurrencyAmount, Price, Percent, TradeType, Fraction, ONE, Currency } from '@pancakeswap/sdk'\nimport { laggyMiddleware } from 'hooks/useSWRContract'\nimport { useCallback, useMemo, useContext, useDeferredValue } from 'react'\nimport useSWR from 'swr'\nimport { StableConfigContext } from './useStableConfig'\n\nexport interface StableTrade {\n  tradeType: TradeType\n  inputAmount: CurrencyAmount<Currency>\n  outputAmount: CurrencyAmount<Currency>\n  executionPrice: Price<Currency, Currency>\n  priceImpact: null\n  maximumAmountIn: (slippaged: Percent) => CurrencyAmount<Currency>\n  minimumAmountOut: (slippaged: Percent) => CurrencyAmount<Currency>\n}\n\nexport const maximumAmountInFactory = (currencyAmountIn: CurrencyAmount<Currency>, slippageTolerance: number) => {\n  const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(currencyAmountIn.quotient).quotient\n\n  return CurrencyAmount.fromRawAmount(currencyAmountIn.currency, slippageAdjustedAmountIn)\n}\n\nexport const minimumAmountOutFactory = (currencyAmountOut: CurrencyAmount<Currency>, slippageTolerance: number) => {\n  const slippageAdjustedAmountOut = new Fraction(ONE)\n    .add(slippageTolerance)\n    .invert()\n    .multiply(currencyAmountOut.quotient).quotient\n  return CurrencyAmount.fromRawAmount(currencyAmountOut.currency, slippageAdjustedAmountOut)\n}\n\ninterface UseStableTradeResponse {\n  currencyAmountIn: CurrencyAmount<Currency>\n  currencyAmountOut: CurrencyAmount<Currency>\n  stableSwapConfig: any\n  tradeType: TradeType\n}\n\nexport function useStableTradeResponse({\n  currencyAmountIn,\n  currencyAmountOut,\n  stableSwapConfig,\n  tradeType,\n}: UseStableTradeResponse) {\n  const maximumAmountIn = useCallback(\n    (slippageTolerance) => {\n      if (tradeType === TradeType.EXACT_INPUT) {\n        return currencyAmountIn\n      }\n\n      return currencyAmountIn\n        ? maximumAmountInFactory(currencyAmountIn, slippageTolerance)\n        : CurrencyAmount.fromRawAmount(currencyAmountIn.currency, '0')\n    },\n    [currencyAmountIn, tradeType],\n  )\n\n  const minimumAmountOut = useCallback(\n    (slippageTolerance) => {\n      if (tradeType === TradeType.EXACT_OUTPUT) {\n        return currencyAmountOut\n      }\n\n      return currencyAmountOut\n        ? minimumAmountOutFactory(currencyAmountOut, slippageTolerance)\n        : CurrencyAmount.fromRawAmount(currencyAmountOut.currency, '0')\n    },\n    [currencyAmountOut, tradeType],\n  )\n\n  const isInvalid = !currencyAmountIn || !currencyAmountOut || !stableSwapConfig || !currencyAmountIn\n\n  const executionPrice = useMemo(() => {\n    if (isInvalid) return null\n\n    return new Price(\n      currencyAmountIn.currency,\n      currencyAmountOut.currency,\n      currencyAmountIn.quotient,\n      currencyAmountOut.quotient,\n    )\n  }, [isInvalid, currencyAmountIn, currencyAmountOut])\n\n  if (isInvalid) return null\n\n  return {\n    tradeType: TradeType.EXACT_INPUT,\n    inputAmount: currencyAmountIn,\n    outputAmount: currencyAmountOut,\n    executionPrice,\n    priceImpact: null,\n    maximumAmountIn,\n    minimumAmountOut,\n  }\n}\n\nexport function useEstimatedAmount({ estimatedCurrency, stableSwapConfig, quotient, stableSwapContract }) {\n  const deferQuotient = useDeferredValue(quotient)\n\n  return useSWR(\n    stableSwapConfig?.stableSwapAddress && estimatedCurrency && !!deferQuotient\n      ? ['swapContract', stableSwapConfig?.stableSwapAddress, deferQuotient]\n      : null,\n    async () => {\n      const isToken0 = stableSwapConfig?.token0?.address === estimatedCurrency?.address\n\n      const args = isToken0 ? [1, 0, deferQuotient] : [0, 1, deferQuotient]\n\n      const estimatedAmount = await stableSwapContract.get_dy(...args)\n\n      return CurrencyAmount.fromRawAmount(estimatedCurrency, estimatedAmount)\n    },\n    {\n      use: [laggyMiddleware],\n    },\n  )\n}\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport default function useStableTradeExactIn(\n  currencyAmountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency,\n): StableTrade | null {\n  const { stableSwapContract, stableSwapConfig } = useContext(StableConfigContext)\n\n  const currencyAmountInQuotient = currencyAmountIn?.quotient?.toString()\n\n  const { data: currencyAmountOut } = useEstimatedAmount({\n    estimatedCurrency: currencyOut,\n    quotient: currencyAmountInQuotient,\n    stableSwapContract,\n    stableSwapConfig,\n  })\n\n  return useStableTradeResponse({\n    currencyAmountIn,\n    currencyAmountOut,\n    stableSwapConfig,\n    tradeType: TradeType.EXACT_INPUT,\n  })\n}\n","import { CurrencyAmount, Currency, TradeType } from '@pancakeswap/sdk'\nimport { useContext } from 'react'\nimport { StableTrade, useEstimatedAmount, useStableTradeResponse } from './useStableTradeExactIn'\nimport { StableConfigContext } from './useStableConfig'\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport default function useStableTradeExactOut(\n  currencyIn?: Currency,\n  currencyAmountOut?: CurrencyAmount<Currency>,\n): StableTrade | null {\n  const { stableSwapContract, stableSwapConfig } = useContext(StableConfigContext)\n\n  const currencyAmountOutQuotient = currencyAmountOut?.quotient?.toString()\n\n  const { data: currencyAmountIn } = useEstimatedAmount({\n    estimatedCurrency: currencyIn,\n    quotient: currencyAmountOutQuotient,\n    stableSwapContract,\n    stableSwapConfig,\n  })\n\n  return useStableTradeResponse({\n    currencyAmountIn,\n    currencyAmountOut,\n    stableSwapConfig,\n    tradeType: TradeType.EXACT_OUTPUT,\n  })\n}\n","import { useEffect } from 'react'\nimport { useSwapActionHandlers } from 'state/swap/useSwapActionHandlers'\nimport { Field } from 'state/swap/actions'\nimport StableSwapForm from './components/StableSwapForm'\nimport useStableConfig, { StableConfigContext, useStableFarms } from './hooks/useStableConfig'\n\nconst StableSwapFormContainer = ({ setIsChartDisplayed, isChartDisplayed }) => {\n  const stableFarms = useStableFarms()\n\n  const { onCurrencySelection } = useSwapActionHandlers()\n\n  const stableTokenPair = stableFarms?.length ? stableFarms[0] : null\n\n  useEffect(() => {\n    if (stableTokenPair) {\n      onCurrencySelection(Field.INPUT, stableTokenPair.token0)\n      onCurrencySelection(Field.OUTPUT, stableTokenPair.token1)\n    }\n  }, [onCurrencySelection, stableTokenPair])\n\n  const { stableSwapConfig, ...stableConfig } = useStableConfig({\n    tokenA: stableTokenPair?.token0,\n    tokenB: stableTokenPair?.token1,\n  })\n\n  return stableTokenPair ? (\n    <StableConfigContext.Provider value={{ stableSwapConfig, ...stableConfig }}>\n      <StableSwapForm setIsChartDisplayed={setIsChartDisplayed} isChartDisplayed={isChartDisplayed} />\n    </StableConfigContext.Provider>\n  ) : null\n}\n\nexport default StableSwapFormContainer\n","import { useMemo } from 'react'\nimport { Currency } from '@pancakeswap/sdk'\nimport { CurrencyLogo } from 'components/Logo'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Flex, Message, MessageText, Text, Link } from '@pancakeswap/uikit'\nimport { RiskTokenInfo, TOKEN_RISK } from 'views/Swap/hooks/fetchTokenRisk'\n\ninterface RiskMessageProps {\n  currency: Currency\n  riskTokenInfo: RiskTokenInfo\n}\n\nconst RiskMessage: React.FC<RiskMessageProps> = ({ currency, riskTokenInfo }) => {\n  const { t } = useTranslation()\n  const { riskLevel, riskLevelDescription } = riskTokenInfo\n\n  const messageVariant = useMemo(() => {\n    switch (riskLevel) {\n      case TOKEN_RISK.High:\n        return 'danger'\n      case TOKEN_RISK.Medium:\n        return 'warning'\n      default:\n        return 'success'\n    }\n  }, [riskLevel])\n\n  return (\n    <Message variant={messageVariant} icon=\"\" mt=\"10px\">\n      <MessageText bold ml=\"-12px\">\n        {currency.symbol} {t('%riskLevel% Risk', { riskLevel })}\n        <Flex mt=\"4px\">\n          <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n          <Flex flexDirection=\"column\">\n            <Text fontSize=\"14px\" lineHeight=\"120%\">\n              {riskLevelDescription}\n            </Text>\n            <Link\n              fontSize=\"14px\"\n              mt=\"8px\"\n              ml=\"auto\"\n              external\n              href=\"https://hashdit.github.io/hashdit/docs/risk-level-description/\"\n            >\n              {t('Learn More')}\n            </Link>\n          </Flex>\n        </Flex>\n      </MessageText>\n    </Message>\n  )\n}\n\nexport default RiskMessage\n","import { useState, useMemo, useCallback } from 'react'\nimport { Currency } from '@pancakeswap/sdk'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Flex, Button, HelpIcon, useTooltip, Text, Link, useToast } from '@pancakeswap/uikit'\nimport { fetchRiskToken, RiskTokenInfo } from 'views/Swap/hooks/fetchTokenRisk'\nimport RiskMessage from 'views/Swap/components/AccessRisk/RiskMessage'\nimport { tokenListFromOfficialsUrlsAtom } from 'state/lists/hooks'\nimport merge from 'lodash/merge'\nimport keyBy from 'lodash/keyBy'\nimport groupBy from 'lodash/groupBy'\nimport mapValues from 'lodash/mapValues'\nimport { useAtomValue } from 'jotai'\n\ninterface AccessRiskProps {\n  inputCurrency: Currency\n  outputCurrency: Currency\n}\n\nconst AccessRisk: React.FC<AccessRiskProps> = ({ inputCurrency, outputCurrency }) => {\n  const { t } = useTranslation()\n  const { toastInfo } = useToast()\n  const tokenMap = useAtomValue(tokenListFromOfficialsUrlsAtom)\n\n  const { address: inputAddress, chainId: inputChainId } = useMemo(() => (inputCurrency as any) ?? {}, [inputCurrency])\n  const { address: outputAddress, chainId: outputChainId } = useMemo(\n    () => (outputCurrency as any) ?? {},\n    [outputCurrency],\n  )\n\n  const [{ results, loading }, setState] = useState<{\n    results: { [chainId: number]: { [address: string]: RiskTokenInfo } }\n    loading: boolean\n  }>({\n    results: {},\n    loading: false,\n  })\n  const tokensForScan = useMemo(() => {\n    const tokensToScan = []\n    if (\n      inputCurrency &&\n      !inputCurrency.isNative &&\n      !results[inputChainId]?.[inputAddress] &&\n      !tokenMap?.[inputChainId]?.[inputAddress]\n    ) {\n      tokensToScan.push(inputCurrency)\n    }\n    if (outputCurrency && !outputCurrency.isNative && !results[outputChainId]?.[outputAddress]) {\n      tokensToScan.push(outputCurrency)\n    }\n    return tokensToScan\n  }, [results, inputAddress, inputChainId, outputAddress, outputChainId, inputCurrency, outputCurrency, tokenMap])\n\n  const handleScan = useCallback(() => {\n    const fetchTokenRisks = async () => {\n      const tokenRiskResults = await Promise.all(\n        tokensForScan.map((tokenToScan) => {\n          const { address, chainId } = tokenToScan as any\n          return fetchRiskToken(address, chainId)\n        }),\n      )\n\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        results: merge(\n          { ...prevState.results },\n          mapValues(groupBy(tokenRiskResults, 'chainId'), (tokenRiskResult) => keyBy(tokenRiskResult, 'address')),\n        ),\n      }))\n    }\n\n    toastInfo(\n      t('Scanning Risk'),\n      t('Please wait until we scan the risk for %symbol% token', {\n        symbol: tokensForScan.map((currency) => currency.symbol).join(','),\n      }),\n    )\n    setState((prevState) => ({\n      ...prevState,\n      loading: true,\n    }))\n    fetchTokenRisks()\n  }, [tokensForScan, toastInfo, t])\n\n  const disabledButton = useMemo(() => loading || tokensForScan.length === 0, [loading, tokensForScan])\n\n  // Tooltips\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The scan result is provided by 3rd parties and may not cover every token. Therefore the result is for reference only, do NOT take it as investment or financial advice. Always DYOR!',\n        )}\n      </Text>\n      <Flex mt=\"4px\">\n        <Text>{t('Powered by')}</Text>\n        <Link ml=\"4px\" external href=\"https://www.hashdit.io/en\">\n          {t('Hashdit.')}\n        </Link>\n      </Flex>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <>\n      <Flex justifyContent=\"flex-end\">\n        <Button scale=\"xs\" style={{ textTransform: 'uppercase' }} disabled={disabledButton} onClick={handleScan}>\n          {loading ? t('scanning...') : t('scan risk')}\n        </Button>\n        {tooltipVisible && tooltip}\n        <Flex ref={targetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </Flex>\n      </Flex>\n      {results[inputChainId]?.[inputAddress]?.isSuccess && (\n        <RiskMessage currency={inputCurrency} riskTokenInfo={results[inputChainId][inputAddress]} />\n      )}\n      {results[outputChainId]?.[outputAddress]?.isSuccess && (\n        <RiskMessage currency={outputCurrency} riskTokenInfo={results[outputChainId][outputAddress]} />\n      )}\n    </>\n  )\n}\n\nexport default AccessRisk\n","import { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { isAddress } from 'utils'\nimport { useTranslation } from '@pancakeswap/localization'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBlockExploreLink, getBlockExploreName } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const address = isAddress(value) ? value : undefined\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBlockExploreLink(address, 'address', chainId)}>\n                  (\n                  {t('View on %site%', {\n                    site: getBlockExploreName(chainId),\n                  })}\n                  )\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import { Trade, TradeType, Currency } from '@pancakeswap/sdk'\nimport { Text, QuestionHelper } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { TOTAL_FEE, LP_HOLDERS_FEE, TREASURY_FEE, BUYBACK_FEE } from 'config/constants/info'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({\n  trade,\n  allowedSlippage,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  allowedSlippage: number\n}) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  const totalFeePercent = `${(TOTAL_FEE * 100).toFixed(2)}%`\n  const lpHoldersFeePercent = `${(LP_HOLDERS_FEE * 100).toFixed(2)}%`\n  const treasuryFeePercent = `${(TREASURY_FEE * 100).toFixed(4)}%`\n  const buyBackFeePercent = `${(BUYBACK_FEE * 100).toFixed(4)}%`\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n            placement=\"top-start\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n            placement=\"top-start\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: totalFeePercent })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: lpHoldersFeePercent })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: treasuryFeePercent })}</Text>\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: buyBackFeePercent })}</Text>\n              </>\n            }\n            ml=\"4px\"\n            placement=\"top-start\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade<Currency, Currency, TradeType>\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                    placement=\"top-start\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import { Box, ButtonMenu, ButtonMenuItem, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useState, memo } from 'react'\nimport { useFetchPairPrices } from 'state/swap/hooks'\nimport dynamic from 'next/dynamic'\nimport { PairDataTimeWindowEnum } from 'state/swap/types'\nimport NoChartAvailable from './NoChartAvailable'\nimport PairPriceDisplay from '../../../../components/PairPriceDisplay'\nimport { getTimeWindowChange } from './utils'\n\nconst SwapLineChart = dynamic(() => import('./SwapLineChart'), {\n  ssr: false,\n})\n\nconst BasicChart = ({\n  token0Address,\n  token1Address,\n  isChartExpanded,\n  inputCurrency,\n  outputCurrency,\n  isMobile,\n  currentSwapPrice,\n}) => {\n  const [timeWindow, setTimeWindow] = useState<PairDataTimeWindowEnum>(0)\n\n  const { pairPrices = [], pairId } = useFetchPairPrices({\n    token0Address,\n    token1Address,\n    timeWindow,\n    currentSwapPrice,\n  })\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\n  const valueToDisplay = hoverValue || pairPrices[pairPrices.length - 1]?.value\n  const { changePercentage, changeValue } = getTimeWindowChange(pairPrices)\n  const isChangePositive = changeValue >= 0\n  const chartHeight = isChartExpanded ? 'calc(100% - 120px)' : '378px'\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const currentDate = new Date().toLocaleString(locale, {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n  })\n\n  // Sometimes we might receive array full of zeros for obscure tokens while trying to derive data\n  // In that case chart is not useful to users\n  const isBadData =\n    pairPrices &&\n    pairPrices.length > 0 &&\n    pairPrices.every(\n      (price) => !price.value || price.value === 0 || price.value === Infinity || Number.isNaN(price.value),\n    )\n\n  if (isBadData) {\n    return (\n      <NoChartAvailable\n        token0Address={token0Address}\n        token1Address={token1Address}\n        pairAddress={pairId}\n        isMobile={isMobile}\n      />\n    )\n  }\n\n  return (\n    <>\n      <Flex\n        flexDirection={['column', null, null, null, null, null, 'row']}\n        alignItems={['flex-start', null, null, null, null, null, 'center']}\n        justifyContent=\"space-between\"\n        px=\"24px\"\n      >\n        <Flex flexDirection=\"column\" pt=\"12px\">\n          <PairPriceDisplay\n            value={pairPrices?.length > 0 && valueToDisplay}\n            inputSymbol={inputCurrency?.symbol}\n            outputSymbol={outputCurrency?.symbol}\n          >\n            <Text color={isChangePositive ? 'success' : 'failure'} fontSize=\"20px\" ml=\"4px\" bold>\n              {`${isChangePositive ? '+' : ''}${changeValue.toFixed(3)} (${changePercentage}%)`}\n            </Text>\n          </PairPriceDisplay>\n          <Text small color=\"secondary\">\n            {hoverDate || currentDate}\n          </Text>\n        </Flex>\n        <Box>\n          <ButtonMenu activeIndex={timeWindow} onItemClick={setTimeWindow} scale=\"sm\">\n            <ButtonMenuItem>{t('24H')}</ButtonMenuItem>\n            <ButtonMenuItem>{t('1W')}</ButtonMenuItem>\n            <ButtonMenuItem>{t('1M')}</ButtonMenuItem>\n            <ButtonMenuItem>{t('1Y')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Box>\n      </Flex>\n      <Box height={isMobile ? '100%' : chartHeight} p={isMobile ? '0px' : '16px'} width=\"100%\">\n        <SwapLineChart\n          data={pairPrices}\n          setHoverValue={setHoverValue}\n          setHoverDate={setHoverDate}\n          isChangePositive={isChangePositive}\n          timeWindow={timeWindow}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default memo(BasicChart, (prev, next) => {\n  return (\n    prev.token0Address === next.token0Address &&\n    prev.token1Address === next.token1Address &&\n    prev.isChartExpanded === next.isChartExpanded &&\n    prev.isMobile === next.isMobile &&\n    prev.isChartExpanded === next.isChartExpanded &&\n    ((prev.currentSwapPrice !== null &&\n      next.currentSwapPrice !== null &&\n      prev.currentSwapPrice[prev.token0Address] === next.currentSwapPrice[next.token0Address] &&\n      prev.currentSwapPrice[prev.token1Address] === next.currentSwapPrice[next.token1Address]) ||\n      (prev.currentSwapPrice === null && next.currentSwapPrice === null))\n  )\n})\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\nimport { StyledPriceChart } from './styles'\n\ninterface BnbWbnbNoticeProps {\n  isDark: boolean\n  isChartExpanded: boolean\n}\n\nconst BnbWbnbNotice: React.FC<React.PropsWithChildren<BnbWbnbNoticeProps>> = ({ isDark, isChartExpanded }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledPriceChart $isDark={isDark} $isExpanded={isChartExpanded} p=\"24px\">\n      <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\" flexDirection=\"column\">\n        <Text mb={['8px', '8px', '0px']} textAlign=\"center\">\n          {t('You can swap WBNB for BNB (and vice versa) with no trading fees.')}\n        </Text>\n        <Text mb={['8px', '8px', '0px']} textAlign=\"center\">\n          {t('Exchange rate is always 1 to 1.')}\n        </Text>\n      </Flex>\n    </StyledPriceChart>\n  )\n}\n\nexport default BnbWbnbNotice\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface NoChartAvailableProps {\n  token0Address: string\n  token1Address: string\n  pairAddress: string\n  isMobile: boolean\n}\n\nconst NoChartAvailable: React.FC<React.PropsWithChildren<NoChartAvailableProps>> = ({\n  token0Address,\n  token1Address,\n  pairAddress,\n  isMobile,\n}) => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\" flexDirection=\"column\">\n        <Text mb={['8px', '8px', '0px']}>{t('Failed to load price chart for this pair')}</Text>\n        <Text\n          textAlign={isMobile ? 'center' : 'left'}\n          mb={['8px', '8px', '0px']}\n          color=\"textSubtle\"\n          small\n          style={isMobile && { wordSpacing: '100vw' }}\n        >\n          Token0: {token0Address ?? 'null'}\n        </Text>\n        <Text\n          textAlign={isMobile ? 'center' : 'left'}\n          mb={['8px', '8px', '0px']}\n          color=\"textSubtle\"\n          small\n          style={isMobile && { wordSpacing: '100vw' }}\n        >\n          Token1: {token1Address ?? 'null'}\n        </Text>\n        <Text\n          textAlign={isMobile ? 'center' : 'left'}\n          mb={['8px', '8px', '0px']}\n          color=\"textSubtle\"\n          small\n          style={isMobile && { wordSpacing: '100vw' }}\n        >\n          Pair: {pairAddress ?? 'null'}\n        </Text>\n      </Flex>\n    </>\n  )\n}\n\nexport default NoChartAvailable\n","import {\n  // Button,\n  ExpandIcon,\n  Flex,\n  IconButton,\n  ShrinkIcon,\n  SyncAltIcon,\n  Text,\n  // TradingViewIcon,\n  // LineGraphIcon,\n  // useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components/Logo'\n// import { TradingViewLabel } from 'components/TradingView'\n// import { useTranslation } from '@pancakeswap/localization'\nimport { ChartViewMode } from 'state/user/actions'\nimport { useExchangeChartViewManager } from 'state/user/hooks'\n// import styled from 'styled-components'\nimport BasicChart from './BasicChart'\nimport { StyledPriceChart } from './styles'\n// import TradingViewChart from './TradingViewChart'\n// import PairPriceDisplay from '../../../../components/PairPriceDisplay'\n\n// const ChartButton = styled(Button)`\n//   background-color: ${({ $active, theme }) => $active && `${theme.colors.primary}0f`};\n//   padding: 4px 8px;\n//   border-radius: 6px;\n// `\n\nconst PriceChart = ({\n  inputCurrency,\n  outputCurrency,\n  onSwitchTokens,\n  isDark,\n  isChartExpanded,\n  setIsChartExpanded,\n  isMobile,\n  isFullWidthContainer,\n  token0Address,\n  token1Address,\n  currentSwapPrice,\n}) => {\n  // const { isDesktop } = useMatchBreakpoints()\n  const toggleExpanded = () => setIsChartExpanded((currentIsExpanded) => !currentIsExpanded)\n  const [chartView] = useExchangeChartViewManager()\n  // const [chartView, setChartView] = useExchangeChartViewManager()\n  // const [twChartSymbol, setTwChartSymbol] = useState('')\n  // const { t } = useTranslation()\n\n  // const handleTwChartSymbol = useCallback((symbol) => {\n  //   setTwChartSymbol(symbol)\n  // }, [])\n\n  return (\n    <StyledPriceChart\n      height={chartView === ChartViewMode.TRADING_VIEW ? '100%' : '70%'}\n      overflow={chartView === ChartViewMode.TRADING_VIEW ? 'hidden' : 'unset'}\n      $isDark={isDark}\n      $isExpanded={isChartExpanded}\n      $isFullWidthContainer={isFullWidthContainer}\n    >\n      <Flex justifyContent=\"space-between\" px=\"24px\">\n        <Flex alignItems=\"center\">\n          {outputCurrency ? (\n            <DoubleCurrencyLogo currency0={inputCurrency} currency1={outputCurrency} size={24} margin />\n          ) : (\n            inputCurrency && <CurrencyLogo currency={inputCurrency} size=\"24px\" style={{ marginRight: '8px' }} />\n          )}\n          {inputCurrency && (\n            <Text color=\"text\" bold>\n              {outputCurrency ? `${inputCurrency.symbol}/${outputCurrency.symbol}` : inputCurrency.symbol}\n            </Text>\n          )}\n          <IconButton variant=\"text\" onClick={onSwitchTokens}>\n            <SyncAltIcon ml=\"6px\" color=\"primary\" />\n          </IconButton>\n          {/* {isDesktop && (\n            <Flex>\n              <ChartButton\n                aria-label={t('Basic')}\n                title={t('Basic')}\n                $active={chartView === ChartViewMode.BASIC}\n                scale=\"sm\"\n                variant=\"text\"\n                color=\"primary\"\n                mr=\"8px\"\n                disabled\n              >\n                {t('Basic')}\n              </ChartButton>\n              <ChartButton\n                aria-label=\"TradingView\"\n                title=\"TradingView\"\n                $active={chartView === ChartViewMode.TRADING_VIEW}\n                scale=\"sm\"\n                variant=\"text\"\n                onClick={() => setChartView(ChartViewMode.TRADING_VIEW)}\n              >\n                {isDesktop ? 'TradingView' : <TradingViewIcon color=\"primary\" />}\n              </ChartButton>\n            </Flex>\n          )} */}\n        </Flex>\n        {!isMobile && (\n          <Flex>\n            <IconButton variant=\"text\" onClick={toggleExpanded}>\n              {isChartExpanded ? <ShrinkIcon color=\"text\" /> : <ExpandIcon color=\"text\" />}\n            </IconButton>\n          </Flex>\n        )}\n      </Flex>\n      {chartView === ChartViewMode.BASIC && (\n        <BasicChart\n          token0Address={token0Address}\n          token1Address={token1Address}\n          isChartExpanded={isChartExpanded}\n          inputCurrency={inputCurrency}\n          outputCurrency={outputCurrency}\n          isMobile={isMobile}\n          currentSwapPrice={currentSwapPrice}\n        />\n      )}\n      {/* {chartView === ChartViewMode.TRADING_VIEW && (\n        <Flex\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n          height={isMobile ? '100%' : isChartExpanded ? 'calc(100% - 48px)' : '458px'}\n          pt=\"12px\"\n        >\n          <Flex justifyContent=\"space-between\" alignItems=\"baseline\" flexWrap=\"wrap\">\n            <PairPriceDisplay\n              value={currentSwapPrice?.[token0Address]}\n              inputSymbol={inputCurrency?.symbol}\n              outputSymbol={outputCurrency?.symbol}\n              mx=\"24px\"\n            />\n            {twChartSymbol && <TradingViewLabel symbol={twChartSymbol} />}\n          </Flex>\n          <TradingViewChart\n            // unmount the whole component when symbols is changed\n            key={`${inputCurrency?.symbol}-${outputCurrency?.symbol}`}\n            inputSymbol={inputCurrency?.symbol}\n            outputSymbol={outputCurrency?.symbol}\n            isDark={isDark}\n            onTwChartSymbol={handleTwChartSymbol}\n          />\n        </Flex>\n      ) */}\n    </StyledPriceChart>\n  )\n}\n\nexport default PriceChart\n","import { Currency } from '@pancakeswap/sdk'\nimport useTheme from 'hooks/useTheme'\nimport { useCallback, useState } from 'react'\nimport BnbWbnbNotice from './BnbWbnbNotice'\nimport { BNB_ADDRESS } from './constants'\nimport PriceChart from './PriceChart'\nimport { getTokenAddress } from './utils'\n\ntype PriceChartContainerProps = {\n  inputCurrencyId: string\n  inputCurrency: Currency\n  outputCurrencyId: string\n  outputCurrency: Currency\n  isChartExpanded: boolean\n  setIsChartExpanded: React.Dispatch<React.SetStateAction<boolean>>\n  isChartDisplayed: boolean\n  currentSwapPrice: {\n    [key: string]: number\n  }\n  isMobile?: boolean\n  isFullWidthContainer?: boolean\n}\n\nconst PriceChartContainer: React.FC<React.PropsWithChildren<PriceChartContainerProps>> = ({\n  inputCurrencyId,\n  inputCurrency,\n  outputCurrency,\n  outputCurrencyId,\n  isChartExpanded,\n  setIsChartExpanded,\n  isChartDisplayed,\n  isMobile,\n  isFullWidthContainer = false,\n  currentSwapPrice,\n}) => {\n  const token0Address = getTokenAddress(inputCurrencyId)\n  const token1Address = getTokenAddress(outputCurrencyId)\n  const [isPairReversed, setIsPairReversed] = useState(false)\n  const togglePairReversed = useCallback(() => setIsPairReversed((prePairReversed) => !prePairReversed), [])\n\n  const { isDark } = useTheme()\n\n  if (!isChartDisplayed) {\n    return null\n  }\n\n  const isBnbWbnb = token0Address === BNB_ADDRESS && token1Address === BNB_ADDRESS\n\n  if (isBnbWbnb) {\n    return <BnbWbnbNotice isDark={isDark} isChartExpanded={isChartExpanded} />\n  }\n\n  return (\n    <PriceChart\n      token0Address={isPairReversed ? token1Address : token0Address}\n      token1Address={isPairReversed ? token0Address : token1Address}\n      inputCurrency={isPairReversed ? outputCurrency : inputCurrency}\n      outputCurrency={isPairReversed ? inputCurrency : outputCurrency}\n      onSwitchTokens={togglePairReversed}\n      isDark={isDark}\n      isChartExpanded={isChartExpanded}\n      setIsChartExpanded={setIsChartExpanded}\n      isMobile={isMobile}\n      isFullWidthContainer={isFullWidthContainer}\n      currentSwapPrice={currentSwapPrice}\n    />\n  )\n}\n\nexport default PriceChartContainer\n","import { Box } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const StyledPriceChart = styled(Box)<{\n  $isDark: boolean\n  $isExpanded: boolean\n  $isFullWidthContainer?: boolean\n}>`\n  border: none;\n  border-radius: 32px;\n  width: 100%;\n  padding-top: 36px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 8px;\n    background: ${({ $isDark }) => ($isDark ? 'rgba(39, 38, 44, 0.5)' : 'rgba(255, 255, 255, 0.5)')};\n    border: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n    border-radius: ${({ $isExpanded }) => ($isExpanded ? '0' : '16px')};\n    width: ${({ $isExpanded, $isFullWidthContainer }) => ($isFullWidthContainer || $isExpanded ? '100%' : '50%')};\n    height: ${({ $isExpanded }) => ($isExpanded ? 'calc(100vh - 100px)' : '516px')};\n  }\n`\n\nStyledPriceChart.defaultProps = {\n  height: '70%',\n}\n","import { useCallback, memo } from 'react'\nimport { Trade, Currency, TradeType, CurrencyAmount } from '@pancakeswap/sdk'\nimport { InjectedModalProps, LinkExternal, Text } from '@pancakeswap/uikit'\nimport { TransactionErrorContent, TransactionSubmittedContent } from 'components/TransactionConfirmationModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Field } from 'state/swap/actions'\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\nimport TransactionConfirmSwapContent from './TransactionConfirmSwapContent'\nimport ConfirmSwapModalContainer from './ConfirmSwapModalContainer'\nimport { StableTrade } from '../StableSwap/hooks/useStableTradeExactIn'\n\nconst PancakeRouterSlippageErrorMsg =\n  'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\n\nconst SwapTransactionErrorContent = ({ onDismiss, message, openSettingModal }) => {\n  const isSlippagedErrorMsg = message?.includes(PancakeRouterSlippageErrorMsg)\n\n  const handleErrorDismiss = useCallback(() => {\n    onDismiss?.()\n    if (isSlippagedErrorMsg && openSettingModal) {\n      openSettingModal()\n    }\n  }, [isSlippagedErrorMsg, onDismiss, openSettingModal])\n  const { t } = useTranslation()\n\n  return isSlippagedErrorMsg ? (\n    <TransactionErrorContent\n      message={\n        <>\n          <Text mb=\"16px\">\n            {t(\n              'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your',\n            )}{' '}\n            <Text bold display=\"inline\" style={{ cursor: 'pointer' }} onClick={handleErrorDismiss}>\n              <u>{t('slippage tolerance.')}</u>\n            </Text>\n          </Text>\n          <LinkExternal\n            href=\"https://docs.pancakeswap.finance/products/pancakeswap-exchange/trade-guide\"\n            style={{ width: '100%', justifyContent: 'center' }}\n          >\n            {t('What are the potential issues with the token?')}\n          </LinkExternal>\n        </>\n      }\n    />\n  ) : (\n    <TransactionErrorContent message={message} onDismiss={onDismiss} />\n  )\n}\n\ninterface ConfirmSwapModalProps {\n  trade?: Trade<Currency, Currency, TradeType> | StableTrade\n  originalTrade?: Trade<Currency, Currency, TradeType> | StableTrade\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n  openSettingModal?: () => void\n  isStable?: boolean\n}\n\nconst ConfirmSwapModal: React.FC<React.PropsWithChildren<InjectedModalProps & ConfirmSwapModalProps>> = ({\n  trade,\n  originalTrade,\n  currencyBalances,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n  openSettingModal,\n  isStable,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss?.()\n  }, [customOnDismiss, onDismiss])\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <SwapTransactionErrorContent\n          openSettingModal={openSettingModal}\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <TransactionConfirmSwapContent\n          isStable={isStable}\n          trade={trade}\n          currencyBalances={currencyBalances}\n          originalTrade={originalTrade}\n          onAcceptChanges={onAcceptChanges}\n          allowedSlippage={allowedSlippage}\n          onConfirm={onConfirm}\n          recipient={recipient}\n        />\n      ),\n    [\n      isStable,\n      trade,\n      originalTrade,\n      onAcceptChanges,\n      allowedSlippage,\n      onConfirm,\n      recipient,\n      swapErrorMessage,\n      onDismiss,\n      openSettingModal,\n      currencyBalances,\n    ],\n  )\n\n  if (!chainId) return null\n\n  return (\n    <ConfirmSwapModalContainer handleDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent trade={trade} />\n      ) : txHash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={txHash}\n          onDismiss={handleDismiss}\n          currencyToAdd={trade?.outputAmount.currency}\n        />\n      ) : (\n        confirmationContent()\n      )}\n    </ConfirmSwapModalContainer>\n  )\n}\n\nexport default memo(ConfirmSwapModal)\n","import { Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\nconst ConfirmSwapModalContainer = ({ children, handleDismiss }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Confirm Swap')} headerBackground=\"gradientCardHeader\" onDismiss={handleDismiss}>\n      {children}\n    </Modal>\n  )\n}\n\nexport default ConfirmSwapModalContainer\n","import styled from 'styled-components'\nimport { Text, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { AutoColumn, ColumnCenter } from 'components/Layout/Column'\nimport { Trade, Currency, TradeType } from '@pancakeswap/sdk'\nimport { StableTrade } from '../StableSwap/hooks/useStableTradeExactIn'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ trade }: { trade: Trade<Currency, Currency, TradeType> | StableTrade }) {\n  const { t } = useTranslation()\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ConfirmationPendingContent\n","import {\n  ChartDisableIcon,\n  ChartIcon,\n  Swap,\n  Flex,\n  HistoryIcon,\n  IconButton,\n  NotificationDot,\n  useModal,\n} from '@pancakeswap/uikit'\nimport TransactionsModal from 'components/App/Transactions/TransactionsModal'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport RefreshIcon from 'components/Svg/RefreshIcon'\nimport { ReactElement, useCallback } from 'react'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport styled from 'styled-components'\nimport { SettingsMode } from '../../../components/Menu/GlobalSettings/types'\n\ninterface Props {\n  title: string | ReactElement\n  subtitle: string\n  noConfig?: boolean\n  setIsChartDisplayed?: React.Dispatch<React.SetStateAction<boolean>>\n  isChartDisplayed?: boolean\n  hasAmount: boolean\n  onRefreshPrice: () => void\n}\n\nconst ColoredIconButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nconst CurrencyInputHeader: React.FC<React.PropsWithChildren<Props>> = ({\n  title,\n  subtitle,\n  setIsChartDisplayed,\n  isChartDisplayed,\n  hasAmount,\n  onRefreshPrice,\n}) => {\n  const [expertMode] = useExpertModeManager()\n  const toggleChartDisplayed = () => {\n    setIsChartDisplayed((currentIsChartDisplayed) => !currentIsChartDisplayed)\n  }\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  const handleOnClick = useCallback(() => onRefreshPrice?.(), [onRefreshPrice])\n\n  return (\n    <Swap.CurrencyInputHeader\n      title={\n        <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\n          {setIsChartDisplayed && (\n            <ColoredIconButton onClick={toggleChartDisplayed} variant=\"text\" scale=\"sm\">\n              {isChartDisplayed ? (\n                <ChartDisableIcon color=\"textSubtle\" />\n              ) : (\n                <ChartIcon width=\"24px\" color=\"textSubtle\" />\n              )}\n            </ColoredIconButton>\n          )}\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\" width=\"100%\" mr={18}>\n            <Swap.CurrencyInputHeaderTitle>{title}</Swap.CurrencyInputHeaderTitle>\n          </Flex>\n          <Flex>\n            <NotificationDot show={expertMode}>\n              <GlobalSettings color=\"textSubtle\" mr=\"0\" mode={SettingsMode.SWAP_LIQUIDITY} />\n            </NotificationDot>\n            <IconButton onClick={onPresentTransactionsModal} variant=\"text\" scale=\"sm\">\n              <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n            </IconButton>\n            <IconButton variant=\"text\" scale=\"sm\" onClick={handleOnClick}>\n              <RefreshIcon disabled={!hasAmount} color=\"textSubtle\" width=\"27px\" />\n            </IconButton>\n          </Flex>\n        </Flex>\n      }\n      subtitle={<Swap.CurrencyInputHeaderSubTitle>{subtitle}</Swap.CurrencyInputHeaderSubTitle>}\n    />\n  )\n}\n\nexport default CurrencyInputHeader\n","import { Percent } from '@pancakeswap/sdk'\nimport { warningSeverity } from 'utils/exchange'\nimport { ONE_BIPS } from 'config/constants/exchange'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Button, Text, useModal } from '@pancakeswap/uikit'\nimport { Currency, CurrencyAmount, Trade, TradeType } from '@pancakeswap/sdk'\n\nimport { GreyCard } from 'components/Card'\nimport { CommitButton } from 'components/CommitButton'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { WrapType } from 'hooks/useWrapCallback'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport { ApprovalState } from 'hooks/useApproveCallback'\nimport CircleLoader from 'components/Loader/CircleLoader'\nimport { Field } from 'state/swap/actions'\nimport SettingsModal, { withCustomOnDismiss } from 'components/Menu/GlobalSettings/SettingsModal'\nimport { SettingsMode } from 'components/Menu/GlobalSettings/types'\nimport { useCallback, useEffect, useState } from 'react'\nimport Column from 'components/Layout/Column'\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport { BIG_INT_ZERO } from 'config/constants/exchange'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/exchange'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport { useSwapCallArguments } from 'hooks/useSwapCallArguments'\n\nimport ConfirmSwapModal from './ConfirmSwapModal'\nimport ProgressSteps from './ProgressSteps'\nimport confirmPriceImpactWithoutFee from './confirmPriceImpactWithoutFee'\nimport { SwapCallbackError } from './styleds'\n\nconst SettingsModalWithCustomDismiss = withCustomOnDismiss(SettingsModal)\n\ninterface SwapCommitButtonPropsType {\n  swapIsUnsupported: boolean\n  account: string\n  showWrap: boolean\n  wrapInputError: string\n  onWrap: () => Promise<void>\n  wrapType: WrapType\n  approval: ApprovalState\n  approveCallback: () => Promise<void>\n  approvalSubmitted: boolean\n  currencies: {\n    INPUT?: Currency\n    OUTPUT?: Currency\n  }\n  isExpertMode: boolean\n  trade: Trade<Currency, Currency, TradeType>\n  swapInputError: string\n  currencyBalances: {\n    INPUT?: CurrencyAmount<Currency>\n    OUTPUT?: CurrencyAmount<Currency>\n  }\n  recipient: string\n  allowedSlippage: number\n  parsedIndepentFieldAmount: CurrencyAmount<Currency>\n  onUserInput: (field: Field, typedValue: string) => void\n}\n\nexport default function SwapCommitButton({\n  swapIsUnsupported,\n  account,\n  showWrap,\n  wrapInputError,\n  onWrap,\n  wrapType,\n  approval,\n  approveCallback,\n  approvalSubmitted,\n  currencies,\n  isExpertMode,\n  trade,\n  swapInputError,\n  currencyBalances,\n  recipient,\n  allowedSlippage,\n  parsedIndepentFieldAmount,\n  onUserInput,\n}: SwapCommitButtonPropsType) {\n  const { t } = useTranslation()\n  const [singleHopOnly] = useUserSingleHopOnly()\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n  // the callback to execute the swap\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipient)\n\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    recipient,\n    swapCalls,\n  )\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // Handlers\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash, setSwapState])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash, setSwapState])\n\n  // End Handlers\n\n  // Modals\n  const [indirectlyOpenConfirmModalState, setIndirectlyOpenConfirmModalState] = useState(false)\n\n  const [onPresentSettingsModal] = useModal(\n    <SettingsModalWithCustomDismiss\n      customOnDismiss={() => setIndirectlyOpenConfirmModalState(true)}\n      mode={SettingsMode.SWAP_LIQUIDITY}\n    />,\n  )\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      currencyBalances={currencyBalances}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n      openSettingModal={onPresentSettingsModal}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  // End Modals\n\n  const onSwapHandler = useCallback(() => {\n    if (isExpertMode) {\n      handleSwap()\n    } else {\n      setSwapState({\n        tradeToConfirm: trade,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n      })\n      onPresentConfirmModal()\n    }\n  }, [isExpertMode, handleSwap, onPresentConfirmModal, trade])\n\n  // useEffect\n  useEffect(() => {\n    if (indirectlyOpenConfirmModalState) {\n      setIndirectlyOpenConfirmModalState(false)\n      setSwapState((state) => ({\n        ...state,\n        swapErrorMessage: undefined,\n      }))\n      onPresentConfirmModal()\n    }\n  }, [indirectlyOpenConfirmModalState, onPresentConfirmModal, setSwapState])\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  if (swapIsUnsupported) {\n    return (\n      <Button width=\"100%\" disabled>\n        {t('Unsupported Asset')}\n      </Button>\n    )\n  }\n\n  if (!account) {\n    return <ConnectWalletButton width=\"100%\" />\n  }\n\n  if (showWrap) {\n    return (\n      <CommitButton width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n        {wrapInputError ?? (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n      </CommitButton>\n    )\n  }\n\n  const noRoute = !trade?.route\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedIndepentFieldAmount?.greaterThan(BIG_INT_ZERO),\n  )\n\n  if (noRoute && userHasSpecifiedInputOutput) {\n    return (\n      <GreyCard style={{ textAlign: 'center', padding: '0.75rem' }}>\n        <Text color=\"textSubtle\">{t('Insufficient liquidity for this trade.')}</Text>\n        {singleHopOnly && <Text color=\"textSubtle\">{t('Try enabling multi-hop trades.')}</Text>}\n      </GreyCard>\n    )\n  }\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const isValid = !swapInputError\n\n  if (showApproveFlow) {\n    return (\n      <>\n        <RowBetween>\n          <CommitButton\n            variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n            onClick={approveCallback}\n            disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n            width=\"48%\"\n          >\n            {approval === ApprovalState.PENDING ? (\n              <AutoRow gap=\"6px\" justify=\"center\">\n                {t('Enabling')} <CircleLoader stroke=\"white\" />\n              </AutoRow>\n            ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n              t('Enabled')\n            ) : (\n              t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n            )}\n          </CommitButton>\n          <CommitButton\n            variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n            onClick={() => {\n              onSwapHandler()\n            }}\n            width=\"48%\"\n            id=\"swap-button\"\n            disabled={!isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)}\n          >\n            {priceImpactSeverity > 3 && !isExpertMode\n              ? t('Price Impact High')\n              : priceImpactSeverity > 2\n              ? t('Swap Anyway')\n              : t('Swap')}\n          </CommitButton>\n        </RowBetween>\n        <Column style={{ marginTop: '1rem' }}>\n          <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n        </Column>\n        {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <CommitButton\n        variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n        onClick={() => {\n          onSwapHandler()\n        }}\n        id=\"swap-button\"\n        width=\"100%\"\n        disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n      >\n        {swapInputError ||\n          (priceImpactSeverity > 3 && !isExpertMode\n            ? t('Price Impact Too High')\n            : priceImpactSeverity > 2\n            ? t('Swap Anyway')\n            : t('Swap'))}\n      </CommitButton>\n\n      {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n    </>\n  )\n}\n","import { SetStateAction, useCallback, useEffect, useState, Dispatch, useMemo } from 'react'\nimport { Currency, CurrencyAmount, Percent } from '@pancakeswap/sdk'\nimport { Button, ArrowDownIcon, Box, Skeleton, Swap as SwapUI, Message, MessageText } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { useSwapActionHandlers } from 'state/swap/useSwapActionHandlers'\nimport AccessRisk from 'views/Swap/components/AccessRisk'\n\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport { CommonBasesType } from 'components/SearchModal/types'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\n\nimport { Field } from 'state/swap/actions'\nimport { useDerivedSwapInfo, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance } from 'state/user/hooks'\n\nimport replaceBrowserHistory from '@pancakeswap/utils/replaceBrowserHistory'\nimport { currencyId } from 'utils/currencyId'\n\nimport CurrencyInputHeader from './CurrencyInputHeader'\nimport SwapCommitButton from './SwapCommitButton'\nimport useWarningImport from '../hooks/useWarningImport'\nimport useRefreshBlockNumberID from '../hooks/useRefreshBlockNumber'\nimport AddressInputPanel from './AddressInputPanel'\nimport AdvancedSwapDetailsDropdown from './AdvancedSwapDetailsDropdown'\nimport { ArrowWrapper, Wrapper } from './styleds'\nimport { useStableFarms } from '../StableSwap/hooks/useStableConfig'\nimport { isAddress } from '../../../utils'\n\ninterface SwapForm {\n  isChartExpanded: boolean\n  isChartDisplayed: boolean\n  setIsChartDisplayed: Dispatch<SetStateAction<boolean>>\n}\n\nexport default function SwapForm({ setIsChartDisplayed, isChartDisplayed, isAccessTokenSupported }) {\n  const { t } = useTranslation()\n  const { refreshBlockNumber, isLoading } = useRefreshBlockNumberID()\n  const stableFarms = useStableFarms()\n  const warningSwapHandler = useWarningImport()\n\n  const { account, chainId } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state & price data\n  const {\n    independentField,\n    typedValue,\n    recipient,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const hasStableSwapAlternative = useMemo(() => {\n    return stableFarms.some((stableFarm) => {\n      const checkSummedToken0 = isAddress(stableFarm?.token0.address)\n      const checkSummedToken1 = isAddress(stableFarm?.token1.address)\n      return (\n        (checkSummedToken0 === inputCurrencyId || checkSummedToken0 === outputCurrencyId) &&\n        (checkSummedToken1 === outputCurrencyId || checkSummedToken1 === outputCurrencyId)\n      )\n    })\n  }, [stableFarms, inputCurrencyId, outputCurrencyId])\n\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.INPUT]: inputCurrency ?? undefined,\n      [Field.OUTPUT]: outputCurrency ?? undefined,\n    }),\n    [inputCurrency, outputCurrency],\n  )\n\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    inputError: swapInputError,\n  } = useDerivedSwapInfo(independentField, typedValue, inputCurrency, outputCurrency, recipient)\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage, chainId)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount<Currency> | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  const handleInputSelect = useCallback(\n    (currencyInput) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, currencyInput)\n\n      warningSwapHandler(currencyInput)\n\n      replaceBrowserHistory('inputCurrency', currencyId(currencyInput))\n    },\n    [onCurrencySelection, warningSwapHandler],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (currencyOutput) => {\n      onCurrencySelection(Field.OUTPUT, currencyOutput)\n      warningSwapHandler(currencyOutput)\n\n      replaceBrowserHistory('outputCurrency', currencyId(currencyOutput))\n    },\n\n    [onCurrencySelection, warningSwapHandler],\n  )\n\n  const handlePercentInput = useCallback(\n    (percent) => {\n      if (maxAmountInput) {\n        onUserInput(Field.INPUT, maxAmountInput.multiply(new Percent(percent, 100)).toExact())\n      }\n    },\n    [maxAmountInput, onUserInput],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const hasAmount = Boolean(parsedAmount)\n\n  const onRefreshPrice = useCallback(() => {\n    if (hasAmount) {\n      refreshBlockNumber()\n    }\n  }, [hasAmount, refreshBlockNumber])\n\n  return (\n    <>\n      <>\n        <CurrencyInputHeader\n          title={t('Swap')}\n          subtitle={t('Trade tokens in an instant')}\n          setIsChartDisplayed={setIsChartDisplayed}\n          isChartDisplayed={isChartDisplayed}\n          hasAmount={hasAmount}\n          onRefreshPrice={onRefreshPrice}\n        />\n        <Wrapper id=\"swap-page\" style={{ minHeight: '412px' }}>\n          <AutoColumn gap=\"sm\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              showQuickInputButton\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onPercentInput={handlePercentInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n              showCommonBases\n              commonBasesType={CommonBasesType.SWAP_LIMITORDER}\n            />\n\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <SwapUI.SwitchButton\n                  onClick={() => {\n                    setApprovalSubmitted(false) // reset 2 step UI for approvals\n                    onSwitchTokens()\n                    replaceBrowserHistory('inputCurrency', outputCurrencyId)\n                    replaceBrowserHistory('outputCurrency', inputCurrencyId)\n                  }}\n                />\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n              showCommonBases\n              commonBasesType={CommonBasesType.SWAP_LIMITORDER}\n            />\n\n            <Box style={{ display: isAccessTokenSupported ? 'block' : 'none' }}>\n              <AccessRisk inputCurrency={currencies[Field.INPUT]} outputCurrency={currencies[Field.OUTPUT]} />\n            </Box>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <SwapUI.Info\n                price={\n                  Boolean(trade) && (\n                    <>\n                      <SwapUI.InfoLabel>{t('Price')}</SwapUI.InfoLabel>\n                      {isLoading ? (\n                        <Skeleton width=\"100%\" ml=\"8px\" height=\"24px\" />\n                      ) : (\n                        <SwapUI.TradePrice price={trade?.executionPrice} />\n                      )}\n                    </>\n                  )\n                }\n                allowedSlippage={allowedSlippage}\n              />\n            )}\n          </AutoColumn>\n          {hasStableSwapAlternative && (\n            <AutoColumn>\n              <Message variant=\"warning\" my=\"16px\">\n                <MessageText>{t('Trade stablecoins in StableSwap with lower slippage and trading fees!')}</MessageText>\n              </Message>\n            </AutoColumn>\n          )}\n          <Box mt=\"0.25rem\">\n            <SwapCommitButton\n              swapIsUnsupported={swapIsUnsupported}\n              account={account}\n              showWrap={showWrap}\n              wrapInputError={wrapInputError}\n              onWrap={onWrap}\n              wrapType={wrapType}\n              parsedIndepentFieldAmount={parsedAmounts[independentField]}\n              approval={approval}\n              approveCallback={approveCallback}\n              approvalSubmitted={approvalSubmitted}\n              currencies={currencies}\n              isExpertMode={isExpertMode}\n              trade={trade}\n              swapInputError={swapInputError}\n              currencyBalances={currencyBalances}\n              recipient={recipient}\n              allowedSlippage={allowedSlippage}\n              onUserInput={onUserInput}\n            />\n          </Box>\n        </Wrapper>\n        {!swapIsUnsupported ? (\n          trade && <AdvancedSwapDetailsDropdown trade={trade} />\n        ) : (\n          <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n        )}\n      </>\n    </>\n  )\n}\n","import { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon, QuestionHelper } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Field } from 'state/swap/actions'\nimport { computeTradePriceBreakdown, formatExecutionPrice, warningSeverity } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TOTAL_FEE, LP_HOLDERS_FEE, TREASURY_FEE, BUYBACK_FEE } from 'config/constants/info'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  onConfirm,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  onConfirm: () => void\n  swapErrorMessage?: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  const totalFeePercent = `${(TOTAL_FEE * 100).toFixed(2)}%`\n  const lpHoldersFeePercent = `${(LP_HOLDERS_FEE * 100).toFixed(2)}%`\n  const treasuryFeePercent = `${(TREASURY_FEE * 100).toFixed(4)}%`\n  const buyBackFeePercent = `${(BUYBACK_FEE * 100).toFixed(4)}%`\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: totalFeePercent })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: lpHoldersFeePercent })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: treasuryFeePercent })}</Text>\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: buyBackFeePercent })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 || (trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance)\n            ? t('Swap Anyway')\n            : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import { useMemo } from 'react'\nimport { Trade, TradeType, CurrencyAmount, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/exchange'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  slippageAdjustedAmounts,\n  isEnoughInputBalance,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n  allowedSlippage,\n}: {\n  trade: Trade<Currency, Currency, TradeType>\n  slippageAdjustedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  isEnoughInputBalance: boolean\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n  allowedSlippage: number\n}) {\n  const { t } = useTranslation()\n\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const inputTextColor =\n    showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT && isEnoughInputBalance\n      ? 'primary'\n      : trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance\n      ? 'failure'\n      : 'text'\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least or the transaction will revert.')\n      : t('Input is estimated. You will sell at most or the transaction will revert.')\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText fontSize=\"24px\" color={inputTextColor}>\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <RowFixed style={{ width: '100%' }}>\n          <Text color=\"secondary\" bold textTransform=\"uppercase\">\n            {t('Slippage Tolerance')}\n          </Text>\n          <Text bold color=\"primary\" ml=\"auto\" textAlign=\"end\">\n            {`${allowedSlippage / 100}%`}\n          </Text>\n        </RowFixed>\n        {trade.tradeType === TradeType.EXACT_OUTPUT && !isEnoughInputBalance && (\n          <Text small color=\"failure\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t('Insufficient input token balance. Your transaction may fail.')}\n          </Text>\n        )}\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import { Fragment, memo } from 'react'\nimport { Trade, Currency, TradeType } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade<Currency, Currency, TradeType> }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          <Fragment key={token.address}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport replaceBrowserHistory from '@pancakeswap/utils/replaceBrowserHistory'\n\nexport enum SwapType {\n  SWAP,\n  STABLE_SWAP,\n}\n\nconst Wrapper = styled.div`\n  & > div {\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.input};\n    border: 0;\n  }\n  & button {\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.input};\n    border-radius: 20px 20px 0 0;\n  }\n`\n\nexport default function SwapTab({ children, showStable }) {\n  const { t } = useTranslation()\n  const [swapTypeState, setSwapType] = useState(SwapType.SWAP)\n  const { theme } = useTheme()\n\n  if (showStable) {\n    return (\n      <>\n        <Wrapper>\n          <ButtonMenu\n            activeIndex={swapTypeState}\n            onItemClick={() => {\n              setSwapType((state) => (state === SwapType.SWAP ? SwapType.STABLE_SWAP : SwapType.SWAP))\n              replaceBrowserHistory('inputCurrency', null)\n              replaceBrowserHistory('outputCurrency', null)\n            }}\n          >\n            {[t('Swap'), t('StableSwap')].map((content, idx) => (\n              <ButtonMenuItem\n                key={content}\n                style={{\n                  color: idx === swapTypeState ? theme.colors.text : theme.colors.textSubtle,\n                  backgroundColor: idx === swapTypeState ? theme.card.background : theme.colors.input,\n                }}\n              >\n                {content}\n              </ButtonMenuItem>\n            ))}\n          </ButtonMenu>\n        </Wrapper>\n        {children(swapTypeState)}\n      </>\n    )\n  }\n\n  return children(SwapType.SWAP)\n}\n","import { useState } from 'react'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<React.PropsWithChildren<AcknowledgementProps>> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Text, Link, LinkExternal } from '@pancakeswap/uikit'\n\nconst BTTWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t(\n          'Please note that this is the old BTT token, which has been swapped to the new BTT tokens in the following ratio:',\n        )}\n      </Text>\n      <Text>1 BTT (OLD) = 1,000 BTT (NEW)</Text>\n      <Text mb=\"8px\">\n        {t('Trade the new BTT token')}{' '}\n        <Link\n          style={{ display: 'inline' }}\n          href=\"https://pancakeswap.finance/swap?outputCurrency=0x352Cb5E19b12FC216548a2677bD0fce83BaE434B\"\n        >\n          {t('here')}\n        </Link>\n      </Text>\n      <LinkExternal href=\"https://medium.com/@BitTorrent/tutorial-how-to-swap-bttold-to-btt-453264d7142\">\n        {t('For more details on the swap, please refer here.')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default BTTWarning\n","import { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liquidity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Text, Link } from '@pancakeswap/uikit'\n\nconst CcarWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t('Crypto Cars (CCAR) has been migrated to')}{' '}\n        <Link\n          style={{ display: 'inline' }}\n          external\n          href=\"https://bscscan.com/token/0x322e5015Cc464Ada7f99dE7131CE494dE1834396\"\n        >\n          {t('a new contract address.')}\n        </Link>{' '}\n        {t(\n          'Trading on the old address may result in the complete loss of your assets. For more information please refer to',\n        )}{' '}\n        <Link style={{ display: 'inline' }} external href=\"https://t.me/Crypto_Cars_Official/465037\">\n          {t('the announcement.')}\n        </Link>\n      </Text>\n    </>\n  )\n}\n\nexport default CcarWarning\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst FREEWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t(\n          'Risk Warning: This token is subject to high price risk. Please do your own research before trading this token. Please also note that as of 24 June 2022 there is also a reflection fee for every transfer of FREE ranging from 2.5 to 5% per trade/transfer.',\n        )}\n      </Text>\n    </>\n  )\n}\n\nexport default FREEWarning\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Text, Link } from '@pancakeswap/uikit'\n\nconst ItamWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>\n        {t('ITAM has been rebranded as ITAM CUBE.')}{' '}\n        <Link style={{ display: 'inline' }} external href=\"https://itam.network/swap\">\n          {t('Please proceed to ITAM bridge to conduct a one-way swap of your ITAM tokens.')}\n        </Link>{' '}\n        {t('All transfers of the old ITAM token will be disabled after the swap.')}\n      </Text>\n    </>\n  )\n}\n\nexport default ItamWarning\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst RugPullWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('Suspicious rugpull token')}</Text>\n    </>\n  )\n}\n\nexport default RugPullWarning\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Text, Link } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  // Break translation sentences into pieces because the current translation approach doesn't support Link interpolation.\n  return (\n    <>\n      <Text>\n        {t('SAFEMOON has been migrated to')}{' '}\n        <Link\n          style={{ display: 'inline' }}\n          external\n          href=\"https://bscscan.com/address/0x42981d0bfbAf196529376EE702F2a9Eb9092fcB5\"\n        >\n          {t('a new contract address.')}\n        </Link>{' '}\n        {t(\n          'Trading on the old address may result in the complete loss of your assets. For more information please refer to',\n        )}{' '}\n        <Link style={{ display: 'inline' }} external href=\"https://twitter.com/safemoon/status/1477770592031887360\">\n          {t(\"Safemoon's announcement\")}.\n        </Link>\n      </Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { WrappedTokenInfo } from '@pancakeswap/token-lists'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport ItamWarning from './ItamWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\nimport CcarWarning from './CcarWarning'\nimport BTTWarning from './BTTWarning'\nimport RugPullWarning from './RugPullWarning'\nimport FREEWarning from './FREEWarning'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\nconst SwapWarningModal: React.FC<React.PropsWithChildren<SwapWarningModalProps>> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n    [SwapWarningTokensConfig.itam.address]: {\n      symbol: SwapWarningTokensConfig.itam.symbol,\n      component: <ItamWarning />,\n    },\n    [SwapWarningTokensConfig.ccar.address]: {\n      symbol: SwapWarningTokensConfig.ccar.symbol,\n      component: <CcarWarning />,\n    },\n    [SwapWarningTokensConfig.bttold.address]: {\n      symbol: SwapWarningTokensConfig.bttold.symbol,\n      component: <BTTWarning />,\n    },\n    [SwapWarningTokensConfig.pokemoney.address]: {\n      symbol: SwapWarningTokensConfig.pokemoney.symbol,\n      component: <RugPullWarning />,\n    },\n    [SwapWarningTokensConfig.free.address]: {\n      symbol: SwapWarningTokensConfig.free.symbol,\n      component: <FREEWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer $minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradientCardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import { useCallback, useMemo, memo } from 'react'\nimport { Currency, Trade, TradeType } from '@pancakeswap/sdk'\nimport { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { Field } from 'state/swap/actions'\nimport { computeSlippageAdjustedAmounts } from 'utils/exchange'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\nimport StableSwapModalHeader from '../StableSwap/components/StableSwapModalHeader'\nimport StableSwapModalFooter from '../StableSwap/components/StableSwapModalFooter'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(\n  tradeA: Trade<Currency, Currency, TradeType>,\n  tradeB: Trade<Currency, Currency, TradeType>,\n): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nconst TransactionConfirmSwapContent = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  recipient,\n  currencyBalances,\n  isStable,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n\n  const isEnoughInputBalance = useMemo(() => {\n    if (trade?.tradeType !== TradeType.EXACT_OUTPUT) return null\n\n    const isInputBalanceExist = !!(currencyBalances && currencyBalances[Field.INPUT])\n    const isInputBalanceBNB = isInputBalanceExist && currencyBalances[Field.INPUT].currency.isNative\n    const inputCurrencyAmount = isInputBalanceExist\n      ? isInputBalanceBNB\n        ? maxAmountSpend(currencyBalances[Field.INPUT])\n        : currencyBalances[Field.INPUT]\n      : null\n    return inputCurrencyAmount && slippageAdjustedAmounts && slippageAdjustedAmounts[Field.INPUT]\n      ? inputCurrencyAmount.greaterThan(slippageAdjustedAmounts[Field.INPUT]) ||\n          inputCurrencyAmount.equalTo(slippageAdjustedAmounts[Field.INPUT])\n      : false\n  }, [currencyBalances, trade, slippageAdjustedAmounts])\n\n  const modalHeader = useCallback(() => {\n    const SwapModalHead = isStable ? StableSwapModalHeader : SwapModalHeader\n\n    return trade ? (\n      <SwapModalHead\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        slippageAdjustedAmounts={slippageAdjustedAmounts}\n        isEnoughInputBalance={isEnoughInputBalance}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [\n    allowedSlippage,\n    onAcceptChanges,\n    recipient,\n    showAcceptChanges,\n    trade,\n    slippageAdjustedAmounts,\n    isEnoughInputBalance,\n    isStable,\n  ])\n\n  const modalBottom = useCallback(() => {\n    const SwapModalF = isStable ? StableSwapModalFooter : SwapModalFooter\n\n    return trade ? (\n      <SwapModalF\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        slippageAdjustedAmounts={slippageAdjustedAmounts}\n        isEnoughInputBalance={isEnoughInputBalance}\n      />\n    ) : null\n  }, [onConfirm, showAcceptChanges, trade, isEnoughInputBalance, slippageAdjustedAmounts, isStable])\n\n  return <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n}\n\nexport default memo(TransactionConfirmSwapContent)\n","import { Percent } from '@pancakeswap/sdk'\nimport { ContextApi } from '@pancakeswap/localization'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from 'config/constants/exchange'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\n          {\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            word: confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\n        {\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import { ErrorIcon, Flex, Text } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport styled, { css } from 'styled-components'\n\nexport const Wrapper = styled(Flex)`\n  position: relative;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure33}`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure33}`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning33}`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { ChainId } from '@pancakeswap/sdk'\nimport { ACCESS_RISK_API } from 'config/constants/endpoints'\n\nexport enum TOKEN_RISK {\n  'Low' = 'Low',\n  'Medium' = 'Medium',\n  'High' = 'High',\n}\n\nexport const TokenRiskPhases = {\n  0: TOKEN_RISK.Low,\n  1: TOKEN_RISK.Medium,\n  2: TOKEN_RISK.Medium,\n  3: TOKEN_RISK.Medium,\n  4: TOKEN_RISK.High,\n  5: TOKEN_RISK.High,\n}\n\nexport interface RiskTokenInfo {\n  address: string\n  chainId: ChainId\n  isSuccess: boolean\n  riskLevel: TOKEN_RISK\n  riskResult: string\n  scannedTs: number\n  riskLevelDescription: string\n}\n\nconst fetchRiskApi = async (address: string, chainId: number) => {\n  const response = await fetch(ACCESS_RISK_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address,\n      chain_id: chainId,\n    }),\n  })\n\n  const result = await response.json()\n  return result\n}\n\nexport const fetchRiskToken = async (address: string, chainId: number): Promise<RiskTokenInfo> => {\n  try {\n    const riskApi = await fetchRiskApi(address, chainId)\n    // eslint-disable-next-line camelcase\n    const { risk_result, scanned_ts, risk_level, risk_level_description } = riskApi.data\n\n    return {\n      isSuccess: true,\n      address,\n      chainId,\n      riskLevel: TokenRiskPhases[risk_level],\n      riskResult: risk_result,\n      scannedTs: scanned_ts,\n      riskLevelDescription: risk_level_description,\n    }\n  } catch (error) {\n    console.error('Fetch Risk Token error: ', error)\n    return {\n      isSuccess: false,\n      address: '',\n      chainId: ChainId.BSC,\n      riskLevel: TokenRiskPhases[0],\n      riskResult: '',\n      scannedTs: 0,\n      riskLevelDescription: '',\n    }\n  }\n}\n","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useState, useCallback, useEffect } from 'react'\nimport { useSWRConfig } from 'swr'\n\nexport const useRefreshBlockNumber = () => {\n  const [isLoading, setFetch] = useState(false)\n\n  const refreshBlockNumber = useCallback(() => {\n    if (!isLoading) {\n      setFetch(true)\n    }\n  }, [isLoading])\n\n  const { mutate } = useSWRConfig()\n  const { chainId } = useActiveWeb3React()\n\n  useEffect(() => {\n    if (!isLoading) return\n\n    mutate(['blockNumberFetcher', chainId])\n\n    // setTimeout is used to demonstrate the loading\n    // because the real loading state occurs on multicall state\n    // we don't know when the fetch is finished.\n    setTimeout(() => setFetch(false), 500)\n  }, [mutate, isLoading, chainId])\n\n  return { refreshBlockNumber, isLoading }\n}\n\nexport default useRefreshBlockNumber\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { useModal } from '@pancakeswap/uikit'\n\nimport { useRouter } from 'next/router'\n\nimport shouldShowSwapWarning from 'utils/shouldShowSwapWarning'\n\nimport { useCurrency, useAllTokens } from 'hooks/Tokens'\nimport { useDefaultsFromURLSearch } from 'state/swap/hooks'\nimport ImportTokenWarningModal from 'components/ImportTokenWarningModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport SwapWarningModal from '../components/SwapWarningModal'\n\nexport default function useWarningImport() {\n  const router = useRouter()\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const { chainId } = useActiveWeb3React()\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c?.isToken) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  const defaultTokens = useAllTokens()\n\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens) && token.chainId === chainId\n    })\n\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />, false)\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => router.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const swapWarningHandler = useCallback((currencyInput) => {\n    const showSwapWarning = shouldShowSwapWarning(currencyInput)\n    if (showSwapWarning) {\n      setSwapWarningCurrency(currencyInput)\n    } else {\n      setSwapWarningCurrency(null)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  return swapWarningHandler\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { ChainId, Currency } from '@pancakeswap/sdk'\nimport { Box, Flex, BottomDrawer, useMatchBreakpoints, Swap as SwapUI } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { EXCHANGE_DOCS_URLS } from 'config/constants'\nimport { useDefaultsFromURLSearch } from 'state/limitOrders/hooks'\nimport { AppBody } from 'components/App'\n\nimport { useCurrency } from '../../hooks/Tokens'\nimport { Field } from '../../state/swap/actions'\nimport { useSwapState, useSingleTokenSwapInfo } from '../../state/swap/hooks'\nimport { useExchangeChartManager } from '../../state/user/hooks'\nimport Page from '../Page'\nimport PriceChartContainer from './components/Chart/PriceChartContainer'\n\nimport SwapForm from './components/SwapForm'\nimport StableSwapFormContainer from './StableSwap'\nimport { StyledInputCurrencyWrapper, StyledSwapContainer } from './styles'\nimport SwapTab, { SwapType } from './components/SwapTab'\n\nconst CHART_SUPPORT_CHAIN_IDS = [ChainId.BSC]\nexport const ACCESS_TOKEN_SUPPORT_CHAIN_IDS = [ChainId.BSC]\n\nconst STABLE_SUPPORT_CHAIN_IDS = [ChainId.BSC_TESTNET, ChainId.BSC]\n\nexport default function Swap() {\n  const { isMobile } = useMatchBreakpoints()\n  const [isChartExpanded, setIsChartExpanded] = useState(false)\n  const [userChartPreference, setUserChartPreference] = useExchangeChartManager(isMobile)\n  const [isChartDisplayed, setIsChartDisplayed] = useState(userChartPreference)\n\n  useDefaultsFromURLSearch()\n\n  useEffect(() => {\n    setUserChartPreference(isChartDisplayed)\n  }, [isChartDisplayed, setUserChartPreference])\n\n  const { chainId } = useActiveWeb3React()\n\n  // swap state & price data\n  const {\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  const singleTokenPrice = useSingleTokenSwapInfo(inputCurrencyId, inputCurrency, outputCurrencyId, outputCurrency)\n\n  const isChartSupported = useMemo(\n    () =>\n      // avoid layout shift, by default showing\n      !chainId || CHART_SUPPORT_CHAIN_IDS.includes(chainId),\n    [chainId],\n  )\n\n  const isStableSupported = useMemo(() => !chainId || STABLE_SUPPORT_CHAIN_IDS.includes(chainId), [chainId])\n\n  const isAccessTokenSupported = useMemo(() => ACCESS_TOKEN_SUPPORT_CHAIN_IDS.includes(chainId), [chainId])\n\n  return (\n    <Page removePadding={isChartExpanded} hideFooterOnDesktop={isChartExpanded}>\n      <Flex width={['328px', , '100%']} justifyContent=\"center\" position=\"relative\">\n        {!isMobile && isChartSupported && (\n          <PriceChartContainer\n            inputCurrencyId={inputCurrencyId}\n            inputCurrency={currencies[Field.INPUT]}\n            outputCurrencyId={outputCurrencyId}\n            outputCurrency={currencies[Field.OUTPUT]}\n            isChartExpanded={isChartExpanded}\n            setIsChartExpanded={setIsChartExpanded}\n            isChartDisplayed={isChartDisplayed}\n            currentSwapPrice={singleTokenPrice}\n          />\n        )}\n        {isChartSupported && (\n          <BottomDrawer\n            content={\n              <PriceChartContainer\n                inputCurrencyId={inputCurrencyId}\n                inputCurrency={currencies[Field.INPUT]}\n                outputCurrencyId={outputCurrencyId}\n                outputCurrency={currencies[Field.OUTPUT]}\n                isChartExpanded={isChartExpanded}\n                setIsChartExpanded={setIsChartExpanded}\n                isChartDisplayed={isChartDisplayed}\n                currentSwapPrice={singleTokenPrice}\n                isMobile\n              />\n            }\n            isOpen={isChartDisplayed}\n            setIsOpen={setIsChartDisplayed}\n          />\n        )}\n        <Flex flexDirection=\"column\">\n          <StyledSwapContainer $isChartExpanded={isChartExpanded}>\n            <StyledInputCurrencyWrapper mt={isChartExpanded ? '24px' : '0'}>\n              <AppBody>\n                <SwapTab showStable={isStableSupported}>\n                  {(swapTypeState) =>\n                    swapTypeState === SwapType.STABLE_SWAP ? (\n                      <StableSwapFormContainer\n                        setIsChartDisplayed={setIsChartDisplayed}\n                        isChartDisplayed={isChartDisplayed}\n                      />\n                    ) : (\n                      <SwapForm\n                        isAccessTokenSupported={isAccessTokenSupported}\n                        setIsChartDisplayed={setIsChartDisplayed}\n                        isChartDisplayed={isChartDisplayed}\n                      />\n                    )\n                  }\n                </SwapTab>\n              </AppBody>\n            </StyledInputCurrencyWrapper>\n          </StyledSwapContainer>\n          {isChartExpanded && (\n            <Box display={['none', null, null, 'block']} width=\"100%\" height=\"100%\">\n              <SwapUI.Footer variant=\"side\" helpUrl={EXCHANGE_DOCS_URLS} />\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </Page>\n  )\n}\n","import { Box, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const StyledSwapContainer = styled(Flex)<{ $isChartExpanded: boolean }>`\n  flex-shrink: 0;\n  height: fit-content;\n  padding: 0 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0 40px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    ${({ $isChartExpanded }) => ($isChartExpanded ? 'padding: 0 120px' : 'padding: 0 40px')};\n  }\n`\n\nexport const StyledInputCurrencyWrapper = styled(Box)`\n  width: 328px;\n`\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { AlertTheme } from \"./types\";\n\nexport const light: AlertTheme = {\n  background: lightColors.backgroundAlt,\n};\n\nexport const dark: AlertTheme = {\n  background: darkColors.backgroundAlt,\n};\n","import React, { useRef, useCallback } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport useDelayedUnmount from \"../../hooks/useDelayedUnmount\";\nimport { useMatchBreakpoints } from \"../../contexts\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\nimport getPortalRoot from \"../../util/getPortalRoot\";\nimport { Box } from \"../Box\";\nimport { IconButton } from \"../Button\";\nimport { Overlay } from \"../Overlay\";\nimport { CloseIcon } from \"../Svg\";\nimport { DrawerContainer } from \"./styles\";\n\ninterface BottomDrawerProps {\n  content: React.ReactNode;\n  isOpen: boolean;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst BottomDrawer: React.FC<React.PropsWithChildren<BottomDrawerProps>> = ({ content, isOpen, setIsOpen }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const shouldRender = useDelayedUnmount(isOpen, 350);\n  const { isMobile } = useMatchBreakpoints();\n\n  useOnClickOutside(\n    ref?.current,\n    useCallback(() => setIsOpen(false), [setIsOpen])\n  );\n\n  if (!shouldRender || !isMobile) {\n    return null;\n  }\n\n  const portal = getPortalRoot();\n\n  if (portal)\n    return createPortal(\n      <>\n        <Overlay isUnmounting={!isOpen} />\n        <DrawerContainer ref={ref} isUnmounting={!isOpen}>\n          <Box position=\"absolute\" right=\"16px\" top=\"0\">\n            <IconButton variant=\"text\" onClick={() => setIsOpen(false)}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n          {content}\n        </DrawerContainer>\n      </>,\n      portal\n    );\n  return null;\n};\n\nexport default BottomDrawer;\n","import { vars } from \"@pancakeswap/ui/css/vars.css\";\nimport { darkColors, lightColors } from \"../../theme/colors\";\nimport { CardTheme } from \"./types\";\n\nexport const light: CardTheme = {\n  background: lightColors.backgroundAlt,\n  boxShadow: vars.shadows.level1,\n  boxShadowActive: vars.shadows.active,\n  boxShadowSuccess: vars.shadows.success,\n  boxShadowWarning: vars.shadows.warning,\n  cardHeaderBackground: {\n    default: lightColors.gradientCardHeader,\n    blue: lightColors.gradientBlue,\n    bubblegum: lightColors.gradientBubblegum,\n    violet: lightColors.gradientViolet,\n  },\n  dropShadow: \"drop-shadow(0px 1px 4px rgba(25, 19, 38, 0.15))\",\n};\n\nexport const dark: CardTheme = {\n  background: darkColors.backgroundAlt,\n  boxShadow: vars.shadows.level1,\n  boxShadowActive: vars.shadows.active,\n  boxShadowSuccess: vars.shadows.success,\n  boxShadowWarning: vars.shadows.warning,\n  cardHeaderBackground: {\n    default: darkColors.gradientCardHeader,\n    blue: darkColors.gradientBlue,\n    bubblegum: lightColors.gradientBubblegum,\n    violet: darkColors.gradientViolet,\n  },\n  dropShadow: \"drop-shadow(0px 1px 4px rgba(25, 19, 38, 0.15))\",\n};\n","import React from \"react\";\nimport Link from \"./Link\";\nimport { LinkProps } from \"./types\";\nimport OpenNewIcon from \"../Svg/Icons/OpenNew\";\n\nconst LinkExternal: React.FC<React.PropsWithChildren<LinkProps>> = ({ children, ...props }) => {\n  return (\n    <Link external {...props}>\n      {children}\n      <OpenNewIcon color={props.color ? props.color : \"primary\"} ml=\"4px\" />\n    </Link>\n  );\n};\n\nexport default LinkExternal;\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { PancakeToggleTheme } from \"./types\";\n\nexport const light: PancakeToggleTheme = {\n  handleBackground: lightColors.backgroundAlt,\n  handleShadow: lightColors.textDisabled,\n};\n\nexport const dark: PancakeToggleTheme = {\n  handleBackground: darkColors.backgroundAlt,\n  handleShadow: darkColors.textDisabled,\n};\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { RadioTheme } from \"./types\";\n\nexport const light: RadioTheme = {\n  handleBackground: lightColors.backgroundAlt,\n};\n\nexport const dark: RadioTheme = {\n  handleBackground: darkColors.backgroundAlt,\n};\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M5 7C5 6.44772 4.55228 6 4 6C3.44772 6 3 6.44772 3 7V18C3 19.1046 3.89543 20 5 20H20C20.5523 20 21 19.5523 21 19C21 18.4477 20.5523 18 20 18H5V7Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19 17H7C6.44772 17 6 16.5523 6 16V12C6 11.4477 6.44772 11 7 11H10V10C10 9.44772 10.4477 9 11 9H14V7C14 6.44772 14.4477 6 15 6H19C19.5523 6 20 6.44772 20 7V16C20 16.5523 19.5523 17 19 17ZM16 8H18V15H16V8ZM12 15H14V11H12V15ZM10 13H8V15H10V13Z\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 23 22\" {...props}>\n      <path d=\"M21.5 1l-20 20\" strokeWidth={2} stroke=\"currentColor\" strokeLinecap=\"round\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.033 19H19.5a1 1 0 100-2H9.033l-2 2zm3-3H18.5a1 1 0 001-1V6.533l-2 2V14h-2v-3.467l-2 2V14h-1.467l-2 2zm.936-8H10.5a1 1 0 00-1 1v.469L10.969 8zm-2 2L5.5 13.469V11a1 1 0 011-1h2.469zM4.5 14.469l-2 2V6a1 1 0 012 0v8.469z\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.29006 15.88L13.1701 12L9.29006 8.12001C8.90006 7.73001 8.90006 7.10001 9.29006 6.71001C9.68006 6.32001 10.3101 6.32001 10.7001 6.71001L15.2901 11.3C15.6801 11.69 15.6801 12.32 15.2901 12.71L10.7001 17.3C10.3101 17.69 9.68006 17.69 9.29006 17.3C8.91006 16.91 8.90006 16.27 9.29006 15.88Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import * as React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 25 24\" {...props}>\n      <path d=\"M20.497 4.6l-.004-.028-.006-.036-.008-.033-.007-.03-.012-.032-.01-.03-.014-.028-.014-.03-.016-.027-.018-.03-.021-.028-.018-.024a.663.663 0 00-.044-.048v-.001a.66.66 0 00-.049-.044l-.024-.018-.028-.02-.03-.018-.026-.016-.03-.015c-.01-.004-.02-.01-.03-.013l-.03-.011-.03-.011-.031-.008-.033-.008-.035-.005-.03-.005A.684.684 0 0019.834 4h-4.667a.667.667 0 100 1.333h3.057l-4.862 4.862a.667.667 0 10.943.943l4.862-4.862v3.057a.667.667 0 101.333 0V4.667a.658.658 0 00-.003-.066zM10.696 12.861l-4.862 4.862v-3.057a.667.667 0 10-1.333 0v4.667l.003.066.005.029.005.035.008.033.008.03.01.032.012.03.013.029.015.03.016.027.017.029.021.028.018.024a.663.663 0 00.093.093l.024.018.029.021.029.018.026.016.03.014.03.014.03.01.031.012.03.007.033.008.036.006.029.004a.657.657 0 00.066.003h4.666a.667.667 0 000-1.333H6.777l4.862-4.862a.667.667 0 00-.943-.943z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M11 7H13V9H11V7ZM12 17C12.55 17 13 16.55 13 16V12C13 11.45 12.55 11 12 11C11.45 11 11 11.45 11 12V16C11 16.55 11.45 17 12 17ZM12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import * as React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 25 25\" {...props}>\n      <path d=\"M12.327 13.27c0-.01-.003-.019-.004-.028l-.005-.036-.009-.033-.007-.03-.011-.032-.011-.03-.014-.028-.014-.03c-.005-.01-.01-.019-.016-.027l-.018-.03-.021-.028-.018-.024a.692.692 0 00-.044-.049.674.674 0 00-.049-.044l-.024-.018-.028-.02-.03-.018-.026-.016-.03-.015c-.01-.005-.02-.01-.03-.013l-.03-.011-.03-.011-.031-.008-.033-.008-.035-.006-.03-.004a.689.689 0 00-.065-.003H6.997a.667.667 0 000 1.333h3.057l-4.862 4.862a.667.667 0 10.943.943l4.862-4.862v3.057a.667.667 0 001.333 0v-4.666a.689.689 0 00-.003-.066zM19.862 4.195L15 9.057V6a.667.667 0 10-1.333 0v4.667c0 .022.001.044.003.065l.005.03.005.035.008.033.008.03.01.032.012.03.013.029.015.03.016.027.017.029.021.028.018.024a.692.692 0 00.093.093l.024.018.028.021.03.018.027.015.03.015.029.014.03.01.031.012.03.007.033.008.036.006.029.004a.688.688 0 00.066.003H19A.667.667 0 0019 10h-3.057l4.862-4.862a.667.667 0 00-.943-.943z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 25\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.86 4.86003L21.65 7.65003C21.84 7.84003 21.84 8.16003 21.64 8.35003L18.85 11.14C18.54 11.46 18 11.24 18 10.79V9.00003H4C3.45 9.00003 3 8.55003 3 8.00003C3 7.45003 3.45 7.00003 4 7.00003H18V5.21003C18 4.76003 18.54 4.54003 18.86 4.86003ZM5.14001 19.14L2.35001 16.35C2.16001 16.16 2.16001 15.84 2.36001 15.65L5.15001 12.86C5.46001 12.54 6.00001 12.76 6.00001 13.21V15H20C20.55 15 21 15.45 21 16C21 16.55 20.55 17 20 17H6.00001V18.79C6.00001 19.24 5.46001 19.46 5.14001 19.14Z\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import useTooltip from \"../../hooks/useTooltip/useTooltip\";\nimport { BoxProps, Flex } from \"../Box\";\nimport { InfoIcon } from \"../Svg\";\n\ntype InfoTooltip = {\n  text: string;\n  iconColor?: string;\n} & BoxProps;\n\nconst InfoTooltip: React.FC<React.PropsWithChildren<InfoTooltip>> = ({ text, iconColor = \"textSubtle\", ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, {});\n  return (\n    <Flex {...props} alignItems=\"center\">\n      {tooltipVisible && tooltip}\n      <Flex ref={targetRef} alignItems=\"center\">\n        <InfoIcon color={iconColor} />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default InfoTooltip;\n","import { darkColors, lightColors } from \"../../theme/colors\";\n\nexport type ToggleTheme = {\n  handleBackground: string;\n};\n\nexport const light: ToggleTheme = {\n  handleBackground: lightColors.backgroundAlt,\n};\n\nexport const dark: ToggleTheme = {\n  handleBackground: darkColors.backgroundAlt,\n};\n","import { vars } from \"@pancakeswap/ui/css/vars.css\";\nimport { darkColors, lightColors } from \"../../theme/colors\";\nimport { TooltipTheme } from \"./types\";\n\nexport const light: TooltipTheme = {\n  background: lightColors.backgroundAlt,\n  text: lightColors.text,\n  boxShadow: vars.shadows.tooltip,\n};\n\nexport const dark: TooltipTheme = {\n  background: darkColors.backgroundAlt,\n  text: darkColors.text,\n  boxShadow: vars.shadows.tooltip,\n};\n","import { useState, useEffect } from \"react\";\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number): boolean => {\n  const [shouldRender, setShouldRender] = useState(false);\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n    if (isMounted && !shouldRender) {\n      setShouldRender(true);\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime);\n    }\n    return () => clearTimeout(timeoutId);\n  }, [isMounted, delayTime, shouldRender]);\n  return shouldRender;\n};\n\nexport default useDelayedUnmount;\n","import { useEffect } from \"react\";\n\nconst useOnClickOutside = (htmlNode: HTMLElement | null, handler: (event?: MouseEvent | TouchEvent) => void): void => {\n  useEffect(\n    () => {\n      if (htmlNode) {\n        const listener = (event: MouseEvent | TouchEvent) => {\n          // Do nothing if clicking ref's element or descendent elements\n          if (htmlNode.contains(event.target as Node)) {\n            return;\n          }\n          handler(event);\n        };\n        document.addEventListener(\"mousedown\", listener);\n        document.addEventListener(\"touchstart\", listener);\n        return () => {\n          document.removeEventListener(\"mousedown\", listener);\n          document.removeEventListener(\"touchstart\", listener);\n        };\n      }\n      return undefined;\n    },\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [htmlNode, handler]\n  );\n};\n\nexport default useOnClickOutside;\n","import styled from \"styled-components\";\nimport { m as Motion } from \"framer-motion\";\n\nexport const Arrow = styled.div`\n  &,\n  &::before {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    border-radius: 2px;\n    z-index: -1;\n  }\n\n  &::before {\n    content: \"\";\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.tooltip.background};\n  }\n`;\n\nexport const StyledTooltip = styled(Motion.div)`\n  padding: 16px;\n  font-size: 16px;\n  line-height: 130%;\n  border-radius: 16px;\n  max-width: 320px;\n  z-index: 101;\n  background: ${({ theme }) => theme.tooltip.background};\n  color: ${({ theme }) => theme.tooltip.text};\n  box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n\n  &[data-popper-placement^=\"top\"] > ${Arrow} {\n    bottom: -4px;\n  }\n\n  &[data-popper-placement^=\"bottom\"] > ${Arrow} {\n    top: -4px;\n  }\n\n  &[data-popper-placement^=\"left\"] > ${Arrow} {\n    right: -4px;\n  }\n\n  &[data-popper-placement^=\"right\"] > ${Arrow} {\n    left: -4px;\n  }\n`;\n","import { AnimatePresence, Variants, LazyMotion, domAnimation } from \"framer-motion\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePopper } from \"react-popper\";\nimport { DefaultTheme, ThemeProvider, useTheme } from \"styled-components\";\nimport { dark, light } from \"../../theme\";\nimport getPortalRoot from \"../../util/getPortalRoot\";\nimport isTouchDevice from \"../../util/isTouchDevice\";\nimport { Arrow, StyledTooltip } from \"./StyledTooltip\";\nimport { TooltipOptions, TooltipRefs } from \"./types\";\n\nconst animationVariants: Variants = {\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n};\n\nconst animationMap = {\n  initial: \"initial\",\n  animate: \"animate\",\n  exit: \"exit\",\n};\n\nconst invertTheme = (currentTheme: DefaultTheme) => {\n  if (currentTheme.isDark) {\n    return light;\n  }\n  return dark;\n};\n\nconst useTooltip = (content: React.ReactNode, options: TooltipOptions): TooltipRefs => {\n  const { isDark } = useTheme();\n  const {\n    placement = \"auto\",\n    trigger = \"hover\",\n    arrowPadding = 16,\n    tooltipPadding = { left: 16, right: 16 },\n    tooltipOffset = [0, 10],\n    hideTimeout = 100,\n  } = options;\n  const [targetElement, setTargetElement] = useState<HTMLElement | null>(null);\n  const [tooltipElement, setTooltipElement] = useState<HTMLElement | null>(null);\n  const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null);\n\n  const [visible, setVisible] = useState(false);\n  const isHoveringOverTooltip = useRef(false);\n  const hideTimeoutRef = useRef<number>();\n\n  const hideTooltip = useCallback(\n    (e: Event) => {\n      const hide = () => {\n        e.stopPropagation();\n        e.preventDefault();\n        setVisible(false);\n      };\n\n      if (trigger === \"hover\") {\n        if (hideTimeoutRef.current) {\n          window.clearTimeout(hideTimeoutRef.current);\n        }\n        if (e.target === tooltipElement) {\n          isHoveringOverTooltip.current = false;\n        }\n        if (!isHoveringOverTooltip.current) {\n          hideTimeoutRef.current = window.setTimeout(() => {\n            if (!isHoveringOverTooltip.current) {\n              hide();\n            }\n          }, hideTimeout);\n        }\n      } else {\n        hide();\n      }\n    },\n    [tooltipElement, trigger, hideTimeout]\n  );\n\n  const showTooltip = useCallback(\n    (e: Event) => {\n      e.stopPropagation();\n      e.preventDefault();\n      setVisible(true);\n      if (trigger === \"hover\") {\n        if (e.target === targetElement) {\n          // If we were about to close the tooltip and got back to it\n          // then prevent closing it.\n          clearTimeout(hideTimeoutRef.current);\n        }\n        if (e.target === tooltipElement) {\n          isHoveringOverTooltip.current = true;\n        }\n      }\n    },\n    [tooltipElement, targetElement, trigger]\n  );\n\n  const toggleTooltip = useCallback(\n    (e: Event) => {\n      e.stopPropagation();\n      setVisible(!visible);\n    },\n    [visible]\n  );\n\n  // Trigger = hover\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"hover\") return undefined;\n\n    if (isTouchDevice()) {\n      targetElement.addEventListener(\"touchstart\", showTooltip);\n      targetElement.addEventListener(\"touchend\", hideTooltip);\n    } else {\n      targetElement.addEventListener(\"mouseenter\", showTooltip);\n      targetElement.addEventListener(\"mouseleave\", hideTooltip);\n    }\n    return () => {\n      targetElement.removeEventListener(\"touchstart\", showTooltip);\n      targetElement.removeEventListener(\"touchend\", hideTooltip);\n      targetElement.removeEventListener(\"mouseenter\", showTooltip);\n      targetElement.removeEventListener(\"mouseleave\", showTooltip);\n    };\n  }, [trigger, targetElement, hideTooltip, showTooltip]);\n\n  // Keep tooltip open when cursor moves from the targetElement to the tooltip\n  useEffect(() => {\n    if (tooltipElement === null || trigger !== \"hover\") return undefined;\n\n    tooltipElement.addEventListener(\"mouseenter\", showTooltip);\n    tooltipElement.addEventListener(\"mouseleave\", hideTooltip);\n    return () => {\n      tooltipElement.removeEventListener(\"mouseenter\", showTooltip);\n      tooltipElement.removeEventListener(\"mouseleave\", hideTooltip);\n    };\n  }, [trigger, tooltipElement, hideTooltip, showTooltip]);\n\n  // Trigger = click\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"click\") return undefined;\n\n    targetElement.addEventListener(\"click\", toggleTooltip);\n\n    return () => targetElement.removeEventListener(\"click\", toggleTooltip);\n  }, [trigger, targetElement, visible, toggleTooltip]);\n\n  // Handle click outside\n  useEffect(() => {\n    if (trigger !== \"click\") return undefined;\n\n    const handleClickOutside = ({ target }: Event) => {\n      if (target instanceof Node) {\n        if (\n          tooltipElement != null &&\n          targetElement != null &&\n          !tooltipElement.contains(target) &&\n          !targetElement.contains(target)\n        ) {\n          setVisible(false);\n        }\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [trigger, targetElement, tooltipElement]);\n\n  // Trigger = focus\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"focus\") return undefined;\n\n    targetElement.addEventListener(\"focus\", showTooltip);\n    targetElement.addEventListener(\"blur\", hideTooltip);\n    return () => {\n      targetElement.removeEventListener(\"focus\", showTooltip);\n      targetElement.removeEventListener(\"blur\", hideTooltip);\n    };\n  }, [trigger, targetElement, showTooltip, hideTooltip]);\n\n  // On small screens Popper.js tries to squeeze the tooltip to available space without overflowing beyond the edge\n  // of the screen. While it works fine when the element is in the middle of the screen it does not handle well the\n  // cases when the target element is very close to the edge of the screen - no margin is applied between the tooltip\n  // and the screen edge.\n  // preventOverflow mitigates this behaviour, default 16px paddings on left and right solve the problem for all screen sizes\n  // that we support.\n  // Note that in the farm page where there are tooltips very close to the edge of the screen this padding works perfectly\n  // even on the iPhone 5 screen (320px wide), BUT in the storybook with the contrived example ScreenEdges example\n  // iPhone 5 behaves differently overflowing beyond the edge. All paddings are identical so I have no idea why it is,\n  // and fixing that seems like a very bad use of time.\n  const { styles, attributes } = usePopper(targetElement, tooltipElement, {\n    placement,\n    modifiers: [\n      {\n        name: \"arrow\",\n        options: { element: arrowElement, padding: arrowPadding },\n      },\n      { name: \"offset\", options: { offset: tooltipOffset } },\n      { name: \"preventOverflow\", options: { padding: tooltipPadding } },\n    ],\n  });\n\n  const tooltip = (\n    <StyledTooltip\n      data-theme={isDark ? \"light\" : \"dark\"}\n      {...animationMap}\n      variants={animationVariants}\n      transition={{ duration: 0.3 }}\n      ref={setTooltipElement}\n      style={styles.popper}\n      {...attributes.popper}\n    >\n      <ThemeProvider theme={invertTheme}>{content}</ThemeProvider>\n      <Arrow ref={setArrowElement} style={styles.arrow} />\n    </StyledTooltip>\n  );\n\n  const AnimatedTooltip = (\n    <LazyMotion features={domAnimation}>\n      <AnimatePresence>{visible && tooltip}</AnimatePresence>\n    </LazyMotion>\n  );\n\n  const portal = getPortalRoot();\n  const tooltipInPortal = portal ? createPortal(AnimatedTooltip, portal) : null;\n\n  return {\n    targetRef: setTargetElement,\n    tooltip: tooltipInPortal ?? AnimatedTooltip,\n    tooltipVisible: visible,\n  };\n};\n\nexport default useTooltip;\n","import { breakpoints, mediaQueries, vars } from \"@pancakeswap/ui\";\n\nexport default {\n  siteWidth: 1200,\n  breakpoints: Object.values(breakpoints).map((bp) => `${bp}px`),\n  mediaQueries,\n  spacing: vars.space,\n  shadows: vars.shadows,\n  radii: vars.radii,\n  zIndices: { ribbon: 9, dropdown: 10, modal: 100 },\n};\n","import { vars } from \"@pancakeswap/ui/css/vars.css\";\n\nexport const lightColors = vars.colors;\n\nexport const darkColors = vars.colors;\n","import { DefaultTheme } from \"styled-components\";\nimport { dark as darkAlert } from \"../components/Alert/theme\";\nimport { dark as darkCard } from \"../components/Card/theme\";\nimport { dark as darkPancakeToggle } from \"../components/PancakeToggle/theme\";\nimport { dark as darkRadio } from \"../components/Radio/theme\";\nimport { dark as darkToggle } from \"../components/Toggle/theme\";\nimport { dark as darkNav } from \"../widgets/Menu/theme\";\nimport { dark as darkModal } from \"../widgets/Modal/theme\";\nimport { dark as darkTooltip } from \"../components/Tooltip/theme\";\nimport base from \"./base\";\nimport { darkColors } from \"./colors\";\n\nconst darkTheme: DefaultTheme = {\n  ...base,\n  isDark: true,\n  alert: darkAlert,\n  colors: darkColors,\n  card: darkCard,\n  toggle: darkToggle,\n  nav: darkNav,\n  modal: darkModal,\n  pancakeToggle: darkPancakeToggle,\n  radio: darkRadio,\n  tooltip: darkTooltip,\n};\n\nexport default darkTheme;\n","import { DefaultTheme } from \"styled-components\";\nimport { light as lightAlert } from \"../components/Alert/theme\";\nimport { light as lightCard } from \"../components/Card/theme\";\nimport { light as lightPancakeToggle } from \"../components/PancakeToggle/theme\";\nimport { light as lightRadio } from \"../components/Radio/theme\";\nimport { light as lightToggle } from \"../components/Toggle/theme\";\nimport { light as lightTooltip } from \"../components/Tooltip/theme\";\nimport { light as lightNav } from \"../widgets/Menu/theme\";\nimport { light as lightModal } from \"../widgets/Modal/theme\";\nimport base from \"./base\";\nimport { lightColors } from \"./colors\";\n\nconst lightTheme: DefaultTheme = {\n  ...base,\n  isDark: false,\n  alert: lightAlert,\n  colors: lightColors,\n  card: lightCard,\n  toggle: lightToggle,\n  nav: lightNav,\n  modal: lightModal,\n  pancakeToggle: lightPancakeToggle,\n  radio: lightRadio,\n  tooltip: lightTooltip,\n};\n\nexport default lightTheme;\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst getPortalRoot = () => typeof window !== \"undefined\" && (document.getElementById(\"portal-root\") ?? document.body);\n\nexport default getPortalRoot;\n","const isTouchDevice = (): boolean => {\n  return (\n    typeof window !== \"undefined\" &&\n    (\"ontouchstart\" in window ||\n      navigator.maxTouchPoints > 0 ||\n      // @ts-ignore\n      navigator.msMaxTouchPoints > 0)\n  );\n};\n\nexport default isTouchDevice;\n","import { darkColors, lightColors } from \"../../theme/colors\";\n\nexport interface NavThemeType {\n  background: string;\n}\n\nexport const light: NavThemeType = {\n  background: lightColors.backgroundAlt,\n};\n\nexport const dark: NavThemeType = {\n  background: darkColors.backgroundAlt,\n};\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { ModalTheme } from \"./types\";\n\nexport const light: ModalTheme = {\n  background: lightColors.backgroundAlt,\n};\n\nexport const dark: ModalTheme = {\n  background: darkColors.backgroundAlt,\n};\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","module.exports = require(\"@ethersproject/abi\");","module.exports = require(\"@ethersproject/address\");","module.exports = require(\"@ethersproject/bignumber\");","module.exports = require(\"@ethersproject/bytes\");","module.exports = require(\"@ethersproject/constants\");","module.exports = require(\"@ethersproject/contracts\");","module.exports = require(\"@ethersproject/providers\");","module.exports = require(\"@ethersproject/solidity\");","module.exports = require(\"@ethersproject/strings\");","module.exports = require(\"@ethersproject/units\");","module.exports = require(\"@gelatonetwork/limit-orders-lib\");","module.exports = require(\"@gnosis.pm/safe-apps-wagmi\");","module.exports = require(\"@radix-ui/react-slot\");","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"@uniswap/token-lists\");","module.exports = require(\"@vanilla-extract/recipes/createRuntimeFn\");","module.exports = require(\"@vanilla-extract/sprinkles/createRuntimeSprinkles\");","module.exports = require(\"ajv\");","module.exports = require(\"big.js\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"clsx\");","module.exports = require(\"date-fns\");","module.exports = require(\"decimal.js-light\");","module.exports = require(\"fast-json-stable-stringify\");","module.exports = require(\"graphql-request\");","module.exports = require(\"jsbi\");","module.exports = require(\"local-storage\");","module.exports = require(\"localforage\");","module.exports = require(\"lodash/chunk\");","module.exports = require(\"lodash/flatMap\");","module.exports = require(\"lodash/fromPairs\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash/groupBy\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/kebabCase\");","module.exports = require(\"lodash/keyBy\");","module.exports = require(\"lodash/mapValues\");","module.exports = require(\"lodash/memoize\");","module.exports = require(\"lodash/merge\");","module.exports = require(\"lodash/omitBy\");","module.exports = require(\"lodash/orderBy\");","module.exports = require(\"lodash/pickBy\");","module.exports = require(\"lodash/reduce\");","module.exports = require(\"lodash/times\");","module.exports = require(\"lodash/toNumber\");","module.exports = require(\"lodash/uniq\");","module.exports = require(\"lodash/uniqBy\");","module.exports = require(\"next-themes\");","module.exports = require(\"next/dist/shared/lib/app-router-context.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/head.js\");","module.exports = require(\"next/dist/shared/lib/i18n/normalize-locale-path.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/is-plain-object.js\");","module.exports = require(\"next/dist/shared/lib/loadable.js\");","module.exports = require(\"next/dist/shared/lib/mitt.js\");","module.exports = require(\"next/dist/shared/lib/page-path/denormalize-page-path.js\");","module.exports = require(\"next/dist/shared/lib/router-context.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/add-path-prefix.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/compare-states.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/format-next-pathname-info.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/format-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/get-asset-path-from-route.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/get-next-pathname-info.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/is-bot.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/is-dynamic.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/parse-path.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/parse-relative-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/path-has-prefix.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/querystring.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/remove-trailing-slash.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/resolve-rewrites.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/route-matcher.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/route-regex.js\");","module.exports = require(\"next/dist/shared/lib/utils.js\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"numeral\");","module.exports = require(\"qrcode.react\");","module.exports = require(\"react\");","module.exports = require(\"react-device-detect\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-popper\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-window\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"redux-persist\");","module.exports = require(\"redux-persist/lib/storage\");","module.exports = require(\"styled-components\");","module.exports = require(\"styled-system\");","module.exports = require(\"tiny-invariant\");","module.exports = require(\"tiny-warning\");","module.exports = require(\"toformat\");","module.exports = require(\"wagmi\");","module.exports = require(\"wagmi/chains\");","module.exports = require(\"wagmi/connectors/coinbaseWallet\");","module.exports = require(\"wagmi/connectors/injected\");","module.exports = require(\"wagmi/connectors/metaMask\");","module.exports = require(\"wagmi/connectors/walletConnect\");","module.exports = require(\"wagmi/providers/jsonRpc\");","module.exports = import(\"framer-motion\");;","module.exports = import(\"jotai\");;","module.exports = import(\"jotai/utils\");;","module.exports = import(\"js-cookie\");;","module.exports = import(\"swr\");;","module.exports = import(\"swr/immutable\");;"],"names":["Button","useSwitchNetworkLoading","useSetAtom","useActiveChainId","hideWrongNetworkModalAtom","Trans","wrongNetworkProps","variant","disabled","children","CommitButton","props","isWrongNetwork","switchNetworkLoading","setHideWrongNetwork","onClick","e","Modal","Box","ImportToken","useTranslation","ImportTokenWarningModal","tokens","onDismiss","onCancel","t","title","maxWidth","handleCurrencySelect","styled","Dots","span","Flex","Skeleton","Text","FlexGap","formatAmount","formatOptions","notation","displayThreshold","tokenPrecision","TextLabel","theme","mediaQueries","lg","PairPriceDisplay","value","inputSymbol","outputSymbol","format","alignItems","mr","bold","parseFloat","color","fontSize","lineHeight","height","width","Svg","DisabledIcon","id","viewBox","path","stroke","fill","d","defs","clipPath","use","xlinkHref","Icon","g","circle","cx","cy","r","transform","strokeWidth","strokeDasharray","strokeDashoffset","animate","attributeName","values","begin","repeatCount","dur","animateTransform","attributeType","type","from","to","useModal","Link","AutoRow","AutoColumn","CurrencyLogo","useActiveWeb3React","getBlockExploreLink","wrappedCurrency","useUnsupportedTokens","DetailsFooter","div","colors","text","invertedContrast","UnsupportedModal","currencies","chainId","map","currency","unsupportedTokens","gap","token","Object","keys","includes","address","align","size","symbol","external","small","href","concat","UnsupportedCurrencyFooter","onPresentModal","ChainId","ERC20Token","bscWarningTokens","pokemoney","BSC","free","safemoon","bscTestnetWarningTokens","bscTokens","bondly","itam","ccar","bttold","SwapWarningTokens","useSingleCallResult","useMulticallContract","useCurrentBlockTimestamp","multicall","result","useEffect","useState","useLast","filterFn","last","setLast","undefined","prev","shouldUse","isDefined","x","useLastTruthy","JSBI","Percent","Router","TradeType","useMemo","BIPS_BASE","INITIAL_ALLOWED_SLIPPAGE","useRouterContract","useTransactionDeadline","useSwapCallArguments","trade","allowedSlippage","recipientAddress","account","recipient","deadline","contract","swapMethods","push","swapCallParameters","feeOnTransfer","BigInt","toNumber","tradeType","EXACT_INPUT","parameters","isZero","truncateHash","useTransactionAdder","calculateGasMargin","isAddress","transactionErrorToUserReadableMessage","basisPointsToPercent","SwapCallbackState","INVALID","LOADING","VALID","useSwapCallback","swapCalls","addTransaction","state","callback","error","onSwap","estimatedCalls","Promise","all","call","methodName","args","options","estimateGas","then","gasEstimate","catch","gasError","console","callStatic","callError","successfulEstimation","find","el","ix","list","length","errorCalls","filter","Error","gasLimit","response","inputAmount","outputAmount","pct","toSignificant","maximumAmountIn","EXACT_OUTPUT","minimumAmountOut","base","recipientAddressText","withRecipient","translatableWithRecipient","summary","translatableSummary","data","hash","code","message","useSelector","ttl","user","userDeadline","blockTimestamp","add","WNATIVE","tryParseAmount","useCurrencyBalance","useWNativeContract","useCallWithMarketGasPrice","WrapType","NOT_APPLICABLE","WRAP","UNWRAP","wrapType","useWrapCallback","inputCurrency","outputCurrency","typedValue","callWithMarketGasPrice","wbnbContract","balance","sufficientBalance","lessThan","isNative","equals","execute","txReceipt","quotient","toString","amount","native","wrap","inputError","CHAIN_IDS","Swap","SwapPage","chains","useDispatch","CurrencyAmount","useCallback","DEFAULT_INPUT_CURRENCY","DEFAULT_OUTPUT_CURRENCY","BIG_INT_TEN","useRouter","useCurrency","useTradeExactIn","useTradeExactOut","getPriceForOneToken","useCurrencyBalances","replaceLimitOrdersState","selectCurrency","setRateType","switchCurrencies","typeInput","Field","Rate","useAppDispatch","getDesiredInput","outputValue","exchangeRate","isInverted","parsedOutAmount","parsedExchangeRate","invertedResultAsFraction","multiply","asFraction","exponentiate","decimals","invertedResultAsAmount","fromRawAmount","toFixed","resultAsFraction","divide","getDesiredOutput","inputValue","parsedInputAmount","useOrderState","limitOrders","useOrderActionHandlers","dispatch","onCurrencySelection","field","currencyId","isToken","onSwitchTokens","onUserInput","onChangeRateType","rateType","getErrorMessage","wrappedCurrencies","currencyBalances","parsedAmounts","price","input","output","toLowerCase","hasBothTokensSelected","hasAtLeastOneParsedAmount","tradeIsNotAvailable","route","someParsedAmountIsMissing","MUL","executionPrice","equalTo","DIV","invert","greaterThan","useDerivedOrderInfo","independentField","basisField","INPUT","inputCurrencyId","OUTPUT","outputCurrencyId","relevantTokenBalances","isExactIn","isOutputBasis","isDesiredRateUpdate","PRICE","desiredOutputAsCurrencyAmount","desiredInputAsCurrencyAmount","desiredOutputAsString","parsedTypedAmount","tradeAmount","bestTradeExactIn","bestTradeExactOut","oneInputToken","singleTokenTrade","singleTokenPrice","inverseSingleTokenPrice","formattedAmounts","rawAmounts","currencyIds","parseTokenAmountURLParameter","urlParam","Number","isNaN","parseIndependentFieldURLParameter","parseCurrencyFromURLParameter","valid","toUpperCase","queryParametersToSwapState","parsedQs","exactAmount","exactField","useDefaultsFromURLSearch","query","setResult","parsed","BIG_INT_ZERO","MIN_BNB","maxAmountSpend","currencyAmount","subtract","swapWarningTokens","shouldShowSwapWarning","swapCurrency","some","warningToken","reason","originalError","indexOf","substring","Price","baseAmount","quoteAmount","GreyCard","ConnectWalletButton","RowBetween","ApprovalState","CircleLoader","SettingsModal","withCustomOnDismiss","SettingsMode","Column","ConfirmSwapModal","ProgressSteps","SwapCallbackError","useStableSwapCallArgs","SettingsModalWithCustomDismiss","StableSwapCommitButton","approval","approveCallback","approvalSubmitted","isExpertMode","swapInputError","swapCallback","swapCallbackError","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","handleSwap","handleAcceptChanges","handleConfirmDismiss","indirectlyOpenConfirmModalState","setIndirectlyOpenConfirmModalState","onPresentSettingsModal","customOnDismiss","mode","SWAP_LIQUIDITY","onPresentConfirmModal","isStable","originalTrade","onAcceptChanges","onConfirm","openSettingModal","onSwapHandler","isSufficentLiquidity","style","textAlign","padding","showApproveFlow","NOT_APPROVED","PENDING","APPROVED","isValid","justify","asset","marginTop","steps","useContext","ArrowDownIcon","IconButton","ArrowUpDownIcon","Message","MessageText","SwapUI","InfoTooltip","useSwapActionHandlers","CurrencyInputPanel","CommonBasesType","useSwapState","useExpertModeManager","useUserSlippageTolerance","replaceBrowserHistory","useWeb3React","CurrencyInputHeader","useRefreshBlockNumberID","Wrapper","useDerivedStableSwapInfo","useApproveCallbackFromStableTrade","StableConfigContext","Label","secondary","SwitchIconButton","primary","StableSwapForm","setIsChartDisplayed","isChartDisplayed","refreshBlockNumber","isLoading","stableConfig","v2Trade","parsedAmount","dependentField","handleTypeInput","handleTypeOutput","swapAddress","stableSwapConfig","stableSwapAddress","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","Boolean","handleInputSelect","currencyInput","handleMaxInput","toExact","handleOutputSelect","currencyOutput","handlePercentInput","percent","hasAmount","onRefreshPrice","ml","subtitle","minHeight","disableCurrencySelect","label","showMaxButton","showQuickInputButton","onPercentInput","onMax","onCurrencySelect","otherCurrency","showCommonBases","commonBasesType","SWAP_LIMITORDER","scale","className","InfoLabel","TradePrice","mb","mt","AutoRenewIcon","QuestionHelper","RowFixed","formatExecutionPrice","StyledBalanceMaxMini","SwapModalFooterContainer","radii","default","cardBorder","background","StableSwapModalFooter","slippageAdjustedAmounts","isEnoughInputBalance","disabledConfirm","showInverted","setShowInverted","justifyContent","display","paddingLeft","marginLeft","ErrorIcon","TruncatedText","SwapShowAcceptChanges","StableSwapModalHeader","showAcceptChanges","inputTextColor","tradeInfoText","estimatedText","transactionRevertText","split","truncatedRecipient","recipientInfoText","recipientSentToText","postSentToText","marginRight","textTransform","b","useApproveCallback","computeSlippageAdjustedAmounts","amountToApprove","useStableTradeExactIn","useStableTradeExactOut","formattedTo","balanceIn","amountIn","useContract","stableSwapABI","stableSwapInfoABI","stableLPABI","useTokenBalancesWithLoadingIndicator","createContext","useSWRImmutable","getStableConfig","deserializeToken","useStableFarms","stableFarms","farms","quoteToken","lpAddress","rest","liquidityToken","token0","token1","useFindStablePair","tokenA","tokenB","stablePair","useLPTokensWithBalanceByAccount","lpTokens","stableBalances","lpTokensWithBalance","lpToken","tokenAmounts","reserve0","reserve1","getLiquidityValue","useStableConfig","stableSwapContract","stableSwapInfoContract","infoStableSwapAddress","stableSwapLPContract","swapContract","inputAmountAddress","outputAmountAddress","token0Address","token1Address","token0Amount","token1Amount","Fraction","ONE","laggyMiddleware","useDeferredValue","useSWR","maximumAmountInFactory","currencyAmountIn","slippageTolerance","slippageAdjustedAmountIn","minimumAmountOutFactory","currencyAmountOut","slippageAdjustedAmountOut","useStableTradeResponse","isInvalid","priceImpact","useEstimatedAmount","estimatedCurrency","deferQuotient","isToken0","estimatedAmount","get_dy","currencyOut","currencyAmountInQuotient","currencyIn","currencyAmountOutQuotient","StableSwapFormContainer","stableTokenPair","Provider","TOKEN_RISK","RiskMessage","riskTokenInfo","riskLevel","riskLevelDescription","messageVariant","High","Medium","icon","flexDirection","HelpIcon","useTooltip","useToast","fetchRiskToken","tokenListFromOfficialsUrlsAtom","merge","keyBy","groupBy","mapValues","useAtomValue","AccessRisk","toastInfo","tokenMap","inputAddress","inputChainId","outputAddress","outputChainId","results","loading","setState","tokensForScan","tokensToScan","handleScan","fetchTokenRisks","tokenRiskResults","tokenToScan","prevState","tokenRiskResult","join","disabledButton","targetRef","tooltip","tooltipVisible","placement","ref","isSuccess","getBlockExploreName","InputPanel","backgroundAlt","ContainerRow","failure","InputContainer","Input","textDisabled","AddressInputPanel","onChange","handleInput","event","target","withoutSpaces","replace","site","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","pattern","computeTradePriceBreakdown","TOTAL_FEE","LP_HOLDERS_FEE","TREASURY_FEE","BUYBACK_FEE","FormattedPriceImpact","SwapRoute","TradeSummary","priceImpactWithoutFee","realizedLPFee","totalFeePercent","lpHoldersFeePercent","treasuryFeePercent","buyBackFeePercent","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","show","AdvancedSwapDetailsDropdown","lastTrade","ButtonMenu","ButtonMenuItem","memo","useFetchPairPrices","dynamic","NoChartAvailable","getTimeWindowChange","SwapLineChart","ssr","BasicChart","isChartExpanded","isMobile","currentSwapPrice","timeWindow","setTimeWindow","pairPrices","pairId","hoverValue","setHoverValue","hoverDate","setHoverDate","valueToDisplay","changePercentage","changeValue","isChangePositive","chartHeight","currentLanguage","locale","currentDate","Date","toLocaleString","year","month","day","hour","minute","isBadData","every","Infinity","pairAddress","px","pt","activeIndex","onItemClick","p","next","StyledPriceChart","BnbWbnbNotice","isDark","$isDark","$isExpanded","wordSpacing","ExpandIcon","ShrinkIcon","SyncAltIcon","DoubleCurrencyLogo","ChartViewMode","useExchangeChartViewManager","PriceChart","setIsChartExpanded","isFullWidthContainer","toggleExpanded","currentIsExpanded","chartView","TRADING_VIEW","overflow","$isFullWidthContainer","currency0","currency1","margin","BASIC","useTheme","BNB_ADDRESS","getTokenAddress","PriceChartContainer","isPairReversed","setIsPairReversed","togglePairReversed","prePairReversed","isBnbWbnb","sm","defaultProps","LinkExternal","TransactionErrorContent","TransactionSubmittedContent","ConfirmationPendingContent","TransactionConfirmSwapContent","ConfirmSwapModalContainer","PancakeRouterSlippageErrorMsg","SwapTransactionErrorContent","isSlippagedErrorMsg","handleErrorDismiss","cursor","u","handleDismiss","confirmationContent","currencyToAdd","headerBackground","Spinner","ColumnCenter","ConfirmedIcon","pendingText","amountA","symbolA","amountB","symbolB","ChartDisableIcon","ChartIcon","HistoryIcon","NotificationDot","TransactionsModal","GlobalSettings","RefreshIcon","ColoredIconButton","textSubtle","expertMode","toggleChartDisplayed","currentIsChartDisplayed","onPresentTransactionsModal","handleOnClick","CurrencyInputHeaderTitle","CurrencyInputHeaderSubTitle","warningSeverity","ONE_BIPS","ErrorText","severity","Grouping","Circle","confirmed","backgroundDisabled","success","CircleRow","Connector","prevConfirmed","ProgressCircles","step","i","useUserSingleHopOnly","confirmPriceImpactWithoutFee","SwapCommitButton","swapIsUnsupported","showWrap","wrapInputError","onWrap","parsedIndepentFieldAmount","singleHopOnly","priceImpactSeverity","noRoute","userHasSpecifiedInputOutput","useIsTransactionUnsupported","useApproveCallbackFromTrade","useDerivedSwapInfo","useWarningImport","ArrowWrapper","SwapForm","isAccessTokenSupported","warningSwapHandler","hasStableSwapAlternative","stableFarm","checkSummedToken0","checkSummedToken1","onChangeRecipient","SwitchButton","clickable","Info","my","SwapModalFooter","SwapModalHeader","Fragment","ChevronRightIcon","unwrappedToken","flexWrap","isLastItem","SwapType","SWAP","STABLE_SWAP","SwapTab","showStable","swapTypeState","setSwapType","content","idx","backgroundColor","card","Checkbox","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","name","checked","userSelect","BTTWarning","BondlyWarning","CcarWarning","FREEWarning","ItamWarning","RugPullWarning","SafemoonWarning","ModalBody","ModalContainer","ModalHeader","Heading","SwapWarningTokensConfig","StyledModalContainer","MessageContainer","SwapWarningModal","TOKEN_WARNINGS","component","SWAP_WARNING","$minWidth","gradientCardHeader","ConfirmationModalContent","tradeMeaningfullyDiffers","tradeA","tradeB","isInputBalanceExist","isInputBalanceBNB","inputCurrencyAmount","modalHeader","SwapModalHead","modalBottom","SwapModalF","topContent","bottomContent","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","confirmWord","window","prompt","word","confirm","css","warning","button","dropdown","attrs","ellipsis","SwapCallbackErrorInner","failure33","SwapCallbackErrorInnerAlertTriangle","warning33","ACCESS_RISK_API","TokenRiskPhases","Low","fetchRiskApi","fetch","method","headers","Accept","body","JSON","stringify","chain_id","json","riskApi","risk_result","scanned_ts","risk_level","risk_level_description","riskResult","scannedTs","useSWRConfig","useRefreshBlockNumber","setFetch","mutate","setTimeout","useAllTokens","router","loadedUrlParams","swapWarningCurrency","setSwapWarningCurrency","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","c","defaultTokens","importTokensNotInDefault","onPresentSwapWarningModal","onPresentImportTokenWarningModal","swapWarningHandler","showSwapWarning","BottomDrawer","useMatchBreakpoints","EXCHANGE_DOCS_URLS","AppBody","useSingleTokenSwapInfo","useExchangeChartManager","Page","StyledInputCurrencyWrapper","StyledSwapContainer","CHART_SUPPORT_CHAIN_IDS","ACCESS_TOKEN_SUPPORT_CHAIN_IDS","STABLE_SUPPORT_CHAIN_IDS","BSC_TESTNET","userChartPreference","setUserChartPreference","isChartSupported","isStableSupported","removePadding","hideFooterOnDesktop","position","isOpen","setIsOpen","$isChartExpanded","Footer","helpUrl","xxl","darkColors","lightColors","light","dark","React","useRef","createPortal","useDelayedUnmount","useOnClickOutside","getPortalRoot","Overlay","CloseIcon","DrawerContainer","shouldRender","current","portal","isUnmounting","right","top","vars","boxShadow","shadows","level1","boxShadowActive","active","boxShadowSuccess","boxShadowWarning","cardHeaderBackground","blue","gradientBlue","bubblegum","gradientBubblegum","violet","gradientViolet","dropShadow","OpenNewIcon","handleBackground","handleShadow","fillRule","clipRule","strokeLinecap","InfoIcon","iconColor","isMounted","delayTime","setShouldRender","timeoutId","clearTimeout","htmlNode","handler","listener","contains","document","addEventListener","removeEventListener","m","Motion","Arrow","StyledTooltip","AnimatePresence","LazyMotion","domAnimation","usePopper","ThemeProvider","isTouchDevice","animationVariants","initial","opacity","exit","animationMap","invertTheme","currentTheme","trigger","arrowPadding","tooltipPadding","left","tooltipOffset","hideTimeout","targetElement","setTargetElement","tooltipElement","setTooltipElement","arrowElement","setArrowElement","visible","setVisible","isHoveringOverTooltip","hideTimeoutRef","hideTooltip","hide","stopPropagation","preventDefault","showTooltip","toggleTooltip","handleClickOutside","Node","styles","attributes","modifiers","element","offset","data-theme","variants","transition","duration","popper","arrow","AnimatedTooltip","features","tooltipInPortal","breakpoints","siteWidth","bp","spacing","space","zIndices","ribbon","modal","darkAlert","darkCard","darkPancakeToggle","darkRadio","darkToggle","darkNav","darkModal","darkTooltip","darkTheme","alert","toggle","nav","pancakeToggle","radio","lightAlert","lightCard","lightPancakeToggle","lightRadio","lightToggle","lightTooltip","lightNav","lightModal","lightTheme","getElementById","navigator","maxTouchPoints","msMaxTouchPoints","hexNumberString","test"],"sourceRoot":""}