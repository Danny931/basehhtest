{"version":3,"file":"9800.js","mappings":"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","sources":["webpack://web/../../packages/uikit/src/widgets/Swap/SwapWidget.css.ts","webpack://web/./src/components/App/AppBody.tsx","webpack://web/./src/components/App/AppHeader.tsx","webpack://web/./src/components/App/Transactions/Transaction.tsx","webpack://web/./src/components/App/Transactions/TransactionsModal.tsx","webpack://web/./src/components/App/Transactions/index.tsx","webpack://web/./src/components/App/index.tsx","webpack://web/./src/components/Layout/Column.tsx","webpack://web/./src/components/Layout/Row.tsx","webpack://web/./src/components/Loader/CircleLoader.tsx","webpack://web/./src/components/Logo/CurrencyLogo.tsx","webpack://web/./src/components/Logo/DoubleLogo.tsx","webpack://web/./src/components/Logo/ListLogo.tsx","webpack://web/./src/components/Logo/Logo.tsx","webpack://web/./src/components/Logo/index.ts","webpack://web/./src/hooks/Trades.ts","webpack://web/./src/state/swap/fetch/constants.ts","webpack://web/./src/state/swap/queries/getDerivedPrices.ts","webpack://web/./src/state/swap/fetch/fetchDerivedPriceData.ts","webpack://web/./src/state/swap/queries/lastPairDayId.ts","webpack://web/./src/state/swap/queries/pairHourDatas.ts","webpack://web/./src/state/swap/queries/pairDayDatasByIdsQuery.ts","webpack://web/./src/state/swap/queries/pairDayDatas.ts","webpack://web/./src/state/swap/queries/pairHourDatasByIds.ts","webpack://web/./src/state/swap/queries/lastPairHourId.ts","webpack://web/./src/state/swap/fetch/fetchPairPriceData.ts","webpack://web/./src/state/swap/fetch/utils.ts","webpack://web/./src/state/swap/hooks.ts","webpack://web/./src/state/swap/normalizers.ts","webpack://web/./src/state/swap/selectors.ts","webpack://web/./src/state/swap/types.ts","webpack://web/./src/state/wallet/hooks.ts","webpack://web/./src/utils/currencyId.ts","webpack://web/./src/utils/exchange.ts","webpack://web/./src/utils/trades.ts","webpack://web/./src/views/Page.tsx","webpack://web/./src/views/Swap/components/Chart/constants.ts","webpack://web/./src/views/Swap/components/Chart/utils.ts","webpack://web/../../packages/uikit/src/components/Column/index.tsx","webpack://web/../../packages/uikit/src/components/Row/Row.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/ArrowUpDown.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Binance.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Checkmark.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/History.tsx","webpack://web/../../packages/uikit/src/widgets/Swap/CurrencyInputHeader.tsx","webpack://web/../../packages/uikit/src/widgets/Swap/CurrencyInputPanel.tsx","webpack://web/../../packages/uikit/src/widgets/Swap/Footer.tsx","webpack://web/../../packages/utils/escapeRegExp.ts","webpack://web/../../packages/uikit/src/widgets/Swap/NumericalInput.tsx","webpack://web/../../packages/uikit/src/widgets/Swap/Page.tsx","webpack://web/../../packages/uikit/src/widgets/Swap/SwapInfo.tsx","webpack://web/../../packages/uikit/src/widgets/Swap/SwapWidget.tsx","webpack://web/../../packages/uikit/src/widgets/Swap/TradePrice.tsx","webpack://web/../../packages/utils/tryParseAmount.ts"],"sourcesContent":["import { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var balanceMaxMiniClass = '_1nzuaz740f _1nzuaz7356 _1nzuaz73sf _1nzuaz74c7 _1nzuaz76 _1nzuaz76u _1nzuaz72o _1cvvxtwp';\nexport var iconDownClass = '_1cvvxtw3';\nexport var iconUpDownClass = '_1cvvxtw4';\nexport var inputContainerVariants = _7a468({defaultClassName:'_1nzuaz734u _1nzuaz741f',variantClassNames:{error:{true:'_1nzuaz72vo',false:'_1nzuaz72w0'},hasZapStyle:{true:'_1cvvxtwi'}},defaultVariants:{},compoundVariants:[]});\nexport var inputRowVariants = _7a468({defaultClassName:'_1cvvxtw9',variantClassNames:{selected:{true:'_1cvvxtwa',false:'_1cvvxtwb'}},defaultVariants:{},compoundVariants:[]});\nexport var inputVariants = _7a468({defaultClassName:'_1cvvxtw5',variantClassNames:{error:{true:'_1cvvxtw6'},align:{left:'_1cvvxtw7',right:'_1cvvxtw8'}},defaultVariants:{align:'right',error:false},compoundVariants:[]});\nexport var pageVariants = _7a468({defaultClassName:'_1cvvxtwl _1nzuaz76 _1nzuaz71c _1nzuaz72o _1nzuaz7306 _1nzuaz7iu _1nzuaz73x3 _1nzuaz71iu _1nzuaz723o _1cvvxtwk',variantClassNames:{removePadding:{true:'_1cvvxtwm'},noMinHeight:{true:'_1cvvxtwn'}},defaultVariants:{},compoundVariants:[]});\nexport var switchButtonClass = '_1cvvxtw1';","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot, QuestionHelper } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Link from 'next/link'\nimport Transactions from './Transactions'\nimport { SettingsMode } from '../Menu/GlobalSettings/types'\n\ninterface Props {\n  title: string\n  subtitle?: string\n  helper?: string\n  backTo?: string | (() => void)\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<React.PropsWithChildren<Props>> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" width=\"100%\" style={{ gap: '16px' }}>\n        {backTo &&\n          (typeof backTo === 'string' ? (\n            <Link passHref href={backTo}>\n              <IconButton as=\"a\" scale=\"sm\">\n                <ArrowBackIcon width=\"32px\" />\n              </IconButton>\n            </Link>\n          ) : (\n            <IconButton scale=\"sm\" variant=\"text\" onClick={backTo}>\n              <ArrowBackIcon width=\"32px\" />\n            </IconButton>\n          ))}\n        <Flex flexDirection=\"column\" width=\"100%\">\n          <Flex mb=\"8px\" alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex>\n              <Heading as=\"h2\">{title}</Heading>\n              {helper && <QuestionHelper text={helper} ml=\"4px\" placement=\"top-start\" />}\n            </Flex>\n            {!noConfig && (\n              <Flex alignItems=\"center\">\n                <NotificationDot show={expertMode}>\n                  <GlobalSettings mode={SettingsMode.SWAP_LIQUIDITY} />\n                </NotificationDot>\n                <Transactions />\n              </Flex>\n            )}\n          </Flex>\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport { getBlockExploreLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx, chainId }: { tx: TransactionDetails; chainId: number }) {\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBlockExploreLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import { useCallback } from 'react'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport isEmpty from 'lodash/isEmpty'\nimport groupBy from 'lodash/groupBy'\nimport { useAllSortedRecentTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { useAppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { chains } from 'utils/wagmi'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[], chainId: number) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} chainId={chainId} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<React.PropsWithChildren<InjectedModalProps>> = ({ onDismiss }) => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const sortedRecentTransactions = useAllSortedRecentTransactions()\n\n  const { t } = useTranslation()\n\n  const hasTransactions = !isEmpty(sortedRecentTransactions)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    dispatch(clearAllTransactions())\n  }, [dispatch])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradientCardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {hasTransactions ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {Object.entries(sortedRecentTransactions).map(([chainId, transactions]) => {\n                const chainIdNumber = Number(chainId)\n                const groupedTransactions = groupBy(Object.values(transactions), (trxDetails) =>\n                  Boolean(trxDetails.receipt),\n                )\n\n                const confirmed = groupedTransactions.true ?? []\n                const pending = groupedTransactions.false ?? []\n\n                return (\n                  <div key={`transactions#${chainIdNumber}`}>\n                    <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"4px\">\n                      {chains.find((c) => c.id === chainIdNumber)?.name ?? 'Unknown network'}\n                    </Text>\n                    {renderTransactions(pending, chainIdNumber)}\n                    {renderTransactions(confirmed, chainIdNumber)}\n                  </div>\n                )\n              })}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import { HistoryIcon, useModal, IconButton } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <IconButton scale=\"sm\" variant=\"text\" onClick={onPresentTransactionsModal}>\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </IconButton>\n    </>\n  )\n}\n\nexport default Transactions\n","export { default as AppHeader } from './AppHeader'\nexport { default as AppBody } from './AppBody'\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify};\n`\n\nexport default Column\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding ?? '0'};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport default Row\n","import styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { ChainId, Currency } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport { useMemo } from 'react'\nimport { WrappedTokenInfo } from '@pancakeswap/token-lists'\nimport styled from 'styled-components'\nimport { useHttpLocations } from '@pancakeswap/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: 50%;\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency?.isNative) return []\n\n    if (currency?.isToken) {\n      const tokenLogoURL = getTokenLogoURL(currency)\n\n      if (currency instanceof WrappedTokenInfo) {\n        if (!tokenLogoURL) return [...uriLocations]\n        return [...uriLocations, tokenLogoURL]\n      }\n      if (!tokenLogoURL) return []\n      return [tokenLogoURL]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency?.isNative) {\n    if (currency.chainId === ChainId.BSC) {\n      return <BinanceIcon width={size} style={style} />\n    }\n    return <StyledLogo size={size} srcs={[`/images/chains/${currency.chainId}.png`]} width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { useHttpLocations } from '@pancakeswap/hooks'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nexport const BAD_SRCS: { [imageSrc: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<React.PropsWithChildren<LogoProps>> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","export { default as CurrencyLogo } from './CurrencyLogo'\nexport { default as DoubleCurrencyLogo } from './DoubleLogo'\nexport { default as ListLogo } from './ListLogo'\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade, TradeType } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from 'config/constants/exchange'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens, useWarningTokens } from './Tokens'\n\nexport function useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(\n  currencyAmountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency,\n): Trade<Currency, Currency, TradeType> | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType> | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade<Currency, Currency, TradeType> | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(\n  currencyIn?: Currency,\n  currencyAmountOut?: CurrencyAmount<Currency>,\n): Trade<Currency, Currency, TradeType> | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType> | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function useIsTransactionWarning(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useWarningTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { PairDataTimeWindowEnum } from '../types'\n\n// Specifies the amount of data points to query for specific time window\nexport const timeWindowIdsCountMapping: Record<PairDataTimeWindowEnum, number> = {\n  [PairDataTimeWindowEnum.DAY]: 24,\n  [PairDataTimeWindowEnum.WEEK]: 28,\n  [PairDataTimeWindowEnum.MONTH]: 30,\n  [PairDataTimeWindowEnum.YEAR]: 24,\n}\n\n// How many StreamingFast ids to skip when querying the data\nexport const timeWindowGapMapping: Record<PairDataTimeWindowEnum, number | null> = {\n  [PairDataTimeWindowEnum.DAY]: null,\n  [PairDataTimeWindowEnum.WEEK]: 6, // Each datapoint 6 hours apart\n  [PairDataTimeWindowEnum.MONTH]: 1, // Each datapoint 1 day apart\n  [PairDataTimeWindowEnum.YEAR]: 15, // Each datapoint 15 days apart\n}\n","import { gql } from 'graphql-request'\nimport { Block } from 'state/info/types'\n\nexport const getDerivedPrices = (tokenAddress: string, blocks: Block[]) =>\n  blocks.map(\n    (block) => `\n    t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedBNB\n      }\n    `,\n  )\n\nexport const getDerivedPricesQueryConstructor = (subqueries: string[]) => {\n  return gql`\n      query derivedTokenPriceData {\n        ${subqueries}\n      }\n    `\n}\n","import orderBy from 'lodash/orderBy'\nimport { INFO_CLIENT } from 'config/constants/endpoints'\nimport { ONE_DAY_UNIX, ONE_HOUR_SECONDS } from 'config/constants/info'\nimport { getBlocksFromTimestamps } from 'utils/getBlocksFromTimestamps'\nimport { getUnixTime, startOfHour, sub } from 'date-fns'\nimport { Block } from 'state/info/types'\nimport { multiQuery } from 'views/Info/utils/infoQueryHelpers'\nimport { getDerivedPrices, getDerivedPricesQueryConstructor } from '../queries/getDerivedPrices'\nimport { PairDataTimeWindowEnum } from '../types'\n\nconst getTokenDerivedBnbPrices = async (tokenAddress: string, blocks: Block[]) => {\n  const prices: any | undefined = await multiQuery(\n    getDerivedPricesQueryConstructor,\n    getDerivedPrices(tokenAddress, blocks),\n    INFO_CLIENT,\n    200,\n  )\n\n  if (!prices) {\n    console.error('Price data failed to load')\n    return null\n  }\n\n  // format token BNB price results\n  const tokenPrices: {\n    tokenAddress: string\n    timestamp: string\n    derivedBNB: number\n  }[] = []\n\n  // Get Token prices in BNB\n  Object.keys(prices).forEach((priceKey) => {\n    const timestamp = priceKey.split('t')[1]\n    if (timestamp) {\n      tokenPrices.push({\n        tokenAddress,\n        timestamp,\n        derivedBNB: prices[priceKey]?.derivedBNB ? parseFloat(prices[priceKey].derivedBNB) : 0,\n      })\n    }\n  })\n\n  return orderBy(tokenPrices, (tokenPrice) => parseInt(tokenPrice.timestamp, 10))\n}\n\nconst getInterval = (timeWindow: PairDataTimeWindowEnum) => {\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n      return ONE_HOUR_SECONDS\n    case PairDataTimeWindowEnum.WEEK:\n      return ONE_HOUR_SECONDS * 4\n    case PairDataTimeWindowEnum.MONTH:\n      return ONE_DAY_UNIX\n    case PairDataTimeWindowEnum.YEAR:\n      return ONE_DAY_UNIX * 15\n    default:\n      return ONE_HOUR_SECONDS * 4\n  }\n}\n\nconst getSkipDaysToStart = (timeWindow: PairDataTimeWindowEnum) => {\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n      return 1\n    case PairDataTimeWindowEnum.WEEK:\n      return 7\n    case PairDataTimeWindowEnum.MONTH:\n      return 30\n    case PairDataTimeWindowEnum.YEAR:\n      return 365\n    default:\n      return 7\n  }\n}\n\n// Fetches derivedBnb values for tokens to calculate derived price\n// Used when no direct pool is available\nconst fetchDerivedPriceData = async (\n  token0Address: string,\n  token1Address: string,\n  timeWindow: PairDataTimeWindowEnum,\n) => {\n  const interval = getInterval(timeWindow)\n  const endTimestamp = getUnixTime(new Date())\n  const startTimestamp = getUnixTime(startOfHour(sub(endTimestamp * 1000, { days: getSkipDaysToStart(timeWindow) })))\n  const timestamps = []\n  let time = startTimestamp\n  while (time <= endTimestamp) {\n    timestamps.push(time)\n    time += interval\n  }\n\n  try {\n    const blocks = await getBlocksFromTimestamps(timestamps, 'asc', 500)\n    if (!blocks || blocks.length === 0) {\n      console.error('Error fetching blocks for timestamps', timestamps)\n      return null\n    }\n\n    const [token0DerivedBnb, token1DerivedBnb] = await Promise.all([\n      getTokenDerivedBnbPrices(token0Address, blocks),\n      getTokenDerivedBnbPrices(token1Address, blocks),\n    ])\n    return { token0DerivedBnb, token1DerivedBnb }\n  } catch (error) {\n    console.error('Failed to fetched derived price data for chart', error)\n    return null\n  }\n}\n\nexport default fetchDerivedPriceData\n","import { gql } from 'graphql-request'\n\nconst lastPairDayId = gql`\n  query lastPairDayId($pairId: String) {\n    pairDayDatas(first: 1, where: { pairAddress: $pairId }, orderBy: date, orderDirection: desc) {\n      id\n    }\n  }\n`\nexport default lastPairDayId\n","import { gql } from 'graphql-request'\n\nconst pairHourDatas = gql`\n  query pairHourDatas($pairId: String, $first: Int) {\n    pairHourDatas(first: $first, where: { pair: $pairId }, orderBy: hourStartUnix, orderDirection: desc) {\n      id\n      hourStartUnix\n      reserve0\n      reserve1\n      reserveUSD\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairHourDatas\n","import { gql } from 'graphql-request'\n\nconst pairDayDatasByIdsQuery = gql`\n  query pairDayDatasByIdsQuery($pairIds: [String]) {\n    pairDayDatas(where: { id_in: $pairIds }, orderBy: date, orderDirection: desc) {\n      id\n      date\n      reserve0\n      reserve1\n      reserveUSD\n      pairAddress {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairDayDatasByIdsQuery\n","import { gql } from 'graphql-request'\n\nconst pairDayDatas = gql`\n  query pairDayDatas($pairId: String, $first: Int) {\n    pairDayDatas(first: $first, where: { pairAddress: $pairId }, orderBy: date, orderDirection: desc) {\n      id\n      date\n      reserve0\n      reserve1\n      reserveUSD\n      pairAddress {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairDayDatas\n","import { gql } from 'graphql-request'\n\nconst pairHourDatasByIds = gql`\n  query pairHourDatasByIds($pairIds: [String]) {\n    pairHourDatas(where: { id_in: $pairIds }, orderBy: hourStartUnix, orderDirection: desc) {\n      id\n      hourStartUnix\n      reserve0\n      reserve1\n      reserveUSD\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairHourDatasByIds\n","import { gql } from 'graphql-request'\n\nconst lastPairHourId = gql`\n  query lastPairHourId($pairId: String) {\n    pairHourDatas(first: 1, where: { pair: $pairId }, orderBy: hourStartUnix, orderDirection: desc) {\n      id\n    }\n  }\n`\nexport default lastPairHourId\n","import requestWithTimeout from 'utils/requestWithTimeout'\nimport { infoClient } from 'utils/graphql'\nimport lastPairDayId from '../queries/lastPairDayId'\nimport pairHourDatas from '../queries/pairHourDatas'\nimport pairDayDatasByIdsQuery from '../queries/pairDayDatasByIdsQuery'\nimport { PairDataTimeWindowEnum } from '../types'\nimport { timeWindowIdsCountMapping } from './constants'\nimport {\n  fetchPairDataParams,\n  LastPairDayIdResponse,\n  LastPairHourIdResponse,\n  PairDayDatasResponse,\n  PairHoursDatasResponse,\n} from './types'\nimport { getIdsByTimeWindow, getPairSequentialId } from './utils'\nimport pairDayDatas from '../queries/pairDayDatas'\nimport pairHourDatasByIds from '../queries/pairHourDatasByIds'\nimport lastPairHourId from '../queries/lastPairHourId'\n\nconst fetchPairPriceData = async ({ pairId, timeWindow }: fetchPairDataParams) => {\n  const client = infoClient\n\n  try {\n    switch (timeWindow) {\n      case PairDataTimeWindowEnum.DAY: {\n        const data = await requestWithTimeout<PairHoursDatasResponse>(client, pairHourDatas, {\n          pairId,\n          first: timeWindowIdsCountMapping[timeWindow],\n        })\n        return { data, error: false }\n      }\n      case PairDataTimeWindowEnum.WEEK: {\n        const lastPairHourIdData = await requestWithTimeout<LastPairHourIdResponse>(client, lastPairHourId, { pairId })\n        const lastId = lastPairHourIdData?.pairHourDatas ? lastPairHourIdData.pairHourDatas[0]?.id : null\n        if (!lastId) {\n          return { data: { pairHourDatas: [] }, error: false }\n        }\n        const pairHourId = getPairSequentialId({ id: lastId, pairId })\n        const pairHourIds = getIdsByTimeWindow({\n          pairAddress: pairId,\n          pairLastId: pairHourId,\n          timeWindow,\n          idsCount: timeWindowIdsCountMapping[timeWindow],\n        })\n\n        const pairHoursData = await requestWithTimeout<PairHoursDatasResponse>(client, pairHourDatasByIds, {\n          pairIds: pairHourIds,\n        })\n        return { data: pairHoursData, error: false }\n      }\n      case PairDataTimeWindowEnum.MONTH: {\n        const data = await requestWithTimeout<PairHoursDatasResponse>(client, pairDayDatas, {\n          pairId,\n          first: timeWindowIdsCountMapping[timeWindow],\n        })\n        return { data, error: false }\n      }\n      case PairDataTimeWindowEnum.YEAR: {\n        const lastPairDayIdData = await requestWithTimeout<LastPairDayIdResponse>(client, lastPairDayId, { pairId })\n        const lastId = lastPairDayIdData?.pairDayDatas ? lastPairDayIdData.pairDayDatas[0]?.id : null\n        if (!lastId) {\n          return { data: { pairDayDatas: [] }, error: false }\n        }\n        const pairLastId = getPairSequentialId({ id: lastId, pairId })\n        const pairDayIds = getIdsByTimeWindow({\n          pairAddress: pairId,\n          pairLastId,\n          timeWindow,\n          idsCount: timeWindowIdsCountMapping[timeWindow],\n        })\n        const pairDayData = await requestWithTimeout<PairDayDatasResponse>(client, pairDayDatasByIdsQuery, {\n          pairIds: pairDayIds,\n        })\n        return { data: pairDayData, error: false }\n      }\n      default:\n        return { data: null, error: false }\n    }\n  } catch (error) {\n    console.error('Failed to fetch price chart data', error)\n    return { error: true }\n  }\n}\n\nexport default fetchPairPriceData\n","import times from 'lodash/times'\nimport { PairDataTimeWindowEnum } from '../types'\nimport { timeWindowGapMapping } from './constants'\nimport { PairDayDatasResponse, PairHoursDatasResponse } from './types'\n\ntype getPairSequentialIdParams = {\n  id: string\n  pairId: string\n}\nexport const getPairSequentialId = ({ id, pairId }: getPairSequentialIdParams) => id.replace(`${pairId}-`, '')\n\ntype getPairHoursIdsByTimeWindowParams = {\n  pairAddress: string\n  pairLastId: string\n  timeWindow: PairDataTimeWindowEnum\n  idsCount: number\n}\n\nexport const getIdsByTimeWindow = ({\n  pairAddress,\n  pairLastId,\n  timeWindow,\n  idsCount,\n}: getPairHoursIdsByTimeWindowParams) => {\n  const pairLastIdAsNumber = Number(pairLastId)\n  if (timeWindow === PairDataTimeWindowEnum.DAY) {\n    return []\n  }\n  return times(idsCount, (value) => `${pairAddress}-${pairLastIdAsNumber - value * timeWindowGapMapping[timeWindow]}`)\n}\n\nexport const pairHasEnoughLiquidity = (\n  data: PairHoursDatasResponse | PairDayDatasResponse | null,\n  timeWindow: PairDataTimeWindowEnum,\n) => {\n  const liquidityThreshold = 10000\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n    case PairDataTimeWindowEnum.WEEK: {\n      const amountOfDataPoints = (data as PairHoursDatasResponse)?.pairHourDatas?.length ?? 1\n      const totalUSD = (data as PairHoursDatasResponse)?.pairHourDatas?.reduce((totalLiquidity, fetchPairEntry) => {\n        return totalLiquidity + parseFloat(fetchPairEntry.reserveUSD)\n      }, 0)\n      return totalUSD / amountOfDataPoints > liquidityThreshold\n    }\n    case PairDataTimeWindowEnum.MONTH:\n    case PairDataTimeWindowEnum.YEAR: {\n      const amountOfDataPoints = (data as PairDayDatasResponse)?.pairDayDatas?.length ?? 1\n      const totalUSD = (data as PairDayDatasResponse)?.pairDayDatas?.reduce((totalLiquidity, fetchPairEntry) => {\n        return totalLiquidity + parseFloat(fetchPairEntry.reserveUSD)\n      }, 0)\n      return totalUSD / amountOfDataPoints > liquidityThreshold\n    }\n    default:\n      return null\n  }\n}\n","import { useWeb3React } from '@pancakeswap/wagmi'\nimport { ChainId, Currency, CurrencyAmount, Pair, Trade, TradeType } from '@pancakeswap/sdk'\nimport { ParsedUrlQuery } from 'querystring'\nimport { useEffect, useMemo, useState } from 'react'\nimport { SLOW_INTERVAL } from 'config/constants'\nimport { DEFAULT_INPUT_CURRENCY, DEFAULT_OUTPUT_CURRENCY } from 'config/constants/exchange'\nimport useSWRImmutable from 'swr/immutable'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport { useRouter } from 'next/router'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { isAddress } from 'utils'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport { getBlocksFromTimestamps } from 'utils/getBlocksFromTimestamps'\nimport { getChangeForPeriod } from 'utils/getChangeForPeriod'\nimport { getLpFeesAndApr } from 'utils/getLpFeesAndApr'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { computeSlippageAdjustedAmounts } from 'utils/exchange'\nimport { CAKE, USDC } from '@pancakeswap/tokens'\nimport getLpAddress from 'utils/getLpAddress'\nimport { getTokenAddress } from 'views/Swap/components/Chart/utils'\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { AppState, useAppDispatch } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, updateDerivedPairData, updatePairData } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport fetchPairPriceData from './fetch/fetchPairPriceData'\nimport {\n  normalizeChartData,\n  normalizeDerivedChartData,\n  normalizeDerivedPairDataByActiveToken,\n  normalizePairDataByActiveToken,\n} from './normalizers'\nimport { PairDataTimeWindowEnum } from './types'\nimport { derivedPairByDataIdSelector, pairByDataIdSelector } from './selectors'\nimport fetchDerivedPriceData from './fetch/fetchDerivedPriceData'\nimport { pairHasEnoughLiquidity } from './fetch/utils'\nimport { fetchPoolData } from '../info/queries/pools/poolData'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\n// TODO: update\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade<Currency, Currency, TradeType>, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// Get swap price for single token disregarding slippage and price impact\nexport function useSingleTokenSwapInfo(\n  inputCurrencyId: string | undefined,\n  inputCurrency: Currency | undefined,\n  outputCurrencyId: string | undefined,\n  outputCurrency: Currency | undefined,\n): { [key: string]: number } {\n  const token0Address = getTokenAddress(inputCurrencyId)\n  const token1Address = getTokenAddress(outputCurrencyId)\n\n  const parsedAmount = tryParseAmount('1', inputCurrency ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(parsedAmount, outputCurrency ?? undefined)\n  if (!inputCurrency || !outputCurrency || !bestTradeExactIn) {\n    return null\n  }\n\n  const inputTokenPrice = parseFloat(bestTradeExactIn?.executionPrice?.toSignificant(6))\n  const outputTokenPrice = 1 / inputTokenPrice\n\n  return {\n    [token0Address]: inputTokenPrice,\n    [token1Address]: outputTokenPrice,\n  }\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(\n  independentField: Field,\n  typedValue: string,\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  recipient: string,\n): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmount: CurrencyAmount<Currency> | undefined\n  v2Trade: Trade<Currency, Currency, TradeType> | undefined\n  inputError?: string\n} {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n\n  const to: string | null = (recipient === null ? account : isAddress(recipient) || null) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  return typeof urlParam === 'string' && !Number.isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(\n  parsedQs: ParsedUrlQuery,\n  nativeSymbol?: string,\n  defaultOutputCurrency?: string,\n): SwapState {\n  let inputCurrency = isAddress(parsedQs.inputCurrency) || (nativeSymbol ?? DEFAULT_INPUT_CURRENCY)\n  let outputCurrency =\n    typeof parsedQs.outputCurrency === 'string'\n      ? isAddress(parsedQs.outputCurrency) || nativeSymbol\n      : defaultOutputCurrency ?? DEFAULT_OUTPUT_CURRENCY\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n    pairDataById: {},\n    derivedPairDataById: {},\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const native = useNativeCurrency()\n  const { query } = useRouter()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId || !native) return\n    const parsed = queryParametersToSwapState(query, native.symbol, CAKE[chainId]?.address ?? USDC[chainId]?.address)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n  }, [dispatch, chainId, query, native])\n\n  return result\n}\n\ntype useFetchPairPricesParams = {\n  token0Address: string\n  token1Address: string\n  timeWindow: PairDataTimeWindowEnum\n  currentSwapPrice: {\n    [key: string]: number\n  }\n}\n\nexport const useFetchPairPrices = ({\n  token0Address,\n  token1Address,\n  timeWindow,\n  currentSwapPrice,\n}: useFetchPairPricesParams) => {\n  const [pairId, setPairId] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const pairData = useSelector(pairByDataIdSelector({ pairId, timeWindow }))\n  const derivedPairData = useSelector(derivedPairByDataIdSelector({ pairId, timeWindow }))\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const fetchDerivedData = async () => {\n      console.info(\n        '[Price Chart]: Not possible to retrieve price data from single pool, trying to fetch derived prices',\n      )\n      try {\n        // Try to get at least derived data for chart\n        // This is used when there is no direct data for pool\n        // i.e. when multihops are necessary\n        const derivedData = await fetchDerivedPriceData(token0Address, token1Address, timeWindow)\n        if (derivedData) {\n          const normalizedDerivedData = normalizeDerivedChartData(derivedData)\n          dispatch(updateDerivedPairData({ pairData: normalizedDerivedData, pairId, timeWindow }))\n        } else {\n          dispatch(updateDerivedPairData({ pairData: [], pairId, timeWindow }))\n        }\n      } catch (error) {\n        console.error('Failed to fetch derived prices for chart', error)\n        dispatch(updateDerivedPairData({ pairData: [], pairId, timeWindow }))\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    const fetchAndUpdatePairPrice = async () => {\n      setIsLoading(true)\n      const { data } = await fetchPairPriceData({ pairId, timeWindow })\n      if (data) {\n        // Find out if Liquidity Pool has enough liquidity\n        // low liquidity pool might mean that the price is incorrect\n        // in that case try to get derived price\n        const hasEnoughLiquidity = pairHasEnoughLiquidity(data, timeWindow)\n        const newPairData = normalizeChartData(data, timeWindow) || []\n        if (newPairData.length > 0 && hasEnoughLiquidity) {\n          dispatch(updatePairData({ pairData: newPairData, pairId, timeWindow }))\n          setIsLoading(false)\n        } else {\n          console.info(`[Price Chart]: Liquidity too low for ${pairId}`)\n          dispatch(updatePairData({ pairData: [], pairId, timeWindow }))\n          fetchDerivedData()\n        }\n      } else {\n        dispatch(updatePairData({ pairData: [], pairId, timeWindow }))\n        fetchDerivedData()\n      }\n    }\n\n    if (!pairData && !derivedPairData && pairId && !isLoading) {\n      fetchAndUpdatePairPrice()\n    }\n  }, [\n    pairId,\n    timeWindow,\n    pairData,\n    currentSwapPrice,\n    token0Address,\n    token1Address,\n    derivedPairData,\n    dispatch,\n    isLoading,\n  ])\n\n  useEffect(() => {\n    const updatePairId = () => {\n      try {\n        const pairAddress = getLpAddress(token0Address, token1Address)?.toLowerCase()\n        if (pairAddress !== pairId) {\n          setPairId(pairAddress)\n        }\n      } catch (error) {\n        setPairId(null)\n      }\n    }\n\n    updatePairId()\n  }, [token0Address, token1Address, pairId])\n\n  const normalizedPairData = useMemo(\n    () => normalizePairDataByActiveToken({ activeToken: token0Address, pairData }),\n    [token0Address, pairData],\n  )\n\n  const normalizedDerivedPairData = useMemo(\n    () => normalizeDerivedPairDataByActiveToken({ activeToken: token0Address, pairData: derivedPairData }),\n    [token0Address, derivedPairData],\n  )\n\n  const hasSwapPrice = currentSwapPrice && currentSwapPrice[token0Address] > 0\n\n  const normalizedPairDataWithCurrentSwapPrice =\n    normalizedPairData?.length > 0 && hasSwapPrice\n      ? [...normalizedPairData, { time: new Date(), value: currentSwapPrice[token0Address] }]\n      : normalizedPairData\n\n  const normalizedDerivedPairDataWithCurrentSwapPrice =\n    normalizedDerivedPairData?.length > 0 && hasSwapPrice\n      ? [...normalizedDerivedPairData, { time: new Date(), value: currentSwapPrice[token0Address] }]\n      : normalizedDerivedPairData\n\n  const hasNoDirectData = normalizedPairDataWithCurrentSwapPrice && normalizedPairDataWithCurrentSwapPrice?.length === 0\n  const hasNoDerivedData =\n    normalizedDerivedPairDataWithCurrentSwapPrice && normalizedDerivedPairDataWithCurrentSwapPrice?.length === 0\n\n  // undefined is used for loading\n  let pairPrices = hasNoDirectData && hasNoDerivedData ? [] : undefined\n  if (normalizedPairDataWithCurrentSwapPrice && normalizedPairDataWithCurrentSwapPrice?.length > 0) {\n    pairPrices = normalizedPairDataWithCurrentSwapPrice\n  } else if (\n    normalizedDerivedPairDataWithCurrentSwapPrice &&\n    normalizedDerivedPairDataWithCurrentSwapPrice?.length > 0\n  ) {\n    pairPrices = normalizedDerivedPairDataWithCurrentSwapPrice\n  }\n  return { pairPrices, pairId }\n}\n\nexport const useLPApr = (pair?: Pair) => {\n  const { data: poolData } = useSWRImmutable(\n    pair && pair.chainId === ChainId.BSC ? ['LP7dApr', pair.liquidityToken.address] : null,\n    async () => {\n      const timestampsArray = getDeltaTimestamps()\n      const blocks = await getBlocksFromTimestamps(timestampsArray, 'desc', 1000)\n      const [block24h, block48h, block7d, block14d] = blocks ?? []\n      const lowerCasedAddress = pair.liquidityToken.address.toLowerCase()\n      const { error, data } = await fetchPoolData(block24h.number, block48h.number, block7d.number, block14d.number, [\n        lowerCasedAddress,\n      ])\n      if (error) return null\n      const current = parseFloat(data?.now[0]?.volumeUSD)\n      const currentReserveUSD = parseFloat(data?.now[0]?.reserveUSD)\n      const oneDay = parseFloat(data?.oneDayAgo[0]?.volumeUSD)\n      const twoDays = parseFloat(data?.twoDaysAgo[0]?.volumeUSD)\n      const week = parseFloat(data?.oneWeekAgo[0]?.volumeUSD)\n      const twoWeeks = parseFloat(data?.twoWeeksAgo[0]?.volumeUSD)\n      const [volumeUSD] = getChangeForPeriod(current, oneDay, twoDays)\n      const [volumeUSDWeek] = getChangeForPeriod(current, week, twoWeeks)\n      const liquidityUSD = currentReserveUSD || 0\n      const { lpApr7d } = getLpFeesAndApr(volumeUSD, volumeUSDWeek, liquidityUSD)\n      return lpApr7d ? { lpApr7d } : null\n    },\n    {\n      refreshInterval: SLOW_INTERVAL,\n    },\n  )\n\n  return poolData\n}\n","import { fromUnixTime } from 'date-fns'\nimport fromPairs from 'lodash/fromPairs'\nimport { PairDayDatasResponse, PairHoursDatasResponse } from './fetch/types'\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum, PairPricesNormalized } from './types'\n\nexport const normalizeChartData = (\n  data: PairHoursDatasResponse | PairDayDatasResponse | null,\n  timeWindow: PairDataTimeWindowEnum,\n) => {\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n    case PairDataTimeWindowEnum.WEEK:\n      return (data as PairHoursDatasResponse)?.pairHourDatas?.map((fetchPairEntry) => ({\n        time: fetchPairEntry.hourStartUnix,\n        token0Id: fetchPairEntry.pair.token0.id,\n        token1Id: fetchPairEntry.pair.token1.id,\n        reserve0: parseFloat(fetchPairEntry.reserve0),\n        reserve1: parseFloat(fetchPairEntry.reserve1),\n      }))\n    case PairDataTimeWindowEnum.MONTH:\n    case PairDataTimeWindowEnum.YEAR:\n      return (data as PairDayDatasResponse)?.pairDayDatas?.map((fetchPairEntry) => ({\n        time: fetchPairEntry.date,\n        token0Id: fetchPairEntry.pairAddress.token0.id,\n        token1Id: fetchPairEntry.pairAddress.token1.id,\n        reserve0: parseFloat(fetchPairEntry.reserve0),\n        reserve1: parseFloat(fetchPairEntry.reserve1),\n      }))\n    default:\n      return null\n  }\n}\n\nexport const normalizeDerivedChartData = (data: any) => {\n  if (!data?.token0DerivedBnb || data?.token0DerivedBnb.length === 0) {\n    return []\n  }\n\n  const token1DerivedBnbEntryMap: any = fromPairs(\n    data?.token1DerivedBnb?.map((entry) => [entry.timestamp, entry]) ?? [],\n  )\n\n  return data?.token0DerivedBnb.reduce((acc, token0DerivedBnbEntry) => {\n    const token1DerivedBnbEntry = token1DerivedBnbEntryMap[token0DerivedBnbEntry.timestamp]\n    if (token1DerivedBnbEntry) {\n      acc.push({\n        time: parseInt(token0DerivedBnbEntry.timestamp, 10),\n        token0Id: token0DerivedBnbEntry.tokenAddress,\n        token1Id: token1DerivedBnbEntry.tokenAddress,\n        token0DerivedBNB: token0DerivedBnbEntry.derivedBNB,\n        token1DerivedBNB: token1DerivedBnbEntry.derivedBNB,\n      })\n    }\n    return acc\n  }, [])\n}\n\ntype normalizePairDataByActiveTokenParams = {\n  pairData: PairDataNormalized\n  activeToken: string\n}\n\nexport const normalizePairDataByActiveToken = ({\n  pairData,\n  activeToken,\n}: normalizePairDataByActiveTokenParams): PairPricesNormalized =>\n  pairData\n    ?.map((pairPrice) => ({\n      time: fromUnixTime(pairPrice.time),\n      value:\n        activeToken === pairPrice?.token0Id\n          ? pairPrice.reserve1 / pairPrice.reserve0\n          : pairPrice.reserve0 / pairPrice.reserve1,\n    }))\n    .reverse()\n\ntype normalizeDerivedPairDataByActiveTokenParams = {\n  pairData: DerivedPairDataNormalized\n  activeToken: string\n}\n\nexport const normalizeDerivedPairDataByActiveToken = ({\n  pairData,\n  activeToken,\n}: normalizeDerivedPairDataByActiveTokenParams): PairPricesNormalized =>\n  pairData?.map((pairPrice) => ({\n    time: fromUnixTime(pairPrice.time),\n    value:\n      activeToken === pairPrice?.token0Id\n        ? pairPrice.token0DerivedBNB / pairPrice.token1DerivedBNB\n        : pairPrice.token1DerivedBNB / pairPrice.token0DerivedBNB,\n  }))\n","import get from 'lodash/get'\nimport { AppState } from 'state'\nimport { PairDataTimeWindowEnum } from './types'\n\ntype pairByDataIdSelectorParams = {\n  pairId: string\n  timeWindow: PairDataTimeWindowEnum\n}\n\nexport const pairByDataIdSelector =\n  ({ pairId, timeWindow }: pairByDataIdSelectorParams) =>\n  (state: AppState) =>\n    get(state, ['swap', 'pairDataById', pairId, timeWindow])\n\nexport const derivedPairByDataIdSelector =\n  ({ pairId, timeWindow }: pairByDataIdSelectorParams) =>\n  (state: AppState) =>\n    get(state, ['swap', 'derivedPairDataById', pairId, timeWindow])\n","export type PairDataNormalized = {\n  time: number\n  token0Id: string\n  token1Id: string\n  reserve0: number\n  reserve1: number\n}[]\n\nexport type DerivedPairDataNormalized = {\n  time: number\n  token0Id: string\n  token1Id: string\n  token0DerivedBNB: number\n  token1DerivedBNB: number\n}[]\n\nexport type PairPricesNormalized = {\n  time: Date\n  value: number\n}[]\n\nexport enum PairDataTimeWindowEnum {\n  DAY,\n  WEEK,\n  MONTH,\n  YEAR,\n}\n","import { Currency, CurrencyAmount, JSBI, Native, Token } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport orderBy from 'lodash/orderBy'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useNativeBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount<Native> | undefined\n} {\n  const native = useNativeCurrency()\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses ? orderBy(uncheckedAddresses.map(isAddress).filter((a): a is string => a !== false)) : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    useMemo(() => addresses.map((address) => [address]), [addresses]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount<Native> }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.fromRawAmount(native, JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results, native],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(\n    validatedTokenAddresses,\n    ERC20_INTERFACE,\n    'balanceOf',\n    useMemo(() => [address], [address]),\n  )\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = CurrencyAmount.fromRawAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: CurrencyAmount<Token> | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): CurrencyAmount<Token> | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount<Currency> | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency?.isToken) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsNative: boolean = useMemo(\n    () => currencies?.some((currency) => currency?.isNative) ?? false,\n    [currencies],\n  )\n  const uncheckedAddresses = useMemo(() => (containsNative ? [account] : []), [containsNative, account])\n  const nativeBalance = useNativeBalances(uncheckedAddresses)\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency?.isToken) return tokenBalances[currency.address]\n        if (currency?.isNative) return nativeBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, nativeBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount<Currency> | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: CurrencyAmount<Token> | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency?.isNative) return currency.symbol?.toUpperCase()\n  if (currency?.isToken) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, CurrencyAmount, Fraction, JSBI, Percent, Trade, TradeType } from '@pancakeswap/sdk'\nimport IPancakeRouter02ABI from 'config/abi/IPancakeRouter02.json'\nimport { IPancakeRouter02 } from 'config/abi/types/IPancakeRouter02'\nimport {\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  BIPS_BASE,\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  INPUT_FRACTION_AFTER_FEE,\n  ONE_HUNDRED_PERCENT,\n  ROUTER_ADDRESS,\n} from 'config/constants/exchange'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { useContract } from 'hooks/useContract'\nimport { StableTrade } from 'views/Swap/StableSwap/hooks/useStableTradeExactIn'\nimport { Field } from '../state/swap/actions'\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), BIPS_BASE)\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 - slippage)), BIPS_BASE),\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 + slippage)), BIPS_BASE),\n  ]\n}\n\nexport function useRouterContract() {\n  const { chainId } = useActiveChainId()\n  return useContract<IPancakeRouter02>(ROUTER_ADDRESS[chainId], IPancakeRouter02ABI, true)\n}\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade<Currency, Currency, TradeType> | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount<Currency> | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    CurrencyAmount.fromRawAmount(\n      trade.inputAmount.currency,\n      realizedLPFee.multiply(trade.inputAmount.quotient).quotient,\n    )\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade<Currency, Currency, TradeType> | StableTrade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount<Currency> } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade<Currency, Currency, TradeType>, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { Trade, Percent, Currency, TradeType } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from 'config/constants/exchange'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade<Currency, Currency, TradeType> | undefined | null,\n  tradeB: Trade<Currency, Currency, TradeType> | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.asFraction\n    .multiply(minimumDelta.add(ONE_HUNDRED_PERCENT))\n    .lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","import { Swap } from '@pancakeswap/uikit'\nimport { PageMeta } from 'components/Layout/Page'\nimport { EXCHANGE_DOCS_URLS } from 'config/constants'\nimport { usePhishingBannerManager } from 'state/user/hooks'\n\nconst Page: React.FC<\n  React.PropsWithChildren<{\n    removePadding?: boolean\n    hideFooterOnDesktop?: boolean\n    noMinHeight?: boolean\n    helpUrl?: string\n  }>\n> = ({\n  children,\n  removePadding = false,\n  hideFooterOnDesktop = false,\n  noMinHeight = false,\n  helpUrl = EXCHANGE_DOCS_URLS,\n  ...props\n}) => {\n  const [showPhishingBanner] = usePhishingBannerManager()\n\n  return (\n    <>\n      <PageMeta />\n      <Swap.Page\n        removePadding={removePadding}\n        noMinHeight={noMinHeight}\n        hideFooterOnDesktop={hideFooterOnDesktop}\n        helpUrl={helpUrl}\n        hasWarningBanner={showPhishingBanner}\n        {...props}\n      >\n        {children}\n      </Swap.Page>\n    </>\n  )\n}\n\nexport default Page\n","// BNB Address\nconst BNB_ADDRESS = '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c'\n\nexport { BNB_ADDRESS }\n","import { BNB_ADDRESS } from './constants'\n\nconst MIN_VALUE_DISPLAYED = 0.001\n\nexport const getTimeWindowChange = (lineChartData) => {\n  if (lineChartData.length > 0) {\n    const firstValue = lineChartData.find(({ value }) => !!value && value > 0)?.value ?? 0\n    const lastValue = lineChartData[lineChartData.length - 1].value\n    const changeValue = lastValue - firstValue\n\n    return {\n      changeValue:\n        changeValue > 0 ? Math.max(changeValue, MIN_VALUE_DISPLAYED) : Math.min(changeValue, MIN_VALUE_DISPLAYED * -1),\n      changePercentage: ((changeValue / firstValue) * 100).toFixed(2),\n    }\n  }\n\n  return {\n    changeValue: 0,\n    changePercentage: 0,\n  }\n}\n\nexport const getTokenAddress = (tokenAddress: undefined | string) => {\n  if (!tokenAddress) {\n    return ''\n  }\n  const lowerCaseAddress = tokenAddress.toLowerCase()\n  if (lowerCaseAddress === 'bnb') {\n    return BNB_ADDRESS\n  }\n\n  return lowerCaseAddress\n}\n","import { AtomBox, AtomBoxProps } from \"@pancakeswap/ui\";\n\nexport const Column = (props: AtomBoxProps) => (\n  <AtomBox display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" {...props} />\n);\nexport const AutoColumn = ({ gap, justify, ...props }: AtomBoxProps & { justify?: any }) => (\n  <AtomBox display=\"grid\" gridAutoRows=\"auto\" justifyItems={justify} rowGap={gap} {...props} />\n);\n\nexport const ColumnCenter = (props: AtomBoxProps) => <Column width=\"full\" alignItems=\"center\" {...props} />;\n","import { AtomBox, AtomBoxProps } from \"@pancakeswap/ui\";\n\nexport const Row = ({\n  width = \"100%\",\n  alignItems = \"center\",\n  justifyContent = \"flex-start\",\n  padding = \"0\",\n  ...props\n}: AtomBoxProps) => (\n  <AtomBox\n    display=\"flex\"\n    width={width}\n    alignItems={alignItems}\n    justifyContent={justifyContent}\n    padding={padding}\n    {...props}\n  />\n);\n\nexport const AutoRow = (props: AtomBoxProps) => <Row flexWrap=\"wrap\" {...props} />;\n\nexport const RowFixed = (props: AtomBoxProps) => <Row width=\"fit\" flexWrap=\"wrap\" {...props} />;\n\nexport const RowBetween = (props: AtomBoxProps) => <Row flexWrap=\"wrap\" justifyContent=\"space-between\" {...props} />;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M16 17.01V11c0-.55-.45-1-1-1s-1 .45-1 1v6.01h-1.79c-.45 0-.67.54-.35.85l2.79 2.78c.2.19.51.19.71 0l2.79-2.78c.32-.31.09-.85-.35-.85H16zM8.65 3.35L5.86 6.14c-.32.31-.1.85.35.85H8V13c0 .55.45 1 1 1s1-.45 1-1V6.99h1.79c.45 0 .67-.54.35-.85L9.35 3.35a.501.501 0 00-.7 0z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 96 96\" {...props}>\n      <circle cx=\"48\" cy=\"48\" r=\"48\" fill=\"#F0B90B\" />\n      <path\n        d=\"M30.9008 25.9057L47.8088 16.0637L64.7169 25.9057L58.5007 29.5416L47.8088 23.3355L37.117 29.5416L30.9008 25.9057ZM64.7169 38.3179L58.5007 34.682L47.8088 40.8881L37.117 34.682L30.9008 38.3179V45.5897L41.5926 51.7958V64.2079L47.8088 67.8438L54.0251 64.2079V51.7958L64.7169 45.5897V38.3179ZM64.7169 58.0018V50.7301L58.5007 54.366V61.6377L64.7169 58.0018ZM69.1305 60.572L58.4386 66.7781V74.0499L75.3467 64.2079V44.524L69.1305 48.1599V60.572ZM62.9143 32.1118L69.1305 35.7477V43.0195L75.3467 39.3836V32.1118L69.1305 28.4759L62.9143 32.1118ZM41.5926 69.411V76.6828L47.8088 80.3187L54.0251 76.6828V69.411L47.8088 73.0469L41.5926 69.411ZM30.9008 58.0018L37.117 61.6377V54.366L30.9008 50.7301V58.0018ZM41.5926 32.1118L47.8088 35.7477L54.0251 32.1118L47.8088 28.4759L41.5926 32.1118ZM26.4872 35.7477L32.7034 32.1118L26.4872 28.4759L20.271 32.1118V39.3836L26.4872 43.0195V35.7477ZM26.4872 48.1599L20.271 44.524V64.2079L37.1791 74.0499V66.7781L26.4872 60.572V48.1599Z\"\n        fill=\"white\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.00012 16.2L5.50012 12.7C5.11012 12.31 4.49012 12.31 4.10012 12.7C3.71012 13.09 3.71012 13.71 4.10012 14.1L8.29012 18.29C8.68012 18.68 9.31012 18.68 9.70012 18.29L20.3001 7.70001C20.6901 7.31001 20.6901 6.69001 20.3001 6.30001C19.9101 5.91001 19.2901 5.91001 18.9001 6.30001L9.00012 16.2Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13 3C8.03 3 4 7.03 4 12H2.20711C1.76165 12 1.53857 12.5386 1.85355 12.8536L4.54604 15.546C4.73751 15.7375 5.04662 15.7418 5.24329 15.5556L8.08805 12.8631C8.4164 12.5524 8.19646 12 7.74435 12H6C6 8.13 9.13 5 13 5C16.87 5 20 8.13 20 12C20 15.87 16.87 19 13 19C11.4314 19 9.98175 18.4782 8.81739 17.601C8.37411 17.267 7.74104 17.259 7.3486 17.6514C6.95725 18.0428 6.95413 18.6823 7.38598 19.0284C8.92448 20.2615 10.8708 21 13 21C17.97 21 22 16.97 22 12C22 7.03 17.97 3 13 3ZM12 8V13L16.28 15.54L17 14.33L13.5 12.25V8H12Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { AtomBox } from \"@pancakeswap/ui\";\nimport { ReactNode } from \"react\";\nimport { Heading } from \"../../components/Heading\";\nimport { Text } from \"../../components/Text\";\n\ninterface Props {\n  title: ReactNode;\n  subtitle: ReactNode;\n}\n\nexport const CurrencyInputHeader = ({ title, subtitle }: Props) => {\n  return (\n    <AtomBox width=\"full\" alignItems=\"center\" flexDirection=\"column\" padding=\"24px\" borderBottom=\"1\">\n      <AtomBox display=\"flex\" width=\"full\" alignItems=\"center\" justifyContent=\"space-between\">\n        {title}\n      </AtomBox>\n      {subtitle}\n    </AtomBox>\n  );\n};\n\nexport const CurrencyInputHeaderTitle = ({ children }: { children: ReactNode }) => (\n  <Heading as=\"h2\">{children}</Heading>\n);\nexport const CurrencyInputHeaderSubTitle = ({ children }: { children: ReactNode }) => (\n  <Text color=\"textSubtle\" fontSize=\"14px\" textAlign=\"center\">\n    {children}\n  </Text>\n);\n","import { AtomBox } from \"@pancakeswap/ui\";\nimport { inputContainerVariants } from \"./SwapWidget.css\";\n\nimport { NumericalInput } from \"./NumericalInput\";\n\ntype ZapStyle = \"noZap\" | \"zap\";\n\ninterface CurrencyInputPanelProps {\n  value: string;\n  onUserInput: (value: string) => void;\n  onInputBlur?: () => void;\n  id: string;\n  zapStyle?: ZapStyle;\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n  disabled?: boolean;\n  error?: boolean;\n}\nexport function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onInputBlur,\n  zapStyle,\n  top,\n  bottom,\n  id,\n  disabled,\n  error,\n}: CurrencyInputPanelProps) {\n  return (\n    <AtomBox position=\"relative\" id={id}>\n      <AtomBox display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        {top}\n      </AtomBox>\n      <AtomBox\n        display=\"flex\"\n        flexDirection=\"column\"\n        flexWrap=\"nowrap\"\n        position=\"relative\"\n        backgroundColor=\"backgroundAlt\"\n        zIndex=\"1\"\n      >\n        <AtomBox\n          as=\"label\"\n          className={inputContainerVariants({\n            hasZapStyle: !!zapStyle,\n            error,\n          })}\n        >\n          <AtomBox\n            display=\"flex\"\n            flexDirection=\"row\"\n            flexWrap=\"nowrap\"\n            color=\"text\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            px=\"16px\"\n            pt=\"12px\"\n          >\n            <NumericalInput\n              error={error}\n              disabled={disabled}\n              className=\"token-amount-input\"\n              value={value}\n              onBlur={onInputBlur}\n              onUserInput={(val) => {\n                onUserInput(val);\n              }}\n            />\n          </AtomBox>\n          {bottom}\n        </AtomBox>\n        {disabled && (\n          <AtomBox role=\"presentation\" position=\"absolute\" inset=\"0\" backgroundColor=\"backgroundAlt\" opacity=\"0.6\" />\n        )}\n      </AtomBox>\n    </AtomBox>\n  );\n}\n","import { memo, ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from \"../../components\";\n\nconst Wrapper = styled.div<{ $isSide: boolean }>`\n  width: 100%;\n  height: ${({ $isSide }) => ($isSide ? \"100%\" : \"auto\")};\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  padding-top: 16px;\n  padding-right: ${({ $isSide }) => ($isSide ? \"32px\" : \"0px\")};\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: ${({ $isSide }) => ($isSide ? \"column\" : \"row\")};\n  }\n`;\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`;\n\ntype FooterVariant = \"default\" | \"side\";\n\nconst Footer: React.FC<\n  React.PropsWithChildren<{ variant?: FooterVariant; helpUrl?: string; isEvm?: boolean; helpImage?: ReactNode }>\n> = ({\n  variant = \"default\",\n  helpUrl,\n  helpImage = <Image src=\"https://cdn.pancakeswap.com/help/help.png\" alt=\"Get some help\" width={160} height={108} />,\n  isEvm = true,\n}) => {\n  const { t } = useTranslation();\n  const isSide = variant === \"side\";\n  return (\n    <Wrapper $isSide={isSide}>\n      <Flex flexDirection={isSide ? \"column\" : [\"column\", \"column\", \"row\"]} alignItems=\"center\">\n        {isEvm ? (\n          <>\n            <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n              <ButtonMenuItem>V2</ButtonMenuItem>\n              <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n                {t(\"V1 (old)\")}\n              </ButtonMenuItem>\n            </ButtonMenu>\n            <LinkExternal\n              id=\"ercBridge\"\n              href=\"https://docs.binance.org/smart-chain/guides/cross-chain.html\"\n              ml={[0, 0, \"40px\"]}\n              mt={[\"20px\", \"20px\", isSide ? \"20px\" : 0]}\n              mb={[\"8px\", \"8px\", 0]}\n            >\n              {t(\"Convert ERC-20 to BEP-20\")}\n            </LinkExternal>\n          </>\n        ) : (\n          <div />\n        )}\n      </Flex>\n      {isSide && <Flex flexGrow={1} />}\n      {helpUrl && (\n        <Flex\n          flexGrow={isSide ? 0 : 1}\n          alignItems=\"center\"\n          width={[\"100%\", \"100%\", \"100%\", isSide ? \"100%\" : \"auto\"]}\n          justifyContent={[\"center\", \"center\", \"center\", \"flex-end\"]}\n        >\n          <BubbleWrapper>\n            <Button id=\"clickExchangeHelp\" as=\"a\" external href={helpUrl} variant=\"subtle\">\n              {t(\"Need help ?\")}\n            </Button>\n            <Svg viewBox=\"0 0 16 16\">\n              <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n            </Svg>\n          </BubbleWrapper>\n          {helpImage}\n        </Flex>\n      )}\n    </Wrapper>\n  );\n};\n\nexport const SwapFooter = memo(Footer);\n","export function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n","import clsx from \"clsx\";\nimport { memo } from \"react\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { escapeRegExp } from \"@pancakeswap/utils/escapeRegExp\";\nimport { inputVariants } from \"./SwapWidget.css\";\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`); // match escaped \".\" characters via in a non-capturing group\n\nexport const NumericalInput = memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  error,\n  align,\n  className,\n  ...rest\n}: {\n  value: string | number;\n  onUserInput: (input: string) => void;\n  error?: boolean;\n  fontSize?: string;\n  align?: \"right\" | \"left\";\n} & Omit<React.HTMLProps<HTMLInputElement>, \"ref\" | \"onChange\" | \"as\">) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === \"\" || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput);\n    }\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <input\n      className={clsx(\n        className,\n        inputVariants({\n          error,\n          align,\n        })\n      )}\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, \".\"));\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t(\"Token Amount\")}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || \"0.0\"}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  );\n});\n","import { AtomBox, AtomBoxProps } from \"@pancakeswap/ui\";\nimport { ReactNode } from \"react\";\nimport { SwapFooter } from \"./Footer\";\nimport { pageVariants } from \"./SwapWidget.css\";\n\ntype SwapPageProps = AtomBoxProps & {\n  removePadding?: boolean;\n  hideFooterOnDesktop?: boolean;\n  noMinHeight?: boolean;\n  helpUrl?: string;\n  isEvm?: boolean;\n  helpImage?: ReactNode;\n  hasWarningBanner?: boolean;\n};\n\nexport const SwapPage = ({\n  removePadding,\n  noMinHeight,\n  children,\n  hideFooterOnDesktop,\n  helpUrl,\n  isEvm,\n  helpImage,\n  ...props\n}: SwapPageProps) => (\n  <AtomBox className={pageVariants({ removePadding, noMinHeight })} {...props}>\n    {children}\n    <AtomBox display=\"flex\" flexGrow={1} />\n    <AtomBox display={[\"block\", null, null, hideFooterOnDesktop ? \"none\" : \"block\"]} width=\"100%\">\n      <SwapFooter isEvm={isEvm} helpUrl={helpUrl} helpImage={helpImage} />\n    </AtomBox>\n  </AtomBox>\n);\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { useIsMounted } from \"@pancakeswap/hooks\";\nimport { PropsWithChildren, ReactNode } from \"react\";\nimport { AutoColumn, RowBetween, Text, TextProps } from \"../../components\";\n\ntype SwapInfoType = {\n  price: ReactNode;\n  allowedSlippage: number;\n};\n\nexport const SwapInfoLabel = (props: PropsWithChildren<TextProps>) => (\n  <Text fontSize=\"12px\" bold color=\"secondary\" {...props} />\n);\n\nexport const SwapInfo = ({ allowedSlippage, price }: SwapInfoType) => {\n  const { t } = useTranslation();\n  const isMounted = useIsMounted();\n\n  return (\n    <AutoColumn gap=\"sm\" py=\"0\" px=\"16px\">\n      <RowBetween alignItems=\"center\">{price}</RowBetween>\n      <RowBetween alignItems=\"center\">\n        <SwapInfoLabel>{t(\"Slippage Tolerance\")}</SwapInfoLabel>\n        {isMounted && (\n          <Text bold color=\"primary\">\n            {allowedSlippage / 100}%\n          </Text>\n        )}\n      </RowBetween>\n    </AutoColumn>\n  );\n};\n","import { ButtonProps, IconButton } from \"../../components/Button\";\nimport { ArrowDownIcon, ArrowUpDownIcon } from \"../../components/Svg\";\nimport { switchButtonClass, iconDownClass, iconUpDownClass } from \"./SwapWidget.css\";\nimport { CurrencyInputPanel } from \"./CurrencyInputPanel\";\nimport { CurrencyInputHeader, CurrencyInputHeaderSubTitle, CurrencyInputHeaderTitle } from \"./CurrencyInputHeader\";\nimport { SwapPage } from \"./Page\";\nimport { SwapFooter } from \"./Footer\";\nimport { SwapInfo, SwapInfoLabel } from \"./SwapInfo\";\nimport { TradePrice } from \"./TradePrice\";\n\nconst SwapSwitchButton = (props: ButtonProps) => (\n  <IconButton className={switchButtonClass} variant=\"light\" scale=\"sm\" {...props}>\n    <ArrowDownIcon className={iconDownClass} color=\"primary\" />\n    <ArrowUpDownIcon className={iconUpDownClass} color=\"primary\" />\n  </IconButton>\n);\n\nconst Swap = {\n  SwitchButton: SwapSwitchButton,\n  CurrencyInputHeaderTitle,\n  CurrencyInputHeaderSubTitle,\n  CurrencyInputHeader,\n  CurrencyInputPanel,\n  Page: SwapPage,\n  Footer: SwapFooter,\n  Info: SwapInfo,\n  InfoLabel: SwapInfoLabel,\n  TradePrice,\n};\n\nexport { Swap };\n","import { Price, Currency } from \"@pancakeswap/swap-sdk-core\";\nimport { AtomBox } from \"@pancakeswap/ui/components/AtomBox\";\nimport { Text, AutoRenewIcon } from \"@pancakeswap/uikit\";\nimport { useState } from \"react\";\nimport { balanceMaxMiniClass } from \"./SwapWidget.css\";\n\ninterface TradePriceProps {\n  price?: Price<Currency, Currency>;\n}\n\nexport function TradePrice({ price }: TradePriceProps) {\n  const [showInverted, setShowInverted] = useState<boolean>(false);\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6);\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency);\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`;\n\n  return (\n    <Text style={{ justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>\n      {show ? (\n        <>\n          {formattedPrice ?? \"-\"} {label}\n          <AtomBox className={balanceMaxMiniClass} onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </AtomBox>\n        </>\n      ) : (\n        \"-\"\n      )}\n    </Text>\n  );\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, JSBI } from '@pancakeswap/swap-sdk-core'\n\n// try to parse a user entered amount for a given token\nfunction tryParseAmount<T extends Currency>(value?: string, currency?: T): CurrencyAmount<T> | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n\n    if (typedValueParsed !== '0') {\n      return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nexport default tryParseAmount\n"],"names":["styled","Card","BodyWrapper","AppBody","children","Text","Flex","Heading","IconButton","ArrowBackIcon","NotificationDot","QuestionHelper","useExpertModeManager","GlobalSettings","Link","Transactions","SettingsMode","AppHeaderContainer","theme","colors","cardBorder","AppHeader","title","subtitle","helper","backTo","noConfig","expertMode","alignItems","width","style","gap","passHref","href","as","scale","variant","onClick","flexDirection","mb","justifyContent","text","ml","placement","show","mode","SWAP_LIQUIDITY","color","fontSize","CheckmarkIcon","CloseIcon","LinkExternal","getBlockExploreLink","CircleLoader","TransactionState","div","primary","IconWrapper","pending","success","failure","Transaction","tx","chainId","summary","receipt","status","hash","useCallback","Modal","ModalBody","Button","useTranslation","isEmpty","groupBy","useAllSortedRecentTransactions","useAppDispatch","clearAllTransactions","chains","useWeb3React","AutoRow","ConnectWalletButton","renderTransactions","transactions","map","addedTime","TransactionsModal","onDismiss","account","dispatch","sortedRecentTransactions","t","hasTransactions","clearAllTransactionsCallback","headerBackground","Object","entries","chainIdNumber","Number","groupedTransactions","values","trxDetails","Boolean","confirmed","true","false","find","c","id","name","HistoryIcon","useModal","onPresentTransactionsModal","default","Column","ColumnCenter","AutoColumn","justify","Box","Row","align","padding","border","borderRadius","RowBetween","RowFlat","RowFixed","keyframes","rotate","StyledSVG","svg","size","stroke","rest","viewBox","fill","xmlns","path","d","strokeWidth","strokeLinecap","strokeLinejoin","ChainId","BinanceIcon","useMemo","WrappedTokenInfo","useHttpLocations","getTokenLogoURL","Logo","StyledLogo","CurrencyLogo","currency","uriLocations","logoURI","undefined","srcs","isNative","isToken","tokenLogoURL","BSC","alt","symbol","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","toString","marginRight","StyledListLogo","ListLogo","useState","HelpIcon","BAD_SRCS","refresh","src","s","img","onError","i","isTradeBetter","Trade","flatMap","useActiveWeb3React","useUserSingleHopOnly","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","BETTER_TRADE_LESS_HOPS_THRESHOLD","ADDITIONAL_BASES","PairState","usePairs","wrappedCurrency","useUnsupportedTokens","useWarningTokens","useAllCommonPairs","currencyA","currencyB","tokenA","tokenB","bases","common","additionalA","address","additionalB","basePairs","base","otherBase","allPairCombinations","filter","tokens","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","equals","allPairs","result","EXISTS","reduce","memo","curr","liquidityToken","MAX_HOPS","useTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","length","bestTradeExactIn","maxHops","maxNumResults","bestTradeSoFar","currentTrade","useTradeExactOut","currencyIn","currencyAmountOut","bestTradeExactOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","keys","includes","useIsTransactionWarning","PairDataTimeWindowEnum","timeWindowIdsCountMapping","DAY","WEEK","MONTH","YEAR","timeWindowGapMapping","gql","getDerivedPrices","tokenAddress","blocks","block","timestamp","number","getDerivedPricesQueryConstructor","subqueries","orderBy","INFO_CLIENT","ONE_DAY_UNIX","ONE_HOUR_SECONDS","getBlocksFromTimestamps","getUnixTime","startOfHour","sub","multiQuery","getTokenDerivedBnbPrices","prices","console","error","tokenPrices","forEach","priceKey","split","push","derivedBNB","parseFloat","tokenPrice","parseInt","getInterval","timeWindow","getSkipDaysToStart","fetchDerivedPriceData","token0Address","token1Address","interval","endTimestamp","Date","startTimestamp","days","timestamps","time","token0DerivedBnb","token1DerivedBnb","Promise","all","lastPairDayId","pairHourDatas","pairDayDatasByIdsQuery","pairDayDatas","pairHourDatasByIds","lastPairHourId","requestWithTimeout","infoClient","getIdsByTimeWindow","getPairSequentialId","fetchPairPriceData","pairId","client","data","first","lastPairHourIdData","lastId","pairHourId","pairHourIds","pairAddress","pairLastId","idsCount","pairHoursData","pairIds","lastPairDayIdData","pairDayIds","pairDayData","times","replace","pairLastIdAsNumber","value","pairHasEnoughLiquidity","liquidityThreshold","amountOfDataPoints","totalUSD","totalLiquidity","fetchPairEntry","reserveUSD","useEffect","SLOW_INTERVAL","DEFAULT_INPUT_CURRENCY","DEFAULT_OUTPUT_CURRENCY","useSWRImmutable","useDispatch","useSelector","useRouter","isAddress","getDeltaTimestamps","getChangeForPeriod","getLpFeesAndApr","useNativeCurrency","computeSlippageAdjustedAmounts","CAKE","USDC","getLpAddress","getTokenAddress","tryParseAmount","useCurrencyBalances","Field","replaceSwapState","updateDerivedPairData","updatePairData","useUserSlippageTolerance","normalizeChartData","normalizeDerivedChartData","normalizeDerivedPairDataByActiveToken","normalizePairDataByActiveToken","derivedPairByDataIdSelector","pairByDataIdSelector","fetchPoolData","useSwapState","state","swap","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","some","token","pairs","pair","useSingleTokenSwapInfo","inputCurrencyId","inputCurrency","outputCurrencyId","outputCurrency","parsedAmount","inputTokenPrice","executionPrice","toSignificant","outputTokenPrice","useDerivedSwapInfo","independentField","typedValue","recipient","to","relevantTokenBalances","isExactIn","INPUT","v2Trade","currencyBalances","OUTPUT","currencies","inputError","formattedTo","indexOf","allowedSlippage","slippageAdjustedAmounts","balanceIn","amountIn","lessThan","parseTokenAmountURLParameter","urlParam","isNaN","parseIndependentFieldURLParameter","toLowerCase","ADDRESS_REGEX","validatedRecipient","test","queryParametersToSwapState","parsedQs","nativeSymbol","defaultOutputCurrency","currencyId","exactAmount","exactField","pairDataById","derivedPairDataById","useDefaultsFromURLSearch","native","query","setResult","parsed","field","useFetchPairPrices","currentSwapPrice","setPairId","isLoading","setIsLoading","pairData","derivedPairData","fetchDerivedData","info","derivedData","normalizedDerivedData","fetchAndUpdatePairPrice","hasEnoughLiquidity","newPairData","updatePairId","normalizedPairData","activeToken","normalizedDerivedPairData","hasSwapPrice","normalizedPairDataWithCurrentSwapPrice","normalizedDerivedPairDataWithCurrentSwapPrice","hasNoDirectData","hasNoDerivedData","pairPrices","useLPApr","poolData","timestampsArray","block24h","block48h","block7d","block14d","lowerCasedAddress","current","now","volumeUSD","currentReserveUSD","oneDay","oneDayAgo","twoDays","twoDaysAgo","week","oneWeekAgo","twoWeeks","twoWeeksAgo","volumeUSDWeek","liquidityUSD","lpApr7d","refreshInterval","fromUnixTime","fromPairs","hourStartUnix","token0Id","token0","token1Id","token1","reserve0","reserve1","date","token1DerivedBnbEntryMap","entry","acc","token0DerivedBnbEntry","token1DerivedBnbEntry","token0DerivedBNB","token1DerivedBNB","pairPrice","reverse","get","CurrencyAmount","JSBI","ERC20_INTERFACE","useAllTokens","useMulticallContract","useSingleContractMultipleData","useMultipleContractSingleData","useNativeBalances","uncheckedAddresses","multicallContract","addresses","a","results","fromRawAmount","BigInt","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","anyLoading","callState","loading","amount","useTokenBalances","useTokenBalance","tokenBalances","containsNative","nativeBalance","useCurrencyBalance","useAllTokenBalances","allTokens","allTokensArray","toUpperCase","Error","Percent","IPancakeRouter02ABI","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","BIPS_BASE","BLOCKED_PRICE_IMPACT_NON_EXPERT","INPUT_FRACTION_AFTER_FEE","ONE_HUNDRED_PERCENT","ROUTER_ADDRESS","useActiveChainId","useContract","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","quotient","useRouterContract","computeTradePriceBreakdown","realizedLPFee","subtract","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFeePercent","numerator","denominator","realizedLPFeeAmount","inputAmount","priceImpactWithoutFee","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","invert","outputAmount","ZERO_PERCENT","tradeA","tradeB","minimumDelta","tradeType","equalTo","asFraction","add","Swap","PageMeta","EXCHANGE_DOCS_URLS","usePhishingBannerManager","Page","removePadding","hideFooterOnDesktop","noMinHeight","helpUrl","props","showPhishingBanner","hasWarningBanner","BNB_ADDRESS","MIN_VALUE_DISPLAYED","getTimeWindowChange","lineChartData","firstValue","lastValue","changeValue","Math","max","min","changePercentage","toFixed","lowerCaseAddress","AtomBox","display","gridAutoRows","justifyItems","rowGap","flexWrap","React","Svg","Icon","circle","cx","cy","r","CurrencyInputHeader","borderBottom","CurrencyInputHeaderTitle","CurrencyInputHeaderSubTitle","textAlign","inputContainerVariants","NumericalInput","CurrencyInputPanel","onUserInput","onInputBlur","zapStyle","top","bottom","disabled","position","backgroundColor","zIndex","className","hasZapStyle","lineHeight","px","pt","onBlur","val","role","inset","opacity","ButtonMenu","ButtonMenuItem","Image","$isSide","mediaQueries","md","BubbleWrapper","textSubtle","Footer","helpImage","height","isEvm","isSide","activeIndex","mt","flexGrow","external","SwapFooter","escapeRegExp","string","clsx","inputVariants","inputRegex","RegExp","InnerInput","placeholder","enforcer","nextUserInput","input","onChange","event","target","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","pageVariants","SwapPage","useIsMounted","SwapInfoLabel","bold","SwapInfo","price","isMounted","py","ArrowDownIcon","ArrowUpDownIcon","switchButtonClass","iconDownClass","iconUpDownClass","TradePrice","SwapSwitchButton","SwitchButton","Info","InfoLabel","AutoRenewIcon","balanceMaxMiniClass","showInverted","setShowInverted","formattedPrice","baseCurrency","quoteCurrency","label","parseUnits","typedValueParsed","decimals","debug"],"sourceRoot":""}