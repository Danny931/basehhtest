{"version":3,"file":"4866.js","mappings":";;;;;;;;;;;;;;AAAyD;AACZ;AAM7C;;CAEC,GACD,MAAME,YAAY,GAAG,CAAC,EAAEC,SAAS,EAAG,KAAK,GAAEC,SAAS,EAAG,KAAK,GAAEC,KAAK,GAAoB,GAAK;IAC1F,IAAID,SAAS,EAAE;QACb,OAAOC,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC;IAC/B,CAAC;IAED,IAAIJ,SAAS,EAAE;QACb,OAAOE,KAAK,CAACC,OAAO,CAACE,OAAO,CAAC;IAC/B,CAAC;IAED,OAAOH,KAAK,CAACC,OAAO,CAACG,KAAK,CAAC;AAC7B,CAAC;AAED,MAAMC,SAAS,GAAG,CAAC,EAAEC,KAAK,EAAGV,yDAAS,GAAoB,GAAK;IAC7D,OAAQU,KAAK;QACX,KAAKV,yDAAS;YACZ,OAAO,MAAM,CAAC;QAChB,KAAKA,yDAAS;YACZ,OAAO,MAAM,CAAC;QAChB,KAAKA,yDAAS,CAAC;QACf;YACE,OAAO,MAAM,CAAC;KACjB;AACH,CAAC;AAED,MAAMc,KAAK,GAAGf,yEAAY;;EAAY,CAAC;oBACnB,EAAE,CAAC,EAAEK,KAAK,GAAE,GAAKA,KAAK,CAACY,MAAM,CAACD,KAAK,CAAC;;cAE1C,EAAEd,YAAY,CAAC;SACpB,EAAE,CAAC,EAAEG,KAAK,GAAE,GAAKA,KAAK,CAACY,MAAM,CAACC,IAAI,CAAC;;;UAGlC,EAAER,SAAS,CAAC;;;;oBAIF,EAAE,CAAC,EAAEL,KAAK,GAAE,GAAKA,KAAK,CAACY,MAAM,CAACE,cAAc,CAAC;;;WAGtD,EAAE,CAAC,EAAEd,KAAK,GAAE,GAAKA,KAAK,CAACY,MAAM,CAACG,UAAU,CAAC;;;;sBAI9B,EAAE,CAAC,EAAEf,KAAK,GAAE,GAAKA,KAAK,CAACY,MAAM,CAACI,kBAAkB,CAAC;;WAE5D,EAAE,CAAC,EAAEhB,KAAK,GAAE,GAAKA,KAAK,CAACY,MAAM,CAACK,YAAY,CAAC;;;;;gBAKtC,EAAE,CAAC,EAAEjB,KAAK,GAAED,SAAS,GAAED,SAAS,GAAE,GAAK;IACjD,IAAIC,SAAS,EAAE;QACb,OAAOC,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC;IAC/B,CAAC;IAED,IAAIJ,SAAS,EAAE;QACb,OAAOE,KAAK,CAACC,OAAO,CAACE,OAAO,CAAC;IAC/B,CAAC;IACD,OAAOH,KAAK,CAACC,OAAO,CAACiB,KAAK,CAAC;AAC7B,CAAC,CAAC;;AAEN,CAAC;AAEDR,KAAK,CAACS,YAAY,GAAG;IACnBb,KAAK,EAAEV,yDAAS;IAChBE,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;CACjB,CAAC;AAEF,iEAAeW,KAAK,EAAC;;;;;;;;;;;AC3Ed,MAAMd,MAAM,GAAG;IACpBY,EAAE,EAAE,IAAI;IACRD,EAAE,EAAE,IAAI;IACRE,EAAE,EAAE,IAAI;CACT,CAAU","sources":["webpack://web/../../packages/uikit/src/components/Input/Input.tsx","webpack://web/../../packages/uikit/src/components/Input/types.ts"],"sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\nimport { InputProps, scales } from \"./types\";\n\ninterface StyledInputProps extends InputProps {\n  theme: DefaultTheme;\n}\n\n/**\n * Priority: Warning --> Success\n */\nconst getBoxShadow = ({ isSuccess = false, isWarning = false, theme }: StyledInputProps) => {\n  if (isWarning) {\n    return theme.shadows.warning;\n  }\n\n  if (isSuccess) {\n    return theme.shadows.success;\n  }\n\n  return theme.shadows.inset;\n};\n\nconst getHeight = ({ scale = scales.MD }: StyledInputProps) => {\n  switch (scale) {\n    case scales.SM:\n      return \"32px\";\n    case scales.LG:\n      return \"48px\";\n    case scales.MD:\n    default:\n      return \"40px\";\n  }\n};\n\nconst Input = styled.input<InputProps>`\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-size: 16px;\n  height: ${getHeight};\n  outline: 0;\n  padding: 0 16px;\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n    box-shadow: none;\n    color: ${({ theme }) => theme.colors.textDisabled};\n    cursor: not-allowed;\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: ${({ theme, isWarning, isSuccess }) => {\n      if (isWarning) {\n        return theme.shadows.warning;\n      }\n\n      if (isSuccess) {\n        return theme.shadows.success;\n      }\n      return theme.shadows.focus;\n    }};\n  }\n`;\n\nInput.defaultProps = {\n  scale: scales.MD,\n  isSuccess: false,\n  isWarning: false,\n};\n\nexport default Input;\n","import { ReactElement } from \"react\";\nimport { SpaceProps } from \"styled-system\";\n\nexport const scales = {\n  SM: \"sm\",\n  MD: \"md\",\n  LG: \"lg\",\n} as const;\n\nexport type Scales = typeof scales[keyof typeof scales];\n\nexport interface InputProps extends SpaceProps {\n  scale?: Scales;\n  isSuccess?: boolean;\n  isWarning?: boolean;\n}\n\nexport interface InputGroupProps extends SpaceProps {\n  scale?: Scales;\n  startIcon?: ReactElement;\n  endIcon?: ReactElement;\n  children: JSX.Element;\n}\n"],"names":["styled","scales","getBoxShadow","isSuccess","isWarning","theme","shadows","warning","success","inset","getHeight","scale","MD","SM","LG","Input","input","colors","text","inputSecondary","textSubtle","backgroundDisabled","textDisabled","focus","defaultProps"],"sourceRoot":""}