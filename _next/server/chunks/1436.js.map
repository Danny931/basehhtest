{"version":3,"file":"1436.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAyD;AACZ;AACU;AACF;AAC4D;AAE5D;AAE9C,MAAMY,6BAA6B,GAAG,GAAG,CAAC;AAE1C,MAAMC,YAAY,GAAG,CAAC,EAAEC,QAAQ,GAAEC,SAAS,GAAEC,QAAQ,GAAE,GAAGC,KAAK,EAAwC,GAAK;IACjH,MAAM,EAAEC,QAAQ,GAAE,GAAGP,8DAAmB,EAAE;IAC1C,MAAMQ,UAAU,GAAGlB,6CAAM,CAAiB,IAAI,CAAC;IAE/C,OACE,aAAa;kBACb,mDAACO,6DAAc;QACbY,IAAI,EAAEF,QAAQ,GAAG,GAAG,GAAG,KAAK;QAC5BG,eAAe,EAAE;YAAEC,GAAG,EAAE,CAAC;YAAEC,MAAM,EAAE,GAAG;SAAE;QACxCC,WAAW,EAAE;YAAEF,GAAG,EAAE,CAAC;SAAE;QACvBG,gBAAgB;QAChBC,WAAW,EAAE,IAAM;YACjB,IAAIP,UAAU,CAACQ,OAAO,EAAER,UAAU,CAACQ,OAAO,CAACC,KAAK,CAACC,SAAS,GAAG,MAAM,CAAC;QACtE,CAAC;QACDC,SAAS,EAAE,CAACC,CAAC,EAAEC,IAAI,GAAK;YACtB,IAAIA,IAAI,CAACC,QAAQ,CAACC,CAAC,GAAGtB,6BAA6B,IAAIG,SAAS,EAAEA,SAAS,EAAE,CAAC;QAChF,CAAC;QACDoB,GAAG,EAAEhB,UAAU;QACfiB,SAAS,EAAEpB,QAAQ;QAClB,GAAGC,KAAK;kBAERH,QAAQ;MACM,EACjB;AACJ,CAAC,CAAC;AAEF,MAAMuB,KAAK,GAAkD,CAAC,EAC5DC,KAAK,GACLvB,SAAS,GACTwB,MAAM,GACNzB,QAAQ,GACR0B,eAAe,EAAG,KAAK,GACvBC,WAAW,EAAG,MAAM,GACpBC,gBAAgB,EAAG,aAAa,GAChC1B,QAAQ,EAAG,OAAO,GAClB,GAAGC,KAAK,EACT,GAAK;IACJ,MAAM0B,KAAK,GAAGzC,2DAAQ,EAAE;IACxB,qBACE,wDAACW,YAAY;QAACG,QAAQ,EAAEA,QAAQ;QAAED,SAAS,EAAEA,SAAS;QAAG,GAAGE,KAAK;;0BAC/D,wDAACX,0DAAW;gBAACsC,UAAU,EAAExC,wEAAa,CAACuC,KAAK,EAAE,CAAC,OAAO,EAAED,gBAAgB,CAAC,CAAC,EAAEA,gBAAgB,CAAC;;kCAC3F,wDAACnC,yDAAU;;4BACRgC,MAAM,kBAAI,mDAAC7B,8DAAe;gCAAC6B,MAAM,EAAEA,MAAM;8BAAI;0CAC9C,mDAACpC,4EAAO;0CAAEmC,KAAK;8BAAW;;sBACf;oBACZ,CAACE,eAAe,kBAAI,mDAAC/B,+DAAgB;wBAACM,SAAS,EAAEA,SAAS;sBAAI;;cACnD;0BACd,mDAACV,wDAAS;gBAACwC,CAAC,EAAEJ,WAAW;0BAAG3B,QAAQ;cAAa;;MACpC,CACf;AACJ,CAAC;AAED,iEAAeuB,KAAK,EAAC","sources":["webpack://web/../../packages/uikit/src/widgets/Modal/Modal.tsx"],"sourcesContent":["import React, { PropsWithChildren, useRef } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Heading from \"../../components/Heading/Heading\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { ModalBody, ModalHeader, ModalTitle, ModalContainer, ModalCloseButton, ModalBackButton } from \"./styles\";\nimport { ModalProps, ModalWrapperProps } from \"./types\";\nimport { useMatchBreakpoints } from \"../../contexts\";\n\nexport const MODAL_SWIPE_TO_CLOSE_VELOCITY = 300;\n\nexport const ModalWrapper = ({ children, onDismiss, minWidth, ...props }: PropsWithChildren<ModalWrapperProps>) => {\n  const { isMobile } = useMatchBreakpoints();\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  return (\n    // @ts-ignore\n    <ModalContainer\n      drag={isMobile ? \"y\" : false}\n      dragConstraints={{ top: 0, bottom: 600 }}\n      dragElastic={{ top: 0 }}\n      dragSnapToOrigin\n      onDragStart={() => {\n        if (wrapperRef.current) wrapperRef.current.style.animation = \"none\";\n      }}\n      onDragEnd={(e, info) => {\n        if (info.velocity.y > MODAL_SWIPE_TO_CLOSE_VELOCITY && onDismiss) onDismiss();\n      }}\n      ref={wrapperRef}\n      $minWidth={minWidth}\n      {...props}\n    >\n      {children}\n    </ModalContainer>\n  );\n};\n\nconst Modal: React.FC<React.PropsWithChildren<ModalProps>> = ({\n  title,\n  onDismiss,\n  onBack,\n  children,\n  hideCloseButton = false,\n  bodyPadding = \"24px\",\n  headerBackground = \"transparent\",\n  minWidth = \"320px\",\n  ...props\n}) => {\n  const theme = useTheme();\n  return (\n    <ModalWrapper minWidth={minWidth} onDismiss={onDismiss} {...props}>\n      <ModalHeader background={getThemeValue(theme, `colors.${headerBackground}`, headerBackground)}>\n        <ModalTitle>\n          {onBack && <ModalBackButton onBack={onBack} />}\n          <Heading>{title}</Heading>\n        </ModalTitle>\n        {!hideCloseButton && <ModalCloseButton onDismiss={onDismiss} />}\n      </ModalHeader>\n      <ModalBody p={bodyPadding}>{children}</ModalBody>\n    </ModalWrapper>\n  );\n};\n\nexport default Modal;\n"],"names":["React","useRef","useTheme","Heading","getThemeValue","ModalBody","ModalHeader","ModalTitle","ModalContainer","ModalCloseButton","ModalBackButton","useMatchBreakpoints","MODAL_SWIPE_TO_CLOSE_VELOCITY","ModalWrapper","children","onDismiss","minWidth","props","isMobile","wrapperRef","drag","dragConstraints","top","bottom","dragElastic","dragSnapToOrigin","onDragStart","current","style","animation","onDragEnd","e","info","velocity","y","ref","$minWidth","Modal","title","onBack","hideCloseButton","bodyPadding","headerBackground","theme","background","p"],"sourceRoot":""}