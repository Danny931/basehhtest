{"version":3,"file":"3579.js","mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxDA;AACwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oBAAoB,iDAAiD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oBAAoB,iDAAiD;AACrE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6CAA6C;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6CAA6C;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe;AACf,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AAWE","sources":["webpack://web/./src/components/Trans.tsx","webpack://web/./src/config/abi/erc20.ts","webpack://web/./src/config/constants/endpoints.ts","webpack://web/./src/config/constants/exchange.ts","webpack://web/./src/config/constants/lp.ts","webpack://web/./src/config/constants/ifo.ts","webpack://web/./src/config/constants/index.ts","webpack://web/./src/config/constants/lottery.ts","webpack://web/./src/config/constants/pools.tsx","webpack://web/./src/config/constants/priceHelperLps/pools/1.ts","webpack://web/./src/config/constants/priceHelperLps/pools/5.ts","webpack://web/./src/config/constants/priceHelperLps/pools/56.ts","webpack://web/./src/config/constants/priceHelperLps/pools/97.ts","webpack://web/./src/config/constants/priceHelperLps/index.ts","webpack://web/./src/config/constants/types.ts","webpack://web/./src/config/index.ts","webpack://web/./src/hooks/useActiveChainId.ts","webpack://web/./src/hooks/useActiveWeb3React.ts","webpack://web/./src/hooks/useContract.ts","webpack://web/./src/hooks/useProviderOrSigner.ts","webpack://web/./src/hooks/useSessionChainId.ts","webpack://web/./src/hooks/useSwitchNetworkLoading.ts","webpack://web/./src/state/burn/actions.ts","webpack://web/./src/state/burn/reducer.ts","webpack://web/./src/state/farms/fetchFarmUser.ts","webpack://web/./src/state/farms/fetchPublicFarmData.ts","webpack://web/./src/state/farms/fetchFarms.ts","webpack://web/./src/state/farms/fetchMasterChefData.ts","webpack://web/./src/state/farms/getFarmsPrices.ts","webpack://web/./src/state/farms/index.ts","webpack://web/./src/state/farmsV1/fetchPublicFarmData.ts","webpack://web/./src/state/farmsV1/fetchMasterChefData.ts","webpack://web/./src/state/farmsV1/fetchFarms.ts","webpack://web/./src/state/farmsV1/getFarmsPrices.ts","webpack://web/./src/state/farmsV1/fetchFarmUser.ts","webpack://web/./src/state/farmsV1/index.ts","webpack://web/./src/state/global/actions.ts","webpack://web/./src/state/global/reducer.ts","webpack://web/./src/state/index.ts","webpack://web/./src/state/info/actions.ts","webpack://web/./src/state/info/index.ts","webpack://web/./src/state/limitOrders/actions.ts","webpack://web/./src/state/limitOrders/reducer.ts","webpack://web/./src/state/limitOrders/types.ts","webpack://web/./src/state/lottery/getLotteriesData.ts","webpack://web/./src/state/lottery/getUserLotteryData.ts","webpack://web/./src/state/lottery/getUserTicketsData.ts","webpack://web/./src/state/lottery/helpers.ts","webpack://web/./src/state/lottery/index.ts","webpack://web/./src/state/mint/actions.ts","webpack://web/./src/state/mint/reducer.ts","webpack://web/./src/state/multicall/actions.ts","webpack://web/./src/state/multicall/reducer.ts","webpack://web/./src/state/pools/fetchPools.ts","webpack://web/./src/state/pools/fetchPoolsUser.ts","webpack://web/./src/state/pools/fetchUserIfo.ts","webpack://web/./src/state/pools/fetchVaultPublic.ts","webpack://web/./src/state/pools/fetchVaultUser.ts","webpack://web/./src/state/pools/helpers.ts","webpack://web/./src/state/pools/index.ts","webpack://web/./src/state/pottery/fetchPottery.ts","webpack://web/./src/state/pottery/fetchPotteryRound.ts","webpack://web/./src/state/pottery/fetchUserPottery.ts","webpack://web/./src/state/pottery/index.ts","webpack://web/./src/state/swap/actions.ts","webpack://web/./src/state/swap/reducer.ts","webpack://web/./src/state/transactions/actions.ts","webpack://web/./src/state/transactions/reducer.ts","webpack://web/./src/state/types.ts","webpack://web/./src/state/user/actions.ts","webpack://web/./src/state/user/reducer.ts","webpack://web/./src/utils/apr.ts","webpack://web/./src/utils/contractHelpers.ts","webpack://web/./src/utils/index.ts","webpack://web/./src/utils/localStorageOrders.ts","webpack://web/./src/utils/multicall.ts","webpack://web/./src/utils/providers.ts","webpack://web/./src/utils/verifyBscNetwork.ts","webpack://web/../../packages/wagmi/dist/connectors/binanceWallet.mjs","webpack://web/./src/utils/wagmi.ts","webpack://web/./src/views/Farms/components/YieldBooster/helpers/splitProxyFarms.ts","webpack://web/./src/views/Pools/helpers.tsx","webpack://web/../../packages/farms/constants/index.ts","webpack://web/../../packages/farms/constants/priceHelperLps/1.ts","webpack://web/../../packages/farms/constants/priceHelperLps/5.ts","webpack://web/../../packages/farms/constants/priceHelperLps/56.ts","webpack://web/../../packages/farms/constants/priceHelperLps/97.ts","webpack://web/../../packages/farms/constants/priceHelperLps/getFarmsPriceHelperLpFiles.ts","webpack://web/../../packages/farms/src/farmsPriceHelpers.ts","webpack://web/../../packages/farms/src/getFullDecimalMultiplier.ts","webpack://web/../../packages/farms/src/const.ts","webpack://web/../../packages/utils/equalsIgnoreCase.ts","webpack://web/../../packages/farms/src/farmPrices.ts","webpack://web/../../packages/farms/src/fetchPublicFarmData.ts","webpack://web/../../packages/farms/src/fetchStableFarmData.ts","webpack://web/../../packages/farms/src/fetchFarms.ts","webpack://web/../../packages/farms/src/index.ts","webpack://web/../../packages/farms/src/types.ts","webpack://web/../../packages/token-lists/src/actions.ts","webpack://web/../../packages/token-lists/src/index.ts","webpack://web/../../packages/token-lists/src/lists.ts","webpack://web/../../packages/token-lists/src/reducer.ts","webpack://web/../../packages/token-lists/src/useFetchListCallback.ts","webpack://web/../../packages/token-lists/src/wrappedTokenInfo.ts","webpack://web/../../packages/tokens/src/common.ts","webpack://web/../../packages/tokens/src/helpers.ts","webpack://web/../../packages/tokens/src/5.ts","webpack://web/../../packages/tokens/src/56.ts","webpack://web/../../packages/tokens/src/97.ts","webpack://web/../../packages/tokens/src/1.ts","webpack://web/../../packages/tokens/src/index.ts","webpack://web/../../packages/uikit/src/components/Button/theme.ts","webpack://web/../../packages/uikit/src/components/Button/StyledButton.tsx","webpack://web/../../packages/uikit/src/components/Button/Button.tsx","webpack://web/../../packages/uikit/src/components/Button/types.ts","webpack://web/../../packages/uikit/src/util/externalLinkProps.ts","webpack://web/../../packages/utils/bigNumber.ts","webpack://web/../../packages/utils/formatBalance.ts","webpack://web/../../packages/utils/getFullDecimalMultiplier.ts","webpack://web/../../packages/farms/constants/ lazy ^\\.\\/.*\\.ts$ namespace object","webpack://web/../../packages/wagmi/dist/chains.mjs"],"sourcesContent":["import { Trans } from '@pancakeswap/localization'\n\nexport default Trans\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { ChainId } from '@pancakeswap/sdk'\n\nexport const GRAPH_API_PROFILE = 'https://api.thegraph.com/subgraphs/name/pancakeswap/profile'\nexport const GRAPH_API_PREDICTION_BNB = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction-v2'\nexport const GRAPH_API_PREDICTION_CAKE = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction-cake'\n\nexport const GRAPH_API_LOTTERY = 'https://api.thegraph.com/subgraphs/name/pancakeswap/lottery'\nexport const SNAPSHOT_BASE_URL = process.env.NEXT_PUBLIC_SNAPSHOT_BASE_URL\nexport const API_PROFILE = 'https://profile.pancakeswap.com'\nexport const API_NFT = 'https://nft.pancakeswap.com/api/v1'\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const GRAPH_API_POTTERY = 'https://api.thegraph.com/subgraphs/name/pancakeswap/pottery'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const INFO_CLIENT_ETH = 'https://api.thegraph.com/subgraphs/name/pancakeswap/exhange-eth'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const BLOCKS_CLIENT_ETH = 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks'\nexport const STABLESWAP_SUBGRAPH_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/exchange-stableswap'\nexport const GRAPH_API_NFTMARKET = 'https://api.thegraph.com/subgraphs/name/pancakeswap/nft-market'\nexport const GRAPH_HEALTH = 'https://api.thegraph.com/index-node/graphql'\n\nexport const TC_MOBOX_SUBGRAPH = 'https://api.thegraph.com/subgraphs/name/pancakeswap/trading-competition-v3'\nexport const TC_MOD_SUBGRAPH = 'https://api.thegraph.com/subgraphs/name/pancakeswap/trading-competition-v4'\n\nexport const FARM_API = 'https://farms.pancake-swap.workers.dev'\n\nexport const BIT_QUERY = 'https://graphql.bitquery.io'\n\nexport const ACCESS_RISK_API = 'https://red.alert.pancakeswap.com/red-api'\n\nexport const CELER_API = 'https://api.celerscan.com/scan'\n\nexport const INFO_CLIENT_WITH_CHAIN = {\n  [ChainId.BSC]: 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2',\n  [ChainId.ETHEREUM]: 'https://api.thegraph.com/subgraphs/name/pancakeswap/exhange-eth',\n}\n\nexport const BLOCKS_CLIENT_WITH_CHAIN = {\n  [ChainId.BSC]: 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks',\n  [ChainId.ETHEREUM]: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\n}\n","import { ChainId, JSBI, Percent, Token, WNATIVE } from '@pancakeswap/sdk'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { bscTokens, bscTestnetTokens, USDC, USDT, BUSD, WBTC_ETH } from '@pancakeswap/tokens'\nimport { ChainMap, ChainTokenList } from './types'\n\nexport const ROUTER_ADDRESS: ChainMap<string> = {\n  [ChainId.ETHEREUM]: '0xEfF92A263d31888d860bD50809A8D171709b7b1c',\n  [ChainId.RINKEBY]: '0xEfF92A263d31888d860bD50809A8D171709b7b1c',\n  [ChainId.GOERLI]: '0xEfF92A263d31888d860bD50809A8D171709b7b1c',\n  [ChainId.BSC]: '0x10ED43C718714eb63d5aA57B78B54704E256024E',\n  [ChainId.BSC_TESTNET]: '0x78d6d08470d44b3719430A5F9e93A062C4155Ab7',\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.ETHEREUM]: [WNATIVE[ChainId.ETHEREUM], USDC[ChainId.ETHEREUM], USDT[ChainId.ETHEREUM], WBTC_ETH],\n  [ChainId.RINKEBY]: [WNATIVE[ChainId.GOERLI], USDC[ChainId.GOERLI], BUSD[ChainId.GOERLI]],\n  [ChainId.GOERLI]: [WNATIVE[ChainId.RINKEBY], USDC[ChainId.RINKEBY], BUSD[ChainId.RINKEBY]],\n  [ChainId.BSC]: [\n    bscTokens.wbnb,\n    bscTokens.cake,\n    bscTokens.busd,\n    bscTokens.usdt,\n    bscTokens.btcb,\n    bscTokens.eth,\n    bscTokens.usdc,\n  ],\n  [ChainId.BSC_TESTNET]: [bscTestnetTokens.wbnb, bscTestnetTokens.cake, bscTestnetTokens.busd],\n}\n\n/**\n * Additional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.BSC]: {\n    // SNFTS-SFUND\n    [bscTokens.snfts.address]: [bscTokens.sfund],\n  },\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WNATIVE[ChainId.BSC]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.BSC]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.ETHEREUM]: [USDC[ChainId.ETHEREUM], USDT[ChainId.ETHEREUM], WNATIVE[ChainId.ETHEREUM], WBTC_ETH],\n  [ChainId.RINKEBY]: [USDC[ChainId.RINKEBY], WNATIVE[ChainId.RINKEBY], BUSD[ChainId.RINKEBY]],\n  [ChainId.GOERLI]: [USDC[ChainId.GOERLI], WNATIVE[ChainId.GOERLI], BUSD[ChainId.GOERLI]],\n  [ChainId.BSC]: [bscTokens.busd, bscTokens.cake, bscTokens.btcb],\n  [ChainId.BSC_TESTNET]: [bscTestnetTokens.wbnb, bscTestnetTokens.cake, bscTestnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.ETHEREUM]: [USDC[ChainId.ETHEREUM], WNATIVE[ChainId.ETHEREUM], USDT[ChainId.ETHEREUM], WBTC_ETH],\n  [ChainId.RINKEBY]: [USDC[ChainId.RINKEBY], WNATIVE[ChainId.RINKEBY], BUSD[ChainId.RINKEBY]],\n  [ChainId.GOERLI]: [USDC[ChainId.GOERLI], WNATIVE[ChainId.GOERLI], BUSD[ChainId.GOERLI]],\n  [ChainId.BSC]: [bscTokens.wbnb, bscTokens.dai, bscTokens.busd, bscTokens.usdt, bscTokens.cake],\n  [ChainId.BSC_TESTNET]: [bscTestnetTokens.wbnb, bscTestnetTokens.cake, bscTestnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.ETHEREUM]: [\n    [WNATIVE[ChainId.ETHEREUM], USDC[ChainId.ETHEREUM]],\n    [WBTC_ETH, WNATIVE[ChainId.ETHEREUM]],\n    [WNATIVE[ChainId.ETHEREUM], USDT[ChainId.ETHEREUM]],\n  ],\n  [ChainId.BSC]: [\n    [bscTokens.cake, bscTokens.wbnb],\n    [bscTokens.busd, bscTokens.usdt],\n    [bscTokens.dai, bscTokens.usdt],\n  ],\n}\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\nexport const BIG_INT_TEN = JSBI.BigInt(10)\n\n// one basis point\nexport const BIPS_BASE = JSBI.BigInt(10000)\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), BIPS_BASE)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), BIPS_BASE)\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\nexport const BASE_FEE = new Percent(JSBI.BigInt(25), BIPS_BASE)\nexport const INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// BNB\nexport const DEFAULT_INPUT_CURRENCY = 'BNB'\n// CAKE\nexport const DEFAULT_OUTPUT_CURRENCY = '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82'\n\n// Handler string is passed to Gelato to use PCS router\nexport const GELATO_HANDLER = 'pancakeswap'\nexport const GENERIC_GAS_LIMIT_ORDER_EXECUTION = BigNumber.from(500000)\n\nexport const LIMIT_ORDERS_DOCS_URL = 'https://docs.pancakeswap.finance/products/pancakeswap-exchange/limit-orders'\n\nexport const EXCHANGE_PAGE_PATHS = ['/swap', '/limit-orders', 'liquidity', '/add', '/find', '/remove']\n","export const CAKE_BNB_LP_MAINNET = '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0'\n","import { ERC20Token, ChainId } from '@pancakeswap/sdk'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { CAKE_BNB_LP_MAINNET } from './lp'\nimport { Ifo } from './types'\n\nexport const cakeBnbLpToken = new ERC20Token(ChainId.BSC, CAKE_BNB_LP_MAINNET, 18, 'CAKE-BNB LP')\n\nconst ifos: Ifo[] = [\n  {\n    id: 'mgp',\n    address: '0x80828B68D126741EeA62b4712eBF7Ceb9d54CBAA',\n    isActive: true,\n    name: 'MGP',\n    poolBasic: {\n      saleAmount: '17,500,000 MGP',\n      raiseAmount: '$437,500',\n      distributionRatio: 0.25,\n    },\n    poolUnlimited: {\n      saleAmount: '52,500,000 MGP',\n      raiseAmount: '$1,312,500',\n      distributionRatio: 0.75,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.mgp,\n    releaseBlockNumber: 21595548,\n    campaignId: '511900000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/0x5bbaee587df5b7e9b52e2b35f35f30afa08e15ab7098c73cb2503319c8d8ce44',\n    tokenOfferingPrice: 0.025,\n    version: 3.2,\n    twitterUrl: 'https://twitter.com/magpiexyz_io',\n    description:\n      'Magpie is a customized fork of Convex that helps users in the Wombat ecosystem to obtain better yields and voting power',\n    vestingTitle:\n      'Earn $MGP by converting $WOM and providing liquidities; Lock $MGP to share revenue and receive bribes.',\n  },\n  {\n    id: 'wmx',\n    address: '0xC202eb5f2487DA3675c4aAa2C3D2c071078699c1',\n    isActive: false,\n    name: 'WMX',\n    poolBasic: {\n      saleAmount: '1,000,000 WMX',\n      raiseAmount: '$300,000',\n      distributionRatio: 0.25,\n    },\n    poolUnlimited: {\n      saleAmount: '3,000,000 WMX',\n      raiseAmount: '$900,000',\n      distributionRatio: 0.75,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.wmx,\n    releaseBlockNumber: 22242441,\n    campaignId: '511800000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/0x8bef379b1f3e1f42e180d877edd3ef5b11476300f9de37196904ca4c2070b470',\n    tokenOfferingPrice: 0.3,\n    version: 3.2,\n    twitterUrl: 'https://twitter.com/WombexFinance',\n    description: 'Wombex is a customized fork of Convex, designed specifically for the Wombat Exchange ecosystem',\n    vestingTitle: 'Earn $WMX by staking assets; Lock $WMX for Fee-Sharing and Wombat Governance',\n  },\n  {\n    id: 'krs',\n    cIFO: true,\n    address: '0x4CCB9960dEF2f9a55D1a0454a134a8Adb0047B8e',\n    isActive: false,\n    name: 'KRS',\n    poolBasic: {\n      saleAmount: '12,000,000 KRS',\n      raiseAmount: '$420,000',\n      distributionRatio: 0.4,\n    },\n    poolUnlimited: {\n      saleAmount: '18,000,000 KRS',\n      raiseAmount: '$630,000',\n      distributionRatio: 0.6,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.krs,\n    releaseBlockNumber: 21970879,\n    campaignId: '511700000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/bafkreicqqvgqpwtnhmlfdwz3ya3hnjm6nvgqbf3fpi4vbxmvqyv6yi3enu',\n    tokenOfferingPrice: 0.035,\n    version: 3.2,\n    twitterUrl: 'https://twitter.com/KingdomRaids',\n    description: 'Kingdom Raids is a blockchain-based strategy role-playing game (RPG) game with a NFT metaverse',\n    vestingTitle: '$KRS - utility token for Kingdom Raids, a role-playing game (RPG) game.',\n  },\n  {\n    id: 'co',\n    address: '0x8baeee7d68cb332c63b3e4a8740072121070a2df',\n    isActive: false,\n    name: 'CO',\n    poolBasic: {\n      saleAmount: '10,500,000 CO',\n      raiseAmount: '$367,500',\n      distributionRatio: 0.25,\n    },\n    poolUnlimited: {\n      saleAmount: '31,500,000 CO',\n      raiseAmount: '$1,102,500',\n      distributionRatio: 0.75,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.co,\n    releaseBlockNumber: 21615380,\n    campaignId: '511600000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/bafkreiddual5o7vzfcwuazw3lgckis66hka4xytqkttqg2wjtea5pywohy',\n    tokenOfferingPrice: 0.035,\n    version: 3.2,\n    twitterUrl: 'https://twitter.com/Coritecom',\n    description:\n      'Corite is a blockchain-based music platform jointly powered by fans and artists to finance and promote music in a unique Engage-to-Earn (E2E) model.',\n    vestingTitle: '$CO - utility token for the Corite Experience!',\n  },\n  {\n    id: 'hoop',\n    address: '0x326e9E1B685C7F366fb320e7eC59599F3d88b1a2',\n    isActive: false,\n    cIFO: true,\n    name: 'HOOP',\n    poolBasic: {\n      saleAmount: '6,499,500 HOOP',\n      raiseAmount: '$357,472.50',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '15,165,500 HOOP',\n      raiseAmount: '$834,102.50',\n      distributionRatio: 0.7,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.hoop,\n    releaseBlockNumber: 21525900,\n    campaignId: '511500000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/bafkreicsc2nevwvyp7ot5ewkmujvor3bcafh372kuxzncojqbuabnpwupe',\n    tokenOfferingPrice: 0.055,\n    version: 3.2,\n    twitterUrl: 'https://twitter.com/DinosChibi',\n    description: `Chibi Dinos is a basketball and dinosaur themed metaverse with games such as Primal Hoop, an arcade basketball game with an adventure role-playing game (RPG) mode and Primal Pick'em, a predictive play-to earn game (P2E).`,\n    vestingTitle: '$HOOP - In-game currency for the Chibi Dinos Gaming Universe',\n  },\n  {\n    id: 'wom',\n    address: '0x98828e9D69E49104a62ecb4FA3d6F9e06A295CBA',\n    isActive: false,\n    name: 'WOM',\n    poolBasic: {\n      saleAmount: '2,800,000 WOM',\n      raiseAmount: '$210,000',\n      distributionRatio: 0.1,\n    },\n    poolUnlimited: {\n      saleAmount: '25,200,000 WOM',\n      raiseAmount: '$1,890,000',\n      distributionRatio: 0.9,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.wom,\n    releaseBlockNumber: 20685666,\n    campaignId: '511400000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/bafkreieqv7mbzmumyftstt6l32x6okfzq4syrea7k5zbqgohhcekcvbduu',\n    tokenOfferingPrice: 0.075,\n    version: 3.2,\n    twitterUrl: 'https://twitter.com/WombatExchange',\n    description: 'Wombat Exchange is a next generation multi-chain stableswap native to BNB Chain.',\n    vestingTitle: 'Earn $WOM by staking stablecoins; Lock $WOM to maximize stablecoin yields',\n  },\n  {\n    id: 'peel',\n    address: '0x35Bb6Dd4E8C63491057c32621c8cDdE43BabE201',\n    isActive: false,\n    name: 'Meta Apes ($PEEL)',\n    poolBasic: {\n      saleAmount: '10,000,000 PEEL',\n      raiseAmount: '$400,000',\n      distributionRatio: 0.2,\n    },\n    poolUnlimited: {\n      saleAmount: '40,000,000 PEEL',\n      raiseAmount: '$1,600,000',\n      distributionRatio: 0.8,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.peel,\n    releaseBlockNumber: 19964276,\n    campaignId: '511300000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/bafkreibomj5nilvyckdro7ztmm62syt55dcfnonxs63ji6hm2ijq35lru4',\n    tokenOfferingPrice: 0.04,\n    version: 3.2,\n    twitterUrl: 'https://twitter.com/MetaApesGame',\n    description:\n      'Meta Apes is a free-to-play, play-and-earn massively multiplayer online (MMO) strategy game designed for mobile and the first game to launch on the BNB Sidechain with their own dedicated chain, Ape Chain.',\n    vestingTitle: 'Utilize $PEEL for gas and governance in the Meta Apes ecosystem!',\n  },\n  {\n    id: 'trivia',\n    address: '0x23C520d8227524E2cDD00360358864fF3fFC36b4',\n    isActive: false,\n    name: 'TRIVIA',\n    poolBasic: {\n      saleAmount: '10,000,000 TRIVIA',\n      raiseAmount: '$350,000',\n      distributionRatio: 0.2,\n    },\n    poolUnlimited: {\n      saleAmount: '40,000,000 TRIVIA',\n      raiseAmount: '$1,400,000',\n      distributionRatio: 0.8,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.trivia,\n    releaseBlockNumber: 19273145,\n    campaignId: '511200000',\n    articleUrl:\n      'https://pancakeswap.finance/voting/proposal/bafkreihrc2d55vrowbn2oajzs77ffv73g4hzch2e7wulnuccmbwl5u4hvq',\n    tokenOfferingPrice: 0.035,\n    version: 3.2,\n    telegramUrl: 'https://t.me/TriviansGlobal',\n    twitterUrl: 'https://twitter.com/PlayTrivians',\n    description:\n      'Trivian is a trivia gaming platform with different game modes such as multiplayer mode, single player mode, 1v1 games, instant play, scheduled tournaments, and live shows … all while earning TRIVIA tokens!',\n    vestingTitle: 'Earn $TRIVIA For Each Question You Answer Correctly',\n  },\n  {\n    id: 'duet',\n    address: '0xDF24BE326af4c1fb888f567f41D9a981A4752cf1',\n    isActive: false,\n    name: 'DUET',\n    poolBasic: {\n      saleAmount: '1,200,000 DUET',\n      raiseAmount: '$360,000',\n      distributionRatio: 0.2,\n    },\n    poolUnlimited: {\n      saleAmount: '4,800,000 DUET',\n      raiseAmount: '$1,440,000',\n      distributionRatio: 0.8,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.duet,\n    releaseBlockNumber: null,\n    campaignId: '511190000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmXwoYYd8rkahVbxiGKsTa4rYRRFWPxhRGAHy3hVwK3Q2z',\n    tokenOfferingPrice: 0.3,\n    version: 3.1,\n    telegramUrl: 'https://t.me/duetprotocol',\n    twitterUrl: 'https://twitter.com/duetprotocol',\n    description:\n      'DUET Protocol is a multi-chain synthetic assets ecosystem, enabling pegged assets from various markets – from individual stocks, to indexes, ETFs, and commodities.',\n  },\n  {\n    id: 'era',\n    address: '0x527201a43f8da24ce9b7c21744a0706942f41fa3',\n    isActive: false,\n    name: 'ERA (Game of Truth)',\n    poolBasic: {\n      saleAmount: '4,000,000 ERA',\n      raiseAmount: '$360,000',\n      distributionRatio: 0.2,\n    },\n    poolUnlimited: {\n      saleAmount: '16,000,000 ERA',\n      raiseAmount: '$1,440,000',\n      distributionRatio: 0.8,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.era,\n    releaseBlockNumber: 15156634,\n    campaignId: '511180000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmTfN1SKnFidF6XCDcpga7zAf69mFfhb26Zy9b85dYskxW',\n    tokenOfferingPrice: 0.09,\n    version: 3.1,\n    telegramUrl: 'https://t.me/Era7_Official',\n    twitterUrl: 'https://twitter.com/Era7_official',\n    description:\n      'Drawing from their experience in traditional games such as Awakening of Dragon, Era7: Game of Truth combines elements of DeFi, NFTs, and Trading Cards into a play-to-earn game steeped in mythology and magic.',\n  },\n  {\n    id: 'froyo',\n    address: '0xE0d6c91860a332068bdB59275b0AAC8769e26Ac4',\n    isActive: false,\n    name: 'Froyo Games (FROYO)',\n    poolBasic: {\n      saleAmount: '20,000,000 FROYO',\n      raiseAmount: '$1,200,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '46,666,668 FROYO',\n      raiseAmount: '$2,800,000',\n      distributionRatio: 0.7,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.froyo,\n    releaseBlockNumber: 14297000,\n    campaignId: '511170000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmRhc4oC73jk4zxU4YkP1kudKHeq6qamgYA1sWoh6XJnks',\n    tokenOfferingPrice: 0.06,\n    version: 3,\n    telegramUrl: 'https://t.me/froyogames',\n    twitterUrl: 'https://twitter.com/realfroyogames',\n    description: `Froyo Games is a game publisher and decentralized GameFi platform, with a NFT Marketplace that integrates NFTs with their games.\\n \\n FROYO tokens can be used to buy NFTs and participate in Froyo games`,\n  },\n  {\n    id: 'dpt',\n    address: '0x63914805A0864e9557eA3A5cC86cc1BA054ec64b',\n    isActive: false,\n    name: 'Diviner Protocol (DPT)',\n    poolBasic: {\n      saleAmount: '7,200,000 DPT',\n      raiseAmount: '$180,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '16,800,000 DPT',\n      raiseAmount: '$420,000',\n      distributionRatio: 0.7,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.dpt,\n    releaseBlockNumber: 13491500,\n    campaignId: '511160000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmQqpknHvuQwshVP259qFxfQsxiWbQ9SLMebohDeRwRzKg',\n    tokenOfferingPrice: 0.025,\n    version: 3,\n  },\n  {\n    id: 'santos',\n    address: '0x69B5D2Ab0cf532a0E22Fc0dEB0c5135639892468',\n    isActive: false,\n    name: 'FC Santos Fan Token (SANTOS)',\n    poolBasic: {\n      saleAmount: '120,000 SANTOS',\n      raiseAmount: '$300,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '280,000 SANTOS',\n      raiseAmount: '$700,000',\n      distributionRatio: 0.7,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.santos,\n    releaseBlockNumber: 13097777,\n    campaignId: '511150000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmUqRxjwZCWeZWEdgV2vHJ6hex7jMW7i247NKFas73xc8j',\n    tokenOfferingPrice: 2.5,\n    version: 2,\n  },\n  {\n    id: 'porto',\n    address: '0xFDFf29dD0b4DD49Bf5E991A30b8593eaA34B4580',\n    isActive: false,\n    name: 'FC Porto Fan Token (PORTO)',\n    poolBasic: {\n      saleAmount: '250,000 PORTO',\n      raiseAmount: '$500,000',\n      distributionRatio: 0.5,\n    },\n    poolUnlimited: {\n      saleAmount: '250,000 PORTO',\n      raiseAmount: '$500,000',\n      distributionRatio: 0.5,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.porto,\n    releaseBlockNumber: 12687500,\n    campaignId: '511140000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmaakXYpydAwCgTuSPe3R2ZNraRtkCbK6iBRqBCCdzqKEG',\n    tokenOfferingPrice: 2,\n    version: 2,\n  },\n  {\n    id: 'dar',\n    address: '0xb6eF1f36220397c434A6B15dc5EA616CFFDF58CE',\n    isActive: false,\n    name: 'Mines of Dalarnia (DAR)',\n    poolBasic: {\n      saleAmount: '6,000,000 DAR',\n      raiseAmount: '$450,000',\n      distributionRatio: 0.5,\n    },\n    poolUnlimited: {\n      saleAmount: '6,000,000 DAR',\n      raiseAmount: '$450,000',\n      distributionRatio: 0.5,\n    },\n    currency: bscTokens.cake,\n    token: bscTokens.dar,\n    releaseBlockNumber: 12335455,\n    campaignId: '511130000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmeJenHcbY45eQxLRebzvpNk5qSCrj2wM1t4EAMHotFoJL',\n    tokenOfferingPrice: 0.075,\n    version: 2,\n  },\n  {\n    id: 'dkt',\n    address: '0x89ab9852155A794e371095d863aEAa2DF198067C',\n    isActive: false,\n    name: 'Duelist King (DKT)',\n    poolBasic: {\n      saleAmount: '75,000 DKT',\n      raiseAmount: '$131,250',\n      cakeToBurn: '$65,625',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '175,000 DKT',\n      raiseAmount: '$306,250',\n      cakeToBurn: '$153,125',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.dkt,\n    releaseBlockNumber: 12130750,\n    campaignId: '511120000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmTRWdW9a65fAkyJy1wrAJRU548fNMAZhRUDrSxzMDLmwk',\n    tokenOfferingPrice: 1.75,\n    version: 2,\n  },\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: false,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: bscTokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","// used to construct the list of all pairs we consider by default in the frontend\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport { default as ifosConfig } from './ifo'\nexport { default as poolsConfig } from './pools'\n\nexport const FAST_INTERVAL = 10000\nexport const SLOW_INTERVAL = 60000\n\nexport const NOT_ON_SALE_SELLER = '0x0000000000000000000000000000000000000000'\nexport const NO_PROXY_CONTRACT = '0x0000000000000000000000000000000000000000'\n\nexport const FARM_AUCTION_HOSTING_IN_SECONDS = 864000\n\nexport const PREDICTION_TOOLTIP_DISMISS_KEY = 'prediction-switcher-dismiss-tooltip'\n\n// Gelato uses this address to define a native currency in all chains\nexport const GELATO_NATIVE = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\n\nexport const EXCHANGE_DOCS_URLS = 'https://docs.pancakeswap.finance/products/pancakeswap-exchange'\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import { BigNumber } from '@ethersproject/bignumber'\nimport Trans from 'components/Trans'\nimport { VaultKey } from 'state/types'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nexport const MAX_LOCK_DURATION = 31536000\nexport const UNLOCK_FREE_DURATION = 604800\nexport const ONE_WEEK_DEFAULT = 604800\nexport const BOOST_WEIGHT = BigNumber.from('20000000000000')\nexport const DURATION_FACTOR = BigNumber.from('31536000')\n\nexport const vaultPoolConfig = {\n  [VaultKey.CakeVaultV1]: {\n    name: <Trans>Auto CAKE</Trans>,\n    description: <Trans>Automatic restaking</Trans>,\n    autoCompoundFrequency: 5000,\n    gasLimit: 380000,\n    tokenImage: {\n      primarySrc: `/images/tokens/${bscTokens.cake.address}.svg`,\n      secondarySrc: '/images/tokens/autorenew.svg',\n    },\n  },\n  [VaultKey.CakeVault]: {\n    name: <Trans>Stake CAKE</Trans>,\n    description: <Trans>Stake, Earn – And more!</Trans>,\n    autoCompoundFrequency: 5000,\n    gasLimit: 500000,\n    tokenImage: {\n      primarySrc: `/images/tokens/${bscTokens.cake.address}.svg`,\n      secondarySrc: '/images/tokens/autorenew.svg',\n    },\n  },\n  [VaultKey.CakeFlexibleSideVault]: {\n    name: <Trans>Flexible CAKE</Trans>,\n    description: <Trans>Flexible staking on the side.</Trans>,\n    autoCompoundFrequency: 5000,\n    gasLimit: 500000,\n    tokenImage: {\n      primarySrc: `/images/tokens/${bscTokens.cake.address}.svg`,\n      secondarySrc: '/images/tokens/autorenew.svg',\n    },\n  },\n  [VaultKey.IfoPool]: {\n    name: 'IFO CAKE',\n    description: <Trans>Stake CAKE to participate in IFOs</Trans>,\n    autoCompoundFrequency: 1,\n    gasLimit: 500000,\n    tokenImage: {\n      primarySrc: `/images/tokens/${bscTokens.cake.address}.svg`,\n      secondarySrc: `/images/tokens/ifo-pool-icon.svg`,\n    },\n  },\n} as const\n\nexport const livePools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '0xB4A466911556e39210a6bB2FaECBB59E4eB7E43d',\n      56: '0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 302,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.wmx,\n    contractAddress: {\n      56: '0xaEd58Af2c98dbF05d26B3E5b3cc809fc70D203ce',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.5787',\n    version: 3,\n  },\n  {\n    sousId: 301,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.krs,\n    contractAddress: {\n      56: '0x067F926EB8f2a95f260327B01C29B2034A785029',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.96',\n    version: 3,\n  },\n  {\n    sousId: 300,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.arv,\n    contractAddress: {\n      56: '0x420Cd06440d8845FBcde9a396d9Aa211FE78C03d',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1335.47',\n    version: 3,\n  },\n  {\n    sousId: 299,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.co,\n    contractAddress: {\n      56: '0x31736A52bBdda4eaf0117B17736306Bbecb711ca',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.6296',\n    version: 3,\n  },\n  {\n    sousId: 298,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hoop,\n    contractAddress: {\n      56: '0x6C254E3AB3e4B909A2CfAA3E0b9d2B3F7887CFae',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.146',\n    version: 3,\n  },\n  {\n    sousId: 297,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.moni,\n    contractAddress: {\n      56: '0xB5e36D441016016f251223EBD5E946cdeFe0E2E1',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.411',\n    version: 3,\n  },\n  {\n    sousId: 296,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.gq,\n    contractAddress: {\n      56: '0x983A241Bfe910fcFa3E70744AA21AAe5f45861f0',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '55.6446',\n    version: 3,\n  },\n  {\n    sousId: 295,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.wom,\n    contractAddress: {\n      56: '0xf78DB5b635bA108212C9D84c124a52D7B1596b97',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.4722',\n    version: 3,\n  },\n  {\n    sousId: 294,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ankr,\n    contractAddress: {\n      56: '0x985a20998c7c59e98005c556393215e39c9a4978',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '6.0763',\n    version: 3,\n  },\n].map((p) => ({\n  ...p,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\n// known finished pools\nconst finishedPools = [\n  {\n    sousId: 293,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hay,\n    contractAddress: {\n      56: '0x8cBCf2f2be93D154be5135f465369Ee6dD84314B',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.2604',\n    version: 3,\n  },\n  {\n    sousId: 292,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.sfund,\n    contractAddress: {\n      56: '0x449EC6B2779A3F63E6c2527CBB162A38Ef199d7D',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1071',\n    version: 3,\n  },\n  {\n    sousId: 291,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pstake,\n    contractAddress: {\n      56: '0x56D6955Ba6404647191DD7A5D65A5c9Fe43905e1',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.1574',\n    version: 3,\n  },\n  {\n    sousId: 290,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.peel,\n    contractAddress: {\n      56: '0x288d1aD79c113552B618765B4986f7DE679367Da',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.34',\n    version: 3,\n  },\n  {\n    sousId: 289,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.shell,\n    contractAddress: {\n      56: '0x595B7AF4F1828AB4953792482b01B2AFC4A46b72',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '89.699',\n    version: 3,\n  },\n  {\n    sousId: 288,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.high,\n    contractAddress: {\n      56: '0x28cc814bE3B994187B7f8Bfed10516A84A671119',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1332',\n    version: 3,\n  },\n  {\n    sousId: 287,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ole,\n    contractAddress: {\n      56: '0xda6F750be1331963E5772BEe757062f6bddcEA4C',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.2569',\n    version: 3,\n  },\n  {\n    sousId: 286,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.trivia,\n    contractAddress: {\n      56: '0x86471019Bf3f403083390AC47643062e15B0256e',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.976',\n    version: 3,\n  },\n  {\n    sousId: 285,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.sdao,\n    contractAddress: {\n      56: '0x168eF2e470bfeAEB32BE52FB218A41483904851c',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.405',\n    version: 3,\n  },\n  {\n    sousId: 284,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.antex,\n    contractAddress: {\n      97: '',\n      56: '0xdC37A2B2A6a62008beEe029E36153dF8055a8ADa',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1937.62',\n    version: 3,\n  },\n  {\n    sousId: 283,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xcn,\n    contractAddress: {\n      97: '',\n      56: '0xa79D37ce9DF9443eF4B6DEC2e38a8ecd35303adc',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.2505',\n    version: 3,\n  },\n  {\n    sousId: 282,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x2D17ec6cd0AF737B2adE40ea527d41ceEedc166f',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.58',\n    version: 3,\n  },\n  {\n    sousId: 281,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.MIX,\n    contractAddress: {\n      97: '',\n      56: '0x0F96E19Bdc787e767BA1e8F1aDD0f62cbdad87C8',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '63.136',\n    version: 3,\n  },\n  {\n    sousId: 280,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.metis,\n    contractAddress: {\n      97: '',\n      56: '0xC0A94bFF88EdCae7D5d79294C0e9954Ed75CBCb7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01331',\n    version: 3,\n  },\n  {\n    sousId: 279,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.gal,\n    contractAddress: {\n      97: '',\n      56: '0xa5D57C5dca083a7051797920c78fb2b19564176B',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.09645',\n    version: 3,\n  },\n  {\n    sousId: 278,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.rpg,\n    contractAddress: {\n      97: '',\n      56: '0xD1c395BCdC2d64ac6544A34A36185483B00530a1',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.06794',\n    version: 3,\n  },\n  {\n    sousId: 277,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ankr,\n    contractAddress: {\n      97: '',\n      56: '0xc581345e1648CcE154978eA80bF8A584EC8aFDe0',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.6296',\n    version: 3,\n  },\n  {\n    sousId: 276,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ceek,\n    contractAddress: {\n      97: '',\n      56: '0xED53944b1c0cEecDe1a413fDb4D0496e1a08ab58',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.8078',\n    version: 3,\n  },\n  {\n    sousId: 275,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.tinc,\n    contractAddress: {\n      97: '',\n      56: '0x9593462fF51A14633b243Ba3d054A8183d057A02',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4677',\n    version: 3,\n  },\n  {\n    sousId: 274,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pex,\n    contractAddress: {\n      97: '',\n      56: '0x641B1F2781B34a493E4308A0A3F1c7E042A9B952',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3865',\n    version: 3,\n  },\n  {\n    sousId: 273,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.gmi,\n    contractAddress: {\n      97: '',\n      56: '0x0D53E0f2Eb384777442e4EB813d8f5fAcC742206',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '17.939',\n    version: 3,\n  },\n  {\n    sousId: 272,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.froyo,\n    contractAddress: {\n      97: '',\n      56: '0x84e3208578eE7db397a3d584d97Fea107b15bF35',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.404',\n    version: 3,\n  },\n  {\n    sousId: 271,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bsw,\n    contractAddress: {\n      97: '',\n      56: '0x7092e029E4ce660F9AC081BF6D8a339BE602398b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.157',\n    version: 3,\n  },\n  {\n    sousId: 270,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.duet,\n    contractAddress: {\n      97: '',\n      56: '0xA581349F26dE887700045F9B7d148775d422fDA2',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4861',\n    version: 3,\n  },\n  {\n    sousId: 269,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.gmt,\n    contractAddress: {\n      97: '',\n      56: '0xe76a31cF974BA5819ce86cB4667a4bf05174bC59',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.629',\n    version: 3,\n  },\n  {\n    sousId: 268,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xwg,\n    contractAddress: {\n      97: '',\n      56: '0x6e0272A70075f6782F6842730107E9ABf74C5CC7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '5.106',\n    version: 3,\n  },\n  {\n    sousId: 267,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.high,\n    contractAddress: {\n      97: '',\n      56: '0x60c4998C058BaC8042712B54E7e43b892Ab0B0c4',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.09756',\n    version: 3,\n  },\n  {\n    sousId: 266,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.thg,\n    contractAddress: {\n      97: '',\n      56: '0xD1D03A3D4C27884a8703Cdb78504737C9E9A159e',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.162',\n    version: 3,\n  },\n  {\n    sousId: 265,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.era,\n    contractAddress: {\n      97: '',\n      56: '0x260F95f5b7FD8eda720ED9d0829164dE35B048ab',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.608',\n    version: 3,\n  },\n  {\n    sousId: 264,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x346a1b672C5Cbb6AE21715428f77A0049B29B332',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '157829',\n  },\n  {\n    sousId: 263,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ach,\n    contractAddress: {\n      97: '',\n      56: '0xcD1Be742b04DB005e2C445A11BDe6d13DD9dd454',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '7.502',\n  },\n  {\n    sousId: 261,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.sfund,\n    contractAddress: {\n      97: '',\n      56: '0x80762101bd79D6e7A175E9678d05c7f815b8D7d7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.06481',\n  },\n  {\n    sousId: 260,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.raca,\n    contractAddress: {\n      97: '',\n      56: '0xAaF43935a526DF88AB57FC69b1d80a8d35e1De82',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '204.2',\n  },\n  {\n    sousId: 259,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ertha,\n    contractAddress: {\n      97: '',\n      56: '0x921Ea7e12A66025F2BD287eDbff6dc5cEABd6477',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.585',\n  },\n  {\n    sousId: 258,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.fuse,\n    contractAddress: {\n      97: '',\n      56: '0xeAd7b8fc5F2E5672FAe9dCf14E902287F35CB169',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.19',\n  },\n  {\n    sousId: 257,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.froyo,\n    contractAddress: {\n      97: '',\n      56: '0x1c9E3972fdBa29b40954Bb7594Da6611998F8830',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.893',\n  },\n  {\n    sousId: 256,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.aog,\n    contractAddress: {\n      97: '',\n      56: '0xa34832efe74133763A85060a64103542031B0A7E',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.6435',\n  },\n  {\n    sousId: 255,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.apx,\n    contractAddress: {\n      97: '',\n      56: '0x92c07c325cE7b340Da2591F5e9CbB1F5Bab73FCF',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.035',\n  },\n  {\n    sousId: 254,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bcoin,\n    contractAddress: {\n      97: '',\n      56: '0x25ca61796d786014ffe15e42ac11c7721d46e120',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1493',\n  },\n  {\n    sousId: 253,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bcoin,\n    contractAddress: {\n      97: '',\n      56: '0xad8F6A9d58012DCa2303226B287E80e5fE27eff0',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1493',\n  },\n  {\n    sousId: 252,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.insur,\n    contractAddress: {\n      97: '',\n      56: '0x1A777aE604CfBC265807A46Db2d228d4CC84E09D',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3281',\n  },\n  {\n    sousId: 251,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.gm,\n    contractAddress: {\n      97: '',\n      56: '0x09e727c83a75fFdB729280639eDBf947dB76EeB7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '7893',\n  },\n  {\n    sousId: 250,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.woop,\n    contractAddress: {\n      97: '',\n      56: '0x2718D56aE2b8F08B3076A409bBF729542233E451',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.226',\n  },\n  {\n    sousId: 249,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.high,\n    contractAddress: {\n      97: '',\n      56: '0x2461ea28907A2028b2bCa40040396F64B4141004',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.02679',\n  },\n  {\n    sousId: 247,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dpt,\n    contractAddress: {\n      97: '',\n      56: '0x1c0C7F3B07a42efb4e15679a9ed7e70B2d7Cc157',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.62962963',\n  },\n  {\n    sousId: 246,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.thg,\n    contractAddress: {\n      97: '',\n      56: '0x56Bfb98EBEF4344dF2d88c6b80694Cba5EfC56c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.03761',\n  },\n  {\n    sousId: 245,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.idia,\n    contractAddress: {\n      97: '',\n      56: '0x07984aBb7489CD436d27875c07Eb532d4116795a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1262',\n  },\n  {\n    sousId: 244,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xcv,\n    contractAddress: {\n      97: '',\n      56: '0xF1fA41f593547E406a203b681df18acCC3971A43',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.7413',\n  },\n  {\n    sousId: 243,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.nabox,\n    contractAddress: {\n      97: '',\n      56: '0x13A40BFab005D9284f8938FBb70Bf39982580e4D',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1271',\n  },\n  {\n    sousId: 242,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.santos,\n    contractAddress: {\n      97: '',\n      56: '0x0914b2d9D4DD7043893DEF53ecFC0F1179F87d5c',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0578',\n  },\n  {\n    sousId: 241,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.quidd,\n    contractAddress: {\n      97: '',\n      56: '0xd97ee2bfe79a4d4ab388553411c462fbb536a88c',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.07471',\n  },\n  {\n    sousId: 240,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.zoo,\n    contractAddress: {\n      97: '',\n      56: '0x2EfE8772EB97B74be742d578A654AB6C95bF18db',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4516',\n  },\n  {\n    sousId: 239,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.sfund,\n    contractAddress: {\n      97: '',\n      56: '0x7F103689cabe17C2F70DA6faa298045d72a943b8',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0311',\n  },\n  {\n    sousId: 238,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.qi,\n    contractAddress: {\n      97: '',\n      56: '0xbd52ef04DB1ad1c68A8FA24Fa71f2188978ba617',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.736',\n  },\n  {\n    sousId: 237,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.kart,\n    contractAddress: {\n      97: '',\n      56: '0x73bB10B89091f15e8FeD4d6e9EBa6415df6acb21',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1897',\n  },\n  {\n    sousId: 236,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.porto,\n    contractAddress: {\n      97: '',\n      56: '0xdD52FAB121376432DBCBb47592742F9d86CF8952',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0578',\n  },\n  {\n    sousId: 235,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x2b8751B7141Efa7a9917f9C6fea2CEA071af5eE7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.2516',\n  },\n  {\n    sousId: 234,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0xfDFb4DbE94916F9f55dBC2c14Ea8B3e386eCD9F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.5233',\n  },\n  {\n    sousId: 232,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xwg,\n    contractAddress: {\n      97: '',\n      56: '0x79f5f7DDADeFa0A9e850DFFC4fBa77e5172Fe701',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.3379',\n  },\n  {\n    sousId: 231,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dar,\n    contractAddress: {\n      97: '',\n      56: '0x9b861A078B2583373A7a3EEf815bE1A39125Ae08',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 230,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.fina,\n    contractAddress: {\n      97: '',\n      56: '0xa35caA9509a2337E22C54C929146D5F7f6515794',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.06944',\n  },\n  {\n    sousId: 229,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bmon,\n    contractAddress: {\n      97: '',\n      56: '0x6e63B2B96c77532ea7ec2B3D3BFA9C8e1d383f3C',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.0254',\n  },\n  {\n    sousId: 228,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dkt,\n    contractAddress: {\n      97: '',\n      56: '0xFef4B7a0194159d89717Efa592384d42B28D3926',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.09838',\n  },\n  {\n    sousId: 227,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x2D26e4b9a5F19eD5BB7AF221DC02432D31DEB4dA',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.2152',\n  },\n  {\n    sousId: 226,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lazio,\n    contractAddress: {\n      97: '',\n      56: '0xd008416c2c9cf23843bd179aa3cefedb4c8d1607',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0694',\n  },\n  {\n    sousId: 225,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xd9b63bb6c62fe2e9a641699a91e680994b8b0081',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.40046',\n  },\n  {\n    sousId: 224,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mcb,\n    contractAddress: {\n      97: '',\n      56: '0xCc2D359c3a99d9cfe8e6F31230142efF1C828e6D',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00706',\n  },\n  {\n    sousId: 223,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.rpg,\n    contractAddress: {\n      97: '',\n      56: '0x65C0940C50A3C98AEEc95a115Ae62E9804588713',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01863',\n  },\n  {\n    sousId: 222,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.beta,\n    contractAddress: {\n      97: '',\n      56: '0x6f660c58723922c6f866a058199ff4881019b4b5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 233,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.eternal,\n    contractAddress: {\n      97: '',\n      56: '0xc28c400F2B675b25894FA632205ddec71E432288',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.002893',\n  },\n  {\n    sousId: 221,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.nft,\n    contractAddress: {\n      97: '',\n      56: '0x8d018823d13c56d62ffb795151a9e629c21e047b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '173727',\n  },\n  {\n    sousId: 220,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0861',\n  },\n  {\n    sousId: 219,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.tlos,\n    contractAddress: {\n      97: '',\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3616',\n  },\n  {\n    sousId: 218,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.stephero,\n    contractAddress: {\n      97: '',\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1851',\n  },\n  {\n    sousId: 217,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bp,\n    contractAddress: {\n      97: '',\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.217',\n  },\n  {\n    sousId: 216,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.cvp,\n    contractAddress: {\n      97: '',\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.14',\n  },\n  {\n    sousId: 215,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.qbt,\n    contractAddress: {\n      97: '',\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.412',\n  },\n  {\n    sousId: 214,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.naos,\n    contractAddress: {\n      97: '',\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1736',\n  },\n  {\n    sousId: 213,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pha,\n    contractAddress: {\n      97: '',\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.28',\n  },\n  {\n    sousId: 212,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.101',\n  },\n  {\n    sousId: 211,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.9837',\n  },\n  {\n    sousId: 210,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pots,\n    contractAddress: {\n      97: '',\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 209,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 208,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.revv,\n    contractAddress: {\n      97: '',\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.331',\n  },\n  {\n    sousId: 207,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bttold,\n    contractAddress: {\n      97: '',\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '263',\n  },\n  {\n    sousId: 206,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.skill,\n    contractAddress: {\n      97: '',\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00289',\n  },\n  {\n    sousId: 205,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1815.39',\n  },\n  {\n    sousId: 204,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.if,\n    contractAddress: {\n      97: '',\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.02835',\n  },\n  {\n    sousId: 203,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '12.86',\n  },\n  {\n    sousId: 202,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.c98,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.axs,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00744',\n  },\n  {\n    sousId: 200,\n    stakingToken: bscTokens.axs,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00992',\n  },\n  {\n    sousId: 199,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.02696',\n  },\n  {\n    sousId: 198,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '9.6643',\n  },\n  {\n    sousId: 197,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4286',\n  },\n  {\n    sousId: 196,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.titan,\n    contractAddress: {\n      97: '',\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 195,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.harmony,\n    contractAddress: {\n      97: '',\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.0092',\n  },\n  {\n    sousId: 194,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mask,\n    contractAddress: {\n      97: '',\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.06423',\n  },\n  {\n    sousId: 193,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.7233',\n  },\n  {\n    sousId: 192,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.67129',\n  },\n  {\n    sousId: 191,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.adx,\n    contractAddress: {\n      97: '',\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.7523',\n  },\n  {\n    sousId: 190,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '69.9074',\n  },\n  {\n    sousId: 189,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.2025',\n  },\n  {\n    sousId: 156,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.6087',\n  },\n  {\n    sousId: 155,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.655',\n  },\n  {\n    sousId: 154,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00015914',\n  },\n  {\n    sousId: 153,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.31828',\n  },\n  {\n    sousId: 152,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.03553',\n  },\n  {\n    sousId: 151,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.4722',\n  },\n  {\n    sousId: 150,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 149,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.24942',\n  },\n  {\n    sousId: 148,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.4074',\n  },\n  {\n    sousId: 147,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.8935',\n  },\n  {\n    sousId: 146,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.868',\n  },\n  {\n    sousId: 145,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01261',\n  },\n  {\n    sousId: 144,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '57.87',\n  },\n  {\n    sousId: 143,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1342',\n  },\n  {\n    sousId: 142,\n    stakingToken: bscTokens.doge,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01388',\n  },\n  {\n    sousId: 141,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01331',\n  },\n  {\n    sousId: 140,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3472',\n  },\n  {\n    sousId: 139,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.8935',\n  },\n  {\n    sousId: 138,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.23148',\n  },\n  {\n    sousId: 137,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.15798',\n  },\n  {\n    sousId: 136,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.17361',\n  },\n  {\n    sousId: 135,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '462.96',\n  },\n  {\n    sousId: 134,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.0509',\n  },\n  {\n    sousId: 133,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bttold,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '79.86',\n  },\n  {\n    sousId: 132,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.66145',\n  },\n  {\n    sousId: 131,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.09548',\n  },\n  {\n    sousId: 130,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0298',\n  },\n  {\n    sousId: 129,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.4722',\n  },\n  {\n    sousId: 127,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0000031',\n  },\n  {\n    sousId: 126,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.003472',\n  },\n  {\n    sousId: 125,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00265278',\n  },\n  {\n    sousId: 124,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00000403',\n  },\n  {\n    sousId: 123,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4629',\n  },\n  {\n    sousId: 122,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3472',\n  },\n  {\n    sousId: 121,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.10918',\n  },\n  {\n    sousId: 120,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 119,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.949',\n  },\n  {\n    sousId: 118,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.11284',\n  },\n  {\n    sousId: 117,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.46296',\n  },\n  {\n    sousId: 115,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.22743',\n  },\n  {\n    sousId: 114,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00000608',\n  },\n  {\n    sousId: 113,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01273',\n  },\n  {\n    sousId: 78,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01273',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4484',\n  },\n  {\n    sousId: 76,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4629',\n  },\n  {\n    sousId: 75,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00007234',\n  },\n  {\n    sousId: 74,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.434027',\n  },\n  {\n    sousId: 73,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '5.787',\n  },\n  {\n    sousId: 72,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00289',\n  },\n  {\n    sousId: 71,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.14467',\n  },\n  {\n    sousId: 70,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '2.8935',\n  },\n  {\n    sousId: 69,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 68,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 67,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00868',\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0001157',\n  },\n  {\n    sousId: 64,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0549',\n  },\n  {\n    sousId: 62,\n    stakingToken: bscTokens.tpt,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0462',\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '3.616',\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0413',\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00248',\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '6.365',\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.000395',\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0723',\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: bscTokens.sushi,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0367',\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0578',\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.13',\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1157',\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1736',\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.899',\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: bscTokens.comp,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.055',\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: bscTokens.comp,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.55',\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.6',\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.983',\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0983',\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.231',\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0138',\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.075',\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.001215',\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.1157',\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.23',\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.2546',\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.81',\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.011574',\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.17361',\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.05787',\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.4166',\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01',\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01',\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01',\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '115.74',\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.01157',\n  },\n  {\n    sousId: 26,\n    stakingToken: bscTokens.twt,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.248',\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.02',\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.02',\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.104',\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: bscTokens.bnb,\n    earningToken: bscTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    tokenPerBlock: '0.5',\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0041',\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '23.14',\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '23.14',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.02893',\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '5',\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.346',\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    tokenPerBlock: '12.5',\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.stax,\n    contractAddress: {\n      97: '',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    tokenPerBlock: '0.2',\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.nar,\n    contractAddress: {\n      97: '',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    tokenPerBlock: '1',\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.nya,\n    contractAddress: {\n      97: '',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ctk,\n    contractAddress: {\n      97: '',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.5',\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '20',\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.inj,\n    contractAddress: {\n      97: '',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.25',\n    isFinished: true,\n  },\n  {\n    sousId: 248,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ccar,\n    contractAddress: {\n      97: '',\n      56: '0x9e31aef040941E67356519f44bcA07c5f82215e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.6093',\n  },\n  {\n    sousId: 262,\n    stakingToken: bscTokens.cake,\n    earningToken: bscTokens.ach,\n    contractAddress: {\n      97: '',\n      56: '0xD5668e936B951292Ddf8c84553CC58F85948F816',\n    },\n    poolCategory: PoolCategory.CORE,\n\n    enableEmergencyWithdraw: true,\n    tokenPerBlock: '7.502',\n  },\n].map((p) => ({\n  ...p,\n  isFinished: true,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\nexport default [...livePools, ...finishedPools]\n","// import { serializeTokens } from 'utils/serializeTokens'\nimport { SerializedFarmConfig } from '../../types'\n// import { ethereumTokens } from '../tokens'\n\n// const serializedTokens = serializeTokens(ethereumTokens)\n\nconst priceHelperLps: SerializedFarmConfig[] = []\n\nexport default priceHelperLps\n","import { SerializedFarmConfig } from '../../types'\n\nconst priceHelperLps: SerializedFarmConfig[] = []\n\nexport default priceHelperLps\n","import { bscTokens } from '@pancakeswap/tokens'\nimport { SerializedFarmConfig } from '../../types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'ANKR-BNB LP',\n    lpAddress: '0x3147F98B8f9C53Acdf8F16332eaD12B592a1a4ae',\n    token: bscTokens.ankr,\n    quoteToken: bscTokens.wbnb,\n  },\n].map((p) => ({ ...p, token: p.token.serialize, quoteToken: p.quoteToken.serialize }))\n\nexport default priceHelperLps\n","// import { bscTestnetTokens } from '../tokens'\nimport { SerializedFarmConfig } from '../../types'\n\nconst priceHelperLps: SerializedFarmConfig[] = []\n\nexport default priceHelperLps\n","import { getFarmsPriceHelperLpFiles } from '@pancakeswap/farms/constants/priceHelperLps/getFarmsPriceHelperLpFiles'\nimport { ChainId } from '@pancakeswap/sdk'\nimport PoolsEthereumPriceHelper from './pools/1'\nimport PoolsGoerliPriceHelper from './pools/5'\nimport PoolsBscPriceHelper from './pools/56'\nimport PoolsBscTestnetPriceHelper from './pools/97'\n\nexport { getFarmsPriceHelperLpFiles }\n\nexport const getPoolsPriceHelperLpFiles = (chainId: ChainId) => {\n  switch (chainId) {\n    case ChainId.BSC:\n      return PoolsBscPriceHelper\n    case ChainId.BSC_TESTNET:\n      return PoolsBscTestnetPriceHelper\n    case ChainId.ETHEREUM:\n      return PoolsEthereumPriceHelper\n    case ChainId.GOERLI:\n      return PoolsGoerliPriceHelper\n    default:\n      return []\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Token, ChainId } from '@pancakeswap/sdk'\nimport { SerializedWrappedToken } from '@pancakeswap/token-lists'\nimport type { SerializedFarmConfig, FarmConfigBaseProps } from '@pancakeswap/farms'\n\n// a list of tokens by chain\nexport type ChainMap<T> = {\n  readonly [chainId in ChainId]: T\n}\n\nexport type ChainTokenList = ChainMap<Token[]>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n  [chainId: number]: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn?: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  description?: string\n  twitterUrl?: string\n  telegramUrl?: string\n  version: number\n  vestingTitle?: string\n  cIFO?: boolean\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport type { SerializedFarmConfig, FarmConfigBaseProps }\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n  version?: number\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedWrappedToken\n  stakingToken: SerializedWrappedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' config\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n\nexport enum FetchStatus {\n  Idle = 'IDLE',\n  Fetching = 'FETCHING',\n  Fetched = 'FETCHED',\n  Failed = 'FAILED',\n}\n","import { getFullDecimalMultiplier } from '@pancakeswap/utils/getFullDecimalMultiplier'\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 40\nexport const BLOCKS_PER_DAY = (60 / BSC_BLOCK_TIME) * 60 * 24\nexport const BLOCKS_PER_YEAR = BLOCKS_PER_DAY * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const DEFAULT_TOKEN_DECIMAL = getFullDecimalMultiplier(18)\nexport const DEFAULT_GAS_LIMIT = 250000\nexport const BOOSTED_FARM_GAS_LIMIT = 500000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n","import { ChainId } from '@pancakeswap/sdk'\nimport { atom, useAtomValue } from 'jotai'\nimport { useRouter } from 'next/router'\nimport { useDeferredValue } from 'react'\nimport { isChainSupported } from 'utils/wagmi'\nimport { useNetwork } from 'wagmi'\nimport { useSessionChainId } from './useSessionChainId'\n\nconst queryChainIdAtom = atom(-1) // -1 unload, 0 no chainId on query\n\nqueryChainIdAtom.onMount = (set) => {\n  const params = new URL(window.location.href).searchParams\n  const c = params.get('chainId')\n  if (isChainSupported(+c)) {\n    set(+c)\n  } else {\n    set(0)\n  }\n}\n\nexport function useLocalNetworkChain() {\n  const [sessionChainId] = useSessionChainId()\n  // useRouter is kind of slow, we only get this query chainId once\n  const queryChainId = useAtomValue(queryChainIdAtom)\n\n  const { query } = useRouter()\n\n  const chainId = +(sessionChainId || query.chainId || queryChainId)\n\n  if (isChainSupported(chainId)) {\n    return chainId\n  }\n\n  return undefined\n}\n\nexport const useActiveChainId = () => {\n  const localChainId = useLocalNetworkChain()\n  const queryChainId = useAtomValue(queryChainIdAtom)\n\n  const { chain } = useNetwork()\n  const chainId = localChainId ?? chain?.id ?? (queryChainId >= 0 ? ChainId.BSC : undefined)\n\n  const isNotMatched = useDeferredValue(chain && localChainId && chain.id !== localChainId)\n\n  return {\n    chainId,\n    isWrongNetwork: (chain?.unsupported ?? false) || isNotMatched,\n    isNotMatched,\n  }\n}\n","import { useWeb3React } from '@pancakeswap/wagmi'\nimport { useRouter, NextRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport { usePreviousValue } from '@pancakeswap/hooks'\nimport { EXCHANGE_PAGE_PATHS } from 'config/constants/exchange'\nimport { isChainSupported } from 'utils/wagmi'\nimport { useProvider } from 'wagmi'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useActiveChainId } from './useActiveChainId'\nimport { useSwitchNetworkLoading } from './useSwitchNetworkLoading'\n\nconst getHashFromRouter = (router: NextRouter) => {\n  return router.asPath.match(/#([a-z0-9]+)/gi)\n}\n\nexport function useNetworkConnectorUpdater() {\n  const { chainId } = useActiveWeb3React()\n  const previousChainId = usePreviousValue(chainId)\n  const [loading] = useSwitchNetworkLoading()\n  const router = useRouter()\n\n  useEffect(() => {\n    if (loading || !router.isReady) return\n    const parsedQueryChainId = Number(router.query.chainId)\n    if (!parsedQueryChainId && chainId === ChainId.BSC) return\n    if (parsedQueryChainId !== chainId && isChainSupported(chainId)) {\n      const removeQueriesFromPath =\n        previousChainId !== chainId &&\n        EXCHANGE_PAGE_PATHS.some((item) => {\n          return router.pathname.startsWith(item)\n        })\n      const uriHash = getHashFromRouter(router)?.[0]\n      router.replace(\n        {\n          query: {\n            ...(!removeQueriesFromPath && router.query),\n            chainId,\n          },\n          ...(uriHash && { hash: uriHash }),\n        },\n        undefined,\n      )\n    }\n  }, [previousChainId, chainId, loading, router])\n}\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = () => {\n  const web3React = useWeb3React()\n  const { chainId, isWrongNetwork } = useActiveChainId()\n  const provider = useProvider({ chainId })\n\n  return {\n    provider,\n    ...web3React,\n    chainId,\n    isWrongNetwork,\n  }\n}\n\nexport default useActiveWeb3React\n","import {\n  Cake,\n  CakeFlexibleSideVaultV2,\n  CakeVaultV2,\n  Erc20,\n  Erc20Bytes32,\n  Erc721collection,\n  Multicall,\n  Weth,\n  Zap,\n} from 'config/abi/types'\nimport zapAbi from 'config/abi/zap.json'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useProviderOrSigner } from 'hooks/useProviderOrSigner'\nimport { useMemo } from 'react'\nimport { getMulticallAddress, getPredictionsV1Address, getZapAddress } from 'utils/addressHelpers'\nimport {\n  getAnniversaryAchievementContract,\n  getBCakeFarmBoosterContract,\n  getBCakeFarmBoosterProxyFactoryContract,\n  getBCakeProxyContract,\n  getBep20Contract,\n  getBunnyFactoryContract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialContract,\n  getBunnySpecialLotteryContract,\n  getBunnySpecialPredictionContract,\n  getBunnySpecialXmasContract,\n  getCakeContract,\n  getCakeFlexibleSideVaultV2Contract,\n  getCakePredictionsContract,\n  getCakeVaultV2Contract,\n  getChainlinkOracleContract,\n  getClaimRefundContract,\n  getEasterNftContract,\n  getErc721CollectionContract,\n  getErc721Contract,\n  getFarmAuctionContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getIfoV3Contract,\n  getLotteryV2Contract,\n  getMasterchefContract,\n  getMasterchefV1Contract,\n  getNftMarketContract,\n  getNftSaleContract,\n  getPancakeBunniesContract,\n  getPancakeSquadContract,\n  getPointCenterIfoContract,\n  getPotteryDrawContract,\n  getPotteryVaultContract,\n  getPredictionsContract,\n  getPredictionsV1Contract,\n  getProfileContract,\n  getSouschefContract,\n  getTradingCompetitionContractEaster,\n  getTradingCompetitionContractFanToken,\n  getTradingCompetitionContractMobox,\n  getTradingCompetitionContractMoD,\n  getNonBscVaultContract,\n  getCrossFarmingProxyContract,\n} from 'utils/contractHelpers'\nimport { useSigner } from 'wagmi'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { WNATIVE } from '@pancakeswap/sdk'\nimport { ERC20_BYTES32_ABI } from 'config/abi/erc20'\nimport ERC20_ABI from 'config/abi/erc20.json'\nimport IPancakePairABI from 'config/abi/IPancakePair.json'\nimport multiCallAbi from 'config/abi/Multicall.json'\nimport WETH_ABI from 'config/abi/weth.json'\nimport { getContract } from 'utils'\n\nimport { IPancakePair } from 'config/abi/types/IPancakePair'\nimport { VaultKey } from 'state/types'\nimport { useActiveChainId } from './useActiveChainId'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getIfoV1Contract(address, signer), [address, signer])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getIfoV2Contract(address, signer), [address, signer])\n}\n\nexport const useIfoV3Contract = (address: string) => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getIfoV3Contract(address, signer), [address, signer])\n}\n\nexport const useERC20 = (address: string, withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getBep20Contract(address, providerOrSigner), [address, providerOrSigner])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string, withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getErc721Contract(address, providerOrSigner), [address, providerOrSigner])\n}\n\nexport const useCake = (): { reader: Cake; signer: Cake } => {\n  const providerOrSigner = useProviderOrSigner()\n  return useMemo(\n    () => ({\n      reader: getCakeContract(null),\n      signer: getCakeContract(providerOrSigner),\n    }),\n    [providerOrSigner],\n  )\n}\n\nexport const useBunnyFactory = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getBunnyFactoryContract(signer), [signer])\n}\n\nexport const usePancakeBunnies = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getPancakeBunniesContract(signer), [signer])\n}\n\nexport const useProfileContract = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getProfileContract(providerOrSigner), [providerOrSigner])\n}\n\nexport const useLotteryV2Contract = () => {\n  const providerOrSigner = useProviderOrSigner()\n  return useMemo(() => getLotteryV2Contract(providerOrSigner), [providerOrSigner])\n}\n\nexport const useMasterchef = (withSignerIfPossible = true) => {\n  const { chainId } = useActiveChainId()\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getMasterchefContract(providerOrSigner, chainId), [providerOrSigner, chainId])\n}\n\nexport const useMasterchefV1 = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getMasterchefV1Contract(signer), [signer])\n}\n\nexport const useSousChef = (id) => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getSouschefContract(id, signer), [id, signer])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getPointCenterIfoContract(signer), [signer])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getBunnySpecialContract(signer), [signer])\n}\n\nexport const useClaimRefundContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getClaimRefundContract(signer), [signer])\n}\n\nexport const useTradingCompetitionContractEaster = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getTradingCompetitionContractEaster(providerOrSigner), [providerOrSigner])\n}\n\nexport const useTradingCompetitionContractFanToken = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getTradingCompetitionContractFanToken(providerOrSigner), [providerOrSigner])\n}\n\nexport const useTradingCompetitionContractMobox = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getTradingCompetitionContractMobox(providerOrSigner), [providerOrSigner])\n}\n\nexport const useTradingCompetitionContractMoD = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getTradingCompetitionContractMoD(providerOrSigner), [providerOrSigner])\n}\n\nexport const useEasterNftContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getEasterNftContract(signer), [signer])\n}\n\nexport const useVaultPoolContract = (vaultKey: VaultKey): CakeVaultV2 | CakeFlexibleSideVaultV2 => {\n  const { data: signer } = useSigner()\n  return useMemo(() => {\n    if (vaultKey === VaultKey.CakeVault) {\n      return getCakeVaultV2Contract(signer)\n    }\n    if (vaultKey === VaultKey.CakeFlexibleSideVault) {\n      return getCakeFlexibleSideVaultV2Contract(signer)\n    }\n    return null\n  }, [signer, vaultKey])\n}\n\nexport const useCakeVaultContract = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getCakeVaultV2Contract(providerOrSigner), [providerOrSigner])\n}\n\nexport const usePredictionsContract = (address: string, tokenSymbol: string) => {\n  const { data: signer } = useSigner()\n  return useMemo(() => {\n    if (address === getPredictionsV1Address()) {\n      return getPredictionsV1Contract(signer)\n    }\n    const getPredContract = tokenSymbol === 'CAKE' ? getCakePredictionsContract : getPredictionsContract\n\n    return getPredContract(address, signer)\n  }, [address, tokenSymbol, signer])\n}\n\nexport const useChainlinkOracleContract = (address, withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getChainlinkOracleContract(address, providerOrSigner), [providerOrSigner, address])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getBunnySpecialCakeVaultContract(signer), [signer])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getBunnySpecialPredictionContract(signer), [signer])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getBunnySpecialLotteryContract(signer), [signer])\n}\n\nexport const useBunnySpecialXmasContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getBunnySpecialXmasContract(signer), [signer])\n}\n\nexport const useAnniversaryAchievementContract = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getAnniversaryAchievementContract(providerOrSigner), [providerOrSigner])\n}\n\nexport const useNftSaleContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getNftSaleContract(signer), [signer])\n}\n\nexport const usePancakeSquadContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getPancakeSquadContract(signer), [signer])\n}\n\nexport const useFarmAuctionContract = (withSignerIfPossible = true) => {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getFarmAuctionContract(providerOrSigner), [providerOrSigner])\n}\n\nexport const useNftMarketContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getNftMarketContract(signer), [signer])\n}\n\nexport const useErc721CollectionContract = (\n  collectionAddress: string,\n): { reader: Erc721collection; signer: Erc721collection } => {\n  const { data: signer } = useSigner()\n  return useMemo(\n    () => ({\n      reader: getErc721CollectionContract(null, collectionAddress),\n      signer: getErc721CollectionContract(signer, collectionAddress),\n    }),\n    [signer, collectionAddress],\n  )\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nexport function useContract<T extends Contract = Contract>(\n  address: string | undefined,\n  ABI: any,\n  withSignerIfPossible = true,\n): T | null {\n  const { provider } = useActiveWeb3React()\n\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible) ?? provider\n\n  const canReturnContract = useMemo(() => address && ABI && providerOrSigner, [address, ABI, providerOrSigner])\n\n  return useMemo(() => {\n    if (!canReturnContract) return null\n    try {\n      return getContract(address, ABI, providerOrSigner)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, providerOrSigner, canReturnContract]) as T\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean) {\n  return useContract<Erc20>(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWNativeContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract<Weth>(chainId ? WNATIVE[chainId]?.address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract<Erc20Bytes32>(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): IPancakePair | null {\n  return useContract(pairAddress, IPancakePairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract() {\n  const { chainId } = useActiveWeb3React()\n  return useContract<Multicall>(getMulticallAddress(chainId), multiCallAbi, false)\n}\n\nexport const usePotterytVaultContract = (address) => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getPotteryVaultContract(address, signer), [address, signer])\n}\n\nexport const usePotterytDrawContract = () => {\n  const { data: signer } = useSigner()\n  return useMemo(() => getPotteryDrawContract(signer), [signer])\n}\n\nexport function useZapContract(withSignerIfPossible = true) {\n  return useContract<Zap>(getZapAddress(), zapAbi, withSignerIfPossible)\n}\n\nexport function useBCakeFarmBoosterContract(withSignerIfPossible = true) {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getBCakeFarmBoosterContract(providerOrSigner), [providerOrSigner])\n}\n\nexport function useBCakeFarmBoosterProxyFactoryContract(withSignerIfPossible = true) {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getBCakeFarmBoosterProxyFactoryContract(providerOrSigner), [providerOrSigner])\n}\n\nexport function useBCakeProxyContract(proxyContractAddress: string, withSignerIfPossible = true) {\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(\n    () => proxyContractAddress && getBCakeProxyContract(proxyContractAddress, providerOrSigner),\n    [providerOrSigner, proxyContractAddress],\n  )\n}\n\nexport const useNonBscVault = (withSignerIfPossible = true) => {\n  const { chainId } = useActiveChainId()\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(() => getNonBscVaultContract(providerOrSigner, chainId), [providerOrSigner, chainId])\n}\n\nexport const useCrossFarmingProxy = (proxyContractAddress: string, withSignerIfPossible = true) => {\n  const { chainId } = useActiveChainId()\n  const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\n  return useMemo(\n    () => proxyContractAddress && getCrossFarmingProxyContract(proxyContractAddress, providerOrSigner, chainId),\n    [proxyContractAddress, providerOrSigner, chainId],\n  )\n}\n","import { useMemo } from 'react'\nimport { useAccount, useProvider, useSigner } from 'wagmi'\nimport { useActiveChainId } from './useActiveChainId'\n\nexport const useProviderOrSigner = (withSignerIfPossible = true) => {\n  const { chainId } = useActiveChainId()\n  const provider = useProvider({ chainId })\n  const { address, isConnected } = useAccount()\n  const { data: signer } = useSigner()\n\n  return useMemo(\n    () => (withSignerIfPossible && address && isConnected && signer ? signer : provider),\n    [address, isConnected, provider, signer, withSignerIfPossible],\n  )\n}\n","import { atom, useAtom } from 'jotai'\n\nconst sessionChainIdAtom = atom<number>(0)\n\nexport const useSessionChainId = () => {\n  return useAtom(sessionChainIdAtom)\n}\n","import { atom, useAtom } from 'jotai'\n\nconst switchNetworkLoadingAtom = atom(false)\n\nexport const useSwitchNetworkLoading = () => {\n  return useAtom(switchNetworkLoadingAtom)\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import BigNumber from 'bignumber.js'\nimport { ChainId } from '@pancakeswap/sdk'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport nonBscVault from 'config/abi/nonBscVault.json'\nimport multicall, { multicallv2 } from 'utils/multicall'\nimport { getMasterChefAddress, getNonBscVaultAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\nimport { verifyBscNetwork } from 'utils/verifyBscNetwork'\nimport { getCrossFarmingReceiverContract } from 'utils/contractHelpers'\nimport { farmFetcher } from 'state/farms'\n\nexport const fetchFarmUserAllowances = async (\n  account: string,\n  farmsToFetch: SerializedFarmConfig[],\n  chainId: number,\n  proxyAddress?: string,\n) => {\n  const isBscNetwork = verifyBscNetwork(chainId)\n  const masterChefAddress = isBscNetwork ? getMasterChefAddress(chainId) : getNonBscVaultAddress(chainId)\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = farm.lpAddress\n    return { address: lpContractAddress, name: 'allowance', params: [account, proxyAddress || masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall<BigNumber[]>(erc20ABI, calls, chainId)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (\n  account: string,\n  farmsToFetch: SerializedFarmConfig[],\n  chainId: number,\n) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = farm.lpAddress\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls, chainId)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (\n  account: string,\n  farmsToFetch: SerializedFarmConfig[],\n  chainId: number,\n) => {\n  const isBscNetwork = verifyBscNetwork(chainId)\n  const masterChefAddress = isBscNetwork ? getMasterChefAddress(chainId) : getNonBscVaultAddress(chainId)\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.vaultPid ?? farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicallv2({\n    abi: isBscNetwork ? masterchefABI : nonBscVault,\n    calls,\n    chainId,\n    options: { requireSuccess: false },\n  })\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[], chainId: number) => {\n  const isBscNetwork = verifyBscNetwork(chainId)\n  const multiCallChainId = farmFetcher.isTestnet(chainId) ? ChainId.BSC_TESTNET : ChainId.BSC\n  const userAddress = isBscNetwork ? account : await fetchCProxyAddress(account, multiCallChainId)\n  const masterChefAddress = getMasterChefAddress(multiCallChainId)\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, userAddress],\n    }\n  })\n\n  const rawEarnings = await multicallv2({ abi: masterchefABI, calls, chainId: multiCallChainId })\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\nexport const fetchCProxyAddress = async (address: string, chainId: number) => {\n  try {\n    const crossFarmingAddress = getCrossFarmingReceiverContract(null, chainId)\n    const cProxyAddress = await crossFarmingAddress.cProxy(address)\n    return cProxyAddress.toString()\n  } catch (error) {\n    console.error('Failed Fetch CProxy Address', error)\n    return address\n  }\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport erc20 from 'config/abi/erc20.json'\nimport chunk from 'lodash/chunk'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { SerializedFarmConfig } from '../../config/constants/types'\nimport { SerializedFarm } from '../types'\n\nconst fetchFarmCalls = (farm: SerializedFarm, chainId: number) => {\n  const { lpAddress, token, quoteToken } = farm\n  return [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress(chainId)],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n}\n\nexport const fetchPublicFarmsData = async (farms: SerializedFarmConfig[], chainId = ChainId.BSC): Promise<any[]> => {\n  const farmCalls = farms.flatMap((farm) => fetchFarmCalls(farm, chainId))\n  const chunkSize = farmCalls.length / farms.length\n  const farmMultiCallResult = await multicallv2({ abi: erc20, calls: farmCalls, chainId })\n  return chunk(farmMultiCallResult, chunkSize)\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarmConfig } from 'config/constants/types'\nimport { getFullDecimalMultiplier } from '@pancakeswap/utils/getFullDecimalMultiplier'\nimport { BIG_TWO, BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { SerializedFarm } from '../types'\nimport { fetchMasterChefData } from './fetchMasterChefData'\nimport { fetchPublicFarmsData } from './fetchPublicFarmData'\n\nfunction getLpInfo({\n  tokenBalanceLP,\n  quoteTokenBalanceLP,\n  lpTokenBalanceMC,\n  lpTotalSupply,\n  tokenDecimals,\n  quoteTokenDecimals,\n}) {\n  const lpTotalSupplyBN = new BigNumber(lpTotalSupply)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupplyBN))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(getFullDecimalMultiplier(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(getFullDecimalMultiplier(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(BIG_TWO)\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: lpTotalSupplyBN.toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n  }\n}\n\nfunction farmLpTransformer(farmResult, masterChefResult) {\n  return (farm, index) => {\n    const [\n      tokenBalanceLP,\n      quoteTokenBalanceLP,\n      lpTokenBalanceMC,\n      lpTotalSupply,\n      [tokenDecimals],\n      [quoteTokenDecimals],\n    ] = farmResult[index]\n\n    const [info, totalRegularAllocPoint] = masterChefResult[index]\n    const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n    const poolWeight = totalRegularAllocPoint ? allocPoint.div(new BigNumber(totalRegularAllocPoint)) : BIG_ZERO\n\n    return {\n      ...farm,\n      token: farm.token,\n      quoteToken: farm.quoteToken,\n      poolWeight: poolWeight.toJSON(),\n      multiplier: `${allocPoint.div(100).toString()}X`,\n      ...getLpInfo({\n        tokenBalanceLP,\n        quoteTokenBalanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      }),\n    }\n  }\n}\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[], chainId: number): Promise<SerializedFarm[]> => {\n  const [farmResult, masterChefResult] = await Promise.all([\n    fetchPublicFarmsData(farmsToFetch, chainId),\n    fetchMasterChefData(farmsToFetch, chainId),\n  ])\n\n  return farmsToFetch.map(farmLpTransformer(farmResult, masterChefResult))\n}\n\nexport default fetchFarms\n","import masterchefABI from 'config/abi/masterchef.json'\nimport chunk from 'lodash/chunk'\nimport { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js'\nimport { multicallv2 } from 'utils/multicall'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { farmFetcher } from 'state/farms'\nimport { SerializedFarmConfig } from '../../config/constants/types'\nimport { SerializedFarm } from '../types'\nimport { getMasterChefAddress } from '../../utils/addressHelpers'\n\nexport const fetchMasterChefFarmPoolLength = async (chainId: number) => {\n  try {\n    const [poolLength] = await multicallv2({\n      abi: masterchefABI,\n      calls: [\n        {\n          name: 'poolLength',\n          address: getMasterChefAddress(chainId),\n        },\n      ],\n      chainId,\n    })\n\n    return new BigNumber(poolLength).toNumber()\n  } catch (error) {\n    console.error('Fetch MasterChef Farm Pool Length Error: ', error)\n    return BIG_ZERO.toNumber()\n  }\n}\n\nconst masterChefFarmCalls = async (farm: SerializedFarm) => {\n  const { pid, quoteToken } = farm\n  const multiCallChainId = farmFetcher.isTestnet(quoteToken.chainId) ? ChainId.BSC_TESTNET : ChainId.BSC\n  const masterChefAddress = getMasterChefAddress(multiCallChainId)\n  const masterChefPid = pid\n\n  return masterChefPid || masterChefPid === 0\n    ? [\n        {\n          address: masterChefAddress,\n          name: 'poolInfo',\n          params: [masterChefPid],\n        },\n        {\n          address: masterChefAddress,\n          name: 'totalRegularAllocPoint',\n        },\n      ]\n    : [null, null]\n}\n\nexport const fetchMasterChefData = async (farms: SerializedFarmConfig[], chainId: number): Promise<any[]> => {\n  const masterChefCalls = await Promise.all(farms.map((farm) => masterChefFarmCalls(farm)))\n  const chunkSize = masterChefCalls.flat().length / farms.length\n  const masterChefAggregatedCalls = masterChefCalls\n    .filter((masterChefCall) => masterChefCall[0] !== null && masterChefCall[1] !== null)\n    .flat()\n\n  const multiCallChainId = farmFetcher.isTestnet(chainId) ? ChainId.BSC_TESTNET : ChainId.BSC\n  const masterChefMultiCallResult = await multicallv2({\n    abi: masterchefABI,\n    calls: masterChefAggregatedCalls,\n    chainId: multiCallChainId,\n  })\n  const masterChefChunkedResultRaw = chunk(masterChefMultiCallResult, chunkSize)\n\n  let masterChefChunkedResultCounter = 0\n  return masterChefCalls.map((masterChefCall) => {\n    if (masterChefCall[0] === null && masterChefCall[1] === null) {\n      return [null, null]\n    }\n    const data = masterChefChunkedResultRaw[masterChefChunkedResultCounter]\n    masterChefChunkedResultCounter++\n    return data\n  })\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { filterFarmsByQuoteToken } from '@pancakeswap/farms'\nimport { SerializedFarm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  nativePriceUSD: BigNumber,\n  wNative: string,\n  stable: string,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === stable) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === wNative) {\n    return hasTokenPriceVsQuote ? nativePriceUSD.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === wNative) {\n    const quoteTokenInBusd = nativePriceUSD.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === stable) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  nativePriceUSD: BigNumber,\n  wNative: string,\n  stable: string,\n): BigNumber => {\n  if (farm.quoteToken.symbol === stable) {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === wNative) {\n    return nativePriceUSD\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === wNative) {\n    return quoteTokenFarm.tokenPriceVsQuote ? nativePriceUSD.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === stable) {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst getFarmsPrices = (farms: SerializedFarm[], chainId: number) => {\n  if (!nativeStableLpMap[chainId]) {\n    throw new Error(`chainId ${chainId} not supported`)\n  }\n\n  const nativeStableFarm = farms.find(\n    (farm) => farm.lpAddress.toLowerCase() === nativeStableLpMap[chainId].address.toLowerCase(),\n  )\n  const nativePriceUSD = nativeStableFarm.tokenPriceVsQuote ? BIG_ONE.div(nativeStableFarm.tokenPriceVsQuote) : BIG_ZERO\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol, [\n      nativeStableLpMap[chainId].wNative,\n      nativeStableLpMap[chainId].stable,\n    ])\n    const tokenPriceBusd = getFarmBaseTokenPrice(\n      farm,\n      quoteTokenFarm,\n      nativePriceUSD,\n      nativeStableLpMap[chainId].wNative,\n      nativeStableLpMap[chainId].stable,\n    )\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(\n      farm,\n      quoteTokenFarm,\n      nativePriceUSD,\n      nativeStableLpMap[chainId].wNative,\n      nativeStableLpMap[chainId].stable,\n    )\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default getFarmsPrices\n\nconst nativeStableLpMap = {\n  5: {\n    address: '0xf5bf0C34d3c428A74Ceb98d27d38d0036C587200',\n    wNative: 'WETH',\n    stable: 'USDC',\n  },\n  56: {\n    address: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    wNative: 'WBNB',\n    stable: 'BUSD',\n  },\n  97: {\n    address: '0x4E96D2e92680Ca65D58A0e2eB5bd1c0f44cAB897',\n    wNative: 'WBNB',\n    stable: 'BUSD',\n  },\n}\n","import { getFarmConfig } from '@pancakeswap/farms/constants'\nimport { createFarmFetcher } from '@pancakeswap/farms'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport type {\n  UnknownAsyncThunkFulfilledAction,\n  UnknownAsyncThunkPendingAction,\n  UnknownAsyncThunkRejectedAction,\n} from '@reduxjs/toolkit/dist/matchers'\nimport BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport { FARM_API } from 'config/constants/endpoints'\nimport { getFarmsPriceHelperLpFiles } from 'config/constants/priceHelperLps'\nimport stringify from 'fast-json-stable-stringify'\nimport fromPairs from 'lodash/fromPairs'\nimport type { AppState } from 'state'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport multicall, { multicallv2 } from 'utils/multicall'\nimport { chains } from 'utils/wagmi'\nimport splitProxyFarms from 'views/Farms/components/YieldBooster/helpers/splitProxyFarms'\nimport { verifyBscNetwork } from 'utils/verifyBscNetwork'\nimport { resetUserState } from '../global/actions'\nimport { SerializedFarm, SerializedFarmsState } from '../types'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserAllowances,\n  fetchFarmUserEarnings,\n  fetchFarmUserStakedBalances,\n  fetchFarmUserTokenBalances,\n} from './fetchFarmUser'\nimport { fetchMasterChefFarmPoolLength } from './fetchMasterChefData'\nimport getFarmsPrices from './getFarmsPrices'\n\n/**\n * @deprecated\n */\nconst fetchFetchPublicDataOld = async ({ pids, chainId }): Promise<[SerializedFarm[], number, number]> => {\n  const [poolLength, [cakePerBlockRaw]] = await Promise.all([\n    fetchMasterChefFarmPoolLength(chainId),\n    multicall(masterchefABI, [\n      {\n        // BSC only\n        address: getMasterChefAddress(ChainId.BSC),\n        name: 'cakePerBlock',\n        params: [true],\n      },\n    ]),\n  ])\n\n  const poolLengthAsBigNumber = new BigNumber(poolLength)\n  const regularCakePerBlock = getBalanceAmount(new BigNumber(cakePerBlockRaw))\n  const farmsConfig = await getFarmConfig(chainId)\n  const farmsCanFetch = farmsConfig.filter(\n    (farmConfig) => pids.includes(farmConfig.pid) && poolLengthAsBigNumber.gt(farmConfig.pid),\n  )\n  const priceHelperLpsConfig = getFarmsPriceHelperLpFiles(chainId)\n\n  const farms = await fetchFarms(farmsCanFetch.concat(priceHelperLpsConfig), chainId)\n  const farmsWithPrices = farms.length > 0 ? getFarmsPrices(farms, chainId) : []\n  return [farmsWithPrices, poolLengthAsBigNumber.toNumber(), regularCakePerBlock.toNumber()]\n}\n\nconst fetchFarmPublicDataPkg = async ({ pids, chainId, chain }): Promise<[SerializedFarm[], number, number]> => {\n  const farmsConfig = await getFarmConfig(chainId)\n  const farmsCanFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n  const priceHelperLpsConfig = getFarmsPriceHelperLpFiles(chainId)\n\n  const { farmsWithPrice, poolLength, regularCakePerBlock } = await farmFetcher.fetchFarms({\n    chainId,\n    isTestnet: chain.testnet,\n    farms: farmsCanFetch.concat(priceHelperLpsConfig),\n  })\n  return [farmsWithPrice, poolLength, regularCakePerBlock]\n}\n\nexport const farmFetcher = createFarmFetcher(multicallv2)\n\nconst farmApiFetch = (chainId: number) => fetch(`${FARM_API}/${chainId}`).then((res) => res.json())\n\nconst initialState: SerializedFarmsState = {\n  data: [],\n  chainId: null,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n  loadingKeys: {},\n}\n\n// Async thunks\nexport const fetchInitialFarmsData = createAsyncThunk<\n  { data: SerializedFarm[]; chainId: number },\n  { chainId: number },\n  {\n    state: AppState\n  }\n>('farms/fetchInitialFarmsData', async ({ chainId }) => {\n  const farmDataList = await getFarmConfig(chainId)\n  return {\n    data: farmDataList.map((farm) => ({\n      ...farm,\n      userData: {\n        allowance: '0',\n        tokenBalance: '0',\n        stakedBalance: '0',\n        earnings: '0',\n      },\n    })),\n    chainId,\n  }\n})\n\nlet fallback = false\n\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<\n  [SerializedFarm[], number, number],\n  { pids: number[]; chainId: number; flag: string },\n  {\n    state: AppState\n  }\n>(\n  'farms/fetchFarmsPublicDataAsync',\n  async ({ pids, chainId, flag = 'pkg' }, { dispatch, getState }) => {\n    const state = getState()\n    if (state.farms.chainId !== chainId) {\n      await dispatch(fetchInitialFarmsData({ chainId }))\n    }\n    const chain = chains.find((c) => c.id === chainId)\n    if (!chain || !farmFetcher.isChainSupported(chain.id)) throw new Error('chain not supported')\n    try {\n      if (flag === 'old') {\n        return fetchFetchPublicDataOld({ pids, chainId })\n      }\n      if (flag === 'api' && !fallback) {\n        try {\n          const { updatedAt, data: farmsWithPrice, poolLength, regularCakePerBlock } = await farmApiFetch(chainId)\n          if (Date.now() - new Date(updatedAt).getTime() > 3 * 60 * 1000) {\n            fallback = true\n            throw new Error('Farm Api out dated')\n          }\n          return [farmsWithPrice, poolLength, regularCakePerBlock]\n        } catch (error) {\n          console.error(error)\n          return fetchFarmPublicDataPkg({ pids, chainId, chain })\n        }\n      }\n      return fetchFarmPublicDataPkg({ pids, chainId, chain })\n    } catch (error) {\n      console.error(error)\n      throw error\n    }\n  },\n  {\n    condition: (arg, { getState }) => {\n      const { farms } = getState()\n      if (farms.loadingKeys[stringify({ type: fetchFarmsPublicDataAsync.typePrefix, arg })]) {\n        console.debug('farms action is fetching, skipping here')\n        return false\n      }\n      return true\n    },\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n  proxy?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nasync function getBoostedFarmsStakeValue(farms, account, chainId, proxyAddress) {\n  const [\n    userFarmAllowances,\n    userFarmTokenBalances,\n    userStakedBalances,\n    userFarmEarnings,\n    proxyUserFarmAllowances,\n    proxyUserStakedBalances,\n    proxyUserFarmEarnings,\n  ] = await Promise.all([\n    fetchFarmUserAllowances(account, farms, chainId),\n    fetchFarmUserTokenBalances(account, farms, chainId),\n    fetchFarmUserStakedBalances(account, farms, chainId),\n    fetchFarmUserEarnings(account, farms, chainId),\n    // Proxy call\n    fetchFarmUserAllowances(account, farms, chainId, proxyAddress),\n    fetchFarmUserStakedBalances(proxyAddress, farms, chainId),\n    fetchFarmUserEarnings(proxyAddress, farms, chainId),\n  ])\n\n  const farmAllowances = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      pid: farms[index].pid,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n      proxy: {\n        allowance: proxyUserFarmAllowances[index],\n        // NOTE: Duplicate tokenBalance to maintain data structure consistence\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: proxyUserStakedBalances[index],\n        earnings: proxyUserFarmEarnings[index],\n      },\n    }\n  })\n\n  return farmAllowances\n}\n\nasync function getNormalFarmsStakeValue(farms, account, chainId) {\n  const [userFarmAllowances, userFarmTokenBalances, userStakedBalances, userFarmEarnings] = await Promise.all([\n    fetchFarmUserAllowances(account, farms, chainId),\n    fetchFarmUserTokenBalances(account, farms, chainId),\n    fetchFarmUserStakedBalances(account, farms, chainId),\n    fetchFarmUserEarnings(account, farms, chainId),\n  ])\n\n  const normalFarmAllowances = userFarmAllowances.map((_, index) => {\n    return {\n      pid: farms[index].pid,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  return normalFarmAllowances\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<\n  FarmUserDataResponse[],\n  { account: string; pids: number[]; proxyAddress?: string; chainId: number },\n  {\n    state: AppState\n  }\n>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids, proxyAddress, chainId }, { dispatch, getState }) => {\n    const state = getState()\n    if (state.farms.chainId !== chainId) {\n      await dispatch(fetchInitialFarmsData({ chainId }))\n    }\n    const poolLength = state.farms.poolLength ?? (await fetchMasterChefFarmPoolLength(ChainId.BSC))\n    const farmsConfig = await getFarmConfig(chainId)\n    const farmsCanFetch = farmsConfig.filter(\n      (farmConfig) => pids.includes(farmConfig.pid) && poolLength > farmConfig.pid,\n    )\n    if (proxyAddress && farmsCanFetch?.length && verifyBscNetwork(chainId)) {\n      const { normalFarms, farmsWithProxy } = splitProxyFarms(farmsCanFetch)\n\n      const [proxyAllowances, normalAllowances] = await Promise.all([\n        getBoostedFarmsStakeValue(farmsWithProxy, account, chainId, proxyAddress),\n        getNormalFarmsStakeValue(normalFarms, account, chainId),\n      ])\n\n      return [...proxyAllowances, ...normalAllowances]\n    }\n\n    return getNormalFarmsStakeValue(farmsCanFetch, account, chainId)\n  },\n  {\n    condition: (arg, { getState }) => {\n      const { farms } = getState()\n      if (farms.loadingKeys[stringify({ type: fetchFarmUserDataAsync.typePrefix, arg })]) {\n        console.debug('farms user action is fetching, skipping here')\n        return false\n      }\n      return true\n    },\n  },\n)\n\ntype UnknownAsyncThunkFulfilledOrPendingAction =\n  | UnknownAsyncThunkFulfilledAction\n  | UnknownAsyncThunkPendingAction\n  | UnknownAsyncThunkRejectedAction\n\nconst serializeLoadingKey = (\n  action: UnknownAsyncThunkFulfilledOrPendingAction,\n  suffix: UnknownAsyncThunkFulfilledOrPendingAction['meta']['requestStatus'],\n) => {\n  const type = action.type.split(`/${suffix}`)[0]\n  return stringify({\n    arg: action.meta.arg,\n    type,\n  })\n}\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(resetUserState, (state) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      state.data = state.data.map((farm) => {\n        return {\n          ...farm,\n          userData: {\n            allowance: '0',\n            tokenBalance: '0',\n            stakedBalance: '0',\n            earnings: '0',\n          },\n        }\n      })\n      state.userDataLoaded = false\n    })\n    // Init farm data\n    builder.addCase(fetchInitialFarmsData.fulfilled, (state, action) => {\n      const { data, chainId } = action.payload\n      state.data = data\n      state.chainId = chainId\n    })\n\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      const [farmPayload, poolLength, regularCakePerBlock] = action.payload\n      const farmPayloadPidMap = fromPairs(farmPayload.map((farmData) => [farmData.pid, farmData]))\n\n      state.data = state.data.map((farm) => {\n        const liveFarmData = farmPayloadPidMap[farm.pid]\n        return { ...farm, ...liveFarmData }\n      })\n      state.poolLength = poolLength\n      state.regularCakePerBlock = regularCakePerBlock\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      const userDataMap = fromPairs(action.payload.map((userDataEl) => [userDataEl.pid, userDataEl]))\n      state.data = state.data.map((farm) => {\n        const userDataEl = userDataMap[farm.pid]\n        if (userDataEl) {\n          return { ...farm, userData: userDataEl }\n        }\n        return farm\n      })\n      state.userDataLoaded = true\n    })\n\n    builder.addMatcher(isAnyOf(fetchFarmUserDataAsync.pending, fetchFarmsPublicDataAsync.pending), (state, action) => {\n      state.loadingKeys[serializeLoadingKey(action, 'pending')] = true\n    })\n    builder.addMatcher(\n      isAnyOf(fetchFarmUserDataAsync.fulfilled, fetchFarmsPublicDataAsync.fulfilled),\n      (state, action) => {\n        state.loadingKeys[serializeLoadingKey(action, 'fulfilled')] = false\n      },\n    )\n    builder.addMatcher(\n      isAnyOf(fetchFarmsPublicDataAsync.rejected, fetchFarmUserDataAsync.rejected),\n      (state, action) => {\n        state.loadingKeys[serializeLoadingKey(action, 'rejected')] = false\n      },\n    )\n  },\n})\n\nexport default farmsSlice.reducer\n","import erc20 from 'config/abi/erc20.json'\nimport chunk from 'lodash/chunk'\nimport { getMasterChefV1Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { SerializedFarm } from '../types'\nimport { SerializedFarmConfig } from '../../config/constants/types'\n\nconst fetchFarmCalls = (farm: SerializedFarm) => {\n  const { lpAddress, token, quoteToken } = farm\n  return [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefV1Address()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n}\n\nexport const fetchPublicFarmsData = async (farms: SerializedFarmConfig[]): Promise<any[]> => {\n  const farmCalls = farms.flatMap((farm) => fetchFarmCalls(farm))\n  const chunkSize = farmCalls.length / farms.length\n  const farmMultiCallResult = await multicallv2({ abi: erc20, calls: farmCalls })\n  return chunk(farmMultiCallResult, chunkSize)\n}\n","import masterchefABIV1 from 'config/abi/masterchefV1.json'\nimport chunk from 'lodash/chunk'\nimport { multicallv2 } from 'utils/multicall'\nimport { SerializedFarmConfig } from '../../config/constants/types'\nimport { SerializedFarm } from '../types'\nimport { getMasterChefV1Address } from '../../utils/addressHelpers'\nimport { getMasterchefV1Contract } from '../../utils/contractHelpers'\n\nconst masterChefAddress = getMasterChefV1Address()\nconst masterChefContract = getMasterchefV1Contract()\n\nexport const fetchMasterChefFarmPoolLength = async () => {\n  const poolLength = await masterChefContract.poolLength()\n  return poolLength\n}\n\nconst masterChefFarmCalls = (farm: SerializedFarm) => {\n  const { v1pid } = farm\n  return v1pid || v1pid === 0\n    ? [\n        {\n          address: masterChefAddress,\n          name: 'poolInfo',\n          params: [v1pid],\n        },\n        {\n          address: masterChefAddress,\n          name: 'totalAllocPoint',\n        },\n      ]\n    : [null, null]\n}\n\nexport const fetchMasterChefData = async (farms: SerializedFarmConfig[]): Promise<any[]> => {\n  const masterChefCalls = farms.map((farm) => masterChefFarmCalls(farm))\n  const chunkSize = masterChefCalls.flat().length / farms.length\n  const masterChefAggregatedCalls = masterChefCalls\n    .filter((masterChefCall) => masterChefCall[0] !== null && masterChefCall[1] !== null)\n    .flat()\n  const masterChefMultiCallResult = await multicallv2({ abi: masterchefABIV1, calls: masterChefAggregatedCalls })\n  const masterChefChunkedResultRaw = chunk(masterChefMultiCallResult, chunkSize)\n  let masterChefChunkedResultCounter = 0\n  return masterChefCalls.map((masterChefCall) => {\n    if (masterChefCall[0] === null && masterChefCall[1] === null) {\n      return [null, null]\n    }\n    const data = masterChefChunkedResultRaw[masterChefChunkedResultCounter]\n    masterChefChunkedResultCounter++\n    return data\n  })\n}\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { getFullDecimalMultiplier } from '@pancakeswap/utils/getFullDecimalMultiplier'\nimport { BIG_ZERO, BIG_TWO } from '@pancakeswap/utils/bigNumber'\nimport { fetchPublicFarmsData } from './fetchPublicFarmData'\nimport { fetchMasterChefData } from './fetchMasterChefData'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const farmResult = await fetchPublicFarmsData(farmsToFetch)\n  const masterChefResult = await fetchMasterChefData(farmsToFetch)\n\n  return farmsToFetch.map((farm, index) => {\n    const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n      farmResult[index]\n\n    const [info, totalAllocPoint] = masterChefResult[index]\n\n    const lpTotalSupplyBN = new BigNumber(lpTotalSupply)\n\n    // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n    const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(lpTotalSupplyBN)\n\n    // Raw amount of token in the LP, including those not staked\n    const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(getFullDecimalMultiplier(tokenDecimals))\n    const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(getFullDecimalMultiplier(quoteTokenDecimals))\n\n    // Amount of quoteToken in the LP that are staked in the MC\n    const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n    // Total staked in LP, in quote token value\n    const lpTotalInQuoteToken = quoteTokenAmountMc.times(BIG_TWO)\n\n    const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n    const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n    return {\n      ...farm,\n      token: farm.token,\n      quoteToken: farm.quoteToken,\n      tokenAmountTotal: tokenAmountTotal.toJSON(),\n      lpTotalSupply: lpTotalSupplyBN.toJSON(),\n      lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n      tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n      poolWeight: poolWeight.toJSON(),\n      multiplier: `${allocPoint.div(100).toString()}X`,\n    }\n  })\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { filterFarmsByQuoteToken } from '@pancakeswap/farms'\nimport { SerializedFarm } from 'state/types'\nimport { bscTokens } from '@pancakeswap/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === bscTokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === bscTokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === bscTokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === bscTokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst getFarmsPrices = (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.v1pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default getFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABIV1 from 'config/abi/masterchefV1.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefV1Address } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefV1Address()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = farm.lpAddress\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall<BigNumber[]>(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = farm.lpAddress\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefV1Address()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.v1pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABIV1, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefV1Address()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.v1pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABIV1, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport type {\n  UnknownAsyncThunkFulfilledAction,\n  UnknownAsyncThunkPendingAction,\n  UnknownAsyncThunkRejectedAction,\n  // eslint-disable-next-line import/no-unresolved\n} from '@reduxjs/toolkit/dist/matchers'\nimport { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport stringify from 'fast-json-stable-stringify'\nimport { getFarmConfig } from '@pancakeswap/farms/constants'\nimport type { AppState } from 'state'\nimport { getFarmsPriceHelperLpFiles } from 'config/constants/priceHelperLps/index'\nimport fetchFarms from './fetchFarms'\nimport getFarmsPrices from './getFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\nimport { fetchMasterChefFarmPoolLength } from './fetchMasterChefData'\n\nconst initialState: SerializedFarmsState = {\n  data: [],\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n  loadingKeys: {},\n}\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<\n  [SerializedFarm[], number],\n  number[],\n  {\n    state: AppState\n  }\n>(\n  'farmsV1/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsConfig = await getFarmConfig(ChainId.BSC)\n    const poolLength = await fetchMasterChefFarmPoolLength()\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.v1pid))\n    const farmsCanFetch = farmsToFetch.filter((f) => poolLength.gt(f.v1pid))\n\n    // Add price helper farms\n    const priceHelperLpsConfig = getFarmsPriceHelperLpFiles(56)\n    const farmsWithPriceHelpers = farmsCanFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = getFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.v1pid || farm.v1pid === 0\n    })\n\n    return [farmsWithoutHelperLps, poolLength.toNumber()]\n  },\n  {\n    condition: (arg, { getState }) => {\n      const { farmsV1 } = getState()\n      if (farmsV1.loadingKeys[stringify({ type: fetchFarmsPublicDataAsync.typePrefix, arg })]) {\n        console.debug('farms action is fetching, skipping here')\n        return false\n      }\n      return true\n    },\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<\n  FarmUserDataResponse[],\n  { account: string; pids: number[] },\n  {\n    state: AppState\n  }\n>(\n  'farmsV1/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsConfig = await getFarmConfig(ChainId.BSC)\n    const poolLength = await fetchMasterChefFarmPoolLength()\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.v1pid))\n    const farmsCanFetch = farmsToFetch.filter((f) => poolLength.gt(f.v1pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsCanFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsCanFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsCanFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsCanFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsCanFetch[index].v1pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n  {\n    condition: (arg, { getState }) => {\n      const { farmsV1 } = getState()\n      if (farmsV1.loadingKeys[stringify({ type: fetchFarmUserDataAsync.typePrefix, arg })]) {\n        console.debug('farms user action is fetching, skipping here')\n        return false\n      }\n      return true\n    },\n  },\n)\n\ntype UnknownAsyncThunkFulfilledOrPendingAction =\n  | UnknownAsyncThunkFulfilledAction\n  | UnknownAsyncThunkPendingAction\n  | UnknownAsyncThunkRejectedAction\n\nconst serializeLoadingKey = (\n  action: UnknownAsyncThunkFulfilledOrPendingAction,\n  suffix: UnknownAsyncThunkFulfilledOrPendingAction['meta']['requestStatus'],\n) => {\n  const type = action.type.split(`/${suffix}`)[0]\n  return stringify({\n    arg: action.meta.arg,\n    type,\n  })\n}\n\nexport const farmsSlice = createSlice({\n  name: 'FarmsV1',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      const [farmPayload, poolLength] = action.payload\n      if (state.data.length > 0) {\n        state.data = state.data.map((farm) => {\n          const liveFarmData = farmPayload.find((farmData) => farmData.v1pid === farm.v1pid)\n          return { ...farm, ...liveFarmData }\n        })\n      } else {\n        state.data = farmPayload\n      }\n      state.poolLength = poolLength\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.v1pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n\n    builder.addMatcher(isAnyOf(fetchFarmUserDataAsync.pending, fetchFarmsPublicDataAsync.pending), (state, action) => {\n      state.loadingKeys[serializeLoadingKey(action, 'pending')] = true\n    })\n    builder.addMatcher(\n      isAnyOf(fetchFarmUserDataAsync.fulfilled, fetchFarmsPublicDataAsync.fulfilled),\n      (state, action) => {\n        state.loadingKeys[serializeLoadingKey(action, 'fulfilled')] = false\n      },\n    )\n    builder.addMatcher(\n      isAnyOf(fetchFarmsPublicDataAsync.rejected, fetchFarmUserDataAsync.rejected),\n      (state, action) => {\n        state.loadingKeys[serializeLoadingKey(action, 'rejected')] = false\n      },\n    )\n  },\n})\n\nexport default farmsSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport const resetUserState = createAction<{ chainId: ChainId; newChainId?: ChainId }>('global/resetUserState')\n\nexport const toggleFarmTransactionModal = createAction<{\n  showModal: boolean\n}>('transactions/toggleFarmTransactionModal')\n\nexport const pickFarmTransactionTx = createAction<{\n  tx: string\n  chainId: ChainId\n}>('transactions/pickFarmTransactionTx')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { toggleFarmTransactionModal, pickFarmTransactionTx } from './actions'\n\nexport interface GlobalState {\n  showFarmTransactionModal: boolean\n  pickedFarmTransactionModalTx: {\n    tx: string\n    chainId: ChainId\n  }\n}\n\nexport const initialState: GlobalState = {\n  showFarmTransactionModal: false,\n  pickedFarmTransactionModalTx: {\n    tx: '',\n    chainId: ChainId.BSC,\n  },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(toggleFarmTransactionModal, (state, { payload: { showModal } }) => {\n      state.showFarmTransactionModal = showModal\n    })\n    .addCase(pickFarmTransactionTx, (state, { payload: { tx, chainId } }) => {\n      state.pickedFarmTransactionModalTx = { tx, chainId }\n      state.showFarmTransactionModal = true\n    }),\n)\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport { useMemo } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport burn from './burn/reducer'\nimport farmsReducer from './farms'\nimport farmsReducerV1 from './farmsV1'\nimport { updateVersion } from './global/actions'\nimport infoReducer from './info'\nimport lotteryReducer from './lottery'\nimport mint from './mint/reducer'\nimport multicall from './multicall/reducer'\nimport poolsReducer from './pools'\nimport swap from './swap/reducer'\nimport transactions from './transactions/reducer'\nimport user from './user/reducer'\nimport limitOrders from './limitOrders/reducer'\nimport potteryReducer from './pottery'\nimport globalReducer from './global/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions']\n\nconst persistConfig = {\n  key: 'primary',\n  whitelist: PERSISTED_KEYS,\n  blacklist: ['profile'],\n  storage,\n  version: 1,\n}\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  combineReducers({\n    global: globalReducer,\n    farms: farmsReducer,\n    farmsV1: farmsReducerV1,\n    pools: poolsReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    pottery: potteryReducer,\n\n    limitOrders,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n  }),\n)\n\n// eslint-disable-next-line import/no-mutable-exports\nlet store: ReturnType<typeof makeStore>\n\nexport function makeStore(preloadedState = undefined) {\n  return configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        thunk: true,\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n    devTools: process.env.NODE_ENV === 'development',\n    preloadedState,\n  })\n}\n\nexport const initializeStore = (preloadedState = undefined) => {\n  let _store = store ?? makeStore(preloadedState)\n\n  // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n  if (preloadedState && store) {\n    _store = makeStore({\n      ...store.getState(),\n      ...preloadedState,\n    })\n    // Reset the current store\n    store = undefined\n  }\n\n  // For SSG and SSR always create a new store\n  if (typeof window === 'undefined') return _store\n\n  // Create the store once in the client\n  if (!store) {\n    store = _store\n  }\n\n  return _store\n}\n\nstore = initializeStore()\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n\nexport const persistor = persistStore(store, undefined, () => {\n  store.dispatch(updateVersion())\n})\n\nexport function useStore(initialState) {\n  return useMemo(() => initializeStore(initialState), [initialState])\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const clearTokenData = createAction('info/tokens/clearTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n  clearTokenData,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {},\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(clearTokenData, (state) => {\n      state.tokens.byAddress = {}\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress]?.priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\nimport { Field, Rate, OrderState } from './types'\n\nexport const replaceLimitOrdersState = createAction<OrderState>('limitOrders/replaceLimitOrdersState')\nexport const selectCurrency = createAction<{\n  field: Field\n  currencyId: string\n}>('limitOrders/selectCurrency')\nexport const switchCurrencies = createAction<void>('limitOrders/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('limitOrders/typeInput')\nexport const setRateType = createAction<{ rateType: Rate }>('limitOrders/setRateType')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { replaceLimitOrdersState, selectCurrency, typeInput, switchCurrencies, setRateType } from './actions'\nimport { Field, Rate, OrderState } from './types'\n\nexport const initialState: OrderState = {\n  independentField: Field.INPUT,\n  basisField: Field.INPUT,\n  typedValue: '',\n  inputValue: '',\n  outputValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  rateType: Rate.MUL,\n}\n\nexport default createReducer<OrderState>(initialState, (builder) =>\n  builder\n    .addCase(replaceLimitOrdersState, (state, { payload }) => {\n      return payload\n    })\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (field === Field.PRICE)\n        return {\n          ...state,\n        }\n\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        // independentField and typedValue need to be reset to basis field\n        // to show proper market price for new pair if user adjusted the price for the previous pair\n        independentField: state.basisField,\n        typedValue: state.basisField === Field.INPUT ? state.inputValue : state.outputValue,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        rateType: state.rateType,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return field === Field.INPUT\n        ? {\n            ...state,\n            inputValue: typedValue,\n            independentField: field,\n            basisField: field,\n            typedValue,\n          }\n        : {\n            ...state,\n            independentField: field,\n            basisField: field !== Field.PRICE ? field : state.basisField,\n            outputValue: field !== Field.PRICE ? typedValue : state.outputValue,\n            typedValue,\n          }\n    })\n    .addCase(setRateType, (state, { payload: { rateType } }) => {\n      state.rateType = rateType\n    }),\n)\n","export enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n  PRICE = 'PRICE',\n}\n\nexport enum Rate {\n  MUL = 'MUL',\n  DIV = 'DIV',\n}\n\nexport interface OrderState {\n  readonly independentField: Field\n  readonly basisField: Field\n  readonly typedValue: string\n  readonly inputValue?: string\n  readonly outputValue?: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n\n  readonly rateType: Rate\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const [nodeData, graphResponse] = await Promise.all([fetchMultipleLotteries(idsForNodesCall), getGraphLotteries()])\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const [lotteriesNodeData, graphResponse] = await Promise.all([\n    fetchMultipleLotteries(idsForLotteriesNodeCall),\n    getGraphLotteryUser(account),\n  ])\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { LotteryV2 } from 'config/abi/types'\nimport { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (\n  ticketsResponse: Awaited<ReturnType<LotteryV2['viewUserInfoForLotteryId']>>,\n): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const results = await Promise.all(\n    idsToCheck.map((roundId) => Promise.all([Promise.resolve(roundId), fetchUserTicketsForOneRound(account, roundId)])),\n  )\n\n  return results.map((result) => {\n    const [roundId, ticketsForRound] = result\n    return {\n      roundId,\n      userTickets: ticketsForRound,\n    }\n  })\n}\n","import { BigNumber as EthersBigNumber } from '@ethersproject/bignumber'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { ethersToSerializedBigNumber } from '@pancakeswap/utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2({ abi: lotteryV2Abi, calls, options: { requireSuccess: false } })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryId = async (): Promise<EthersBigNumber> => {\n  return lotteryContract.currentLotteryId()\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2({\n      abi: lotteryV2Abi,\n      calls,\n    })) as EthersBigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\nimport { resetUserState } from '../global/actions'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: [], userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(resetUserState, (state) => {\n      state.userLotteryData = { ...initialState.userLotteryData }\n      state.currentRound = { ...state.currentRound, userTickets: { ...initialState.currentRound.userTickets } }\n    })\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound = {\n          ...state.currentRound,\n          userTickets: { isLoading: false, tickets: action.payload.userTickets },\n        }\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData = { ...state.userLotteryData, rounds: mergedRounds }\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\nexport default LotterySlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import BigNumber from 'bignumber.js'\nimport fromPairs from 'lodash/fromPairs'\nimport { BigNumber as EthersBigNumber } from '@ethersproject/bignumber'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall, { multicallv2 } from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport chunk from 'lodash/chunk'\nimport sousChefV2 from '../../config/abi/sousChefV2.json'\nimport sousChefV3 from '../../config/abi/sousChefV3.json'\n\nconst livePoolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0 && !p.isFinished)\n\nconst startEndBlockCalls = livePoolsWithEnd.flatMap((poolConfig) => {\n  return [\n    {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    },\n    {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    },\n  ]\n})\n\nexport const fetchPoolsBlockLimits = async () => {\n  const startEndBlockRaw = await multicall(sousChefABI, startEndBlockCalls)\n\n  const startEndBlockResult = startEndBlockRaw.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / 2)\n\n    if (!resultArray[chunkIndex]) {\n      // eslint-disable-next-line no-param-reassign\n      resultArray[chunkIndex] = [] // start a new chunk\n    }\n\n    resultArray[chunkIndex].push(item)\n\n    return resultArray\n  }, [])\n\n  return livePoolsWithEnd.map((cakePoolConfig, index) => {\n    const [[startBlock], [endBlock]] = startEndBlockResult[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: startBlock.toNumber(),\n      endBlock: endBlock.toNumber(),\n    }\n  })\n}\n\nconst poolsBalanceOf = poolsConfig.map((poolConfig) => {\n  return {\n    address: poolConfig.stakingToken.address,\n    name: 'balanceOf',\n    params: [getAddress(poolConfig.contractAddress)],\n  }\n})\n\nexport const fetchPoolsTotalStaking = async () => {\n  const poolsTotalStaked = await multicall(erc20ABI, poolsBalanceOf)\n\n  return poolsConfig.map((p, index) => ({\n    sousId: p.sousId,\n    totalStaked: new BigNumber(poolsTotalStaked[index]).toJSON(),\n  }))\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: { stakingLimit: BigNumber; numberBlocksForUserLimit: number } }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  const poolStakingCalls = validPools\n    .map((validPool) => {\n      const contractAddress = getAddress(validPool.contractAddress)\n      return ['hasUserLimit', 'poolLimitPerUser', 'numberBlocksForUserLimit'].map((method) => ({\n        address: contractAddress,\n        name: method,\n      }))\n    })\n    .flat()\n\n  const poolStakingResultRaw = await multicallv2({\n    abi: sousChefV2,\n    calls: poolStakingCalls,\n    options: { requireSuccess: false },\n  })\n  const chunkSize = poolStakingCalls.length / validPools.length\n  const poolStakingChunkedResultRaw = chunk(poolStakingResultRaw.flat(), chunkSize)\n  return fromPairs(\n    poolStakingChunkedResultRaw.map((stakingLimitRaw, index) => {\n      const hasUserLimit = stakingLimitRaw[0]\n      const stakingLimit = hasUserLimit && stakingLimitRaw[1] ? new BigNumber(stakingLimitRaw[1].toString()) : BIG_ZERO\n      const numberBlocksForUserLimit = stakingLimitRaw[2] ? (stakingLimitRaw[2] as EthersBigNumber).toNumber() : 0\n      return [validPools[index].sousId, { stakingLimit, numberBlocksForUserLimit }]\n    }),\n  )\n}\n\nconst livePoolsWithV3 = poolsConfig.filter((pool) => pool?.version === 3 && pool?.isFinished === false)\n\nexport const fetchPoolsProfileRequirement = async (): Promise<{\n  [key: string]: {\n    required: boolean\n    thresholdPoints: string\n  }\n}> => {\n  const poolProfileRequireCalls = livePoolsWithV3\n    .map((validPool) => {\n      const contractAddress = getAddress(validPool.contractAddress)\n      return ['pancakeProfileIsRequested', 'pancakeProfileThresholdPoints'].map((method) => ({\n        address: contractAddress,\n        name: method,\n      }))\n    })\n    .flat()\n\n  const poolProfileRequireResultRaw = await multicallv2({\n    abi: sousChefV3,\n    calls: poolProfileRequireCalls,\n    options: { requireSuccess: false },\n  })\n  const chunkSize = poolProfileRequireCalls.length / livePoolsWithV3.length\n  const poolStakingChunkedResultRaw = chunk(poolProfileRequireResultRaw.flat(), chunkSize)\n  return fromPairs(\n    poolStakingChunkedResultRaw.map((poolProfileRequireRaw, index) => {\n      const hasProfileRequired = poolProfileRequireRaw[0]\n      const profileThresholdPoints = poolProfileRequireRaw[1]\n        ? new BigNumber(poolProfileRequireRaw[1].toString())\n        : BIG_ZERO\n      return [\n        livePoolsWithV3[index].sousId,\n        {\n          required: !!hasProfileRequired,\n          thresholdPoints: profileThresholdPoints.toJSON(),\n        },\n      ]\n    }),\n  )\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { bscRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\nimport uniq from 'lodash/uniq'\nimport fromPairs from 'lodash/fromPairs'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return fromPairs(nonBnbPools.map((pool, index) => [pool.sousId, new BigNumber(allowances[index]).toJSON()]))\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const tokens = uniq(nonBnbPools.map((pool) => pool.stakingToken.address))\n  const calls = tokens.map((token) => ({\n    address: token,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const [tokenBalancesRaw, bnbBalance] = await Promise.all([\n    multicall(erc20ABI, calls),\n    bscRpcProvider.getBalance(account),\n  ])\n  const tokenBalances = fromPairs(tokens.map((token, index) => [token, tokenBalancesRaw[index]]))\n\n  const poolTokenBalances = fromPairs(\n    nonBnbPools\n      .map((pool) => {\n        if (!tokenBalances[pool.stakingToken.address]) return null\n        return [pool.sousId, new BigNumber(tokenBalances[pool.stakingToken.address]).toJSON()]\n      })\n      .filter(Boolean),\n  )\n\n  // BNB pools\n  const bnbBalanceJson = new BigNumber(bnbBalance.toString()).toJSON()\n  const bnbBalances = fromPairs(bnbPools.map((pool) => [pool.sousId, bnbBalanceJson]))\n\n  return { ...poolTokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  return fromPairs(\n    nonMasterPools.map((pool, index) => [pool.sousId, new BigNumber(userInfo[index].amount._hex).toJSON()]),\n  )\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  return fromPairs(nonMasterPools.map((pool, index) => [pool.sousId, new BigNumber(res[index]).toJSON()]))\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getIfoCreditAddressContract } from 'utils/contractHelpers'\n\nexport const fetchPublicIfoData = async () => {\n  try {\n    const ifoCreditAddressContract = getIfoCreditAddressContract()\n    const ceiling = await ifoCreditAddressContract.ceiling()\n    return {\n      ceiling: new BigNumber(ceiling.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      ceiling: BIG_ZERO.toJSON(),\n    }\n  }\n}\n\nexport const fetchUserIfoCredit = async (account: string) => {\n  try {\n    const ifoCreditAddressContract = getIfoCreditAddressContract()\n    const credit = await ifoCreditAddressContract.getUserCredit(account)\n    return new BigNumber(credit.toString()).toJSON()\n  } catch (error) {\n    return BIG_ZERO.toJSON()\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVaultV2.json'\nimport { getCakeVaultAddress, getCakeFlexibleSideVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getCakeContract } from 'utils/contractHelpers'\n\nconst cakeVaultV2 = getCakeVaultAddress()\nconst cakeFlexibleSideVaultV2 = getCakeFlexibleSideVaultAddress()\nconst cakeContract = getCakeContract()\nexport const fetchPublicVaultData = async (cakeVaultAddress = cakeVaultV2) => {\n  try {\n    const calls = ['getPricePerFullShare', 'totalShares', 'totalLockedAmount'].map((method) => ({\n      address: cakeVaultAddress,\n      name: method,\n    }))\n\n    const [[[sharePrice], [shares], totalLockedAmount], totalCakeInVault] = await Promise.all([\n      multicallv2({\n        abi: cakeVaultAbi,\n        calls,\n        options: {\n          requireSuccess: false,\n        },\n      }),\n      cakeContract.balanceOf(cakeVaultV2),\n    ])\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const totalLockedAmountAsBigNumber = totalLockedAmount ? new BigNumber(totalLockedAmount[0].toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      totalLockedAmount: totalLockedAmountAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: new BigNumber(totalCakeInVault.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      totalLockedAmount: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n    }\n  }\n}\n\nexport const fetchPublicFlexibleSideVaultData = async (cakeVaultAddress = cakeFlexibleSideVaultV2) => {\n  try {\n    const calls = ['getPricePerFullShare', 'totalShares'].map((method) => ({\n      address: cakeVaultAddress,\n      name: method,\n    }))\n\n    const [[[sharePrice], [shares]], totalCakeInVault] = await Promise.all([\n      multicallv2({\n        abi: cakeVaultAbi,\n        calls,\n        options: { requireSuccess: false },\n      }),\n      cakeContract.balanceOf(cakeVaultAddress),\n    ])\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: new BigNumber(totalCakeInVault.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async (cakeVaultAddress = cakeVaultV2) => {\n  try {\n    const calls = ['performanceFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: cakeVaultAddress,\n      name: method,\n    }))\n\n    const [[performanceFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2({ abi: cakeVaultAbi, calls })\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { SerializedLockedVaultUser, SerializedVaultUser } from 'state/types'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport cakeVaultAbi from 'config/abi/cakeVaultV2.json'\nimport { multicallv2 } from 'utils/multicall'\nimport { getCakeFlexibleSideVaultV2Contract } from '../../utils/contractHelpers'\n\nconst cakeVaultAddress = getCakeVaultAddress()\nconst flexibleSideVaultContract = getCakeFlexibleSideVaultV2Contract()\n\nexport const fetchVaultUser = async (account: string): Promise<SerializedLockedVaultUser> => {\n  try {\n    const calls = ['userInfo', 'calculatePerformanceFee', 'calculateOverdueFee'].map((method) => ({\n      address: cakeVaultAddress,\n      name: method,\n      params: [account],\n    }))\n\n    const [userContractResponse, [currentPerformanceFee], [currentOverdueFee]] = await multicallv2({\n      abi: cakeVaultAbi,\n      calls,\n    })\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n      userBoostedShare: new BigNumber(userContractResponse.userBoostedShare.toString()).toJSON(),\n      locked: userContractResponse.locked,\n      lockEndTime: userContractResponse.lockEndTime.toString(),\n      lockStartTime: userContractResponse.lockStartTime.toString(),\n      lockedAmount: new BigNumber(userContractResponse.lockedAmount.toString()).toJSON(),\n      currentPerformanceFee: new BigNumber(currentPerformanceFee.toString()).toJSON(),\n      currentOverdueFee: new BigNumber(currentOverdueFee.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n      userBoostedShare: null,\n      lockEndTime: null,\n      lockStartTime: null,\n      locked: null,\n      lockedAmount: null,\n      currentPerformanceFee: null,\n      currentOverdueFee: null,\n    }\n  }\n}\n\nexport const fetchFlexibleSideVaultUser = async (account: string): Promise<SerializedVaultUser> => {\n  try {\n    const userContractResponse = await flexibleSideVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport {\n  SerializedFarm,\n  DeserializedPool,\n  SerializedPool,\n  SerializedCakeVault,\n  DeserializedCakeVault,\n  SerializedLockedCakeVault,\n  VaultKey,\n} from 'state/types'\nimport { deserializeToken } from '@pancakeswap/token-lists'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { isAddress } from 'utils'\nimport { convertSharesToCake } from 'views/Pools/helpers'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nconst transformProfileRequirement = (profileRequirement?: { required: boolean; thresholdPoints: string }) => {\n  return profileRequirement\n    ? {\n        required: profileRequirement.required,\n        thresholdPoints: profileRequirement.thresholdPoints\n          ? new BigNumber(profileRequirement.thresholdPoints)\n          : BIG_ZERO,\n      }\n    : undefined\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const {\n    totalStaked,\n    stakingLimit,\n    numberBlocksForUserLimit,\n    userData,\n    stakingToken,\n    earningToken,\n    profileRequirement,\n    startBlock,\n    ...rest\n  } = pool\n\n  return {\n    ...rest,\n    startBlock,\n    profileRequirement: transformProfileRequirement(profileRequirement),\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n    stakingLimitEndBlock: numberBlocksForUserLimit + startBlock,\n  }\n}\n\nexport const transformVault = (vaultKey: VaultKey, vault: SerializedCakeVault): DeserializedCakeVault => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    fees: { performanceFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = vault\n\n  const totalShares = totalSharesAsString ? new BigNumber(totalSharesAsString) : BIG_ZERO\n  const pricePerFullShare = pricePerFullShareAsString ? new BigNumber(pricePerFullShareAsString) : BIG_ZERO\n  const userShares = new BigNumber(userSharesAsString)\n  const cakeAtLastUserAction = new BigNumber(cakeAtLastUserActionAsString)\n  let userDataExtra\n  let publicDataExtra\n  if (vaultKey === VaultKey.CakeVault) {\n    const {\n      totalCakeInVault: totalCakeInVaultAsString,\n      totalLockedAmount: totalLockedAmountAsString,\n      userData: {\n        userBoostedShare: userBoostedShareAsString,\n        lockEndTime,\n        lockStartTime,\n        locked,\n        lockedAmount: lockedAmountAsString,\n        currentOverdueFee: currentOverdueFeeAsString,\n        currentPerformanceFee: currentPerformanceFeeAsString,\n      },\n    } = vault as SerializedLockedCakeVault\n\n    const totalCakeInVault = new BigNumber(totalCakeInVaultAsString)\n    const totalLockedAmount = new BigNumber(totalLockedAmountAsString)\n    const lockedAmount = new BigNumber(lockedAmountAsString)\n    const userBoostedShare = new BigNumber(userBoostedShareAsString)\n    const currentOverdueFee = currentOverdueFeeAsString ? new BigNumber(currentOverdueFeeAsString) : BIG_ZERO\n    const currentPerformanceFee = currentPerformanceFeeAsString\n      ? new BigNumber(currentPerformanceFeeAsString)\n      : BIG_ZERO\n\n    const balance = convertSharesToCake(\n      userShares,\n      pricePerFullShare,\n      undefined,\n      undefined,\n      currentOverdueFee.plus(currentPerformanceFee).plus(userBoostedShare),\n    )\n    userDataExtra = {\n      lockEndTime,\n      lockStartTime,\n      locked,\n      lockedAmount,\n      userBoostedShare,\n      currentOverdueFee,\n      currentPerformanceFee,\n      balance,\n    }\n    publicDataExtra = { totalLockedAmount, totalCakeInVault }\n  } else {\n    const balance = convertSharesToCake(userShares, pricePerFullShare)\n    const { cakeAsBigNumber } = convertSharesToCake(totalShares, pricePerFullShare)\n    userDataExtra = { balance }\n    publicDataExtra = { totalCakeInVault: cakeAsBigNumber }\n  }\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    ...publicDataExtra,\n    fees: { performanceFee, withdrawalFee, withdrawalFeePeriod, performanceFeeAsDecimal },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n      ...userDataExtra,\n    },\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = isAddress(farm.quoteToken.address)\n    const tokenAddress = isAddress(farm.token.address)\n    /* eslint-disable no-param-reassign */\n    if (quoteTokenAddress && !prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (tokenAddress && !prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { createAsyncThunk, createSlice, PayloadAction, isAnyOf } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport fromPairs from 'lodash/fromPairs'\nimport poolsConfig from 'config/constants/pools'\nimport {\n  PoolsState,\n  SerializedPool,\n  SerializedVaultFees,\n  SerializedCakeVault,\n  SerializedLockedVaultUser,\n  PublicIfoData,\n  SerializedVaultUser,\n  SerializedLockedCakeVault,\n} from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport cakeAbi from 'config/abi/cake.json'\nimport { getCakeVaultAddress, getCakeFlexibleSideVaultAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { isAddress } from 'utils'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { bscRpcProvider } from 'utils/providers'\nimport { getPoolsPriceHelperLpFiles } from 'config/constants/priceHelperLps/index'\nimport fetchFarms from '../farms/fetchFarms'\nimport getFarmsPrices from '../farms/getFarmsPrices'\nimport {\n  fetchPoolsBlockLimits,\n  fetchPoolsProfileRequirement,\n  fetchPoolsStakingLimits,\n  fetchPoolsTotalStaking,\n} from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserPendingRewards,\n  fetchUserStakeBalances,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees, fetchPublicFlexibleSideVaultData } from './fetchVaultPublic'\nimport { getTokenPricesFromFarm } from './helpers'\nimport { resetUserState } from '../global/actions'\nimport { fetchUserIfoCredit, fetchPublicIfoData } from './fetchUserIfo'\nimport { fetchVaultUser, fetchFlexibleSideVaultUser } from './fetchVaultUser'\n\nexport const initialPoolVaultState = Object.freeze({\n  totalShares: null,\n  totalLockedAmount: null,\n  pricePerFullShare: null,\n  totalCakeInVault: null,\n  fees: {\n    performanceFee: null,\n    withdrawalFee: null,\n    withdrawalFeePeriod: null,\n  },\n  userData: {\n    isLoading: true,\n    userShares: null,\n    cakeAtLastUserAction: null,\n    lastDepositedTime: null,\n    lastUserActionTime: null,\n    credit: null,\n    locked: null,\n    lockStartTime: null,\n    lockEndTime: null,\n    userBoostedShare: null,\n    lockedAmount: null,\n    currentOverdueFee: null,\n    currentPerformanceFee: null,\n  },\n  creditStartBlock: null,\n})\n\nexport const initialIfoState = Object.freeze({\n  credit: null,\n  ceiling: null,\n})\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: initialPoolVaultState,\n  ifo: initialIfoState,\n  cakeFlexibleSideVault: initialPoolVaultState,\n}\n\nconst cakeVaultAddress = getCakeVaultAddress()\n\nexport const fetchCakePoolPublicDataAsync = () => async (dispatch, getState) => {\n  const farmsData = getState().farms.data\n  const prices = getTokenPricesFromFarm(farmsData)\n\n  const cakePool = poolsConfig.filter((p) => p.sousId === 0)[0]\n\n  const stakingTokenAddress = isAddress(cakePool.stakingToken.address)\n  const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n  const earningTokenAddress = isAddress(cakePool.earningToken.address)\n  const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n\n  dispatch(\n    setPoolPublicData({\n      sousId: 0,\n      data: {\n        stakingTokenPrice,\n        earningTokenPrice,\n      },\n    }),\n  )\n}\n\nexport const fetchCakePoolUserDataAsync = (account: string) => async (dispatch) => {\n  const allowanceCall = {\n    address: bscTokens.cake.address,\n    name: 'allowance',\n    params: [account, cakeVaultAddress],\n  }\n  const balanceOfCall = {\n    address: bscTokens.cake.address,\n    name: 'balanceOf',\n    params: [account],\n  }\n  const cakeContractCalls = [allowanceCall, balanceOfCall]\n  const [[allowance], [stakingTokenBalance]] = await multicallv2({ abi: cakeAbi, calls: cakeContractCalls })\n\n  dispatch(\n    setPoolUserData({\n      sousId: 0,\n      data: {\n        allowance: new BigNumber(allowance.toString()).toJSON(),\n        stakingTokenBalance: new BigNumber(stakingTokenBalance.toString()).toJSON(),\n      },\n    }),\n  )\n}\n\nexport const fetchPoolsPublicDataAsync =\n  (currentBlockNumber: number, chainId: number) => async (dispatch, getState) => {\n    try {\n      const [blockLimits, totalStakings, profileRequirements, currentBlock] = await Promise.all([\n        fetchPoolsBlockLimits(),\n        fetchPoolsTotalStaking(),\n        fetchPoolsProfileRequirement(),\n        currentBlockNumber ? Promise.resolve(currentBlockNumber) : bscRpcProvider.getBlockNumber(),\n      ])\n\n      const blockLimitsSousIdMap = fromPairs(blockLimits.map((entry) => [entry.sousId, entry]))\n      const totalStakingsSousIdMap = fromPairs(totalStakings.map((entry) => [entry.sousId, entry]))\n\n      const priceHelperLpsConfig = getPoolsPriceHelperLpFiles(chainId)\n      const activePriceHelperLpsConfig = priceHelperLpsConfig.filter((priceHelperLpConfig) => {\n        return (\n          poolsConfig\n            .filter(\n              (pool) => pool.earningToken.address.toLowerCase() === priceHelperLpConfig.token.address.toLowerCase(),\n            )\n            .filter((pool) => {\n              const poolBlockLimit = blockLimitsSousIdMap[pool.sousId]\n              if (poolBlockLimit) {\n                return poolBlockLimit.endBlock > currentBlock\n              }\n              return false\n            }).length > 0\n        )\n      })\n      const poolsWithDifferentFarmToken =\n        activePriceHelperLpsConfig.length > 0 ? await fetchFarms(priceHelperLpsConfig, chainId) : []\n      const farmsData = getState().farms.data\n      const bnbBusdFarm =\n        activePriceHelperLpsConfig.length > 0\n          ? farmsData.find((farm) => farm.token.symbol === 'BUSD' && farm.quoteToken.symbol === 'WBNB')\n          : null\n      const farmsWithPricesOfDifferentTokenPools = bnbBusdFarm\n        ? getFarmsPrices([bnbBusdFarm, ...poolsWithDifferentFarmToken], chainId)\n        : []\n\n      const prices = getTokenPricesFromFarm([...farmsData, ...farmsWithPricesOfDifferentTokenPools])\n\n      const liveData = poolsConfig.map((pool) => {\n        const blockLimit = blockLimitsSousIdMap[pool.sousId]\n        const totalStaking = totalStakingsSousIdMap[pool.sousId]\n        const isPoolEndBlockExceeded =\n          currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n        const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n        const stakingTokenAddress = isAddress(pool.stakingToken.address)\n        const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n        const earningTokenAddress = isAddress(pool.earningToken.address)\n        const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n        const apr = !isPoolFinished\n          ? getPoolApr(\n              stakingTokenPrice,\n              earningTokenPrice,\n              getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n              parseFloat(pool.tokenPerBlock),\n            )\n          : 0\n\n        const profileRequirement = profileRequirements[pool.sousId] ? profileRequirements[pool.sousId] : undefined\n\n        return {\n          ...blockLimit,\n          ...totalStaking,\n          profileRequirement,\n          stakingTokenPrice,\n          earningTokenPrice,\n          apr,\n          isFinished: isPoolFinished,\n        }\n      })\n\n      dispatch(setPoolsPublicData(liveData))\n    } catch (error) {\n      console.error('[Pools Action] error when getting public data', error)\n    }\n  }\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  try {\n    const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n    const stakingLimitData = poolsConfig.map((pool) => {\n      if (poolsWithStakingLimit.includes(pool.sousId)) {\n        return { sousId: pool.sousId }\n      }\n      const { stakingLimit, numberBlocksForUserLimit } = stakingLimits[pool.sousId] || {\n        stakingLimit: BIG_ZERO,\n        numberBlocksForUserLimit: 0,\n      }\n      return {\n        sousId: pool.sousId,\n        stakingLimit: stakingLimit.toJSON(),\n        numberBlocksForUserLimit,\n      }\n    })\n\n    dispatch(setPoolsPublicData(stakingLimitData))\n  } catch (error) {\n    console.error('[Pools Action] error when getting staking limits', error)\n  }\n}\n\nexport const fetchPoolsUserDataAsync = createAsyncThunk<\n  { sousId: number; allowance: any; stakingTokenBalance: any; stakedBalance: any; pendingReward: any }[],\n  string\n>('pool/fetchPoolsUserData', async (account, { rejectWithValue }) => {\n  try {\n    const [allowances, stakingTokenBalances, stakedBalances, pendingRewards] = await Promise.all([\n      fetchPoolsAllowance(account),\n      fetchUserBalances(account),\n      fetchUserStakeBalances(account),\n      fetchUserPendingRewards(account),\n    ])\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n    return userData\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const updateUserAllowance = createAsyncThunk<\n  { sousId: number; field: string; value: any },\n  { sousId: number; account: string }\n>('pool/updateUserAllowance', async ({ sousId, account }) => {\n  const allowances = await fetchPoolsAllowance(account)\n  return { sousId, field: 'allowance', value: allowances[sousId] }\n})\n\nexport const updateUserBalance = createAsyncThunk<\n  { sousId: number; field: string; value: any },\n  { sousId: number; account: string }\n>('pool/updateUserBalance', async ({ sousId, account }) => {\n  const tokenBalances = await fetchUserBalances(account)\n  return { sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }\n})\n\nexport const updateUserStakedBalance = createAsyncThunk<\n  { sousId: number; field: string; value: any },\n  { sousId: number; account: string }\n>('pool/updateUserStakedBalance', async ({ sousId, account }) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  return { sousId, field: 'stakedBalance', value: stakedBalances[sousId] }\n})\n\nexport const updateUserPendingReward = createAsyncThunk<\n  { sousId: number; field: string; value: any },\n  { sousId: number; account: string }\n>('pool/updateUserPendingReward', async ({ sousId, account }) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  return { sousId, field: 'pendingReward', value: pendingRewards[sousId] }\n})\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<SerializedLockedCakeVault>(\n  'cakeVault/fetchPublicData',\n  async () => {\n    const publicVaultInfo = await fetchPublicVaultData()\n    return publicVaultInfo\n  },\n)\n\nexport const fetchCakeFlexibleSideVaultPublicData = createAsyncThunk<SerializedCakeVault>(\n  'cakeFlexibleSideVault/fetchPublicData',\n  async () => {\n    const publicVaultInfo = await fetchPublicFlexibleSideVaultData()\n    return publicVaultInfo\n  },\n)\n\nexport const fetchCakeVaultFees = createAsyncThunk<SerializedVaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees(getCakeVaultAddress())\n  return vaultFees\n})\n\nexport const fetchCakeFlexibleSideVaultFees = createAsyncThunk<SerializedVaultFees>(\n  'cakeFlexibleSideVault/fetchFees',\n  async () => {\n    const vaultFees = await fetchVaultFees(getCakeFlexibleSideVaultAddress())\n    return vaultFees\n  },\n)\n\nexport const fetchCakeVaultUserData = createAsyncThunk<SerializedLockedVaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const fetchIfoPublicDataAsync = createAsyncThunk<PublicIfoData>('ifoVault/fetchIfoPublicDataAsync', async () => {\n  const publicIfoData = await fetchPublicIfoData()\n  return publicIfoData\n})\n\nexport const fetchUserIfoCreditDataAsync = (account: string) => async (dispatch) => {\n  try {\n    const credit = await fetchUserIfoCredit(account)\n    dispatch(setIfoUserCreditData(credit))\n  } catch (error) {\n    console.error('[Ifo Credit Action] Error fetching user Ifo credit data', error)\n  }\n}\nexport const fetchCakeFlexibleSideVaultUserData = createAsyncThunk<SerializedVaultUser, { account: string }>(\n  'cakeFlexibleSideVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchFlexibleSideVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolPublicData: (state, action) => {\n      const { sousId } = action.payload\n      const poolIndex = state.data.findIndex((pool) => pool.sousId === sousId)\n      state.data[poolIndex] = {\n        ...state.data[poolIndex],\n        ...action.payload.data,\n      }\n    },\n    setPoolUserData: (state, action) => {\n      const { sousId } = action.payload\n      state.data = state.data.map((pool) => {\n        if (pool.sousId === sousId) {\n          return { ...pool, userDataLoaded: true, userData: action.payload.data }\n        }\n        return pool\n      })\n    },\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      const livePoolsSousIdMap = fromPairs(livePoolsData.map((entry) => [entry.sousId, entry]))\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsSousIdMap[pool.sousId]\n        return { ...pool, ...livePoolData }\n      })\n    },\n    // IFO\n    setIfoUserCreditData: (state, action) => {\n      const credit = action.payload\n      state.ifo = { ...state.ifo, credit }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(resetUserState, (state) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      state.data = state.data.map(({ userData, ...pool }) => {\n        return { ...pool }\n      })\n      state.userDataLoaded = false\n      state.cakeVault = { ...state.cakeVault, userData: initialPoolVaultState.userData }\n      state.cakeFlexibleSideVault = { ...state.cakeFlexibleSideVault, userData: initialPoolVaultState.userData }\n    })\n    builder.addCase(\n      fetchPoolsUserDataAsync.fulfilled,\n      (\n        state,\n        action: PayloadAction<\n          { sousId: number; allowance: any; stakingTokenBalance: any; stakedBalance: any; pendingReward: any }[]\n        >,\n      ) => {\n        const userData = action.payload\n        const userDataSousIdMap = fromPairs(userData.map((entry) => [entry.sousId, entry]))\n        state.data = state.data.map((pool) => ({\n          ...pool,\n          userDataLoaded: true,\n          userData: userDataSousIdMap[pool.sousId],\n        }))\n        state.userDataLoaded = true\n      },\n    )\n    builder.addCase(fetchPoolsUserDataAsync.rejected, (state, action) => {\n      console.error('[Pools Action] Error fetching pool user data', action.payload)\n    })\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<SerializedLockedCakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    builder.addCase(\n      fetchCakeFlexibleSideVaultPublicData.fulfilled,\n      (state, action: PayloadAction<SerializedCakeVault>) => {\n        state.cakeFlexibleSideVault = { ...state.cakeFlexibleSideVault, ...action.payload }\n      },\n    )\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<SerializedVaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    builder.addCase(fetchCakeFlexibleSideVaultFees.fulfilled, (state, action: PayloadAction<SerializedVaultFees>) => {\n      const fees = action.payload\n      state.cakeFlexibleSideVault = { ...state.cakeFlexibleSideVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<SerializedLockedVaultUser>) => {\n      const userData = action.payload\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n    // IFO\n    builder.addCase(fetchIfoPublicDataAsync.fulfilled, (state, action: PayloadAction<PublicIfoData>) => {\n      const { ceiling } = action.payload\n      state.ifo = { ...state.ifo, ceiling }\n    })\n    builder.addCase(\n      fetchCakeFlexibleSideVaultUserData.fulfilled,\n      (state, action: PayloadAction<SerializedVaultUser>) => {\n        const userData = action.payload\n        state.cakeFlexibleSideVault = { ...state.cakeFlexibleSideVault, userData }\n      },\n    )\n    builder.addMatcher(\n      isAnyOf(\n        updateUserAllowance.fulfilled,\n        updateUserBalance.fulfilled,\n        updateUserStakedBalance.fulfilled,\n        updateUserPendingReward.fulfilled,\n      ),\n      (state, action: PayloadAction<{ sousId: number; field: string; value: any }>) => {\n        const { field, value, sousId } = action.payload\n        const index = state.data.findIndex((p) => p.sousId === sousId)\n\n        if (index >= 0) {\n          state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n        }\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolPublicData, setPoolUserData, setIfoUserCreditData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport multicall from 'utils/multicall'\nimport potteryVaultAbi from 'config/abi/potteryVaultAbi.json'\nimport { getPotteryDrawAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { PotteryDepositStatus } from 'state/types'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { getPotteryDrawContract, getBep20Contract } from 'utils/contractHelpers'\nimport { request, gql } from 'graphql-request'\nimport { GRAPH_API_POTTERY } from 'config/constants/endpoints'\n\nconst potteryDrawAddress = getPotteryDrawAddress()\nconst potteryDrawContract = getPotteryDrawContract()\n\nexport const fetchLastVaultAddress = async () => {\n  try {\n    const response = await request(\n      GRAPH_API_POTTERY,\n      gql`\n        query getLastVaultAddress($contract: ID!) {\n          pottery(id: $contract) {\n            id\n            lastVaultAddress\n          }\n        }\n      `,\n      { contract: potteryDrawAddress },\n    )\n\n    const { lastVaultAddress } = response.pottery\n    return lastVaultAddress\n  } catch (error) {\n    console.error('Failed to fetch last vault address', error)\n    return ''\n  }\n}\n\nexport const fetchPublicPotteryValue = async (potteryVaultAddress: string) => {\n  try {\n    const calls = [\n      'getStatus',\n      'totalLockCake',\n      'totalSupply',\n      'lockStartTime',\n      'getLockTime',\n      'getMaxTotalDeposit',\n    ].map((method) => ({\n      address: potteryVaultAddress,\n      name: method,\n    }))\n\n    const [getStatus, [totalLockCake], [totalSupply], [lockStartTime], getLockTime, getMaxTotalDeposit] =\n      await multicall(potteryVaultAbi, calls)\n    const [lastDrawId, totalPrize] = await potteryDrawContract.getPot(potteryVaultAddress)\n\n    return {\n      lastDrawId: new BigNumber(lastDrawId.toString()).toJSON(),\n      totalPrize: new BigNumber(totalPrize.toString()).toJSON(),\n      getStatus: getStatus[0],\n      totalLockCake: new BigNumber(totalLockCake.toString()).toJSON(),\n      totalSupply: new BigNumber(totalSupply.toString()).toJSON(),\n      lockStartTime: lockStartTime.toString(),\n      lockTime: Number(getLockTime),\n      maxTotalDeposit: new BigNumber(getMaxTotalDeposit.toString()).toJSON(),\n    }\n  } catch (error) {\n    console.error('Failed to fetch public pottery value data', error)\n    return {\n      lastDrawId: BIG_ZERO.toJSON(),\n      totalPrize: BIG_ZERO.toJSON(),\n      getStatus: PotteryDepositStatus.BEFORE_LOCK,\n      totalLockCake: BIG_ZERO.toJSON(),\n      totalSupply: BIG_ZERO.toJSON(),\n      lockStartTime: BIG_ZERO.toJSON(),\n      lockTime: 0,\n      maxTotalDeposit: BIG_ZERO.toJSON(),\n    }\n  }\n}\n\nexport const fetchTotalLockedValue = async (potteryVaultAddress: string) => {\n  try {\n    const contract = getBep20Contract(bscTokens.cake.address)\n    const totalLocked = await contract.balanceOf(potteryVaultAddress)\n\n    return {\n      totalLockedValue: new BigNumber(totalLocked.toString()).toJSON(),\n    }\n  } catch (error) {\n    console.error('Failed to fetch total lock value', error)\n    return {\n      totalLockedValue: BIG_ZERO.toJSON(),\n    }\n  }\n}\n\nexport const fetchLatestRoundId = async () => {\n  try {\n    const response = await request(\n      GRAPH_API_POTTERY,\n      gql`\n        query getLatestRoundId {\n          potteryVaultRounds(first: 1, orderDirection: desc, orderBy: roundId) {\n            roundId\n            winners\n          }\n        }\n      `,\n    )\n\n    const winners = response.potteryVaultRounds[0]?.winners\n    const latestRoundId = response.potteryVaultRounds[0]?.roundId\n\n    return {\n      latestRoundId: winners?.length > 0 ? latestRoundId || '' : latestRoundId - 1,\n    }\n  } catch (error) {\n    console.error('Failed to fetch last roundId ', error)\n    return {\n      latestRoundId: '',\n    }\n  }\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_POTTERY } from 'config/constants/endpoints'\n\nexport const fetchPotteryFinishedRound = async (potteryRoundId: number) => {\n  try {\n    const response = await request(\n      GRAPH_API_POTTERY,\n      gql`\n        query getPotteryVaultRounds($roundId: Int!) {\n          potteryVaultRounds(first: 1, where: { roundId: $roundId }) {\n            id\n            roundId\n            drawDate\n            prizePot\n            txid\n            winners\n            vault {\n              totalPlayers\n              lockDate\n            }\n          }\n        }\n      `,\n      { roundId: potteryRoundId },\n    )\n\n    const { roundId, drawDate, prizePot, vault, txid, winners } = response.potteryVaultRounds[0]\n    return {\n      isFetched: true,\n      roundId,\n      drawDate,\n      prizePot,\n      totalPlayers: vault.totalPlayers,\n      txid,\n      winners,\n      lockDate: vault.lockDate,\n    }\n  } catch (error) {\n    console.error('Failed to fetch pottery finished round data', error)\n    return {\n      isFetched: false,\n      roundId: null,\n      drawDate: '',\n      prizePot: '',\n      totalPlayers: '',\n      txid: '',\n      winners: [],\n      lockDate: '',\n    }\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBep20Contract, getPotteryVaultContract, getPotteryDrawContract } from 'utils/contractHelpers'\nimport { request, gql } from 'graphql-request'\nimport { GRAPH_API_POTTERY } from 'config/constants/endpoints'\nimport { PotteryDepositStatus } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport potteryVaultAbi from 'config/abi/potteryVaultAbi.json'\n\nconst potteryDrawContract = getPotteryDrawContract()\n\nexport const fetchPotterysAllowance = async (account: string, potteryVaultAddress: string) => {\n  try {\n    const contract = getBep20Contract(bscTokens.cake.address)\n    const allowances = await contract.allowance(account, potteryVaultAddress)\n    return new BigNumber(allowances.toString()).toJSON()\n  } catch (error) {\n    console.error('Failed to fetch pottery user allowance', error)\n    return BIG_ZERO.toJSON()\n  }\n}\n\nexport const fetchVaultUserData = async (account: string, potteryVaultAddress: string) => {\n  try {\n    const potteryVaultContract = getPotteryVaultContract(potteryVaultAddress)\n    const balance = await potteryVaultContract.balanceOf(account)\n    const previewDeposit = await potteryVaultContract.previewRedeem(balance)\n    return {\n      previewDepositBalance: new BigNumber(previewDeposit.toString()).toJSON(),\n      stakingTokenBalance: new BigNumber(balance.toString()).toJSON(),\n    }\n  } catch (error) {\n    console.error('Failed to fetch pottery vault user data', error)\n    return {\n      previewDepositBalance: BIG_ZERO.toJSON(),\n      stakingTokenBalance: BIG_ZERO.toJSON(),\n    }\n  }\n}\n\nexport const fetchUserDrawData = async (account: string) => {\n  try {\n    const [reward, winCount] = await potteryDrawContract.userInfos(account)\n    return {\n      rewards: new BigNumber(reward.toString()).toJSON(),\n      winCount: new BigNumber(winCount.toString()).toJSON(),\n    }\n  } catch (error) {\n    console.error('Failed to fetch pottery user draw data', error)\n    return {\n      rewards: BIG_ZERO.toJSON(),\n      winCount: BIG_ZERO.toString(),\n    }\n  }\n}\n\nexport const fetchWithdrawAbleData = async (account: string) => {\n  try {\n    const response = await request(\n      GRAPH_API_POTTERY,\n      gql`\n        query getUserPotteryWithdrawAbleData($account: ID!) {\n          withdrawals(first: 1000, where: { user: $account }) {\n            id\n            shares\n            depositDate\n            vault {\n              id\n              status\n              lockDate\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n\n    const withdrawalsData = await Promise.all(\n      response.withdrawals.map(async ({ id, shares, depositDate, vault }) => {\n        const calls = [\n          {\n            address: vault.id,\n            name: 'previewRedeem',\n            params: [shares],\n          },\n          {\n            address: vault.id,\n            name: 'totalSupply',\n          },\n          {\n            address: vault.id,\n            name: 'totalLockCake',\n          },\n          {\n            address: vault.id,\n            name: 'balanceOf',\n            params: [account],\n          },\n        ]\n        const [[previewRedeem], [totalSupply], [totalLockCake], [balanceOf]] = await multicallv2({\n          abi: potteryVaultAbi,\n          calls,\n        })\n\n        return {\n          id,\n          shares,\n          depositDate,\n          previewRedeem: new BigNumber(previewRedeem.toString()).toJSON(),\n          status: PotteryDepositStatus[vault.status],\n          potteryVaultAddress: vault.id,\n          totalSupply: new BigNumber(totalSupply.toString()).toJSON(),\n          totalLockCake: new BigNumber(totalLockCake.toString()).toJSON(),\n          lockedDate: vault.lockDate,\n          balanceOf: new BigNumber(balanceOf.toString()).toJSON(),\n        }\n      }),\n    )\n\n    // eslint-disable-next-line array-callback-return, consistent-return\n    const withdrawAbleData = withdrawalsData.filter((data) => {\n      if (data.status === PotteryDepositStatus.UNLOCK && data.balanceOf === '0') {\n        return null\n      }\n      return data\n    })\n\n    return withdrawAbleData\n  } catch (error) {\n    console.error('Failed to fetch withdrawable data', error)\n    return []\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AppState } from 'state'\nimport {\n  PotteryState,\n  SerializedPotteryUserData,\n  SerializedPotteryPublicData,\n  PotteryDepositStatus,\n  PotteryRoundInfo,\n} from 'state/types'\nimport { resetUserState } from '../global/actions'\nimport { fetchPotteryFinishedRound } from './fetchPotteryRound'\nimport {\n  fetchLastVaultAddress,\n  fetchPublicPotteryValue,\n  fetchTotalLockedValue,\n  fetchLatestRoundId,\n} from './fetchPottery'\nimport {\n  fetchPotterysAllowance,\n  fetchVaultUserData,\n  fetchUserDrawData,\n  fetchWithdrawAbleData,\n} from './fetchUserPottery'\n\nconst initialState: PotteryState = Object.freeze({\n  lastVaultAddress: '',\n  publicData: {\n    lastDrawId: '',\n    totalPrize: null,\n    getStatus: PotteryDepositStatus.BEFORE_LOCK,\n    totalLockCake: null,\n    totalSupply: null,\n    lockStartTime: '',\n    lockTime: 0,\n    totalLockedValue: null,\n    latestRoundId: '',\n    maxTotalDeposit: null,\n  },\n  userData: {\n    isLoading: true,\n    allowance: null,\n    previewDepositBalance: null,\n    stakingTokenBalance: null,\n    rewards: null,\n    winCount: null,\n    withdrawAbleData: [],\n  },\n  finishedRoundInfo: {\n    isFetched: false,\n    roundId: null,\n    drawDate: '',\n    prizePot: '',\n    totalPlayers: '',\n    txid: '',\n    winners: [],\n    lockDate: '',\n  },\n})\n\nexport const fetchLastVaultAddressAsync = createAsyncThunk<string>('pottery/fetchLastVaultAddress', async () => {\n  const lastVaultAddress = await fetchLastVaultAddress()\n  return lastVaultAddress\n})\n\nexport const fetchPublicPotteryDataAsync = createAsyncThunk<SerializedPotteryPublicData>(\n  'pottery/fetchPublicPotteryData',\n  async (arg, { getState }) => {\n    const state = getState()\n    const potteryVaultAddress = (state as AppState).pottery.lastVaultAddress\n\n    const [publicPotteryData, totalLockedValue, latestRoundId] = await Promise.all([\n      fetchPublicPotteryValue(potteryVaultAddress),\n      fetchTotalLockedValue(potteryVaultAddress),\n      fetchLatestRoundId(),\n    ])\n    return { ...publicPotteryData, ...totalLockedValue, ...latestRoundId }\n  },\n)\n\nexport const fetchPotteryUserDataAsync = createAsyncThunk<SerializedPotteryUserData, string>(\n  'pottery/fetchPotteryUserData',\n  async (account, { rejectWithValue, getState }) => {\n    try {\n      const state = getState()\n      const potteryVaultAddress = (state as AppState).pottery.lastVaultAddress\n      const [allowance, vaultUserData, drawData, withdrawAbleData] = await Promise.all([\n        fetchPotterysAllowance(account, potteryVaultAddress),\n        fetchVaultUserData(account, potteryVaultAddress),\n        fetchUserDrawData(account),\n        fetchWithdrawAbleData(account),\n      ])\n\n      const userData = {\n        allowance,\n        previewDepositBalance: vaultUserData.previewDepositBalance,\n        stakingTokenBalance: vaultUserData.stakingTokenBalance,\n        rewards: drawData.rewards,\n        winCount: drawData.winCount,\n        withdrawAbleData,\n      }\n\n      return userData\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const fetchPotteryRoundData = createAsyncThunk<PotteryRoundInfo, number>(\n  'pottery/fetchPotteryRound',\n  async (roundId) => {\n    const response = await fetchPotteryFinishedRound(roundId)\n    return response\n  },\n)\n\nexport const PotterySlice = createSlice({\n  name: 'Pottery',\n  initialState,\n  reducers: {\n    setFinishedRoundInfoFetched: (state, action) => {\n      const isFetched = action.payload\n      state.finishedRoundInfo = {\n        ...state.finishedRoundInfo,\n        isFetched,\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(resetUserState, (state) => {\n      state.userData = { ...initialState.userData }\n    })\n    builder.addCase(fetchLastVaultAddressAsync.fulfilled, (state, action: PayloadAction<string>) => {\n      state.lastVaultAddress = action.payload\n    })\n    builder.addCase(\n      fetchPublicPotteryDataAsync.fulfilled,\n      (state, action: PayloadAction<SerializedPotteryPublicData>) => {\n        state.publicData = { ...action.payload }\n      },\n    )\n    builder.addCase(fetchPotteryUserDataAsync.fulfilled, (state, action: PayloadAction<SerializedPotteryUserData>) => {\n      const userData = action.payload\n      state.userData = {\n        ...userData,\n        isLoading: false,\n      }\n    })\n    builder.addCase(fetchPotteryRoundData.fulfilled, (state, action: PayloadAction<PotteryRoundInfo>) => {\n      state.finishedRoundInfo = { ...action.payload }\n    })\n  },\n})\n\n// Actions\nexport const { setFinishedRoundInfoFetched } = PotterySlice.actions\n\nexport default PotterySlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum } from './types'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\nexport const updatePairData = createAction<{\n  pairData: PairDataNormalized\n  pairId: string\n  timeWindow: PairDataTimeWindowEnum\n}>('swap/updatePairData')\nexport const updateDerivedPairData = createAction<{\n  pairData: DerivedPairDataNormalized\n  pairId: string\n  timeWindow: PairDataTimeWindowEnum\n}>('swap/updateDerivedPairData')\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  Field,\n  replaceSwapState,\n  selectCurrency,\n  setRecipient,\n  switchCurrencies,\n  typeInput,\n  updateDerivedPairData,\n  updatePairData,\n} from './actions'\nimport { DerivedPairDataNormalized, PairDataNormalized } from './types'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address, or null if swap should go to sender\n  readonly recipient: string | null\n  readonly pairDataById: Record<number, Record<string, PairDataNormalized>> | null\n  readonly derivedPairDataById: Record<number, Record<string, DerivedPairDataNormalized>> | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  pairDataById: {},\n  derivedPairDataById: {},\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n          pairDataById: state.pairDataById,\n          derivedPairDataById: state.derivedPairDataById,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n    .addCase(updatePairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\n      if (!state.pairDataById[pairId]) {\n        state.pairDataById[pairId] = {}\n      }\n      state.pairDataById[pairId][timeWindow] = pairData\n    })\n    .addCase(updateDerivedPairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\n      if (!state.derivedPairDataById[pairId]) {\n        state.derivedPairDataById[pairId] = {}\n      }\n      state.derivedPairDataById[pairId][timeWindow] = pairData\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { Order } from '@gelatonetwork/limit-orders-lib'\n\nexport type TransactionType =\n  | 'approve'\n  | 'swap'\n  | 'wrap'\n  | 'add-liquidity'\n  | 'remove-liquidity'\n  | 'limit-order-submission'\n  | 'limit-order-cancellation'\n  | 'limit-order-approval'\n  | 'non-bsc-farm'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport enum MsgStatus {\n  MS_UNKNOWN = 0,\n  MS_WAITING_FOR_SGN_CONFIRMATIONS = 1,\n  MS_WAITING_FOR_DESTINATION_EXECUTION = 2,\n  MS_COMPLETED = 3,\n  MS_FAIL = 4,\n  MS_FALLBACK = 5,\n}\n\nexport enum FarmTransactionStatus {\n  PENDING = -1,\n  FAIL = 0,\n  SUCCESS = 1,\n}\n\nexport enum NonBscFarmStepType {\n  STAKE = 'STAKE',\n  UNSTAKE = 'UNSTAKE',\n}\n\nexport interface NonBscFarmTransactionStep {\n  step: number\n  chainId: number\n  status: FarmTransactionStatus\n  tx: string\n  isFirstTime?: boolean\n  msgStatus?: MsgStatus\n}\n\nexport interface NonBscFarmTransactionType {\n  type: NonBscFarmStepType\n  status: FarmTransactionStatus\n  amount: string\n  lpAddress: string\n  lpSymbol: string\n  steps: NonBscFarmTransactionStep[]\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n  translatableSummary?: { text: string; data?: Record<string, string | number> }\n  type?: TransactionType\n  order?: Order\n  nonBscFarm?: NonBscFarmTransactionType\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction('transactions/clearAllTransactions')\nexport const clearAllChainTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllChainTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n  nonBscFarm?: NonBscFarmTransactionType\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { Order } from '@gelatonetwork/limit-orders-lib'\nimport { confirmOrderCancellation, confirmOrderSubmission, saveOrder } from 'utils/localStorageOrders'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n  TransactionType,\n  clearAllChainTransactions,\n  NonBscFarmTransactionType,\n  FarmTransactionStatus,\n} from './actions'\nimport { resetUserState } from '../global/actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  type?: TransactionType\n  order?: Order\n  summary?: string\n  translatableSummary?: { text: string; data?: Record<string, string | number> }\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n  nonBscFarm?: NonBscFarmTransactionType\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(\n      addTransaction,\n      (\n        transactions,\n        { payload: { chainId, from, hash, approval, summary, translatableSummary, claim, type, order, nonBscFarm } },\n      ) => {\n        if (transactions[chainId]?.[hash]) {\n          throw Error('Attempted to add existing transaction.')\n        }\n        const txs = transactions[chainId] ?? {}\n        txs[hash] = {\n          hash,\n          approval,\n          summary,\n          translatableSummary,\n          claim,\n          from,\n          addedTime: now(),\n          type,\n          order,\n          nonBscFarm,\n        }\n        transactions[chainId] = txs\n        if (order) saveOrder(chainId, from, order, true)\n      },\n    )\n    .addCase(clearAllTransactions, () => {\n      return {}\n    })\n    .addCase(clearAllChainTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt, nonBscFarm } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n\n      if (tx.type === 'limit-order-submission') {\n        confirmOrderSubmission(chainId, receipt.from, hash, receipt.status !== 0)\n      } else if (tx.type === 'limit-order-cancellation') {\n        confirmOrderCancellation(chainId, receipt.from, hash, receipt.status !== 0)\n      } else if (tx.type === 'non-bsc-farm') {\n        if (tx.nonBscFarm.steps[0].status === FarmTransactionStatus.PENDING) {\n          if (receipt.status === FarmTransactionStatus.FAIL) {\n            tx.nonBscFarm = { ...tx.nonBscFarm, status: receipt.status }\n          }\n\n          tx.nonBscFarm.steps[0] = {\n            ...tx.nonBscFarm.steps[0],\n            status: receipt.status,\n          }\n        } else {\n          tx.nonBscFarm = nonBscFarm\n        }\n      }\n    })\n    .addCase(resetUserState, (transactions, { payload: { chainId, newChainId } }) => {\n      if (!newChainId && transactions[chainId]) {\n        transactions[chainId] = {}\n      }\n    }),\n)\n","import { BigNumber as EthersBigNumber } from '@ethersproject/bignumber'\nimport { parseUnits } from '@ethersproject/units'\nimport { SerializedFarmPublicData } from '@pancakeswap/farms'\nimport { Token } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js'\nimport {\n  CampaignType,\n  DeserializedFarmConfig,\n  DeserializedPoolConfig,\n  FetchStatus,\n  LotteryStatus,\n  LotteryTicket,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n} from 'config/constants/types'\nimport { NftToken } from './nftMarket/types'\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n\nexport type DeserializedPoolVault = DeserializedPool & DeserializedCakeVault\nexport type DeserializedPoolLockedVault = DeserializedPool & DeserializedLockedCakeVault\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n  proxy?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n  proxy?: {\n    allowance: BigNumber\n    tokenBalance: BigNumber\n    stakedBalance: BigNumber\n    earnings: BigNumber\n  }\n}\n\nexport interface SerializedFarm extends SerializedFarmPublicData {\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  quoteTokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  lpTokenPrice?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n  boosted?: boolean\n  isStable?: boolean\n}\n\nexport enum VaultKey {\n  CakeVaultV1 = 'cakeVaultV1',\n  CakeVault = 'cakeVault',\n  CakeFlexibleSideVault = 'cakeFlexibleSideVault',\n  IfoPool = 'ifoPool',\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  rawApr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  vaultKey?: VaultKey\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  stakingLimitEndBlock?: number\n  profileRequirement?: {\n    required: boolean\n    thresholdPoints: BigNumber\n  }\n  userDataLoaded?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  numberBlocksForUserLimit?: number\n  profileRequirement?: {\n    required: boolean\n    thresholdPoints: SerializedBigNumber\n  }\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team?: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  chainId?: number\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n  loadingKeys: Record<string, boolean>\n  poolLength?: number\n  regularCakePerBlock?: number\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n  poolLength?: number\n  regularCakePerBlock?: number\n}\n\nexport interface SerializedVaultFees {\n  performanceFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface DeserializedVaultFees extends SerializedVaultFees {\n  performanceFeeAsDecimal: number\n}\n\nexport interface SerializedVaultUser {\n  isLoading: boolean\n  userShares: SerializedBigNumber\n  cakeAtLastUserAction: SerializedBigNumber\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\n\nexport interface SerializedLockedVaultUser extends SerializedVaultUser {\n  lockStartTime: string\n  lockEndTime: string\n  userBoostedShare: SerializedBigNumber\n  locked: boolean\n  lockedAmount: SerializedBigNumber\n  currentPerformanceFee: SerializedBigNumber\n  currentOverdueFee: SerializedBigNumber\n}\n\nexport interface DeserializedVaultUser {\n  isLoading: boolean\n  userShares: BigNumber\n  cakeAtLastUserAction: BigNumber\n  lastDepositedTime: string\n  lastUserActionTime: string\n  balance: {\n    cakeAsNumberBalance: number\n    cakeAsBigNumber: BigNumber\n    cakeAsDisplayBalance: string\n  }\n}\n\nexport interface DeserializedLockedVaultUser extends DeserializedVaultUser {\n  lastDepositedTime: string\n  lastUserActionTime: string\n  lockStartTime: string\n  lockEndTime: string\n  burnStartTime: string\n  userBoostedShare: BigNumber\n  locked: boolean\n  lockedAmount: BigNumber\n  currentPerformanceFee: BigNumber\n  currentOverdueFee: BigNumber\n}\n\nexport interface DeserializedCakeVault {\n  totalShares?: BigNumber\n  totalLockedAmount?: BigNumber\n  pricePerFullShare?: BigNumber\n  totalCakeInVault?: BigNumber\n  fees?: DeserializedVaultFees\n  userData?: DeserializedVaultUser\n}\n\nexport interface DeserializedLockedCakeVault extends Omit<DeserializedCakeVault, 'userData'> {\n  totalLockedAmount?: BigNumber\n  userData?: DeserializedLockedVaultUser\n}\n\nexport interface SerializedLockedCakeVault extends Omit<SerializedCakeVault, 'userData'> {\n  totalLockedAmount?: SerializedBigNumber\n  userData?: SerializedLockedVaultUser\n}\n\nexport interface SerializedCakeVault {\n  totalShares?: SerializedBigNumber\n  pricePerFullShare?: SerializedBigNumber\n  totalCakeInVault?: SerializedBigNumber\n  fees?: SerializedVaultFees\n  userData?: SerializedVaultUser\n}\n\n// Ifo\nexport interface IfoState extends PublicIfoData {\n  credit: string\n}\n\nexport interface PublicIfoData {\n  ceiling: string\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  ifo: IfoState\n  cakeVault: SerializedLockedCakeVault\n  cakeFlexibleSideVault: SerializedCakeVault\n  userDataLoaded: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport enum PredictionSupportedSymbol {\n  BNB = 'BNB',\n  CAKE = 'CAKE',\n}\n\nexport enum PredictionsChartView {\n  TradingView = 'TradingView',\n  Chainlink = 'Chainlink Oracle',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: EthersBigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: EthersBigNumber | null\n  closePrice: EthersBigNumber | null\n  totalAmount: EthersBigNumber\n  bullAmount: EthersBigNumber\n  bearAmount: EthersBigNumber\n  rewardBaseCalAmount: EthersBigNumber\n  rewardAmount: EthersBigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  chartView: PredictionsChartView\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: FetchStatus\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  votes: number\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n  }\n  vp: number\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport interface PredictionConfig {\n  address: string\n  api: string\n  chainlinkOracleAddress: string\n  minPriceUsdDisplayed: EthersBigNumber\n  displayedDecimals: number\n  token: Token\n}\n\n// Pottery\nexport interface PotteryState {\n  lastVaultAddress: string\n  publicData: SerializedPotteryPublicData\n  userData: SerializedPotteryUserData\n  finishedRoundInfo: PotteryRoundInfo\n}\n\nexport interface SerializedPotteryPublicData {\n  lastDrawId: string\n  totalPrize: string\n  getStatus: PotteryDepositStatus\n  totalLockCake: string\n  totalSupply: string\n  lockStartTime: string\n  lockTime: number\n  totalLockedValue: string\n  latestRoundId: string\n  maxTotalDeposit: string\n}\n\nexport interface DeserializedPublicData {\n  lastDrawId: string\n  totalPrize: BigNumber\n  getStatus: PotteryDepositStatus\n  totalLockCake: BigNumber\n  totalSupply: BigNumber\n  lockStartTime: string\n  lockTime: number\n  totalLockedValue: BigNumber\n  latestRoundId: string\n  maxTotalDeposit: BigNumber\n}\n\nexport interface SerializedPotteryUserData {\n  isLoading?: boolean\n  allowance: string\n  previewDepositBalance: string\n  stakingTokenBalance: string\n  rewards: string\n  winCount: string\n  withdrawAbleData: PotteryWithdrawAbleData[]\n}\n\nexport interface DeserializedPotteryUserData {\n  isLoading?: boolean\n  allowance: BigNumber\n  previewDepositBalance: BigNumber\n  stakingTokenBalance: BigNumber\n  rewards: BigNumber\n  winCount: string\n  withdrawAbleData: PotteryWithdrawAbleData[]\n}\n\nexport interface PotteryRoundInfo {\n  isFetched: boolean\n  roundId: string\n  drawDate: string\n  prizePot: string\n  totalPlayers: string\n  txid: string\n  winners: Array<string>\n  lockDate: string\n}\n\nexport enum PotteryDepositStatus {\n  BEFORE_LOCK = 0,\n  LOCK = 1,\n  UNLOCK = 2,\n}\n\nexport interface PotteryWithdrawAbleData {\n  id: string\n  shares: string\n  depositDate: string\n  previewRedeem: string\n  status: PotteryDepositStatus\n  potteryVaultAddress: string\n  totalSupply: string\n  totalLockCake: string\n  lockedDate: string\n  balanceOf: string\n}\n\n// Global state\n\nexport interface State {\n  farms: SerializedFarmsState\n  farmsV1: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  lottery: LotteryState\n  pottery: PotteryState\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedWrappedToken } from '@pancakeswap/token-lists'\n\nexport interface SerializedPair {\n  token0: SerializedWrappedToken\n  token1: SerializedWrappedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport enum ChartViewMode {\n  BASIC = 'BASIC',\n  TRADING_VIEW = 'TRADING_VIEW',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedWrappedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair',\n)\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserLimitOrderAcceptedWarning = createAction<{ userAcceptedRisk: boolean }>(\n  'user/userLimitOrderAcceptedWarning',\n)\n\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserPredictionChainlinkChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChainlinkChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n\nexport const hidePhishingWarningBanner = createAction<void>('user/hidePhishingWarningBanner')\n\nexport const setIsExchangeChartDisplayed = createAction<boolean>('user/toggleIsExchangeChartDisplayed')\nexport const setChartViewMode = createAction<ChartViewMode>('user/setChartViewMode')\nexport const setZapDisabled = createAction<boolean>('user/setZapDisabled')\nexport const setSubgraphHealthIndicatorDisplayed = createAction<boolean>('user/setSubgraphHealthIndicatorDisplayed')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedWrappedToken } from '@pancakeswap/token-lists'\nimport omitBy from 'lodash/omitBy'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionChainlinkChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  hidePhishingWarningBanner,\n  setIsExchangeChartDisplayed,\n  setChartViewMode,\n  ChartViewMode,\n  setSubgraphHealthIndicatorDisplayed,\n  updateUserLimitOrderAcceptedWarning,\n  setZapDisabled,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedWrappedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  audioPlay: boolean\n  isExchangeChartDisplayed: boolean\n  isSubgraphHealthIndicatorDisplayed: boolean\n  userChartViewMode: ChartViewMode\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userLimitOrderAcceptedWarning: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userPredictionChainlinkChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  userZapDisabled: boolean\n  watchlistTokens: string[]\n  watchlistPools: string[]\n  hideTimestampPhishingWarningBanner: number\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  audioPlay: true,\n  isExchangeChartDisplayed: true,\n  isSubgraphHealthIndicatorDisplayed: false,\n  userChartViewMode: ChartViewMode.BASIC,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userLimitOrderAcceptedWarning: false,\n  userPredictionChartDisclaimerShow: true,\n  userPredictionChainlinkChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  userZapDisabled: false,\n  watchlistTokens: [],\n  watchlistPools: [],\n  hideTimestampPhishingWarningBanner: null,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage is'nt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      if (state.tokens[chainId]) {\n        state.tokens[chainId] = omitBy(state.tokens[chainId], (value, key) => key === address)\n      } else {\n        state.tokens[chainId] = {}\n      }\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        const tokenAToB = pairKey(tokenAAddress, tokenBAddress)\n        const tokenBToA = pairKey(tokenBAddress, tokenAAddress)\n        // just delete both keys if either exists\n        state.pairs[chainId] = omitBy(state.pairs[chainId], (value, key) => key === tokenAToB || key === tokenBToA)\n      }\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserLimitOrderAcceptedWarning, (state, { payload: { userAcceptedRisk } }) => {\n      state.userLimitOrderAcceptedWarning = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserPredictionChainlinkChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChainlinkChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    })\n    .addCase(hidePhishingWarningBanner, (state) => {\n      state.hideTimestampPhishingWarningBanner = currentTimestamp()\n    })\n    .addCase(setIsExchangeChartDisplayed, (state, { payload }) => {\n      state.isExchangeChartDisplayed = payload\n    })\n    .addCase(setChartViewMode, (state, { payload }) => {\n      state.userChartViewMode = payload\n    })\n    .addCase(setZapDisabled, (state, { payload }) => {\n      state.userZapDisabled = payload\n    })\n    .addCase(setSubgraphHealthIndicatorDisplayed, (state, { payload }) => {\n      state.isSubgraphHealthIndicatorDisplayed = payload\n    }),\n)\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport lpAprs56 from 'config/constants/lpAprs/56.json'\n\nconst getLpApr = (chainId: number) => {\n  switch (chainId) {\n    case 56:\n      return lpAprs56\n    default:\n      return {}\n  }\n}\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @param farmAddress Farm Address\n * @returns Farm Apr\n */\nexport const getFarmApr = (\n  chainId: number,\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n  regularCakePerBlock: number,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = poolWeight\n    ? poolWeight.times(BLOCKS_PER_YEAR * regularCakePerBlock)\n    : new BigNumber(NaN)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = getLpApr(chainId)[farmAddress?.toLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import type { Signer } from '@ethersproject/abstract-signer'\nimport type { Provider } from '@ethersproject/providers'\nimport { provider } from 'utils/wagmi'\nimport { Contract } from '@ethersproject/contracts'\nimport poolsConfig from 'config/constants/pools'\nimport { PoolCategory } from 'config/constants/types'\nimport { CAKE } from '@pancakeswap/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeBunniesAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getMasterChefV1Address,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddressEaster,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n  getNftSaleAddress,\n  getPancakeSquadAddress,\n  getTradingCompetitionAddressFanToken,\n  getTradingCompetitionAddressMobox,\n  getTradingCompetitionAddressMoD,\n  getBunnySpecialXmasAddress,\n  getICakeAddress,\n  getPotteryDrawAddress,\n  getZapAddress,\n  getCakeFlexibleSideVaultAddress,\n  getPredictionsV1Address,\n  getBCakeFarmBoosterAddress,\n  getBCakeFarmBoosterProxyFactoryAddress,\n  getNonBscVaultAddress,\n  getCrossFarmingSenderAddress,\n  getCrossFarmingReceiverAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeBunniesAbi from 'config/abi/pancakeBunnies.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport masterChefV1 from 'config/abi/masterchefV1.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionEasterAbi from 'config/abi/tradingCompetitionEaster.json'\nimport tradingCompetitionFanTokenAbi from 'config/abi/tradingCompetitionFanToken.json'\nimport tradingCompetitionMoboxAbi from 'config/abi/tradingCompetitionMobox.json'\nimport tradingCompetitionMoDAbi from 'config/abi/tradingCompetitionMoD.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultV2Abi from 'config/abi/cakeVaultV2.json'\nimport cakeFlexibleSideVaultV2Abi from 'config/abi/cakeFlexibleSideVaultV2.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport predictionsV1Abi from 'config/abi/predictionsV1.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport bunnySpecialXmasAbi from 'config/abi/bunnySpecialXmas.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\nimport nftSaleAbi from 'config/abi/nftSale.json'\nimport pancakeSquadAbi from 'config/abi/pancakeSquad.json'\nimport erc721CollectionAbi from 'config/abi/erc721collection.json'\nimport potteryVaultAbi from 'config/abi/potteryVaultAbi.json'\nimport potteryDrawAbi from 'config/abi/potteryDrawAbi.json'\nimport zapAbi from 'config/abi/zap.json'\nimport iCakeAbi from 'config/abi/iCake.json'\nimport ifoV3Abi from 'config/abi/ifoV3.json'\nimport cakePredictionsAbi from 'config/abi/cakePredictions.json'\nimport bCakeFarmBoosterAbi from 'config/abi/bCakeFarmBooster.json'\nimport bCakeFarmBoosterProxyFactoryAbi from 'config/abi/bCakeFarmBoosterProxyFactory.json'\nimport bCakeProxyAbi from 'config/abi/bCakeProxy.json'\nimport nonBscVault from 'config/abi/nonBscVault.json'\nimport crossFarmingSenderAbi from 'config/abi/crossFarmingSender.json'\nimport crossFarmingReceiverAbi from 'config/abi/crossFarmingReceiver.json'\nimport crossFarmingProxyAbi from 'config/abi/crossFarmingProxy.json'\n\n// Types\nimport type {\n  ChainlinkOracle,\n  FarmAuction,\n  Predictions,\n  AnniversaryAchievement,\n  IfoV1,\n  IfoV2,\n  Erc20,\n  Erc721,\n  Cake,\n  BunnyFactory,\n  PancakeBunnies,\n  PancakeProfile,\n  LotteryV2,\n  Masterchef,\n  MasterchefV1,\n  SousChef,\n  SousChefV2,\n  BunnySpecial,\n  LpToken,\n  ClaimRefund,\n  TradingCompetitionEaster,\n  TradingCompetitionFanToken,\n  EasterNft,\n  Multicall,\n  BunnySpecialCakeVault,\n  BunnySpecialPrediction,\n  BunnySpecialLottery,\n  NftMarket,\n  NftSale,\n  PancakeSquad,\n  Erc721collection,\n  PointCenterIfo,\n  CakeVaultV2,\n  CakeFlexibleSideVaultV2,\n  TradingCompetitionMobox,\n  ICake,\n  TradingCompetitionMoD,\n  PotteryVaultAbi,\n  PotteryDrawAbi,\n  Zap,\n  PredictionsV1,\n  BCakeFarmBooster,\n  BCakeFarmBoosterProxyFactory,\n  BCakeProxy,\n  NonBscVault,\n  CrossFarmingSender,\n  CrossFarmingReceiver,\n  CrossFarmingProxy,\n} from 'config/abi/types'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport const getContract = ({\n  abi,\n  address,\n  chainId = ChainId.BSC,\n  signer,\n}: {\n  abi: any\n  address: string\n  chainId?: ChainId\n  signer?: Signer | Provider\n}) => {\n  const signerOrProvider = signer ?? provider({ chainId })\n  return new Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: bep20Abi, address, signer }) as Erc20\n}\nexport const getErc721Contract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: erc721Abi, address, signer }) as Erc721\n}\nexport const getLpContract = (address: string, chainId?: number, signer?: Signer | Provider) => {\n  return getContract({ abi: lpTokenAbi, address, signer, chainId }) as LpToken\n}\nexport const getIfoV1Contract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: ifoV1Abi, address, signer }) as IfoV1\n}\nexport const getIfoV2Contract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: ifoV2Abi, address, signer }) as IfoV2\n}\nexport const getIfoV3Contract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: ifoV3Abi, address, signer })\n}\nexport const getSouschefContract = (id: number, signer?: Signer | Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract({ abi, address: getAddress(config.contractAddress), signer }) as SousChef\n}\nexport const getSouschefV2Contract = (id: number, signer?: Signer | Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract({ abi: sousChefV2, address: getAddress(config.contractAddress), signer }) as SousChefV2\n}\n\nexport const getPointCenterIfoContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: pointCenterIfo, address: getPointCenterIfoAddress(), signer }) as PointCenterIfo\n}\nexport const getCakeContract = (signer?: Signer | Provider, chainId?: number) => {\n  return getContract({\n    abi: cakeAbi,\n    address: chainId ? CAKE[chainId].address : CAKE[ChainId.BSC].address,\n    signer,\n  }) as Cake\n}\nexport const getProfileContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: profileABI, address: getPancakeProfileAddress(), signer }) as PancakeProfile\n}\nexport const getPancakeBunniesContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: pancakeBunniesAbi, address: getPancakeBunniesAddress(), signer }) as PancakeBunnies\n}\nexport const getBunnyFactoryContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: bunnyFactoryAbi, address: getBunnyFactoryAddress(), signer }) as BunnyFactory\n}\nexport const getBunnySpecialContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: bunnySpecialAbi, address: getBunnySpecialAddress(), signer }) as BunnySpecial\n}\nexport const getLotteryV2Contract = (signer?: Signer | Provider) => {\n  return getContract({ abi: lotteryV2Abi, address: getLotteryV2Address(), signer }) as LotteryV2\n}\nexport const getMasterchefContract = (signer?: Signer | Provider, chainId?: number) => {\n  return getContract({ abi: masterChef, address: getMasterChefAddress(chainId), signer }) as Masterchef\n}\nexport const getMasterchefV1Contract = (signer?: Signer | Provider) => {\n  return getContract({ abi: masterChefV1, address: getMasterChefV1Address(), signer }) as MasterchefV1\n}\nexport const getClaimRefundContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: claimRefundAbi, address: getClaimRefundAddress(), signer }) as ClaimRefund\n}\nexport const getTradingCompetitionContractEaster = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: tradingCompetitionEasterAbi,\n    address: getTradingCompetitionAddressEaster(),\n    signer,\n  }) as TradingCompetitionEaster\n}\n\nexport const getTradingCompetitionContractFanToken = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: tradingCompetitionFanTokenAbi,\n    address: getTradingCompetitionAddressFanToken(),\n    signer,\n  }) as TradingCompetitionFanToken\n}\nexport const getTradingCompetitionContractMobox = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: tradingCompetitionMoboxAbi,\n    address: getTradingCompetitionAddressMobox(),\n    signer,\n  }) as TradingCompetitionMobox\n}\n\nexport const getTradingCompetitionContractMoD = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: tradingCompetitionMoDAbi,\n    address: getTradingCompetitionAddressMoD(),\n    signer,\n  }) as TradingCompetitionMoD\n}\n\nexport const getEasterNftContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: easterNftAbi, address: getEasterNftAddress(), signer }) as EasterNft\n}\nexport const getCakeVaultV2Contract = (signer?: Signer | Provider) => {\n  return getContract({ abi: cakeVaultV2Abi, address: getCakeVaultAddress(), signer }) as CakeVaultV2\n}\n\nexport const getCakeFlexibleSideVaultV2Contract = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: cakeFlexibleSideVaultV2Abi,\n    address: getCakeFlexibleSideVaultAddress(),\n    signer,\n  }) as CakeFlexibleSideVaultV2\n}\n\nexport const getPredictionsContract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: predictionsAbi, address, signer }) as Predictions\n}\n\nexport const getPredictionsV1Contract = (signer?: Signer | Provider) => {\n  return getContract({ abi: predictionsV1Abi, address: getPredictionsV1Address(), signer }) as PredictionsV1\n}\n\nexport const getCakePredictionsContract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: cakePredictionsAbi, address, signer }) as Predictions\n}\n\nexport const getChainlinkOracleContract = (address: string, signer?: Signer | Provider, chainId?: number) => {\n  return getContract({ abi: chainlinkOracleAbi, address, signer, chainId }) as ChainlinkOracle\n}\nexport const getMulticallContract = (chainId: ChainId) => {\n  return getContract({ abi: MultiCallAbi, address: getMulticallAddress(chainId), chainId }) as Multicall\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: bunnySpecialCakeVaultAbi,\n    address: getBunnySpecialCakeVaultAddress(),\n    signer,\n  }) as BunnySpecialCakeVault\n}\nexport const getBunnySpecialPredictionContract = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: bunnySpecialPredictionAbi,\n    address: getBunnySpecialPredictionAddress(),\n    signer,\n  }) as BunnySpecialPrediction\n}\nexport const getBunnySpecialLotteryContract = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: bunnySpecialLotteryAbi,\n    address: getBunnySpecialLotteryAddress(),\n    signer,\n  }) as BunnySpecialLottery\n}\nexport const getBunnySpecialXmasContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: bunnySpecialXmasAbi, address: getBunnySpecialXmasAddress(), signer })\n}\nexport const getFarmAuctionContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: farmAuctionAbi, address: getFarmAuctionAddress(), signer }) as unknown as FarmAuction\n}\nexport const getAnniversaryAchievementContract = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: anniversaryAchievementAbi,\n    address: getAnniversaryAchievement(),\n    signer,\n  }) as AnniversaryAchievement\n}\n\nexport const getNftMarketContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: nftMarketAbi, address: getNftMarketAddress(), signer }) as NftMarket\n}\nexport const getNftSaleContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: nftSaleAbi, address: getNftSaleAddress(), signer }) as NftSale\n}\nexport const getPancakeSquadContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: pancakeSquadAbi, address: getPancakeSquadAddress(), signer }) as PancakeSquad\n}\nexport const getErc721CollectionContract = (signer?: Signer | Provider, address?: string) => {\n  return getContract({ abi: erc721CollectionAbi, address, signer }) as Erc721collection\n}\n\nexport const getPotteryVaultContract = (address: string, signer?: Signer | Provider) => {\n  return getContract({ abi: potteryVaultAbi, address, signer }) as PotteryVaultAbi\n}\n\nexport const getPotteryDrawContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: potteryDrawAbi, address: getPotteryDrawAddress(), signer }) as PotteryDrawAbi\n}\n\nexport const getZapContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: zapAbi, address: getZapAddress(), signer }) as Zap\n}\n\nexport const getIfoCreditAddressContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: iCakeAbi, address: getICakeAddress(), signer }) as ICake\n}\n\nexport const getBCakeFarmBoosterContract = (signer?: Signer | Provider) => {\n  return getContract({ abi: bCakeFarmBoosterAbi, address: getBCakeFarmBoosterAddress(), signer }) as BCakeFarmBooster\n}\n\nexport const getBCakeFarmBoosterProxyFactoryContract = (signer?: Signer | Provider) => {\n  return getContract({\n    abi: bCakeFarmBoosterProxyFactoryAbi,\n    address: getBCakeFarmBoosterProxyFactoryAddress(),\n    signer,\n  }) as BCakeFarmBoosterProxyFactory\n}\n\nexport const getBCakeProxyContract = (proxyContractAddress: string, signer?: Signer | Provider) => {\n  return getContract({ abi: bCakeProxyAbi, address: proxyContractAddress, signer }) as BCakeProxy\n}\n\nexport const getNonBscVaultContract = (signer?: Signer | Provider, chainId?: number) => {\n  return getContract({ abi: nonBscVault, address: getNonBscVaultAddress(chainId), chainId, signer }) as NonBscVault\n}\n\nexport const getCrossFarmingSenderContract = (signer?: Signer | Provider, chainId?: number) => {\n  return getContract({\n    abi: crossFarmingSenderAbi,\n    address: getCrossFarmingSenderAddress(chainId),\n    chainId,\n    signer,\n  }) as CrossFarmingSender\n}\n\nexport const getCrossFarmingReceiverContract = (signer?: Signer | Provider, chainId?: number) => {\n  return getContract({\n    abi: crossFarmingReceiverAbi,\n    address: getCrossFarmingReceiverAddress(chainId),\n    chainId,\n    signer,\n  }) as CrossFarmingReceiver\n}\n\nexport const getCrossFarmingProxyContract = (\n  proxyContractAddress: string,\n  signer?: Signer | Provider,\n  chainId?: number,\n) => {\n  return getContract({ abi: crossFarmingProxyAbi, address: proxyContractAddress, chainId, signer }) as CrossFarmingProxy\n}\n","import type { Signer } from '@ethersproject/abstract-signer'\nimport { getAddress } from '@ethersproject/address'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Contract } from '@ethersproject/contracts'\nimport type { Provider } from '@ethersproject/providers'\nimport { ChainId, Currency } from '@pancakeswap/sdk'\nimport { bsc } from '@pancakeswap/wagmi/chains'\nimport memoize from 'lodash/memoize'\nimport { TokenAddressMap } from '@pancakeswap/token-lists'\nimport { chains } from './wagmi'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport const isAddress = memoize((value: any): string | false => {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n})\n\nexport function getBlockExploreLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainIdOverride?: number,\n): string {\n  const chainId = chainIdOverride || ChainId.BSC\n  const chain = chains.find((c) => c.id === chainId)\n  if (!chain) return bsc.blockExplorers.default.url\n  switch (type) {\n    case 'transaction': {\n      return `${chain.blockExplorers.default.url}/tx/${data}`\n    }\n    case 'token': {\n      return `${chain.blockExplorers.default.url}/token/${data}`\n    }\n    case 'block': {\n      return `${chain.blockExplorers.default.url}/block/${data}`\n    }\n    case 'countdown': {\n      return `${chain.blockExplorers.default.url}/block/countdown/${data}`\n    }\n    default: {\n      return `${chain.blockExplorers.default.url}/address/${data}`\n    }\n  }\n}\n\nexport function getBlockExploreName(chainIdOverride?: number) {\n  const chainId = chainIdOverride || ChainId.BSC\n  const chain = chains.find((c) => c.id === chainId)\n\n  return chain?.blockExplorers?.default.name || bsc.blockExplorers.default.name\n}\n\nexport function getBscScanLinkForNft(collectionAddress: string, tokenId: string): string {\n  return `${bsc.blockExplorers.default.url}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber, margin = 1000): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(margin))).div(BigNumber.from(10000))\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, signer?: Signer | Provider): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, signer)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap<ChainId>, currency?: Currency): boolean {\n  if (currency?.isNative) return true\n  return Boolean(currency?.isToken && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Order } from '@gelatonetwork/limit-orders-lib'\nimport { get, set, clear } from 'local-storage'\nimport orderBy from 'lodash/orderBy'\n\nexport const LS_ORDERS = 'gorders_'\n\nexport const hashOrder = (order: Order) => order.id\n\nexport const hashOrderSet = (orders: Order[]) => new Set(orders.map(hashOrder))\n\nexport function clearOrdersLocalStorage() {\n  return clear()\n}\n\nexport function lsKey(key: string, account: string, chainId: number) {\n  return key + account.toString() + chainId.toString()\n}\n\nexport function getLSOrders(chainId: number, account: string, pending = false) {\n  const key = pending ? lsKey(`${LS_ORDERS}pending_`, account, chainId) : lsKey(LS_ORDERS, account, chainId)\n\n  const orders = get<Order[]>(key)\n\n  return orders ? getUniqueOrders(orders) : []\n}\n\nexport function saveOrder(chainId: number, account: string, order: Order, pending = false) {\n  saveOrders(chainId, account, [order], pending)\n}\n\nexport function saveOrders(chainId: number, account: string, orders: Order[], pending = false) {\n  if (!orders || !orders.length) return\n\n  const key = pending ? lsKey(`${LS_ORDERS}pending_`, account, chainId) : lsKey(LS_ORDERS, account, chainId)\n\n  if (!pending) {\n    removeOrders(chainId, account, orders, true)\n  }\n\n  const result = removeOrders(chainId, account, orders, pending)\n\n  if (!result.length) {\n    set(key, orders)\n  } else {\n    result.push(...orders)\n    set(key, result)\n  }\n}\n\nexport function removeOrders(chainId: number, account: string, orders: Order[], pending = false) {\n  const key = pending ? lsKey(`${LS_ORDERS}pending_`, account, chainId) : lsKey(LS_ORDERS, account, chainId)\n\n  const prev = get<Order[]>(key)\n\n  if (!prev) return []\n\n  if (!orders || !orders.length) return prev\n\n  const orderHashSet = hashOrderSet(orders)\n  const result = prev.filter((orderInLS: Order) => !orderHashSet.has(hashOrder(orderInLS)))\n\n  set(key, result)\n\n  return result\n}\n\nexport function removeOrder(chainId: number, account: string, order: Order, pending = false) {\n  return removeOrders(chainId, account, [order], pending)\n}\n\nexport function confirmOrderCancellation(chainId: number, account: string, cancellationHash: string, success = true) {\n  const cancelHash = cancellationHash.toLowerCase()\n  const pendingKey = lsKey(`${LS_ORDERS}pending_`, account, chainId)\n  const pendingOrders = get<Order[]>(pendingKey)\n  const confirmedOrder = pendingOrders.find((order) => order.cancelledTxHash?.toLowerCase() === cancelHash)\n\n  if (confirmedOrder) removeOrder(chainId, account, confirmedOrder, true)\n\n  if (success && confirmedOrder) {\n    const ordersKey = lsKey(LS_ORDERS, account, chainId)\n    const orders = get<Order[]>(ordersKey)\n    if (orders) {\n      const ordersToSave = removeOrder(chainId, account, confirmedOrder)\n      ordersToSave.push({\n        ...confirmedOrder,\n        cancelledTxHash: cancelHash,\n      })\n      set(ordersKey, ordersToSave)\n    } else {\n      set(ordersKey, [\n        {\n          ...confirmedOrder,\n          cancelledTxHash: cancelHash,\n        },\n      ])\n    }\n  }\n}\n\nexport function confirmOrderSubmission(chainId: number, account: string, submissionHash: string, success = true) {\n  const creationHash = submissionHash.toLowerCase()\n  const pendingKey = lsKey(`${LS_ORDERS}pending_`, account, chainId)\n  const pendingOrders = get<Order[]>(pendingKey)\n  const confirmedOrder = pendingOrders.find((order) => order.createdTxHash?.toLowerCase() === creationHash)\n\n  if (confirmedOrder) removeOrder(chainId, account, confirmedOrder, true)\n\n  if (success && confirmedOrder) {\n    const ordersKey = lsKey(LS_ORDERS, account, chainId)\n    const orders = get<Order[]>(ordersKey)\n    if (orders) {\n      const ordersToSave = removeOrder(chainId, account, {\n        ...confirmedOrder,\n        createdTxHash: creationHash,\n      })\n      ordersToSave.push({\n        ...confirmedOrder,\n        createdTxHash: creationHash,\n      })\n      set(ordersKey, ordersToSave)\n    } else {\n      set(ordersKey, [\n        {\n          ...confirmedOrder,\n          createdTxHash: creationHash,\n        },\n      ])\n    }\n  }\n}\n\nexport const getUniqueOrders = (allOrders: Order[]): Order[] => [\n  ...new Map(\n    orderBy(allOrders, (order) => parseFloat(order.updatedAt), 'desc').map((order) => [order.id, order]),\n  ).values(),\n]\n","import { CallOverrides } from '@ethersproject/contracts'\nimport { createMulticall, Call } from '@pancakeswap/multicall'\nimport { provider } from './wagmi'\n\nexport type { Call }\n\nexport interface MulticallOptions extends CallOverrides {\n  requireSuccess?: boolean\n}\n\nconst { multicall, multicallv2 } = createMulticall(provider)\n\nexport default multicall\n\nexport { multicallv2 }\n","import { StaticJsonRpcProvider } from '@ethersproject/providers'\n\nexport const BSC_PROD_NODE = process.env.NEXT_PUBLIC_NODE_PRODUCTION || 'https://bsc.nodereal.io'\n\nexport const bscRpcProvider = new StaticJsonRpcProvider(BSC_PROD_NODE)\n\nexport default null\n","import { ChainId } from '@pancakeswap/sdk'\n\nexport const verifyBscNetwork = (chainId: number) => {\n  return chainId === ChainId.BSC || chainId === ChainId.BSC_TESTNET\n}\n","// connectors/binanceWallet/binanceWallet.ts\nimport {\n  ConnectorNotFoundError,\n  ResourceUnavailableError,\n  UserRejectedRequestError,\n  SwitchChainNotSupportedError\n} from \"wagmi\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { hexValue } from \"@ethersproject/bytes\";\nvar mappingNetwork = {\n  1: \"eth-mainnet\",\n  56: \"bsc-mainnet\",\n  97: \"bsc-testnet\"\n};\nvar _binanceChainListener = async () => new Promise((resolve) => Object.defineProperty(window, \"BinanceChain\", {\n  get() {\n    return this.bsc;\n  },\n  set(bsc) {\n    this.bsc = bsc;\n    resolve();\n  }\n}));\nvar BinanceWalletConnector = class extends InjectedConnector {\n  constructor({\n    chains: _chains\n  } = {}) {\n    const options = {\n      name: \"Binance\",\n      shimDisconnect: false,\n      shimChainChangedDisconnect: true\n    };\n    const chains = _chains == null ? void 0 : _chains.filter((c) => !!mappingNetwork[c.id]);\n    super({\n      chains,\n      options\n    });\n    this.id = \"bsc\";\n    this.ready = typeof window !== \"undefined\";\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      const account = await this.getAccount();\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n  async getProvider() {\n    if (typeof window !== \"undefined\") {\n      if (window.BinanceChain) {\n        this.provider = window.BinanceChain;\n      } else {\n        await _binanceChainListener();\n        this.provider = window.BinanceChain;\n      }\n    }\n    return this.provider;\n  }\n  async switchChain(chainId) {\n    var _a, _b;\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n    if (mappingNetwork[chainId]) {\n      try {\n        await ((_a = provider.switchNetwork) == null ? void 0 : _a.call(provider, mappingNetwork[chainId]));\n        return (_b = this.chains.find((x) => x.id === chainId)) != null ? _b : {\n          id: chainId,\n          name: `Chain ${id}`,\n          network: `${id}`,\n          rpcUrls: { default: \"\" }\n        };\n      } catch (error) {\n        if (error.error === \"user rejected\") {\n          throw new UserRejectedRequestError(error);\n        }\n      }\n    }\n    throw new SwitchChainNotSupportedError({ connector: this });\n  }\n};\nexport {\n  BinanceWalletConnector\n};\n","import { BinanceWalletConnector } from '@pancakeswap/wagmi/connectors/binanceWallet'\nimport { bsc, bscTest, goerli, rinkeby, mainnet } from '@pancakeswap/wagmi/chains'\nimport { configureChains, createClient } from 'wagmi'\nimport memoize from 'lodash/memoize'\nimport { CoinbaseWalletConnector } from 'wagmi/connectors/coinbaseWallet'\nimport { InjectedConnector } from 'wagmi/connectors/injected'\nimport { MetaMaskConnector } from 'wagmi/connectors/metaMask'\nimport { WalletConnectConnector } from 'wagmi/connectors/walletConnect'\nimport { jsonRpcProvider } from 'wagmi/providers/jsonRpc'\nimport { SafeConnector } from '@gnosis.pm/safe-apps-wagmi'\n\nconst CHAINS = [bsc, mainnet, bscTest, rinkeby, goerli]\n\nconst getNodeRealUrl = (networkName: string) => {\n  let host = null\n\n  switch (networkName) {\n    case 'homestead':\n      if (process.env.NEXT_PUBLIC_NODE_REAL_API_ETH) {\n        host = `eth-mainnet.nodereal.io/v1/${process.env.NEXT_PUBLIC_NODE_REAL_API_ETH}`\n      }\n      break\n    case 'rinkeby':\n      if (process.env.NEXT_PUBLIC_NODE_REAL_API_RINKEBY) {\n        host = `eth-rinkeby.nodereal.io/v1/${process.env.NEXT_PUBLIC_NODE_REAL_API_RINKEBY}`\n      }\n      break\n    case 'goerli':\n      if (process.env.NEXT_PUBLIC_NODE_REAL_API_GOERLI) {\n        host = `eth-goerli.nodereal.io/v1/${process.env.NEXT_PUBLIC_NODE_REAL_API_GOERLI}`\n      }\n      break\n    default:\n      host = null\n  }\n\n  if (!host) {\n    return null\n  }\n\n  const url = `https://${host}`\n  return {\n    http: url,\n    webSocket: url.replace(/^http/i, 'wss').replace('.nodereal.io/v1', '.nodereal.io/ws/v1'),\n  }\n}\n\nexport const { provider, chains } = configureChains(CHAINS, [\n  jsonRpcProvider({\n    rpc: (chain) => {\n      if (!!process.env.NEXT_PUBLIC_NODE_PRODUCTION && chain.id === bsc.id) {\n        return { http: process.env.NEXT_PUBLIC_NODE_PRODUCTION }\n      }\n      if (process.env.NODE_ENV === 'test' && chain.id === mainnet.id) {\n        return { http: 'https://cloudflare-eth.com' }\n      }\n      return getNodeRealUrl(chain.network) || { http: chain.rpcUrls.default }\n    },\n  }),\n])\n\nexport const injectedConnector = new InjectedConnector({\n  chains,\n  options: {\n    shimDisconnect: false,\n    shimChainChangedDisconnect: true,\n  },\n})\n\nexport const coinbaseConnector = new CoinbaseWalletConnector({\n  chains,\n  options: {\n    appName: 'PancakeSwap',\n    appLogoUrl: 'https://pancakeswap.com/logo.png',\n  },\n})\n\nexport const walletConnectConnector = new WalletConnectConnector({\n  chains,\n  options: {\n    qrcode: true,\n  },\n})\n\nexport const walletConnectNoQrCodeConnector = new WalletConnectConnector({\n  chains,\n  options: {\n    qrcode: false,\n  },\n})\n\nexport const metaMaskConnector = new MetaMaskConnector({\n  chains,\n  options: {\n    shimDisconnect: false,\n    shimChainChangedDisconnect: true,\n  },\n})\n\nexport const bscConnector = new BinanceWalletConnector({ chains })\n\nexport const client = createClient({\n  autoConnect: false,\n  provider,\n  connectors: [\n    new SafeConnector({ chains }),\n    metaMaskConnector,\n    injectedConnector,\n    coinbaseConnector,\n    walletConnectConnector,\n    bscConnector,\n  ],\n})\n\nexport const CHAIN_IDS = chains.map((c) => c.id)\n\nexport const isChainSupported = memoize((chainId: number) => CHAIN_IDS.includes(chainId))\nexport const isChainTestnet = memoize((chainId: number) => chains.find((c) => c.id === chainId)?.testnet)\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport groupBy from 'lodash/groupBy'\nimport isUndefinedOrNull from '@pancakeswap/utils/isUndefinedOrNull'\n\ninterface SplitProxyFarmsResponse {\n  normalFarms: SerializedFarmConfig[]\n  farmsWithProxy: SerializedFarmConfig[]\n}\n\nexport default function splitProxyFarms(farms: SerializedFarmConfig[]): SplitProxyFarmsResponse {\n  const { false: normalFarms, true: farmsWithProxy } = groupBy(farms, (farm) =>\n    isUndefinedOrNull(farm.boosted) ? false : farm.boosted,\n  )\n\n  return { normalFarms, farmsWithProxy }\n}\n","import BigNumber from 'bignumber.js'\nimport { vaultPoolConfig } from 'config/constants/pools'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getApy } from '@pancakeswap/utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from '@pancakeswap/utils/formatBalance'\nimport memoize from 'lodash/memoize'\n\n// min deposit and withdraw amount\nexport const MIN_LOCK_AMOUNT = new BigNumber(10000000000000)\n\nexport const ENABLE_EXTEND_LOCK_AMOUNT = new BigNumber(100000000000000)\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n  fee?: BigNumber,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber)).minus(fee || BIG_ZERO)\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { vaultKey, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = vaultKey\n    ? vaultPoolConfig[vaultKey].autoCompoundFrequency\n    : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (vaultKey) {\n    const autoApr = getApy(apr, autoCompoundFrequency, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n  fee?: BigNumber,\n) => {\n  const hasAutoEarnings = account && cakeAtLastUserAction?.gt(0) && userShares?.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(fee || BIG_ZERO).minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = memoize(\n  (pool: DeserializedPool, currentBlock: number) => {\n    const { startBlock, endBlock, isFinished } = pool\n    const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n    const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n    const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n    const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n    const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n    return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n  },\n  (pool, currentBlock) => `${pool.startBlock}#${pool.endBlock}#${pool.isFinished}#${currentBlock}`,\n)\n\nexport const getICakeWeekDisplay = (ceiling: BigNumber) => {\n  const weeks = new BigNumber(ceiling).div(60).div(60).div(24).div(7)\n  return Math.round(weeks.toNumber())\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { isStableFarm, SerializedFarmConfig } from '@pancakeswap/farms'\n\nlet logged = false\n\nexport const getFarmConfig = async (chainId: ChainId) => {\n  try {\n    return (await import(`/${chainId}.ts`)).default.filter(\n      (f: SerializedFarmConfig) => f.pid !== null,\n    ) as SerializedFarmConfig[]\n  } catch (error) {\n    if (!logged) {\n      console.error('Cannot get farm config', error, chainId)\n      logged = true\n    }\n    return []\n  }\n}\n\nexport const getStableConfig = async (chainId: ChainId) => {\n  try {\n    const farms = (await import(`/${chainId}.ts`)).default as SerializedFarmConfig[]\n\n    return farms.filter(isStableFarm)\n  } catch (error) {\n    if (!logged) {\n      console.error('Cannot get stable farm config', error, chainId)\n      logged = true\n    }\n    return []\n  }\n}\n","import { SerializedFarmConfig } from '@pancakeswap/farms'\n\nconst priceHelperLps: SerializedFarmConfig[] = []\n\nexport default priceHelperLps\n","import { goerliTestnetTokens } from '@pancakeswap/tokens'\nimport { SerializedFarmConfig } from '@pancakeswap/farms'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  {\n    pid: null,\n    lpSymbol: 'WETH-USDC LP',\n    lpAddress: '0xf5bf0C34d3c428A74Ceb98d27d38d0036C587200',\n    quoteToken: goerliTestnetTokens.usdc,\n    token: goerliTestnetTokens.weth,\n  },\n].map((p) => ({ ...p, token: p.token.serialize, quoteToken: p.quoteToken.serialize }))\n\nexport default priceHelperLps\n","import { SerializedFarmConfig } from '@pancakeswap/farms'\n\nconst priceHelperLps: SerializedFarmConfig[] = []\n\nexport default priceHelperLps\n","import { SerializedFarmConfig } from '@pancakeswap/farms'\n\nconst priceHelperLps: SerializedFarmConfig[] = []\n\nexport default priceHelperLps\n","import { ChainId } from '@pancakeswap/sdk'\nimport FarmsBscPriceHelper from './56'\nimport FarmsBscTestnetPriceHelper from './97'\nimport FarmsEthereumPriceHelper from './1'\nimport FarmsGoerliPriceHelper from './5'\n\nexport const getFarmsPriceHelperLpFiles = (chainId: ChainId) => {\n  switch (chainId) {\n    case ChainId.BSC:\n      return FarmsBscPriceHelper\n    case ChainId.BSC_TESTNET:\n      return FarmsBscTestnetPriceHelper\n    case ChainId.ETHEREUM:\n      return FarmsEthereumPriceHelper\n    case ChainId.GOERLI:\n      return FarmsGoerliPriceHelper\n    default:\n      return []\n  }\n}\n","import { SerializedFarmPublicData } from './types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarmPublicData[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarmPublicData => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport memoize from 'lodash/memoize'\n\nconst BIG_TEN = BigNumber.from(10)\n\nexport const getFullDecimalMultiplier = memoize((decimals: number): BigNumber => {\n  return BIG_TEN.pow(decimals)\n})\n","import { FixedNumber } from '@ethersproject/bignumber'\nimport { getFullDecimalMultiplier } from './getFullDecimalMultiplier'\n\nexport const FIXED_ZERO = FixedNumber.from(0)\nexport const FIXED_ONE = FixedNumber.from(1)\nexport const FIXED_TWO = FixedNumber.from(2)\n\nexport const FIXED_TEN_IN_POWER_18 = FixedNumber.from(getFullDecimalMultiplier(18))\n\nexport const masterChefAddresses = {\n  97: '0xB4A466911556e39210a6bB2FaECBB59E4eB7E43d',\n  56: '0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652',\n}\n\nexport const nonBSCVaultAddresses = {\n  1: '0x2e71B2688019ebdFDdE5A45e6921aaebb15b25fb',\n  5: '0xE6c904424417D03451fADd6E3f5b6c26BcC43841',\n}\n","export const equalsIgnoreCase = (a?: string, b?: string) => {\n  if (!a || !b) return false\n  return a.localeCompare(b, undefined, { sensitivity: 'accent' }) === 0\n}\n","import { BigNumber, FixedNumber } from '@ethersproject/bignumber'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { equalsIgnoreCase } from '@pancakeswap/utils/equalsIgnoreCase'\nimport _toNumber from 'lodash/toNumber'\nimport { SerializedFarmPublicData, FarmData } from './types'\nimport { FIXED_ONE, FIXED_TEN_IN_POWER_18, FIXED_TWO, FIXED_ZERO } from './const'\n\n// Find BUSD price for token\n// either via direct calculation if farm is X-BNB or X-BUSD\n// or via quoteTokenFarm which is quoteToken-BNB or quoteToken-BUSD farm\nexport const getFarmBaseTokenPrice = (\n  farm: SerializedFarmPublicData,\n  quoteTokenFarm: SerializedFarmPublicData,\n  nativePriceUSD: FixedNumber,\n  wNative: string,\n  stable: string,\n  quoteTokenInBusd,\n): FixedNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === stable) {\n    return hasTokenPriceVsQuote ? FixedNumber.from(farm.tokenPriceVsQuote) : FIXED_ONE\n  }\n\n  if (farm.quoteToken.symbol === wNative) {\n    return hasTokenPriceVsQuote ? nativePriceUSD.mulUnsafe(FixedNumber.from(farm.tokenPriceVsQuote)) : FIXED_ONE\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return FIXED_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === wNative || quoteTokenFarm.quoteToken.symbol === stable) {\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? FixedNumber.from(farm.tokenPriceVsQuote).mulUnsafe(quoteTokenInBusd)\n      : FIXED_ONE\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return FIXED_ZERO\n}\n\nexport const getFarmQuoteTokenPrice = (\n  farm: SerializedFarmPublicData,\n  quoteTokenFarm: SerializedFarmPublicData,\n  nativePriceUSD: FixedNumber,\n  wNative: string,\n  stable: string,\n): FixedNumber => {\n  if (farm.quoteToken.symbol === stable) {\n    return FIXED_ONE\n  }\n\n  if (farm.quoteToken.symbol === wNative) {\n    return nativePriceUSD\n  }\n\n  if (!quoteTokenFarm) {\n    return FIXED_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === wNative) {\n    return quoteTokenFarm.tokenPriceVsQuote\n      ? nativePriceUSD.mulUnsafe(FixedNumber.from(quoteTokenFarm.tokenPriceVsQuote))\n      : FIXED_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === stable) {\n    return quoteTokenFarm.tokenPriceVsQuote ? FixedNumber.from(quoteTokenFarm.tokenPriceVsQuote) : FIXED_ZERO\n  }\n\n  return FIXED_ZERO\n}\n\nconst getFarmFromTokenAddress = (\n  farms: SerializedFarmPublicData[],\n  tokenAddress: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarmPublicData => {\n  const farmsWithTokenSymbol = farms.filter((farm) => equalsIgnoreCase(farm.token.address, tokenAddress))\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst filterFarmsByQuoteToken = (\n  farms: SerializedFarmPublicData[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarmPublicData => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport const getStableLpTokenPrice = (\n  lpTotalSupply: FixedNumber,\n  tokenAmountTotal: FixedNumber,\n  tokenPriceBusd: FixedNumber,\n  quoteTokenAmountTotal: FixedNumber,\n  quoteTokenInBusd: FixedNumber,\n) => {\n  if (lpTotalSupply.isZero()) {\n    return FIXED_ZERO\n  }\n  const valueOfBaseTokenInFarm = tokenPriceBusd.mulUnsafe(tokenAmountTotal)\n  const valueOfQuoteTokenInFarm = quoteTokenInBusd.mulUnsafe(quoteTokenAmountTotal)\n\n  const liquidity = valueOfBaseTokenInFarm.addUnsafe(valueOfQuoteTokenInFarm)\n\n  const totalLpTokens = lpTotalSupply.divUnsafe(FIXED_TEN_IN_POWER_18)\n\n  return liquidity.divUnsafe(totalLpTokens)\n}\n\nexport const getLpTokenPrice = (\n  lpTotalSupply: FixedNumber,\n  lpTotalInQuoteToken: FixedNumber,\n  tokenAmountTotal: FixedNumber,\n  tokenPriceBusd: FixedNumber,\n) => {\n  // LP token price\n  let lpTokenPrice = FIXED_ZERO\n  const lpTotalSupplyAsBigNumber = BigNumber.from(lpTotalSupply)\n  const lpTotalInQuoteTokenBigNumber = BigNumber.from(lpTotalInQuoteToken)\n  if (lpTotalSupplyAsBigNumber.gt(0) && lpTotalInQuoteTokenBigNumber.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = tokenPriceBusd.mulUnsafe(tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.mulUnsafe(FIXED_TWO)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = lpTotalSupply.divUnsafe(FIXED_TEN_IN_POWER_18)\n    lpTokenPrice = overallValueOfAllTokensInFarm.divUnsafe(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\nexport type FarmWithPrices = FarmData & {\n  tokenPriceBusd: string\n  quoteTokenPriceBusd: string\n  lpTokenPrice: string\n}\n\nexport const getFarmsPrices = (farms: FarmData[], chainId: number): FarmWithPrices[] => {\n  if (!nativeStableLpMap[chainId]) {\n    throw new Error(`chainId ${chainId} not supported`)\n  }\n\n  const nativeStableFarm = farms.find((farm) => equalsIgnoreCase(farm.lpAddress, nativeStableLpMap[chainId].address))\n\n  const nativePriceUSD =\n    _toNumber(nativeStableFarm?.tokenPriceVsQuote) !== 0\n      ? FIXED_ONE.divUnsafe(FixedNumber.from(nativeStableFarm.tokenPriceVsQuote))\n      : FIXED_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenAddress(farms, farm.quoteToken.address, [\n      nativeStableLpMap[chainId].wNative,\n      nativeStableLpMap[chainId].stable,\n    ])\n\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(\n      farm,\n      quoteTokenFarm,\n      nativePriceUSD,\n      nativeStableLpMap[chainId].wNative,\n      nativeStableLpMap[chainId].stable,\n    )\n\n    const tokenPriceBusd = getFarmBaseTokenPrice(\n      farm,\n      quoteTokenFarm,\n      nativePriceUSD,\n      nativeStableLpMap[chainId].wNative,\n      nativeStableLpMap[chainId].stable,\n      quoteTokenPriceBusd,\n    )\n    const lpTokenPrice = farm?.stableSwapAddress\n      ? getStableLpTokenPrice(\n          FixedNumber.from(farm.lpTotalSupply),\n          FixedNumber.from(farm.tokenAmountTotal),\n          tokenPriceBusd,\n          FixedNumber.from(farm.quoteTokenAmountTotal),\n          // Assume token is busd, tokenPriceBusd is tokenPriceVsQuote\n          FixedNumber.from(farm.tokenPriceVsQuote),\n        )\n      : getLpTokenPrice(\n          FixedNumber.from(farm.lpTotalSupply),\n          FixedNumber.from(farm.lpTotalInQuoteToken),\n          FixedNumber.from(farm.tokenAmountTotal),\n          tokenPriceBusd,\n        )\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toString(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toString(),\n      lpTokenPrice: lpTokenPrice.toString(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nconst nativeStableLpMap = {\n  [ChainId.ETHEREUM]: {\n    address: '0x2E8135bE71230c6B1B4045696d41C09Db0414226',\n    wNative: 'WETH',\n    stable: 'USDC',\n  },\n  [ChainId.GOERLI]: {\n    address: '0xf5bf0C34d3c428A74Ceb98d27d38d0036C587200',\n    wNative: 'WETH',\n    stable: 'tUSDC',\n  },\n  [ChainId.BSC]: {\n    address: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    wNative: 'WBNB',\n    stable: 'BUSD',\n  },\n  [ChainId.BSC_TESTNET]: {\n    address: '0x4E96D2e92680Ca65D58A0e2eB5bd1c0f44cAB897',\n    wNative: 'WBNB',\n    stable: 'BUSD',\n  },\n}\n","import { MultiCallV2 } from '@pancakeswap/multicall'\nimport { ChainId } from '@pancakeswap/sdk'\nimport chunk from 'lodash/chunk'\nimport { SerializedFarmPublicData, SerializedFarmConfig } from './types'\nimport { nonBSCVaultAddresses } from './const'\n\nconst abi = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\nconst fetchFarmCalls = (farm: SerializedFarmPublicData, masterChefAddress: string, vaultAddress?: string) => {\n  const { lpAddress, token, quoteToken } = farm\n  return [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [vaultAddress || masterChefAddress],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n  ]\n}\n\nexport const fetchPublicFarmsData = async (\n  farms: SerializedFarmConfig[],\n  chainId = ChainId.BSC,\n  multicall: MultiCallV2,\n  masterChefAddress: string,\n): Promise<any[]> => {\n  try {\n    const farmCalls = farms.flatMap((farm) => fetchFarmCalls(farm, masterChefAddress, nonBSCVaultAddresses[chainId]))\n    const chunkSize = farmCalls.length / farms.length\n    const farmMultiCallResult = await multicall({ abi, calls: farmCalls, chainId })\n    return chunk(farmMultiCallResult, chunkSize)\n  } catch (error) {\n    console.error('MasterChef Public Data error ', error)\n    throw error\n  }\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Call, MultiCallV2 } from '@pancakeswap/multicall'\nimport { ChainId } from '@pancakeswap/sdk'\nimport chunk from 'lodash/chunk'\nimport { SerializedStableFarmConfig } from './types'\n\nconst stableSwapAbi = [\n  {\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'coins',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'balances',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'i', type: 'uint256' },\n      { internalType: 'uint256', name: 'j', type: 'uint256' },\n      { internalType: 'uint256', name: 'dx', type: 'uint256' },\n    ],\n    name: 'get_dy',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\nexport async function fetchStableFarmData(\n  farms: SerializedStableFarmConfig[],\n  chainId = ChainId.BSC,\n  multicallv2: MultiCallV2,\n) {\n  const calls: Call[] = farms.flatMap((f) => [\n    {\n      address: f.stableSwapAddress,\n      name: 'balances',\n      params: [0],\n    },\n    {\n      address: f.stableSwapAddress,\n      name: 'balances',\n      params: [1],\n    },\n    {\n      address: f.stableSwapAddress,\n      name: 'get_dy',\n      params: [0, 1, parseUnits('1', f.token.decimals)],\n    },\n    {\n      address: f.stableSwapAddress,\n      name: 'get_dy',\n      params: [1, 0, parseUnits('1', f.quoteToken.decimals)],\n    },\n  ])\n\n  const chunkSize = calls.length / farms.length\n\n  const results = await multicallv2({\n    abi: stableSwapAbi,\n    calls,\n    chainId,\n  })\n\n  return chunk(results, chunkSize)\n}\n","import { BigNumber, FixedNumber } from '@ethersproject/bignumber'\nimport { formatUnits } from '@ethersproject/units'\nimport { MultiCallV2 } from '@pancakeswap/multicall'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { FIXED_TWO, FIXED_ZERO } from './const'\nimport { getFarmsPrices } from './farmPrices'\nimport { fetchPublicFarmsData } from './fetchPublicFarmData'\nimport { fetchStableFarmData } from './fetchStableFarmData'\nimport { isStableFarm, SerializedFarmConfig } from './types'\nimport { getFullDecimalMultiplier } from './getFullDecimalMultiplier'\n\nexport const getTokenAmount = (balance: FixedNumber, decimals: number) => {\n  const tokenDividerFixed = FixedNumber.from(getFullDecimalMultiplier(decimals))\n  return balance.divUnsafe(tokenDividerFixed)\n}\n\nexport type FetchFarmsParams = {\n  farms: SerializedFarmConfig[]\n  multicallv2: MultiCallV2\n  isTestnet: boolean\n  masterChefAddress: string\n  chainId: number\n  totalRegularAllocPoint: BigNumber\n  totalSpecialAllocPoint: BigNumber\n}\n\nexport async function farmV2FetchFarms({\n  farms,\n  multicallv2,\n  isTestnet,\n  masterChefAddress,\n  chainId,\n  totalRegularAllocPoint,\n  totalSpecialAllocPoint,\n}: FetchFarmsParams) {\n  const stableFarms = farms.filter(isStableFarm)\n\n  const [stableFarmsResults, poolInfos, lpDataResults] = await Promise.all([\n    fetchStableFarmData(stableFarms, chainId, multicallv2),\n    fetchMasterChefData(farms, isTestnet, multicallv2, masterChefAddress),\n    fetchPublicFarmsData(farms, chainId, multicallv2, masterChefAddress),\n  ])\n\n  const stableFarmsData = (stableFarmsResults as StableLpData[]).map(formatStableFarm)\n\n  const stableFarmsDataMap = stableFarms.reduce<Record<number, FormatStableFarmResponse>>((map, farm, index) => {\n    return {\n      ...map,\n      [farm.pid]: stableFarmsData[index],\n    }\n  }, {})\n\n  const lpData = lpDataResults.map(formatClassicFarmResponse)\n\n  const farmsData = farms.map((farm, index) => {\n    try {\n      return {\n        ...farm,\n        ...(stableFarmsDataMap[farm.pid]\n          ? getStableFarmDynamicData({\n              ...lpData[index],\n              ...stableFarmsDataMap[farm.pid],\n              token0Decimals: farm.token.decimals,\n              token1Decimals: farm.quoteToken.decimals,\n              price1: stableFarmsDataMap[farm.pid].price1,\n            })\n          : getClassicFarmsDynamicData({\n              ...lpData[index],\n              ...stableFarmsDataMap[farm.pid],\n              token0Decimals: farm.token.decimals,\n              token1Decimals: farm.quoteToken.decimals,\n            })),\n        ...getFarmAllocation({\n          allocPoint: poolInfos[index]?.allocPoint,\n          isRegular: poolInfos[index]?.isRegular,\n          totalRegularAllocPoint,\n          totalSpecialAllocPoint,\n        }),\n      }\n    } catch (error) {\n      console.error(error, farm, index, {\n        allocPoint: poolInfos[index]?.allocPoint,\n        isRegular: poolInfos[index]?.isRegular,\n        token0Decimals: farm.token.decimals,\n        token1Decimals: farm.quoteToken.decimals,\n        totalRegularAllocPoint,\n        totalSpecialAllocPoint,\n      })\n      throw error\n    }\n  })\n\n  const farmsDataWithPrices = getFarmsPrices(farmsData, chainId)\n\n  return farmsDataWithPrices\n}\n\nconst masterChefV2Abi = [\n  {\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'poolInfo',\n    outputs: [\n      { internalType: 'uint256', name: 'accCakePerShare', type: 'uint256' },\n      { internalType: 'uint256', name: 'lastRewardBlock', type: 'uint256' },\n      { internalType: 'uint256', name: 'allocPoint', type: 'uint256' },\n      { internalType: 'uint256', name: 'totalBoostedShare', type: 'uint256' },\n      { internalType: 'bool', name: 'isRegular', type: 'bool' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'poolLength',\n    outputs: [{ internalType: 'uint256', name: 'pools', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalRegularAllocPoint',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSpecialAllocPoint',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'bool', name: '_isRegular', type: 'bool' }],\n    name: 'cakePerBlock',\n    outputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\nconst masterChefFarmCalls = (farm: SerializedFarmConfig, masterChefAddress: string) => {\n  const { pid } = farm\n\n  return pid || pid === 0\n    ? {\n        address: masterChefAddress,\n        name: 'poolInfo',\n        params: [pid],\n      }\n    : null\n}\n\nexport const fetchMasterChefData = async (\n  farms: SerializedFarmConfig[],\n  isTestnet: boolean,\n  multicallv2: MultiCallV2,\n  masterChefAddress: string,\n): Promise<any[]> => {\n  try {\n    const masterChefCalls = farms.map((farm) => masterChefFarmCalls(farm, masterChefAddress))\n    const masterChefAggregatedCalls = masterChefCalls.filter((masterChefCall) => masterChefCall !== null)\n\n    const masterChefMultiCallResult = await multicallv2({\n      abi: masterChefV2Abi,\n      calls: masterChefAggregatedCalls,\n      chainId: isTestnet ? ChainId.BSC_TESTNET : ChainId.BSC,\n    })\n\n    let masterChefChunkedResultCounter = 0\n    return masterChefCalls.map((masterChefCall) => {\n      if (masterChefCall === null) {\n        return null\n      }\n      const data = masterChefMultiCallResult[masterChefChunkedResultCounter]\n      masterChefChunkedResultCounter++\n      return data\n    })\n  } catch (error) {\n    console.error('MasterChef Pool info data error', error)\n    throw error\n  }\n}\n\nexport const fetchMasterChefV2Data = async ({\n  isTestnet,\n  multicallv2,\n  masterChefAddress,\n}: {\n  isTestnet: boolean\n  multicallv2: MultiCallV2\n  masterChefAddress: string\n}) => {\n  try {\n    const [[poolLength], [totalRegularAllocPoint], [totalSpecialAllocPoint], [cakePerBlock]] = await multicallv2<\n      [[BigNumber], [BigNumber], [BigNumber], [BigNumber]]\n    >({\n      abi: masterChefV2Abi,\n      calls: [\n        {\n          address: masterChefAddress,\n          name: 'poolLength',\n        },\n        {\n          address: masterChefAddress,\n          name: 'totalRegularAllocPoint',\n        },\n        {\n          address: masterChefAddress,\n          name: 'totalSpecialAllocPoint',\n        },\n        {\n          address: masterChefAddress,\n          name: 'cakePerBlock',\n          params: [true],\n        },\n      ],\n      chainId: isTestnet ? ChainId.BSC_TESTNET : ChainId.BSC,\n    })\n\n    return {\n      poolLength,\n      totalRegularAllocPoint,\n      totalSpecialAllocPoint,\n      cakePerBlock,\n    }\n  } catch (error) {\n    console.error('Get MasterChef data error', error)\n    throw error\n  }\n}\n\ntype StableLpData = [balanceResponse, balanceResponse, balanceResponse, balanceResponse]\n\ntype FormatStableFarmResponse = {\n  tokenBalanceLP: FixedNumber\n  quoteTokenBalanceLP: FixedNumber\n  price1: BigNumber\n}\n\nconst formatStableFarm = (stableFarmData: StableLpData): FormatStableFarmResponse => {\n  const [balance1, balance2, _, _price1] = stableFarmData\n  return {\n    tokenBalanceLP: FixedNumber.from(balance1[0]),\n    quoteTokenBalanceLP: FixedNumber.from(balance2[0]),\n    price1: _price1[0],\n  }\n}\n\nconst getStableFarmDynamicData = ({\n  lpTokenBalanceMC,\n  lpTotalSupply,\n  quoteTokenBalanceLP,\n  tokenBalanceLP,\n  token0Decimals,\n  token1Decimals,\n  price1,\n}: FormatClassicFarmResponse & {\n  token1Decimals: number\n  token0Decimals: number\n  price1: BigNumber\n}) => {\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = getTokenAmount(tokenBalanceLP, token0Decimals)\n  const quoteTokenAmountTotal = getTokenAmount(quoteTokenBalanceLP, token1Decimals)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio =\n    !lpTotalSupply.isZero() && !lpTokenBalanceMC.isZero() ? lpTokenBalanceMC.divUnsafe(lpTotalSupply) : FIXED_ZERO\n\n  const tokenPriceVsQuote = formatUnits(price1, token1Decimals)\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMcFixed = quoteTokenAmountTotal.mulUnsafe(lpTokenRatio)\n\n  // Amount of token in the LP that are staked in the MC\n  const tokenAmountMcFixed = tokenAmountTotal.mulUnsafe(lpTokenRatio)\n\n  const quoteTokenAmountMcFixedByTokenAmount = tokenAmountMcFixed.mulUnsafe(FixedNumber.from(tokenPriceVsQuote))\n\n  const lpTotalInQuoteToken = quoteTokenAmountMcFixed.addUnsafe(quoteTokenAmountMcFixedByTokenAmount)\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toString(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toString(),\n    lpTotalSupply: lpTotalSupply.toString(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toString(),\n    tokenPriceVsQuote,\n  }\n}\n\ntype balanceResponse = [BigNumber]\ntype decimalsResponse = [number]\n\nexport type ClassicLPData = [\n  balanceResponse,\n  balanceResponse,\n  balanceResponse,\n  balanceResponse,\n  decimalsResponse,\n  decimalsResponse,\n]\n\ntype FormatClassicFarmResponse = {\n  tokenBalanceLP: FixedNumber\n  quoteTokenBalanceLP: FixedNumber\n  lpTokenBalanceMC: FixedNumber\n  lpTotalSupply: FixedNumber\n}\n\nconst formatClassicFarmResponse = (farmData: ClassicLPData): FormatClassicFarmResponse => {\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply] = farmData\n  return {\n    tokenBalanceLP: FixedNumber.from(tokenBalanceLP[0]),\n    quoteTokenBalanceLP: FixedNumber.from(quoteTokenBalanceLP[0]),\n    lpTokenBalanceMC: FixedNumber.from(lpTokenBalanceMC[0]),\n    lpTotalSupply: FixedNumber.from(lpTotalSupply[0]),\n  }\n}\n\ninterface FarmAllocationParams {\n  allocPoint?: BigNumber\n  isRegular?: boolean\n  totalRegularAllocPoint: BigNumber\n  totalSpecialAllocPoint: BigNumber\n}\n\nconst getFarmAllocation = ({\n  allocPoint,\n  isRegular,\n  totalRegularAllocPoint,\n  totalSpecialAllocPoint,\n}: FarmAllocationParams) => {\n  const _allocPoint = allocPoint ? FixedNumber.from(allocPoint) : FIXED_ZERO\n  const totalAlloc = isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint\n  const poolWeight =\n    !totalAlloc.isZero() && !_allocPoint.isZero() ? _allocPoint.divUnsafe(FixedNumber.from(totalAlloc)) : FIXED_ZERO\n\n  return {\n    poolWeight: poolWeight.toString(),\n    multiplier: !_allocPoint.isZero() ? `${+_allocPoint.divUnsafe(FixedNumber.from(100)).toString()}X` : `0X`,\n  }\n}\n\nconst getClassicFarmsDynamicData = ({\n  lpTokenBalanceMC,\n  lpTotalSupply,\n  quoteTokenBalanceLP,\n  tokenBalanceLP,\n  token0Decimals,\n  token1Decimals,\n}: FormatClassicFarmResponse & {\n  token0Decimals: number\n  token1Decimals: number\n}) => {\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = getTokenAmount(tokenBalanceLP, token0Decimals)\n  const quoteTokenAmountTotal = getTokenAmount(quoteTokenBalanceLP, token1Decimals)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio =\n    !lpTotalSupply.isZero() && !lpTokenBalanceMC.isZero() ? lpTokenBalanceMC.divUnsafe(lpTotalSupply) : FIXED_ZERO\n\n  // // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMcFixed = quoteTokenAmountTotal.mulUnsafe(lpTokenRatio)\n\n  // // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMcFixed.mulUnsafe(FIXED_TWO)\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toString(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toString(),\n    lpTotalSupply: lpTotalSupply.toString(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toString(),\n    tokenPriceVsQuote:\n      !quoteTokenAmountTotal.isZero() && !tokenAmountTotal.isZero()\n        ? quoteTokenAmountTotal.divUnsafe(tokenAmountTotal).toString()\n        : FIXED_ZERO.toString(),\n  }\n}\n","import { formatEther } from '@ethersproject/units'\nimport { MultiCallV2 } from '@pancakeswap/multicall'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { masterChefAddresses } from './const'\nimport { FarmWithPrices, getFarmsPrices } from './farmPrices'\nimport { farmV2FetchFarms, FetchFarmsParams, fetchMasterChefV2Data } from './fetchFarms'\n\nconst supportedChainId = [ChainId.GOERLI, ChainId.BSC, ChainId.BSC_TESTNET, ChainId.ETHEREUM]\nexport const bCakeSupportedChainId = [ChainId.BSC, ChainId.BSC_TESTNET]\n\nexport function createFarmFetcher(multicallv2: MultiCallV2) {\n  const fetchFarms = async (\n    params: {\n      isTestnet: boolean\n    } & Pick<FetchFarmsParams, 'chainId' | 'farms'>,\n  ) => {\n    const { isTestnet, farms, chainId } = params\n    const masterChefAddress = isTestnet ? masterChefAddresses[ChainId.BSC_TESTNET] : masterChefAddresses[ChainId.BSC]\n    const { poolLength, totalRegularAllocPoint, totalSpecialAllocPoint, cakePerBlock } = await fetchMasterChefV2Data({\n      isTestnet,\n      multicallv2,\n      masterChefAddress,\n    })\n    const regularCakePerBlock = formatEther(cakePerBlock)\n    const farmsWithPrice = await farmV2FetchFarms({\n      multicallv2,\n      masterChefAddress,\n      isTestnet,\n      chainId,\n      farms: farms.filter((f) => !f.pid || poolLength.gt(f.pid)),\n      totalRegularAllocPoint,\n      totalSpecialAllocPoint,\n    })\n\n    return {\n      farmsWithPrice,\n      poolLength: poolLength.toNumber(),\n      regularCakePerBlock: +regularCakePerBlock,\n    }\n  }\n  return {\n    fetchFarms,\n    isChainSupported: (chainId: number) => supportedChainId.includes(chainId),\n    supportedChainId,\n    isTestnet: (chainId: number) => ![ChainId.BSC, ChainId.ETHEREUM].includes(chainId),\n  }\n}\n\nexport * from './apr'\nexport * from './farmsPriceHelpers'\nexport * from './types'\nexport type { FarmWithPrices }\n\nexport { getFarmsPrices }\n","import { SerializedWrappedToken } from '@pancakeswap/token-lists'\n\nexport type FarmsDynamicDataResult = {\n  tokenAmountTotal: string\n  quoteTokenAmountTotal: string\n  lpTotalSupply: string\n  lpTotalInQuoteToken: string\n  tokenPriceVsQuote: string\n  poolWeight: string\n  multiplier: string\n}\nexport type FarmData = SerializedFarmConfig & FarmsDynamicDataResult\n\nexport interface FarmConfigBaseProps {\n  pid: number\n  v1pid?: number\n  vaultPid?: number\n  lpSymbol: string\n  lpAddress: string\n  multiplier?: string\n  isCommunity?: boolean\n  auctionHostingStartSeconds?: number\n  auctionHostingEndDate?: string\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n  boosted?: boolean\n}\nexport interface SerializedStableFarmConfig extends SerializedClassicFarmConfig {\n  stableSwapAddress?: string\n  infoStableSwapAddress?: string\n}\n\nexport interface SerializedClassicFarmConfig extends FarmConfigBaseProps {\n  token: SerializedWrappedToken\n  quoteToken: SerializedWrappedToken\n}\n\nexport type SerializedFarmConfig = SerializedStableFarmConfig & SerializedClassicFarmConfig\n\nexport interface SerializedFarmPublicData extends SerializedClassicFarmConfig {\n  lpTokenPrice?: string\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: string\n  quoteTokenAmountTotal?: string\n  lpTotalInQuoteToken?: string\n  lpTotalSupply?: string\n  tokenPriceVsQuote?: string\n  poolWeight?: string\n  boosted?: boolean\n  infoStableSwapAddress?: string\n}\n\nexport interface AprMap {\n  [key: string]: number\n}\n\nexport function isStableFarm(farmConfig: SerializedFarmConfig): farmConfig is SerializedStableFarmConfig {\n  return 'stableSwapAddress' in farmConfig && typeof farmConfig.stableSwapAddress === 'string'\n}\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n\nexport const updateListVersion = createAction('lists/updateListVersion')\n","export * from './reducer'\nexport * from './actions'\nexport * from './lists'\nexport { default as useFetchListCallback } from './useFetchListCallback'\nexport * from './wrappedTokenInfo'\n","import { atomWithStorage, useReducerAtom } from 'jotai/utils'\nimport localForage from 'localforage'\nimport defaultStorage from 'redux-persist/lib/storage'\nimport { ListsState } from './reducer'\n\nexport const createListsAtom = (storeName: string, reducer, initialState) => {\n  let gotOnce = false\n  /**\n   * Persist you redux state using IndexedDB\n   * @param {string} dbName - IndexedDB database name\n   */\n  function IndexedDBStorage(dbName) {\n    if (typeof window !== 'undefined') {\n      const db = localForage.createInstance({\n        name: dbName,\n        storeName,\n      })\n      return {\n        db,\n        getItem: async (key) => {\n          const value = await db.getItem(key)\n          gotOnce = true\n          if (value) {\n            return value\n          }\n          return initialState\n        },\n        setItem: (k, v) => {\n          if (gotOnce) {\n            return db.setItem(k, v)\n          }\n          return undefined\n        },\n        removeItem: db.removeItem,\n        delayInit: true,\n      }\n    }\n    return defaultStorage\n  }\n\n  const listsAtom = atomWithStorage<ListsState>(\n    'lists',\n    initialState,\n    // @ts-ignore\n    IndexedDBStorage('lists'),\n  )\n\n  function useListState() {\n    return useReducerAtom(listsAtom, reducer)\n  }\n\n  return {\n    listsAtom,\n    useListState,\n  }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\n// import { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\n// import { updateVersion } from '../global/actions'\nimport {\n  acceptListUpdate,\n  addList,\n  fetchTokenList,\n  removeList,\n  enableList,\n  disableList,\n  updateListVersion,\n} from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListByUrlState = ListsState['byUrl'][string]\n\nexport const NEW_LIST_STATE: ListByUrlState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\nexport const createTokenListReducer = (\n  initialState: ListsState,\n  DEFAULT_LIST_OF_LISTS: string[],\n  DEFAULT_ACTIVE_LIST_URLS: string[],\n) =>\n  createReducer(initialState, (builder) =>\n    builder\n      .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n        const current = state.byUrl[url]?.current ?? null\n        const pendingUpdate = state.byUrl[url]?.pendingUpdate ?? null\n\n        state.byUrl[url] = {\n          current,\n          pendingUpdate,\n          loadingRequestId: requestId,\n          error: null,\n        }\n      })\n      .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n        const current = state.byUrl[url]?.current\n        const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n        // no-op if update does nothing\n        if (current) {\n          const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n          if (upgradeType === VersionUpgrade.NONE) return\n          if (loadingRequestId === null || loadingRequestId === requestId) {\n            state.byUrl[url] = {\n              ...state.byUrl[url],\n              loadingRequestId: null,\n              error: null,\n              current,\n              pendingUpdate: tokenList,\n            }\n          }\n        } else {\n          // activate if on default active\n          if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n            state.activeListUrls?.push(url)\n          }\n\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current: tokenList,\n            pendingUpdate: null,\n          }\n        }\n      })\n      .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n        if (state.byUrl[url]?.loadingRequestId !== requestId) {\n          // no-op since it's not the latest request\n          return\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: errorMessage,\n          current: null,\n          pendingUpdate: null,\n        }\n      })\n      .addCase(addList, (state, { payload: url }) => {\n        if (!state.byUrl[url]) {\n          state.byUrl[url] = NEW_LIST_STATE\n        }\n      })\n      .addCase(removeList, (state, { payload: url }) => {\n        if (state.byUrl[url]) {\n          delete state.byUrl[url]\n        }\n        // remove list from active urls if needed\n        if (state.activeListUrls && state.activeListUrls.includes(url)) {\n          state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n        }\n      })\n      .addCase(enableList, (state, { payload: url }) => {\n        if (!state.byUrl[url]) {\n          state.byUrl[url] = NEW_LIST_STATE\n        }\n\n        if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n          state.activeListUrls.push(url)\n        }\n\n        if (!state.activeListUrls) {\n          state.activeListUrls = [url]\n        }\n      })\n      .addCase(disableList, (state, { payload: url }) => {\n        if (state.activeListUrls && state.activeListUrls.includes(url)) {\n          state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n        }\n      })\n      .addCase(acceptListUpdate, (state, { payload: url }) => {\n        if (!state.byUrl[url]?.pendingUpdate) {\n          throw new Error('accept list update called without pending update')\n        }\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          pendingUpdate: null,\n          current: state.byUrl[url].pendingUpdate,\n        }\n      })\n      .addCase(updateListVersion, (state) => {\n        // state loaded from localStorage, but new lists have never been initialized\n        if (!state.lastInitializedDefaultListOfLists) {\n          state.byUrl = initialState.byUrl\n          state.activeListUrls = initialState.activeListUrls\n        } else if (state.lastInitializedDefaultListOfLists) {\n          const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n            (s, l) => s.add(l),\n            new Set(),\n          )\n          const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n          DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n            if (!lastInitializedSet.has(listUrl)) {\n              state.byUrl[listUrl] = NEW_LIST_STATE\n            }\n          })\n\n          state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n            if (!newListOfListsSet.has(listUrl)) {\n              delete state.byUrl[listUrl]\n            }\n          })\n        }\n\n        state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n        // if no active lists, activate defaults\n        if (!state.activeListUrls) {\n          state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n          // for each list on default list, initialize if needed\n          DEFAULT_ACTIVE_LIST_URLS.forEach((listUrl: string) => {\n            if (!state.byUrl[listUrl]) {\n              state.byUrl[listUrl] = NEW_LIST_STATE\n            }\n            return true\n          })\n        }\n      }),\n  )\n","import { nanoid } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { fetchTokenList } from './actions'\n\nfunction useFetchListCallback(dispatch): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      // lazy load avj and token list schema\n      const getTokenList = (await import('./getTokenList')).default\n      return getTokenList(listUrl)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch],\n  )\n}\n\nexport default useFetchListCallback\n","import { TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { SerializedToken, Token } from '@pancakeswap/swap-sdk-core'\n\nexport interface SerializedWrappedToken extends SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol: string\n  name?: string\n  projectLink?: string\n  logoURI?: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly logoURI: string | undefined\n\n  constructor(tokenInfo: TokenInfo) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.logoURI = tokenInfo.logoURI\n  }\n\n  public get serialize(): SerializedWrappedToken {\n    return {\n      address: this.address,\n      chainId: this.chainId,\n      decimals: this.decimals,\n      symbol: this.symbol,\n      name: this.name,\n      projectLink: this.projectLink,\n      logoURI: this.logoURI,\n    }\n  }\n}\n\nexport type TokenAddressMap<TChainId extends number> = Readonly<{\n  [chainId in TChainId]: Readonly<{\n    [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList }\n  }>\n}>\n\nexport function deserializeToken(serializedToken: SerializedWrappedToken): Token {\n  if (serializedToken.logoURI) {\n    return new WrappedTokenInfo({\n      chainId: serializedToken.chainId,\n      address: serializedToken.address,\n      decimals: serializedToken.decimals,\n      symbol: serializedToken.symbol || 'Unknown',\n      name: serializedToken.name || 'Unknown',\n      logoURI: serializedToken.logoURI,\n    })\n  }\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n","import { ChainId, ERC20Token } from '@pancakeswap/sdk'\n\nexport const CAKE_MAINNET = new ERC20Token(\n  ChainId.BSC,\n  '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n  18,\n  'CAKE',\n  'PancakeSwap Token',\n  'https://pancakeswap.finance/',\n)\n\nexport const CAKE_TESTNET = new ERC20Token(\n  ChainId.BSC_TESTNET,\n  '0xFa60D973F7642B748046464e165A65B7323b0DEE',\n  18,\n  'CAKE',\n  'PancakeSwap Token',\n  'https://pancakeswap.finance/',\n)\n\nexport const USDC_BSC = new ERC20Token(\n  ChainId.BSC,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n  'https://www.centre.io/usdc',\n)\n\nexport const USDC_TESTNET = new ERC20Token(\n  ChainId.BSC_TESTNET,\n  '0x64544969ed7EBf5f083679233325356EbE738930',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n  'https://www.centre.io/usdc',\n)\n\nexport const USDC_ETH = new ERC20Token(\n  ChainId.ETHEREUM,\n  '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  6,\n  'USDC',\n  'USD Coin',\n)\n\nexport const USDC_RINKEBY = new ERC20Token(\n  ChainId.RINKEBY,\n  '0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b',\n  6,\n  'tUSDC',\n  'test USD Coin',\n)\n\nexport const USDC_GOERLI = new ERC20Token(\n  ChainId.GOERLI,\n  '0x07865c6E87B9F70255377e024ace6630C1Eaa37F',\n  6,\n  'tUSDC',\n  'test USD Coin',\n)\n\nexport const USDT_BSC = new ERC20Token(\n  ChainId.BSC,\n  '0x55d398326f99059fF775485246999027B3197955',\n  18,\n  'USDT',\n  'Tether USD',\n  'https://tether.to/',\n)\n\nexport const USDT_ETH = new ERC20Token(\n  ChainId.ETHEREUM,\n  '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n  6,\n  'USDT',\n  'Tether USD',\n  'https://tether.to/',\n)\n\nexport const BUSD_BSC = new ERC20Token(\n  ChainId.BSC,\n  '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n  18,\n  'BUSD',\n  'Binance USD',\n  'https://www.paxos.com/busd/',\n)\n\nexport const BUSD_TESTNET = new ERC20Token(\n  ChainId.BSC_TESTNET,\n  '0xaB1a4d4f1D656d2450692D237fdD6C7f9146e814',\n  18,\n  'BUSD',\n  'Binance USD',\n  'https://www.paxos.com/busd/',\n)\n\nexport const BUSD_ETH = new ERC20Token(\n  ChainId.ETHEREUM,\n  '0x4Fabb145d64652a948d72533023f6E7A623C7C53',\n  18,\n  'BUSD',\n  'Binance USD',\n  'https://www.paxos.com/busd/',\n)\n\nexport const BUSD_RINKEBY = new ERC20Token(\n  ChainId.RINKEBY,\n  '0x4e2442A6f7AeCE64Ca33d31756B5390860BF973E',\n  18,\n  'BUSD',\n  'Binance USD',\n  'https://www.paxos.com/busd/',\n)\n\nexport const BUSD_GOERLI = new ERC20Token(\n  ChainId.GOERLI,\n  '0xb809b9B2dc5e93CB863176Ea2D565425B03c0540',\n  18,\n  'BUSD',\n  'Binance USD',\n  'https://www.paxos.com/busd/',\n)\n\nexport const BUSD: Record<ChainId, ERC20Token> = {\n  [ChainId.ETHEREUM]: BUSD_ETH,\n  [ChainId.RINKEBY]: BUSD_RINKEBY,\n  [ChainId.GOERLI]: BUSD_GOERLI,\n  [ChainId.BSC]: BUSD_BSC,\n  [ChainId.BSC_TESTNET]: BUSD_TESTNET,\n}\n\nexport const CAKE = {\n  [ChainId.BSC]: CAKE_MAINNET,\n  [ChainId.BSC_TESTNET]: CAKE_TESTNET,\n}\n\nexport const USDC = {\n  [ChainId.BSC]: USDC_BSC,\n  [ChainId.BSC_TESTNET]: USDC_TESTNET,\n  [ChainId.ETHEREUM]: USDC_ETH,\n  [ChainId.RINKEBY]: USDC_RINKEBY,\n  [ChainId.GOERLI]: USDC_GOERLI,\n}\n\nexport const USDT = {\n  [ChainId.BSC]: USDT_BSC,\n  [ChainId.ETHEREUM]: USDT_ETH,\n}\n\nexport const WBTC_ETH = new ERC20Token(\n  ChainId.ETHEREUM,\n  '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n  8,\n  'WBTC',\n  'Wrapped BTC',\n)\n","import { ChainId } from '@pancakeswap/sdk'\nimport { TokenAddressMap } from '@pancakeswap/token-lists'\n\n/**\n * An empty result, useful as a default.\n */\nexport const EMPTY_LIST: TokenAddressMap<ChainId> = {\n  [ChainId.ETHEREUM]: {},\n  [ChainId.RINKEBY]: {},\n  [ChainId.GOERLI]: {},\n  [ChainId.BSC]: {},\n  [ChainId.BSC_TESTNET]: {},\n}\n\nexport function serializeTokens(unserializedTokens) {\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: unserializedTokens[key].serialize }\n  }, {} as any)\n\n  return serializedTokens\n}\n","import { ChainId, ERC20Token, WETH9 } from '@pancakeswap/sdk'\nimport { USDC_GOERLI } from './common'\n\nexport const goerliTestnetTokens = {\n  weth: WETH9[ChainId.GOERLI],\n  celr: new ERC20Token(ChainId.GOERLI, '0x5D3c0F4cA5EE99f8E8F59Ff9A5fAb04F6a7e007f', 18, 'CELR', 'CelerToken', ''),\n  leet: new ERC20Token(ChainId.GOERLI, '0xBd509651E6374c327d24b9d7E3Ea46704f6F31E8', 18, 'LEET', 'Leet Token', ''),\n  usdc: USDC_GOERLI,\n}\n","import { ChainId, Token, WBNB, ERC20Token } from '@pancakeswap/sdk'\nimport { BUSD_BSC, CAKE_MAINNET, USDT_BSC } from './common'\n\nexport const bscTokens = {\n  wbnb: WBNB[ChainId.BSC],\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new ERC20Token(\n    ChainId.BSC,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'BNB',\n    'BNB',\n    'https://www.binance.com/',\n  ),\n  cake: CAKE_MAINNET,\n  gmi: new ERC20Token(\n    ChainId.BSC,\n    '0x93D8d25E3C9A847a5Da79F79ecaC89461FEcA846',\n    18,\n    'GMI',\n    'Gamifi',\n    'https://gamifi.gg/',\n  ),\n  tlos: new ERC20Token(\n    ChainId.BSC,\n    '0xb6C53431608E626AC81a9776ac3e999c5556717c',\n    18,\n    'TLOS',\n    'Telos',\n    'https://www.telos.net/',\n  ),\n  beta: new ERC20Token(\n    ChainId.BSC,\n    '0xBe1a001FE942f96Eea22bA08783140B9Dcc09D28',\n    18,\n    'BETA',\n    'Beta Finance',\n    'https://betafinance.org',\n  ),\n  nft: new ERC20Token(\n    ChainId.BSC,\n    '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D',\n    6,\n    'NFT',\n    'APENFT',\n    'https://apenft.org',\n  ),\n  stephero: new ERC20Token(\n    ChainId.BSC,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  pros: new ERC20Token(\n    ChainId.BSC,\n    '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405',\n    18,\n    'PROS',\n    'Prosper',\n    'https://prosper.so/',\n  ),\n  qbt: new ERC20Token(\n    ChainId.BSC,\n    '0x17B7163cf1Dbd286E262ddc68b553D899B93f526',\n    18,\n    'QBT',\n    'Qubit Token',\n    'https://qbt.fi/',\n  ),\n  cvp: new ERC20Token(\n    ChainId.BSC,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new ERC20Token(\n    ChainId.BSC,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'ChainId.BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: BUSD_BSC,\n  dai: new ERC20Token(\n    ChainId.BSC,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: USDT_BSC,\n  btcb: new ERC20Token(\n    ChainId.BSC,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'Binance BTC',\n    'https://bitcoin.org/',\n  ),\n  ust: new ERC20Token(\n    ChainId.BSC,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new ERC20Token(\n    ChainId.BSC,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new ERC20Token(\n    ChainId.BSC,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new ERC20Token(\n    ChainId.BSC,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  dkt: new ERC20Token(\n    ChainId.BSC,\n    '0x7Ceb519718A80Dd78a8545AD8e7f401dE4f2faA7',\n    18,\n    'DKT',\n    'Duelist King',\n    'https://duelistking.com/',\n  ),\n  hotcross: new ERC20Token(\n    ChainId.BSC,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new ERC20Token(\n    ChainId.BSC,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new ERC20Token(\n    ChainId.BSC,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new ERC20Token(\n    ChainId.BSC,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new ERC20Token(\n    ChainId.BSC,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new ERC20Token(\n    ChainId.BSC,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new ERC20Token(\n    ChainId.BSC,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new ERC20Token(\n    ChainId.BSC,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new ERC20Token(\n    ChainId.BSC,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new ERC20Token(\n    ChainId.BSC,\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new ERC20Token(\n    ChainId.BSC,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new ERC20Token(\n    ChainId.BSC,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new ERC20Token(\n    ChainId.BSC,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new ERC20Token(\n    ChainId.BSC,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new ERC20Token(\n    ChainId.BSC,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new ERC20Token(\n    ChainId.BSC,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new ERC20Token(\n    ChainId.BSC,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new ERC20Token(\n    ChainId.BSC,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new ERC20Token(\n    ChainId.BSC,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new ERC20Token(\n    ChainId.BSC,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new ERC20Token(\n    ChainId.BSC,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new ERC20Token(\n    ChainId.BSC,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new ERC20Token(\n    ChainId.BSC,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new ERC20Token(\n    ChainId.BSC,\n    '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n    18,\n    'MASK',\n    'Mask Token',\n    'https://mask.io/',\n  ),\n  dvi: new ERC20Token(\n    ChainId.BSC,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new ERC20Token(\n    ChainId.BSC,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new ERC20Token(\n    ChainId.BSC,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new ERC20Token(\n    ChainId.BSC,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new ERC20Token(\n    ChainId.BSC,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new ERC20Token(\n    ChainId.BSC,\n    '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n    18,\n    'TXL',\n    'Tixl Token',\n    'https://tixl.org/',\n  ),\n  orbs: new ERC20Token(\n    ChainId.BSC,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new ERC20Token(\n    ChainId.BSC,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new ERC20Token(\n    ChainId.BSC,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new ERC20Token(\n    ChainId.BSC,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new ERC20Token(\n    ChainId.BSC,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new ERC20Token(\n    ChainId.BSC,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new ERC20Token(\n    ChainId.BSC,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new ERC20Token(\n    ChainId.BSC,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new ERC20Token(\n    ChainId.BSC,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new ERC20Token(\n    ChainId.BSC,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new ERC20Token(\n    ChainId.BSC,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new ERC20Token(\n    ChainId.BSC,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new ERC20Token(\n    ChainId.BSC,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new ERC20Token(\n    ChainId.BSC,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new ERC20Token(\n    ChainId.BSC,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new ERC20Token(\n    ChainId.BSC,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new ERC20Token(\n    ChainId.BSC,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new ERC20Token(\n    ChainId.BSC,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new ERC20Token(\n    ChainId.BSC,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new ERC20Token(\n    ChainId.BSC,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new ERC20Token(\n    ChainId.BSC,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new ERC20Token(\n    ChainId.BSC,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new ERC20Token(\n    ChainId.BSC,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new ERC20Token(\n    ChainId.BSC,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new ERC20Token(\n    ChainId.BSC,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new ERC20Token(\n    ChainId.BSC,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new ERC20Token(\n    ChainId.BSC,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new ERC20Token(\n    ChainId.BSC,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new ERC20Token(\n    ChainId.BSC,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new ERC20Token(\n    ChainId.BSC,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new ERC20Token(\n    ChainId.BSC,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new ERC20Token(\n    ChainId.BSC,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new ERC20Token(\n    ChainId.BSC,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new ERC20Token(\n    ChainId.BSC,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new ERC20Token(\n    ChainId.BSC,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new ERC20Token(\n    ChainId.BSC,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new ERC20Token(\n    ChainId.BSC,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new ERC20Token(\n    ChainId.BSC,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new ERC20Token(\n    ChainId.BSC,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new ERC20Token(\n    ChainId.BSC,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new ERC20Token(\n    ChainId.BSC,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new ERC20Token(\n    ChainId.BSC,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new ERC20Token(\n    ChainId.BSC,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new ERC20Token(\n    ChainId.BSC,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new ERC20Token(\n    ChainId.BSC,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new ERC20Token(\n    ChainId.BSC,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new ERC20Token(\n    ChainId.BSC,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new ERC20Token(\n    ChainId.BSC,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new ERC20Token(\n    ChainId.BSC,\n    '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n    18,\n    'SXP',\n    'Swipe Token',\n    'https://swipe.io/',\n  ),\n  alpha: new ERC20Token(\n    ChainId.BSC,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new ERC20Token(\n    ChainId.BSC,\n    '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n    18,\n    'XVS',\n    'Venus Token',\n    'https://venus.io/',\n  ),\n  sushi: new ERC20Token(\n    ChainId.BSC,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new ERC20Token(\n    ChainId.BSC,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new ERC20Token(\n    ChainId.BSC,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new ERC20Token(\n    ChainId.BSC,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new ERC20Token(\n    ChainId.BSC,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new ERC20Token(\n    ChainId.BSC,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new ERC20Token(\n    ChainId.BSC,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new ERC20Token(\n    ChainId.BSC,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new ERC20Token(\n    ChainId.BSC,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new ERC20Token(\n    ChainId.BSC,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new ERC20Token(\n    ChainId.BSC,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    'Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new ERC20Token(\n    ChainId.BSC,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new ERC20Token(\n    ChainId.BSC,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new ERC20Token(\n    ChainId.BSC,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new ERC20Token(\n    ChainId.BSC,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new ERC20Token(\n    ChainId.BSC,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new ERC20Token(\n    ChainId.BSC,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new ERC20Token(\n    ChainId.BSC,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new ERC20Token(\n    ChainId.BSC,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new ERC20Token(\n    ChainId.BSC,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new ERC20Token(\n    ChainId.BSC,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new ERC20Token(\n    ChainId.BSC,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new ERC20Token(\n    ChainId.BSC,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new ERC20Token(\n    ChainId.BSC,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new ERC20Token(\n    ChainId.BSC,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new ERC20Token(\n    ChainId.BSC,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new ERC20Token(\n    ChainId.BSC,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new ERC20Token(\n    ChainId.BSC,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new ERC20Token(\n    ChainId.BSC,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new ERC20Token(\n    ChainId.BSC,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new ERC20Token(\n    ChainId.BSC,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new ERC20Token(\n    ChainId.BSC,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new ERC20Token(\n    ChainId.BSC,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new ERC20Token(\n    ChainId.BSC,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new ERC20Token(\n    ChainId.BSC,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new ERC20Token(\n    ChainId.BSC,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new ERC20Token(\n    ChainId.BSC,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new ERC20Token(\n    ChainId.BSC,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new ERC20Token(\n    ChainId.BSC,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new ERC20Token(\n    ChainId.BSC,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new ERC20Token(\n    ChainId.BSC,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new ERC20Token(\n    ChainId.BSC,\n    '0xCD40F2670CF58720b694968698A5514e924F742d',\n    18,\n    'ODDZ',\n    'Oddz Token',\n    'https://oddz.fi/',\n  ),\n  hoo: new ERC20Token(\n    ChainId.BSC,\n    '0xE1d1F66215998786110Ba0102ef558b22224C016',\n    8,\n    'HOO',\n    'Hoo Token',\n    'https://hoo.com/',\n  ),\n  apys: new ERC20Token(\n    ChainId.BSC,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new ERC20Token(\n    ChainId.BSC,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new ERC20Token(\n    ChainId.BSC,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new ERC20Token(\n    ChainId.BSC,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new ERC20Token(\n    ChainId.BSC,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new ERC20Token(\n    ChainId.BSC,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new ERC20Token(\n    ChainId.BSC,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new ERC20Token(\n    ChainId.BSC,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new ERC20Token(\n    ChainId.BSC,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new ERC20Token(\n    ChainId.BSC,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.alpaca.city/',\n  ),\n  hzn: new ERC20Token(\n    ChainId.BSC,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new ERC20Token(\n    ChainId.BSC,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new ERC20Token(\n    ChainId.BSC,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new ERC20Token(\n    ChainId.BSC,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new ERC20Token(\n    ChainId.BSC,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new ERC20Token(\n    ChainId.BSC,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new ERC20Token(\n    ChainId.BSC,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  alpaca: new ERC20Token(\n    ChainId.BSC,\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n    18,\n    'ALPACA',\n    'AlpacaToken',\n    'https://www.alpacafinance.org/',\n  ),\n  dfd: new ERC20Token(\n    ChainId.BSC,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new ERC20Token(\n    ChainId.BSC,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  bttold: new ERC20Token(\n    ChainId.BSC,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTTOLD',\n    'Binance-Peg BitTorrent Token (Old)',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new ERC20Token(\n    ChainId.BSC,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new ERC20Token(\n    ChainId.BSC,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new ERC20Token(\n    ChainId.BSC,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new ERC20Token(\n    ChainId.BSC,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new ERC20Token(\n    ChainId.BSC,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new ERC20Token(\n    ChainId.BSC,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new ERC20Token(\n    ChainId.BSC,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new ERC20Token(\n    ChainId.BSC,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new ERC20Token(\n    ChainId.BSC,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new ERC20Token(\n    ChainId.BSC,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new ERC20Token(\n    ChainId.BSC,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new ERC20Token(\n    ChainId.BSC,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new ERC20Token(\n    ChainId.BSC,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new ERC20Token(\n    ChainId.BSC,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new ERC20Token(\n    ChainId.BSC,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new ERC20Token(\n    ChainId.BSC,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new ERC20Token(\n    ChainId.BSC,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new ERC20Token(\n    ChainId.BSC,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new ERC20Token(\n    ChainId.BSC,\n    '0x810EE35443639348aDbbC467b33310d2AB43c168',\n    18,\n    'CYC',\n    'CYC Token',\n    'https://cyclone.xyz/',\n  ),\n  chr: new ERC20Token(\n    ChainId.BSC,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new ERC20Token(\n    ChainId.BSC,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new ERC20Token(\n    ChainId.BSC,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new ERC20Token(\n    ChainId.BSC,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new ERC20Token(\n    ChainId.BSC,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new ERC20Token(\n    ChainId.BSC,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new ERC20Token(\n    ChainId.BSC,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new ERC20Token(\n    ChainId.BSC,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new ERC20Token(\n    ChainId.BSC,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new ERC20Token(\n    ChainId.BSC,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new ERC20Token(\n    ChainId.BSC,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new ERC20Token(\n    ChainId.BSC,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new ERC20Token(\n    ChainId.BSC,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'ChainId.BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new ERC20Token(\n    ChainId.BSC,\n    '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n    18,\n    'MX',\n    'MX Token',\n    'https://www.mxc.com/',\n  ),\n  ata: new ERC20Token(\n    ChainId.BSC,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new ERC20Token(\n    ChainId.BSC,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new ERC20Token(\n    ChainId.BSC,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new ERC20Token(\n    ChainId.BSC,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new ERC20Token(\n    ChainId.BSC,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new ERC20Token(\n    ChainId.BSC,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new ERC20Token(\n    ChainId.BSC,\n    '0xaA9E582e5751d703F85912903bacADdFed26484C',\n    8,\n    'HAI',\n    'Hacken Token',\n    'https://hacken.io/',\n  ),\n  htb: new ERC20Token(\n    ChainId.BSC,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new ERC20Token(\n    ChainId.BSC,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new ERC20Token(\n    ChainId.BSC,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  axs: new ERC20Token(\n    ChainId.BSC,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new ERC20Token(\n    ChainId.BSC,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new ERC20Token(\n    ChainId.BSC,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new ERC20Token(\n    ChainId.BSC,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new ERC20Token(\n    ChainId.BSC,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new ERC20Token(\n    ChainId.BSC,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new ERC20Token(\n    ChainId.BSC,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new ERC20Token(\n    ChainId.BSC,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n  cart: new ERC20Token(\n    ChainId.BSC,\n    '0x5C8C8D560048F34E5f7f8ad71f2f81a89DBd273e',\n    18,\n    'CART',\n    'CryptoArt.ai',\n    'https://cryptoart.ai/',\n  ),\n  light: new ERC20Token(\n    ChainId.BSC,\n    '0x037838b556d9c9d654148a284682C55bB5f56eF4',\n    18,\n    'LIGHT',\n    'Lightning',\n    'https://lightningprotocol.finance/',\n  ),\n  rpg: new ERC20Token(\n    ChainId.BSC,\n    '0xc2098a8938119A52B1F7661893c0153A6CB116d5',\n    18,\n    'RPG',\n    'Rangers Protocol',\n    'https://www.rangersprotocol.com/',\n  ),\n  mcb: new ERC20Token(\n    ChainId.BSC,\n    '0x5fE80d2CD054645b9419657d3d10d26391780A7B',\n    18,\n    'MCB',\n    'MCDEX',\n    'https://mcdex.io/homepage/',\n  ),\n  lazio: new ERC20Token(\n    ChainId.BSC,\n    '0x77d547256A2cD95F32F67aE0313E450Ac200648d',\n    8,\n    'LAZIO',\n    'FC Lazio Fan Token',\n    'https://launchpad.binance.com/en/subscription/LAZIO_BNB',\n  ),\n  arv: new ERC20Token(\n    ChainId.BSC,\n    '0x6679eB24F59dFe111864AEc72B443d1Da666B360',\n    8,\n    'ARV',\n    'ARIVA',\n    'https://ariva.digital',\n  ),\n  moni: new ERC20Token(\n    ChainId.BSC,\n    '0x9573c88aE3e37508f87649f87c4dd5373C9F31e0',\n    18,\n    'MONI',\n    'Monsta Infinite',\n    'https://monstainfinite.com/',\n  ),\n  xms: new ERC20Token(\n    ChainId.BSC,\n    '0x7859B01BbF675d67Da8cD128a50D155cd881B576',\n    18,\n    'XMS',\n    'Mars Ecosystem',\n    'https://marsecosystem.com/',\n  ),\n  zoo: new ERC20Token(\n    ChainId.BSC,\n    '0x1D229B958D5DDFca92146585a8711aECbE56F095',\n    18,\n    'ZOO',\n    'ZOO Crypto World',\n    'https://zoogame.finance/',\n  ),\n  fina: new ERC20Token(\n    ChainId.BSC,\n    '0x426c72701833fdDBdFc06c944737C6031645c708',\n    18,\n    'FINA',\n    'Defina Finance',\n    'https://defina.finance/',\n  ),\n  dar: new ERC20Token(\n    ChainId.BSC,\n    '0x23CE9e926048273eF83be0A3A8Ba9Cb6D45cd978',\n    6,\n    'DAR',\n    'Mines of Dalarnia',\n    'https://www.minesofdalarnia.com/',\n  ),\n  xwg: new ERC20Token(\n    ChainId.BSC,\n    '0x6b23C89196DeB721e6Fd9726E6C76E4810a464bc',\n    18,\n    'XWG',\n    'X World Games',\n    'https://xwg.games/',\n  ),\n  eternal: new ERC20Token(\n    ChainId.BSC,\n    '0xD44FD09d74cd13838F137B590497595d6b3FEeA4',\n    18,\n    'ETERNAL',\n    'CryptoMines Eternal',\n    'https://cryptomines.app/',\n  ),\n  porto: new ERC20Token(\n    ChainId.BSC,\n    '0x49f2145d6366099e13B10FbF80646C0F377eE7f6',\n    8,\n    'PORTO',\n    'FC Porto Fan Token',\n    'https://launchpad.binance.com/en/subscription/PORTO_BNB',\n  ),\n  kart: new ERC20Token(\n    ChainId.BSC,\n    '0x8BDd8DBcBDf0C066cA5f3286d33673aA7A553C10',\n    18,\n    'KART',\n    'Dragon Kart',\n    'https://dragonkart.com/',\n  ),\n  qi: new ERC20Token(ChainId.BSC, '0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5', 18, 'QI', 'BENQI', 'https://benqi.fi/'),\n  sheesha: new ERC20Token(\n    ChainId.BSC,\n    '0x232FB065D9d24c34708eeDbF03724f2e95ABE768',\n    18,\n    'SHEESHA',\n    'Sheesha Finance',\n    'https://www.sheeshafinance.io/',\n  ),\n  bcoin: new ERC20Token(\n    ChainId.BSC,\n    '0x00e1656e45f18ec6747F5a8496Fd39B50b38396D',\n    18,\n    'BCOIN',\n    'Bomb Crypto',\n    'https://bombcrypto.io/',\n  ),\n  quidd: new ERC20Token(\n    ChainId.BSC,\n    '0x7961Ade0a767c0E5B67Dd1a1F78ba44F727642Ed',\n    18,\n    'QUIDD',\n    'Quidd Token',\n    'https://www.quiddtoken.com/',\n  ),\n  santos: new ERC20Token(\n    ChainId.BSC,\n    '0xA64455a4553C9034236734FadDAddbb64aCE4Cc7',\n    8,\n    'SANTOS',\n    'FC Santos Fan Token',\n    'https://launchpad.binance.com/en/launchpool/SANTOS_BNB',\n  ),\n  nabox: new ERC20Token(\n    ChainId.BSC,\n    '0x755f34709E369D37C6Fa52808aE84A32007d1155',\n    18,\n    'NABOX',\n    'Nabox Token',\n    'https://nabox.io/',\n  ),\n  xcv: new ERC20Token(\n    ChainId.BSC,\n    '0x4be63a9b26EE89b9a3a13fd0aA1D0b2427C135f8',\n    18,\n    'XCV',\n    'XCarnival',\n    'https://xcarnival.fi/',\n  ),\n  idia: new ERC20Token(\n    ChainId.BSC,\n    '0x0b15Ddf19D47E6a86A56148fb4aFFFc6929BcB89',\n    18,\n    'IDIA',\n    'Impossible Decentralized Incubator Access Token',\n    'https://impossible.finance/',\n  ),\n  tt: new ERC20Token(\n    ChainId.BSC,\n    '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85',\n    18,\n    'TT',\n    'ThunderCore',\n    'https://www.thundercore.com/',\n  ),\n  gmee: new ERC20Token(\n    ChainId.BSC,\n    '0x84e9a6F9D240FdD33801f7135908BfA16866939A',\n    18,\n    'GMEE',\n    'GAMEE',\n    'https://www.gamee.com/token',\n  ),\n  htd: new ERC20Token(\n    ChainId.BSC,\n    '0x5E2689412Fae5c29BD575fbe1d5C1CD1e0622A8f',\n    18,\n    'HTD',\n    'HeroesTD',\n    'https://heroestd.io/',\n  ),\n  dpt: new ERC20Token(\n    ChainId.BSC,\n    '0xE69cAef10A488D7AF31Da46c89154d025546e990',\n    18,\n    'DPT',\n    'Diviner Protocol',\n    'https://diviner.finance/',\n  ),\n  thg: new ERC20Token(\n    ChainId.BSC,\n    '0x9fD87aEfe02441B123c3c32466cD9dB4c578618f',\n    18,\n    'THG',\n    'Thetan Gem',\n    'https://thetanarena.com/',\n  ),\n  ccar: new ERC20Token(\n    ChainId.BSC,\n    '0x50332bdca94673F33401776365b66CC4e81aC81d',\n    18,\n    'CCAR',\n    'CryptoCars',\n    'https://cryptocars.me/',\n  ),\n  high: new ERC20Token(\n    ChainId.BSC,\n    '0x5f4Bde007Dc06b867f86EBFE4802e34A1fFEEd63',\n    18,\n    'HIGH',\n    'Highstreet Token',\n    'https://highstreet.market/',\n  ),\n  sdao: new ERC20Token(\n    ChainId.BSC,\n    '0x90Ed8F1dc86388f14b64ba8fb4bbd23099f18240',\n    18,\n    'SDAO',\n    'Singularity Dao',\n    'https://app.singularitydao.ai/',\n  ),\n  antex: new ERC20Token(\n    ChainId.BSC,\n    '0xCA1aCAB14e85F30996aC83c64fF93Ded7586977C',\n    8,\n    'ANTEX',\n    'Antex',\n    'https://antex.org/',\n  ),\n  bbt: new ERC20Token(\n    ChainId.BSC,\n    '0xD48474E7444727bF500a32D5AbE01943f3A59A64',\n    8,\n    'BBT',\n    'BitBook',\n    'https://www.bitbook.network/',\n  ),\n  woop: new ERC20Token(\n    ChainId.BSC,\n    '0x8b303d5BbfBbf46F1a4d9741E491e06986894e18',\n    18,\n    'WOOP',\n    'Woonkly Power',\n    'https://www.woonkly.com/',\n  ),\n  gm: new ERC20Token(\n    ChainId.BSC,\n    '0xe2604C9561D490624AA35e156e65e590eB749519',\n    18,\n    'GM',\n    'GoldMiner',\n    'https://goldminer.games/',\n  ),\n  aog: new ERC20Token(\n    ChainId.BSC,\n    '0x40C8225329Bd3e28A043B029E0D07a5344d2C27C',\n    18,\n    'AOG',\n    'AgeOfGods',\n    'https://ageofgods.net/',\n  ),\n  '8pay': new ERC20Token(\n    ChainId.BSC,\n    '0xFeea0bDd3D07eb6FE305938878C0caDBFa169042',\n    18,\n    '8PAY',\n    '8PAY Network',\n    'https://8pay.network/',\n  ),\n  bath: new ERC20Token(\n    ChainId.BSC,\n    '0x0bc89aa98Ad94E6798Ec822d0814d934cCD0c0cE',\n    18,\n    'BATH',\n    'Battle Hero',\n    'https://battlehero.io/',\n  ),\n  insur: new ERC20Token(\n    ChainId.BSC,\n    '0x3192CCDdf1CDcE4Ff055EbC80f3F0231b86A7E30',\n    18,\n    'INSUR',\n    'Bsc-Peg INSUR Token',\n    'https://www.insurace.io/',\n  ),\n  froyo: new ERC20Token(\n    ChainId.BSC,\n    '0xe369fec23380f9F14ffD07a1DC4b7c1a9fdD81c9',\n    18,\n    'FROYO',\n    'Froyo Games',\n    'https://froyo.games/',\n  ),\n  apx: new ERC20Token(\n    ChainId.BSC,\n    '0x78F5d389F5CDCcFc41594aBaB4B0Ed02F31398b3',\n    18,\n    'APX',\n    'ApolloX Token',\n    'https://www.apollox.finance/',\n  ),\n  prl: new ERC20Token(\n    ChainId.BSC,\n    '0xd07e82440A395f3F3551b42dA9210CD1Ef4f8B24',\n    18,\n    'PRL',\n    'Parallel Token',\n    'https://theparallel.io',\n  ),\n  fuse: new ERC20Token(\n    ChainId.BSC,\n    '0x5857c96DaE9cF8511B08Cb07f85753C472D36Ea3',\n    18,\n    'FUSE',\n    'Fuse Token',\n    'https://fuse.io/',\n  ),\n  ertha: new ERC20Token(\n    ChainId.BSC,\n    '0x62823659d09F9F9D2222058878f89437425eB261',\n    18,\n    'ERTHA',\n    'Ertha Token',\n    'https://ertha.io/',\n  ),\n  raca: new ERC20Token(\n    ChainId.BSC,\n    '0x12BB890508c125661E03b09EC06E404bc9289040',\n    18,\n    'RACA',\n    'Radio Caca V2',\n    'https://www.radiocaca.com/#/home',\n  ),\n  gear: new ERC20Token(\n    ChainId.BSC,\n    '0xb4404DaB7C0eC48b428Cf37DeC7fb628bcC41B36',\n    18,\n    'GEAR',\n    'MetaGear Token',\n    'https://metagear.game/',\n  ),\n  ach: new ERC20Token(\n    ChainId.BSC,\n    '0xBc7d6B50616989655AfD682fb42743507003056D',\n    8,\n    'ACH',\n    'Alchemy Token',\n    'https://alchemytech.io/',\n  ),\n  btt: new ERC20Token(\n    ChainId.BSC,\n    '0x352Cb5E19b12FC216548a2677bD0fce83BaE434B',\n    18,\n    'BTT',\n    'BitTorrent',\n    'https://bittorrent.com/',\n  ),\n  era: new ERC20Token(\n    ChainId.BSC,\n    '0x6f9F0c4ad9Af7EbD61Ac5A1D4e0F2227F7B0E5f9',\n    18,\n    'ERA',\n    'Era Token',\n    'https://www.era7.io/',\n  ),\n  fight: new ERC20Token(\n    ChainId.BSC,\n    '0x4f39c3319188A723003670c3F9B9e7EF991E52F3',\n    18,\n    'FIGHT',\n    'Fight Token',\n    'https://www.cryptofightclub.io/',\n  ),\n  loa: new ERC20Token(\n    ChainId.BSC,\n    '0x94b69263FCA20119Ae817b6f783Fc0F13B02ad50',\n    18,\n    'LOA',\n    'League Of Ancients',\n    'https://www.leagueofancients.com/',\n  ),\n  duet: new ERC20Token(\n    ChainId.BSC,\n    '0x95EE03e1e2C5c4877f9A298F1C0D6c98698FAB7B',\n    18,\n    'DUET',\n    'Duet Governance Token',\n    'https://duet.finance',\n  ),\n  gmt: new ERC20Token(\n    ChainId.BSC,\n    '0x3019BF2a2eF8040C242C9a4c5c4BD4C81678b2A1',\n    8,\n    'GMT',\n    'Green Metaverse Token',\n    'https://www.stepn.com/',\n  ),\n  bsw: new ERC20Token(\n    ChainId.BSC,\n    '0x965F527D9159dCe6288a2219DB51fc6Eef120dD1',\n    18,\n    'BSW',\n    'Biswap',\n    'https://biswap.org/',\n  ),\n  tem: new ERC20Token(\n    ChainId.BSC,\n    '0x19e6BfC1A6e4B042Fb20531244D47E252445df01',\n    9,\n    'TEM',\n    'TemplarDAO',\n    'https://templar.finance/',\n  ),\n  pex: new ERC20Token(\n    ChainId.BSC,\n    '0x6a0b66710567b6beb81A71F7e9466450a91a384b',\n    18,\n    'PEX',\n    'PearDAO',\n    'https://peardao.io/',\n  ),\n  yel: new ERC20Token(\n    ChainId.BSC,\n    '0xD3b71117E6C1558c1553305b44988cd944e97300',\n    18,\n    'YEL',\n    'YEL',\n    'https://yel.finance/',\n  ),\n  tinc: new ERC20Token(\n    ChainId.BSC,\n    '0x05aD6E30A855BE07AfA57e08a4f30d00810a402e',\n    18,\n    'TINC',\n    'Tiny Coin',\n    'https://tinyworlds.io/',\n  ),\n  happy: new ERC20Token(\n    ChainId.BSC,\n    '0xF5d8A096CcCb31b9D7bcE5afE812BE23e3D4690d',\n    18,\n    'Happy',\n    'HappyFans',\n    'https://happyfans.club/',\n  ),\n  wzrd: new ERC20Token(\n    ChainId.BSC,\n    '0xFa40d8FC324bcdD6Bbae0e086De886c571C225d4',\n    18,\n    'WZRD',\n    'Wizardia Token',\n    'https://wizardia.io/',\n  ),\n  ceek: new ERC20Token(\n    ChainId.BSC,\n    '0xe0F94Ac5462997D2BC57287Ac3a3aE4C31345D66',\n    18,\n    'CEEK',\n    'CEEK',\n    'https://www.ceek.com/',\n  ),\n  abnbc: new ERC20Token(\n    ChainId.BSC,\n    '0xE85aFCcDaFBE7F2B096f268e31ccE3da8dA2990A',\n    18,\n    'aBNBc',\n    'Ankr BNB Reward Bearing Certificate',\n    'https://www.ankr.com/',\n  ),\n  ankr: new ERC20Token(\n    ChainId.BSC,\n    '0xf307910A4c7bbc79691fD374889b36d8531B08e3',\n    18,\n    'ANKR',\n    'Ankr',\n    'https://www.ankr.com/',\n  ),\n  gal: new ERC20Token(\n    ChainId.BSC,\n    '0xe4Cc45Bb5DBDA06dB6183E8bf016569f40497Aa5',\n    18,\n    'GAL',\n    'Galxe',\n    'https://galaxy.eco/',\n  ),\n  xcn: new ERC20Token(\n    ChainId.BSC,\n    '0x7324c7C0d95CEBC73eEa7E85CbAac0dBdf88a05b',\n    18,\n    'XCN',\n    'Chain',\n    'https://chain.com/',\n  ),\n  metis: new ERC20Token(\n    ChainId.BSC,\n    '0xe552Fb52a4F19e44ef5A967632DBc320B0820639',\n    18,\n    'Metis',\n    'Metis Token',\n    'https://www.metis.io/',\n  ),\n  MIX: new ERC20Token(\n    ChainId.BSC,\n    '0x398f7827DcCbeFe6990478876bBF3612D93baF05',\n    18,\n    'MIX',\n    'MixMarvel Token',\n    'https://www.mixmarvel.com/',\n  ),\n  peak: new ERC20Token(\n    ChainId.BSC,\n    '0x630d98424eFe0Ea27fB1b3Ab7741907DFFEaAd78',\n    8,\n    'PEAK',\n    'PEAKDEFI',\n    'https://peakdefi.com/',\n  ),\n  nbt: new ERC20Token(\n    ChainId.BSC,\n    '0x1D3437E570e93581Bd94b2fd8Fbf202d4a65654A',\n    18,\n    'NBT',\n    'NanoByte Token',\n    'https://www.nanobyte.finance/',\n  ),\n  trivia: new ERC20Token(\n    ChainId.BSC,\n    '0xb465f3cb6Aba6eE375E12918387DE1eaC2301B05',\n    3,\n    'TRIVIA',\n    'Trivian Token',\n    'https://trivians.io/',\n  ),\n  mhunt: new ERC20Token(\n    ChainId.BSC,\n    '0x2C717059b366714d267039aF8F59125CAdce6D8c',\n    18,\n    'MHUNT',\n    'MetaShooter',\n    'https://metashooter.gg/',\n  ),\n  ole: new ERC20Token(\n    ChainId.BSC,\n    '0xa865197A84E780957422237B5D152772654341F3',\n    18,\n    'OLE',\n    'OpenLeverage',\n    'https://openleverage.finance/',\n  ),\n  xcad: new ERC20Token(\n    ChainId.BSC,\n    '0x431e0cD023a32532BF3969CddFc002c00E98429d',\n    18,\n    'XCAD',\n    'Chainport.io-Peg XCAD Token',\n    'https://xcadnetwork.com/',\n  ),\n  shell: new ERC20Token(\n    ChainId.BSC,\n    '0x208cfEc94d2BA8B8537da7A9BB361c6baAD77272',\n    18,\n    'SHELL',\n    'Meta Apes Shell',\n    'https://metaapesgame.com/',\n  ),\n  peel: new ERC20Token(\n    ChainId.BSC,\n    '0x734548a9e43d2D564600b1B2ed5bE9C2b911c6aB',\n    18,\n    'PEEL',\n    'Meta Apes Peel',\n    'https://metaapesgame.com/',\n  ),\n  stkbnb: new ERC20Token(\n    ChainId.BSC,\n    '0xc2E9d07F66A89c44062459A47a0D2Dc038E4fb16',\n    18,\n    'stkBNB',\n    'Staked BNB',\n    'https://pstake.finance/bnb',\n  ),\n  pstake: new ERC20Token(\n    ChainId.BSC,\n    '0x4C882ec256823eE773B25b414d36F92ef58a7c0C',\n    18,\n    'PSTAKE',\n    'pStake Finance',\n    'https://pstake.finance/',\n  ),\n  wom: new ERC20Token(\n    ChainId.BSC,\n    '0xAD6742A35fB341A9Cc6ad674738Dd8da98b94Fb1',\n    18,\n    'WOM',\n    'Wombat Token',\n    'https://www.wombat.exchange/',\n  ),\n  hay: new ERC20Token(\n    ChainId.BSC,\n    '0x0782b6d8c4551B9760e74c0545a9bCD90bdc41E5',\n    18,\n    'HAY',\n    'Hay Destablecoin',\n    'https://helio.money/',\n  ),\n  spin: new ERC20Token(\n    ChainId.BSC,\n    '0x6AA217312960A21aDbde1478DC8cBCf828110A67',\n    18,\n    'SPIN',\n    'Spintop',\n    'https://spintop.network/',\n  ),\n  snfts: new ERC20Token(\n    ChainId.BSC,\n    '0x6f51A1674BEFDD77f7ab1246b83AdB9f13613762',\n    18,\n    'SNFTS',\n    'Seedify NFT Space',\n    'https://snfts.seedify.fund/',\n  ),\n  gq: new ERC20Token(\n    ChainId.BSC,\n    '0xF700D4c708C2be1463E355F337603183D20E0808',\n    18,\n    'GQ',\n    'Galactic Quadrant',\n    'https://outerringmmo.com/',\n  ),\n  hoop: new Token(\n    ChainId.BSC,\n    '0xF19cfb40B3774dF6Eed83169Ad5aB0Aaf6865F25',\n    18,\n    'HOOP',\n    'Chibi Dinos',\n    'https://www.chibidinos.io/',\n  ),\n  co: new Token(ChainId.BSC, '0x936B6659Ad0C1b244Ba8Efe639092acae30dc8d6', 6, 'CO', 'CO', 'https://corite.com/'),\n  krs: new Token(\n    ChainId.BSC,\n    '0x37b53894e7429f794B56F22a32E1695567Ee9913',\n    18,\n    'KRS',\n    'Kingdom Raids',\n    'https://kingdomraids.io/',\n  ),\n  wmx: new Token(\n    ChainId.BSC,\n    '0xa75d9ca2a0a1D547409D82e1B06618EC284A2CeD',\n    18,\n    'WMX',\n    'Wombex Token',\n    'https://wombex.finance/',\n  ),\n  mgp: new Token(\n    ChainId.BSC,\n    '0xD06716E1Ff2E492Cc5034c2E81805562dd3b45fa',\n    18,\n    'MGP',\n    'Magpie Token',\n    'https://www.magpiexyz.io/',\n  ),\n}\n","import { ChainId, ERC20Token, WBNB } from '@pancakeswap/sdk'\nimport { BUSD_TESTNET, CAKE_TESTNET } from './common'\n\nexport const bscTestnetTokens = {\n  wbnb: WBNB[ChainId.BSC_TESTNET],\n  cake: CAKE_TESTNET,\n  busd: BUSD_TESTNET,\n  syrup: new ERC20Token(\n    ChainId.BSC_TESTNET,\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new ERC20Token(\n    ChainId.BSC_TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  hbtc: new ERC20Token(ChainId.BSC_TESTNET, '0x3Fb6a6C06c7486BD194BB99a078B89B9ECaF4c82', 18, 'HBTC', 'Huobi BTC'),\n  wbtc: new ERC20Token(ChainId.BSC_TESTNET, '0xfC8bFbe9644e1BC836b8821660593e7de711e564', 8, 'WBTC', 'Wrapped BTC'),\n  usdc: new ERC20Token(\n    ChainId.BSC_TESTNET,\n    '0x2fB98DCc527c1403F92c6Bed05a50725d3005636',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n  ),\n}\n","import { ChainId, WETH9 } from '@pancakeswap/sdk'\nimport { USDC, USDT, WBTC_ETH } from '@pancakeswap/tokens'\n\nexport const ethereumTokens = {\n  weth: WETH9[ChainId.ETHEREUM],\n  usdt: USDT[ChainId.ETHEREUM],\n  usdc: USDC[ChainId.ETHEREUM],\n  wbtc: WBTC_ETH,\n}\n","export * from './common'\nexport * from './helpers'\nexport * from './5'\nexport * from './56'\nexport * from './97'\nexport * from './1'\n","import { scales, variants } from \"./types\";\n\nexport const scaleVariants = {\n  [scales.MD]: {\n    height: \"48px\",\n    padding: \"0 24px\",\n  },\n  [scales.SM]: {\n    height: \"32px\",\n    padding: \"0 16px\",\n  },\n  [scales.XS]: {\n    height: \"20px\",\n    fontSize: \"12px\",\n    padding: \"0 8px\",\n  },\n};\n\nexport const styleVariants = {\n  [variants.PRIMARY]: {\n    backgroundColor: \"primary\",\n    color: \"white\",\n  },\n  [variants.SECONDARY]: {\n    backgroundColor: \"transparent\",\n    border: \"2px solid\",\n    borderColor: \"primary\",\n    boxShadow: \"none\",\n    color: \"primary\",\n    \":disabled\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  [variants.TERTIARY]: {\n    backgroundColor: \"tertiary\",\n    boxShadow: \"none\",\n    color: \"primary\",\n  },\n  [variants.SUBTLE]: {\n    backgroundColor: \"textSubtle\",\n    color: \"backgroundAlt\",\n  },\n  [variants.DANGER]: {\n    backgroundColor: \"failure\",\n    color: \"white\",\n  },\n  [variants.SUCCESS]: {\n    backgroundColor: \"success\",\n    color: \"white\",\n  },\n  [variants.TEXT]: {\n    backgroundColor: \"transparent\",\n    color: \"primary\",\n    boxShadow: \"none\",\n  },\n  [variants.LIGHT]: {\n    backgroundColor: \"input\",\n    color: \"textSubtle\",\n    boxShadow: \"none\",\n  },\n};\n","import styled, { DefaultTheme, css } from \"styled-components\";\nimport { space, layout, variant } from \"styled-system\";\nimport { scaleVariants, styleVariants } from \"./theme\";\nimport { BaseButtonProps } from \"./types\";\n\ninterface ThemedButtonProps extends BaseButtonProps {\n  theme: DefaultTheme;\n}\n\ninterface TransientButtonProps extends ThemedButtonProps {\n  $isLoading?: boolean;\n}\n\nconst getDisabledStyles = ({ $isLoading, theme }: TransientButtonProps) => {\n  if ($isLoading === true) {\n    return `\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n\n  return `\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ${theme.colors.backgroundDisabled};\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `;\n};\n\n/**\n * This is to get around an issue where if you use a Link component\n * React will throw a invalid DOM attribute error\n * @see https://github.com/styled-components/styled-components/issues/135\n */\n\nconst getOpacity = ({ $isLoading = false }: TransientButtonProps) => {\n  return $isLoading ? \".5\" : \"1\";\n};\n\nconst StyledButton = styled.button<BaseButtonProps>`\n  position: relative;\n  align-items: center;\n  border: 0;\n  border-radius: 16px;\n  box-shadow: 0px -1px 0px 0px rgba(14, 14, 44, 0.4) inset;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  line-height: 1;\n  opacity: ${getOpacity};\n  outline: 0;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\n    opacity: 0.65;\n  }\n\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n\n  ${getDisabledStyles}\n  ${variant({\n    prop: \"scale\",\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n  ${layout}\n  ${space}\n  ${({ decorator, theme }) =>\n    decorator &&\n    css`\n      &::before {\n        content: \"${decorator.text}\";\n        position: absolute;\n        border-bottom: 20px solid ${decorator.backgroundColor ?? theme.colors.secondary};\n        border-left: 34px solid transparent;\n        border-right: 12px solid transparent;\n        height: 0;\n        top: -1px;\n        right: -12px;\n        width: 75px;\n        text-align: center;\n        padding-right: 30px;\n        line-height: 20px;\n        font-size: 12px;\n        font-weight: 400;\n        transform: rotate(31.17deg);\n        color: ${decorator.color ?? \"white\"};\n      }\n    `}\n`;\n\nexport default StyledButton;\n","import React, { cloneElement, ElementType, isValidElement } from \"react\";\nimport EXTERNAL_LINK_PROPS from \"../../util/externalLinkProps\";\nimport StyledButton from \"./StyledButton\";\nimport { ButtonProps, scales, variants } from \"./types\";\n\nconst Button = <E extends ElementType = \"button\">(props: ButtonProps<E>): JSX.Element => {\n  const { startIcon, endIcon, external, className, isLoading, disabled, children, ...rest } = props;\n  const internalProps = external ? EXTERNAL_LINK_PROPS : {};\n  const isDisabled = isLoading || disabled;\n  const classNames = className ? [className] : [];\n\n  if (isLoading) {\n    classNames.push(\"pancake-button--loading\");\n  }\n\n  if (isDisabled && !isLoading) {\n    classNames.push(\"pancake-button--disabled\");\n  }\n\n  return (\n    <StyledButton\n      $isLoading={isLoading}\n      className={classNames.join(\" \")}\n      disabled={isDisabled}\n      {...internalProps}\n      {...rest}\n    >\n      <>\n        {isValidElement(startIcon) &&\n          cloneElement(startIcon, {\n            // @ts-ignore\n            mr: \"0.5rem\",\n          })}\n        {children}\n        {isValidElement(endIcon) &&\n          cloneElement(endIcon, {\n            // @ts-ignore\n            ml: \"0.5rem\",\n          })}\n      </>\n    </StyledButton>\n  );\n};\n\nButton.defaultProps = {\n  isLoading: false,\n  external: false,\n  variant: variants.PRIMARY,\n  scale: scales.MD,\n  disabled: false,\n};\n\nexport default Button;\n","import { ElementType, ReactNode } from \"react\";\nimport { LayoutProps, SpaceProps } from \"styled-system\";\nimport type { PolymorphicComponentProps } from \"../../util/polymorphic\";\n\nexport const scales = {\n  MD: \"md\",\n  SM: \"sm\",\n  XS: \"xs\",\n} as const;\n\nexport const variants = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  TERTIARY: \"tertiary\",\n  TEXT: \"text\",\n  DANGER: \"danger\",\n  SUBTLE: \"subtle\",\n  SUCCESS: \"success\",\n  LIGHT: \"light\",\n} as const;\n\nexport type Scale = typeof scales[keyof typeof scales];\nexport type Variant = typeof variants[keyof typeof variants];\n\nexport interface BaseButtonProps extends LayoutProps, SpaceProps {\n  as?: \"a\" | \"button\" | ElementType;\n  external?: boolean;\n  isLoading?: boolean;\n  scale?: Scale;\n  variant?: Variant;\n  disabled?: boolean;\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  decorator?: {\n    backgroundColor?: string;\n    color?: string;\n    text: string;\n    direction?: \"left\" | \"right\";\n  };\n}\n\nexport type ButtonProps<P extends ElementType = \"button\"> = PolymorphicComponentProps<P, BaseButtonProps>;\n","const EXTERNAL_LINK_PROPS: { target: string; rel: string } = {\n  target: \"_blank\",\n  rel: \"noreferrer noopener\",\n};\n\nexport default EXTERNAL_LINK_PROPS;\n","import BigNumber from 'bignumber.js'\nimport { BigNumber as EthersBigNumber } from '@ethersproject/bignumber'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_TWO = new BigNumber(2)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: EthersBigNumber): string => ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: EthersBigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { BigNumber as EthersBigNumber, FixedNumber } from '@ethersproject/bignumber'\nimport { formatUnits } from '@ethersproject/units'\nimport { getLanguageCodeFromLS } from '@pancakeswap/localization'\nimport { getFullDecimalMultiplier } from '@pancakeswap/utils/getFullDecimalMultiplier'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(getFullDecimalMultiplier(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(getFullDecimalMultiplier(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number): string => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals as number)\n}\n\n/**\n * Don't use the result to convert back to number.\n * It uses undefined locale which uses host language as a result.\n * Languages have different decimal separators which results in inconsistency when converting back this result to number.\n */\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an EthersBigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: EthersBigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(EthersBigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an EthersBigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: EthersBigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(EthersBigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n\n  const isClient = typeof window === 'object'\n  const isSupported = window?.Intl\n\n  // For clients do not support Intl, just return number\n  if (isClient && !isSupported) {\n    return `${number}`\n  }\n\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n\nexport const formatLpBalance = (balance: BigNumber) => {\n  const stakedBalanceBigNumber = getBalanceAmount(balance)\n  if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.00001)) {\n    return '< 0.00001'\n  }\n  return stakedBalanceBigNumber.toFixed(5, BigNumber.ROUND_DOWN)\n}\n","import BigNumber from 'bignumber.js'\nimport memoize from 'lodash/memoize'\nimport { BIG_TEN } from './bigNumber'\n\nexport const getFullDecimalMultiplier = memoize((decimals: number): BigNumber => {\n  return BIG_TEN.pow(decimals)\n})\n","var map = {\n\t\"./1.ts\": [\n\t\t68861,\n\t\t8861\n\t],\n\t\"./5.ts\": [\n\t\t3272,\n\t\t3272\n\t],\n\t\"./56.ts\": [\n\t\t36134,\n\t\t6134\n\t],\n\t\"./97.ts\": [\n\t\t66205,\n\t\t6205\n\t],\n\t\"./common.ts\": [\n\t\t9886,\n\t\t9886\n\t],\n\t\"./index.ts\": [\n\t\t65498\n\t],\n\t\"./priceHelperLps/1.ts\": [\n\t\t98515\n\t],\n\t\"./priceHelperLps/5.ts\": [\n\t\t51973\n\t],\n\t\"./priceHelperLps/56.ts\": [\n\t\t81347\n\t],\n\t\"./priceHelperLps/97.ts\": [\n\t\t25373\n\t],\n\t\"./priceHelperLps/getFarmsPriceHelperLpFiles.ts\": [\n\t\t17970\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 60092;\nmodule.exports = webpackAsyncContext;","// chains/chains.ts\nimport { rinkeby, mainnet, goerli } from \"wagmi/chains\";\nvar avalandche = {\n  id: 43114,\n  name: \"Avalanche C-Chain\",\n  network: \"avalanche\",\n  rpcUrls: {\n    default: \"https://rpc.ankr.com/avalanche\"\n  },\n  nativeCurrency: { name: \"Avalanche\", symbol: \"AVAX\", decimals: 18 },\n  blockExplorers: {\n    default: {\n      name: \"snowtrace\",\n      url: \"https://snowtrace.io/\"\n    }\n  }\n};\nvar avalandcheFuji = {\n  id: 43113,\n  name: \"Avalanche Fuji\",\n  network: \"avalanche-fuji\",\n  rpcUrls: {\n    default: \"https://rpc.ankr.com/avalanche_fuji\"\n  },\n  nativeCurrency: { name: \"Avalanche\", symbol: \"AVAX\", decimals: 18 },\n  blockExplorers: {\n    default: {\n      name: \"snowtrace\",\n      url: \"https://testnet.snowtrace.io/\"\n    }\n  },\n  testnet: true\n};\nvar fantomOpera = {\n  id: 250,\n  name: \"Fantom Opera\",\n  network: \"fantom\",\n  nativeCurrency: { name: \"Fantom\", symbol: \"FTM\", decimals: 18 },\n  rpcUrls: {\n    default: \"https://rpc.ftm.tools\"\n  },\n  blockExplorers: {\n    default: {\n      name: \"FTMScan\",\n      url: \"https://ftmscan.com\"\n    }\n  }\n};\nvar fantomTestnet = {\n  id: 4002,\n  name: \"Fantom Testnet\",\n  network: \"fantom-testnet\",\n  nativeCurrency: { name: \"Fantom\", symbol: \"FTM\", decimals: 18 },\n  rpcUrls: {\n    default: \"https://rpc.testnet.fantom.network\"\n  },\n  blockExplorers: {\n    default: {\n      name: \"FTMScan\",\n      url: \"https://testnet.ftmscan.com\"\n    }\n  },\n  testnet: true\n};\nvar bscExplorer = { name: \"BscScan\", url: \"https://bscscan.com\" };\nvar bsc = {\n  id: 56,\n  name: \"BNB Smart Chain\",\n  network: \"bsc\",\n  rpcUrls: {\n    public: \"https://bsc-dataseed1.binance.org\",\n    default: \"https://bsc-dataseed1.binance.org\"\n  },\n  blockExplorers: {\n    default: bscExplorer,\n    etherscan: bscExplorer\n  },\n  nativeCurrency: {\n    name: \"Binance Chain Native Token\",\n    symbol: \"BNB\",\n    decimals: 18\n  },\n  multicall: {\n    address: \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    blockCreated: 15921452\n  }\n};\nvar bscTest = {\n  id: 8453,\n  name: \"Base Chain Mainnet\",\n  network: \"base-mainnet\",\n  nativeCurrency: {\n    decimals: 18,\n    name: \"Base Chain Native Token\",\n    symbol: \"ETH\"\n  },\n  rpcUrls: {\n    public: \"https://mainnet.base.org\",\n    default: \"https://mainnet.base.org\"\n  },\n  blockExplorers: {\n    default: { name: \"BaseScan\", url: \"https://basescan.org\" }\n  },\n  multicall: {\n    address: \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    blockCreated: 17422483\n  },\n  testnet: true\n};\nexport {\n  avalandche,\n  avalandcheFuji,\n  bsc,\n  bscTest,\n  fantomOpera,\n  fantomTestnet,\n  goerli,\n  mainnet,\n  rinkeby\n};\n"],"names":["Trans","Interface","ERC20_ABI","ERC20_BYTES32_ABI","ERC20_INTERFACE","ERC20_BYTES32_INTERFACE","ChainId","GRAPH_API_PROFILE","GRAPH_API_PREDICTION_BNB","GRAPH_API_PREDICTION_CAKE","GRAPH_API_LOTTERY","SNAPSHOT_BASE_URL","process","env","NEXT_PUBLIC_SNAPSHOT_BASE_URL","API_PROFILE","API_NFT","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_POTTERY","GRAPH_API_PREDICTION_V1","INFO_CLIENT","INFO_CLIENT_ETH","BLOCKS_CLIENT","BLOCKS_CLIENT_ETH","STABLESWAP_SUBGRAPH_CLIENT","GRAPH_API_NFTMARKET","GRAPH_HEALTH","TC_MOBOX_SUBGRAPH","TC_MOD_SUBGRAPH","FARM_API","BIT_QUERY","ACCESS_RISK_API","CELER_API","INFO_CLIENT_WITH_CHAIN","BSC","ETHEREUM","BLOCKS_CLIENT_WITH_CHAIN","JSBI","Percent","WNATIVE","BigNumber","bscTokens","bscTestnetTokens","USDC","USDT","BUSD","WBTC_ETH","ROUTER_ADDRESS","RINKEBY","GOERLI","BSC_TESTNET","BASES_TO_CHECK_TRADES_AGAINST","wbnb","cake","busd","usdt","btcb","eth","usdc","ADDITIONAL_BASES","snfts","address","sfund","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","dai","PINNED_PAIRS","BIG_INT_ZERO","BigInt","BIG_INT_TEN","BIPS_BASE","ONE_BIPS","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","DEFAULT_INPUT_CURRENCY","DEFAULT_OUTPUT_CURRENCY","GELATO_HANDLER","GENERIC_GAS_LIMIT_ORDER_EXECUTION","from","LIMIT_ORDERS_DOCS_URL","EXCHANGE_PAGE_PATHS","CAKE_BNB_LP_MAINNET","ERC20Token","cakeBnbLpToken","ifos","id","isActive","name","poolBasic","saleAmount","raiseAmount","distributionRatio","poolUnlimited","currency","token","mgp","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","twitterUrl","description","vestingTitle","wmx","cIFO","krs","co","hoop","wom","peel","trivia","telegramUrl","duet","era","froyo","dpt","santos","porto","dar","cakeToBurn","dkt","kalm","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","BLOCKED_ADDRESSES","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","default","ifosConfig","poolsConfig","FAST_INTERVAL","SLOW_INTERVAL","NOT_ON_SALE_SELLER","NO_PROXY_CONTRACT","FARM_AUCTION_HOSTING_IN_SECONDS","PREDICTION_TOOLTIP_DISMISS_KEY","GELATO_NATIVE","EXCHANGE_DOCS_URLS","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","NUM_ROUNDS_TO_FETCH_FROM_NODES","VaultKey","PoolCategory","MAX_LOCK_DURATION","UNLOCK_FREE_DURATION","ONE_WEEK_DEFAULT","BOOST_WEIGHT","DURATION_FACTOR","vaultPoolConfig","CakeVaultV1","autoCompoundFrequency","gasLimit","tokenImage","primarySrc","secondarySrc","CakeVault","CakeFlexibleSideVault","IfoPool","livePools","sousId","stakingToken","earningToken","contractAddress","poolCategory","CORE","tokenPerBlock","isFinished","arv","moni","gq","ankr","map","p","serialize","finishedPools","hay","pstake","shell","high","ole","sdao","antex","xcn","chr","MIX","metis","gal","rpg","ceek","tinc","pex","gmi","bsw","gmt","xwg","thg","btt","ach","raca","ertha","fuse","aog","apx","bcoin","insur","gm","woop","idia","xcv","nabox","quidd","zoo","qi","kart","dvi","jgn","fina","bmon","ramp","lazio","sps","mcb","beta","eternal","nft","chess","tlos","stephero","bp","cvp","qbt","naos","pha","bel","pots","tusd","revv","bttold","skill","win","if","c98","axs","pmon","trx","titan","harmony","mask","gum","adx","suter","bscpad","rabbit","waultx","wex","form","orbs","$dg","woo","htb","dft","hai","o3","ampl","oddz","bondly","marsh","mbox","ata","mx","bcfx","qkc","ktn","mtrg","vrt","ez","popen","lien","well","deri","cyc","xend","hget","rfox","wmass","ubxt","btr","τdoge","one","fine","doge","bmxx","oin","hyfi","kun","math","ust","lmt","pnt","xmark","hakka","pbtc","bbadger","bdigg","xed","cgg","perl","arpa","dexe","dfd","alpaca","τbtc","swingby","enableEmergencyWithdraw","mix","broobee","alpa","tlm","eps","itam","tko","apys","hoo","easy","nrv","dego","swth","zil","pcws","lto","mir","trade","dusk","bifi","txl","cos","bunny","alice","for","bux","nuls","bfi","tpt","iotx","bor","bopen","sushi","dodo","zee","swgb","comp","sfp","lina","lit","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","twt","juv","psg","vai","bnb","BINANCE","unfi","hard","COMMUNITY","stax","nar","nya","ctk","inj","ccar","priceHelperLps","pid","lpSymbol","lpAddress","quoteToken","getFarmsPriceHelperLpFiles","PoolsEthereumPriceHelper","PoolsGoerliPriceHelper","PoolsBscPriceHelper","PoolsBscTestnetPriceHelper","getPoolsPriceHelperLpFiles","chainId","PoolIds","LotteryStatus","PENDING","OPEN","CLOSE","CLAIMABLE","AuctionStatus","ToBeAnnounced","Pending","Open","Finished","Closed","FetchStatus","Idle","Fetching","Fetched","Failed","getFullDecimalMultiplier","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_DAY","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","BOOSTED_FARM_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","atom","useAtomValue","useRouter","useDeferredValue","isChainSupported","useNetwork","useSessionChainId","queryChainIdAtom","onMount","set","params","URL","window","location","href","searchParams","c","get","useLocalNetworkChain","sessionChainId","queryChainId","query","undefined","useActiveChainId","localChainId","chain","isNotMatched","isWrongNetwork","unsupported","useWeb3React","useEffect","usePreviousValue","useProvider","useSwitchNetworkLoading","getHashFromRouter","router","asPath","match","useNetworkConnectorUpdater","useActiveWeb3React","previousChainId","loading","isReady","parsedQueryChainId","Number","removeQueriesFromPath","some","item","pathname","startsWith","uriHash","replace","hash","web3React","provider","zapAbi","useProviderOrSigner","useMemo","getMulticallAddress","getPredictionsV1Address","getZapAddress","getAnniversaryAchievementContract","getBCakeFarmBoosterContract","getBCakeFarmBoosterProxyFactoryContract","getBCakeProxyContract","getBep20Contract","getBunnyFactoryContract","getBunnySpecialCakeVaultContract","getBunnySpecialContract","getBunnySpecialLotteryContract","getBunnySpecialPredictionContract","getBunnySpecialXmasContract","getCakeContract","getCakeFlexibleSideVaultV2Contract","getCakePredictionsContract","getCakeVaultV2Contract","getChainlinkOracleContract","getClaimRefundContract","getEasterNftContract","getErc721CollectionContract","getErc721Contract","getFarmAuctionContract","getIfoV1Contract","getIfoV2Contract","getIfoV3Contract","getLotteryV2Contract","getMasterchefContract","getMasterchefV1Contract","getNftMarketContract","getNftSaleContract","getPancakeBunniesContract","getPancakeSquadContract","getPointCenterIfoContract","getPotteryDrawContract","getPotteryVaultContract","getPredictionsContract","getPredictionsV1Contract","getProfileContract","getSouschefContract","getTradingCompetitionContractEaster","getTradingCompetitionContractFanToken","getTradingCompetitionContractMobox","getTradingCompetitionContractMoD","getNonBscVaultContract","getCrossFarmingProxyContract","useSigner","IPancakePairABI","multiCallAbi","WETH_ABI","getContract","useIfoV1Contract","data","signer","useIfoV2Contract","useIfoV3Contract","useERC20","withSignerIfPossible","providerOrSigner","useERC721","useCake","reader","useBunnyFactory","usePancakeBunnies","useProfileContract","useLotteryV2Contract","useMasterchef","useMasterchefV1","useSousChef","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContractEaster","useTradingCompetitionContractFanToken","useTradingCompetitionContractMobox","useTradingCompetitionContractMoD","useEasterNftContract","useVaultPoolContract","vaultKey","useCakeVaultContract","usePredictionsContract","tokenSymbol","getPredContract","useChainlinkOracleContract","useSpecialBunnyCakeVaultContract","useSpecialBunnyPredictionContract","useBunnySpecialLotteryContract","useBunnySpecialXmasContract","useAnniversaryAchievementContract","useNftSaleContract","usePancakeSquadContract","useFarmAuctionContract","useNftMarketContract","useErc721CollectionContract","collectionAddress","useContract","ABI","canReturnContract","error","console","useTokenContract","tokenAddress","useWNativeContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","usePotterytVaultContract","usePotterytDrawContract","useZapContract","useBCakeFarmBoosterContract","useBCakeFarmBoosterProxyFactoryContract","useBCakeProxyContract","proxyContractAddress","useNonBscVault","useCrossFarmingProxy","useAccount","isConnected","useAtom","sessionChainIdAtom","switchNetworkLoadingAtom","createAction","Field","LIQUIDITY_PERCENT","LIQUIDITY","CURRENCY_A","CURRENCY_B","typeInput","createReducer","initialState","independentField","typedValue","builder","addCase","state","payload","field","erc20ABI","masterchefABI","nonBscVault","multicall","multicallv2","getMasterChefAddress","getNonBscVaultAddress","verifyBscNetwork","getCrossFarmingReceiverContract","farmFetcher","fetchFarmUserAllowances","account","farmsToFetch","proxyAddress","isBscNetwork","masterChefAddress","calls","farm","lpContractAddress","rawLpAllowances","parsedLpAllowances","lpBalance","toJSON","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","vaultPid","rawStakedBalances","abi","options","requireSuccess","parsedStakedBalances","stakedBalance","_hex","fetchFarmUserEarnings","multiCallChainId","isTestnet","userAddress","fetchCProxyAddress","rawEarnings","parsedEarnings","earnings","crossFarmingAddress","cProxyAddress","cProxy","toString","erc20","chunk","fetchFarmCalls","fetchPublicFarmsData","farms","farmCalls","flatMap","chunkSize","length","farmMultiCallResult","BIG_TWO","BIG_ZERO","fetchMasterChefData","getLpInfo","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTotalSupplyBN","lpTokenRatio","div","tokenAmountTotal","quoteTokenAmountTotal","quoteTokenAmountMc","times","lpTotalInQuoteToken","tokenPriceVsQuote","farmLpTransformer","farmResult","masterChefResult","index","info","totalRegularAllocPoint","allocPoint","poolWeight","multiplier","fetchFarms","Promise","all","fetchMasterChefFarmPoolLength","poolLength","toNumber","masterChefFarmCalls","masterChefPid","masterChefCalls","flat","masterChefAggregatedCalls","filter","masterChefCall","masterChefMultiCallResult","masterChefChunkedResultRaw","masterChefChunkedResultCounter","BIG_ONE","filterFarmsByQuoteToken","getFarmFromTokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","symbol","filteredFarm","getFarmBaseTokenPrice","quoteTokenFarm","nativePriceUSD","wNative","stable","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","getFarmsPrices","nativeStableLpMap","Error","nativeStableFarm","find","toLowerCase","farmsWithPrices","tokenPriceBusd","quoteTokenPriceBusd","getFarmConfig","createFarmFetcher","createAsyncThunk","createSlice","isAnyOf","stringify","fromPairs","getBalanceAmount","chains","splitProxyFarms","resetUserState","fetchFetchPublicDataOld","pids","cakePerBlockRaw","poolLengthAsBigNumber","regularCakePerBlock","farmsConfig","farmsCanFetch","farmConfig","includes","gt","priceHelperLpsConfig","concat","fetchFarmPublicDataPkg","farmsWithPrice","testnet","farmApiFetch","fetch","then","res","json","loadArchivedFarmsData","userDataLoaded","loadingKeys","fetchInitialFarmsData","farmDataList","userData","allowance","fallback","fetchFarmsPublicDataAsync","flag","dispatch","getState","updatedAt","Date","now","getTime","condition","arg","type","typePrefix","debug","getBoostedFarmsStakeValue","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","proxyUserFarmAllowances","proxyUserStakedBalances","proxyUserFarmEarnings","farmAllowances","farmAllowance","proxy","getNormalFarmsStakeValue","normalFarmAllowances","_","fetchFarmUserDataAsync","normalFarms","farmsWithProxy","proxyAllowances","normalAllowances","serializeLoadingKey","action","suffix","split","meta","farmsSlice","reducers","extraReducers","fulfilled","farmPayload","farmPayloadPidMap","farmData","liveFarmData","userDataMap","userDataEl","addMatcher","pending","rejected","reducer","getMasterChefV1Address","masterchefABIV1","masterChefContract","v1pid","totalAllocPoint","bnbPriceBusd","bnbBusdFarm","f","farmsWithPriceHelpers","farmsWithoutHelperLps","farmsV1","forEach","findIndex","updateVersion","toggleFarmTransactionModal","pickFarmTransactionTx","showFarmTransactionModal","pickedFarmTransactionModalTx","tx","showModal","combineReducers","configureStore","useDispatch","FLUSH","PAUSE","PERSIST","persistReducer","persistStore","PURGE","REGISTER","REHYDRATE","storage","burn","farmsReducer","farmsReducerV1","infoReducer","lotteryReducer","mint","poolsReducer","swap","transactions","user","limitOrders","potteryReducer","globalReducer","PERSISTED_KEYS","persistConfig","key","whitelist","blacklist","persistedReducer","global","pools","lottery","pottery","store","makeStore","preloadedState","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","devTools","initializeStore","_store","useAppDispatch","persistor","useStore","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","clearTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","protocol","byAddress","tokens","protocolData","overview","chartData","poolData","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","secondsInterval","oldestFetchedTimestamp","replaceLimitOrdersState","selectCurrency","switchCurrencies","setRateType","Rate","INPUT","basisField","inputValue","outputValue","currencyId","OUTPUT","rateType","MUL","otherField","PRICE","DIV","request","gql","getRoundIdsArray","fetchMultipleLotteries","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","endTime","finalNumber","startTime","status","lotteryId","ticketPrice","priceTicketInCake","totalTickets","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","slice","lastCombinedDataRoundIndex","graphRound","indexOf","remainingSubgraphRounds","splice","mergedResponse","getGraphLotteries","first","skip","where","response","lotteries","getLotteriesData","currentLotteryId","idsForNodesCall","mergedData","hasRoundBeenClaimed","fetchUserTicketsForMultipleRounds","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","roundId","claimed","userTickets","tickets","userNodeRound","userGraphRound","getGraphLotteryUser","blankUser","totalCake","rounds","userRes","round","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","lotteryContract","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","number","viewUserInfoForLotteryId","cursor","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","push","idsToCheck","results","resolve","result","ticketsForRound","lotteryV2Abi","getLotteryV2Address","ethersToSerializedBigNumber","processViewLotterySuccessResponse","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","Object","keys","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","isLoading","processViewLotteryErrorResponse","fetchLottery","lotteryData","viewLottery","lotteryIds","multicallRes","processedResponses","call","fetchCurrentLotteryId","fetchCurrentLotteryIdAndMaxBuy","method","maxNumberTicketsPerBuyOrClaim","currentIdAsInt","parseInt","roundIds","i","claimedTickets","ticket","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","mergedRounds","resetMintState","otherTypedValue","noLiquidity","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","test","callData","parseCallKey","callKey","pcs","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","callResults","blocksPerFetch","listeners","callListeners","fetchingBlockNumber","current","blockNumber","sousChefABI","getAddress","sousChefV2","sousChefV3","livePoolsWithEnd","startEndBlockCalls","poolConfig","fetchPoolsBlockLimits","startEndBlockRaw","startEndBlockResult","reduce","resultArray","chunkIndex","Math","floor","cakePoolConfig","startBlock","endBlock","poolsBalanceOf","fetchPoolsTotalStaking","poolsTotalStaked","totalStaked","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","poolStakingCalls","validPool","poolStakingResultRaw","poolStakingChunkedResultRaw","stakingLimitRaw","hasUserLimit","stakingLimit","numberBlocksForUserLimit","livePoolsWithV3","pool","fetchPoolsProfileRequirement","poolProfileRequireCalls","poolProfileRequireResultRaw","poolProfileRequireRaw","hasProfileRequired","profileThresholdPoints","required","thresholdPoints","bscRpcProvider","uniq","nonBnbPools","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","fetchUserBalances","tokenBalancesRaw","bnbBalance","getBalance","tokenBalances","poolTokenBalances","bnbBalanceJson","bnbBalances","fetchUserStakeBalances","userInfo","amount","fetchUserPendingRewards","getIfoCreditAddressContract","fetchPublicIfoData","ifoCreditAddressContract","ceiling","fetchUserIfoCredit","credit","getUserCredit","cakeVaultAbi","getCakeVaultAddress","getCakeFlexibleSideVaultAddress","cakeVaultV2","cakeFlexibleSideVaultV2","cakeContract","fetchPublicVaultData","cakeVaultAddress","sharePrice","shares","totalLockedAmount","totalCakeInVault","balanceOf","totalSharesAsBigNumber","totalLockedAmountAsBigNumber","sharePriceAsBigNumber","totalShares","pricePerFullShare","fetchPublicFlexibleSideVaultData","fetchVaultFees","performanceFee","withdrawalFee","withdrawalFeePeriod","flexibleSideVaultContract","fetchVaultUser","userContractResponse","currentPerformanceFee","currentOverdueFee","userShares","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","userBoostedShare","locked","lockEndTime","lockStartTime","lockedAmount","fetchFlexibleSideVaultUser","deserializeToken","isAddress","convertSharesToCake","transformUserData","stakingTokenBalance","pendingReward","transformProfileRequirement","profileRequirement","transformPool","rest","stakingLimitEndBlock","transformVault","vault","totalSharesAsString","pricePerFullShareAsString","fees","userSharesAsString","cakeAtLastUserActionAsString","userDataExtra","publicDataExtra","totalCakeInVaultAsString","totalLockedAmountAsString","userBoostedShareAsString","lockedAmountAsString","currentOverdueFeeAsString","currentPerformanceFeeAsString","balance","plus","cakeAsBigNumber","performanceFeeAsDecimal","getTokenPricesFromFarm","prices","quoteTokenAddress","getPoolApr","cakeAbi","getBalanceNumber","initialPoolVaultState","freeze","creditStartBlock","initialIfoState","cakeVault","ifo","cakeFlexibleSideVault","fetchCakePoolPublicDataAsync","farmsData","cakePool","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningTokenPrice","setPoolPublicData","fetchCakePoolUserDataAsync","allowanceCall","balanceOfCall","cakeContractCalls","setPoolUserData","fetchPoolsPublicDataAsync","currentBlockNumber","blockLimits","totalStakings","profileRequirements","currentBlock","getBlockNumber","blockLimitsSousIdMap","entry","totalStakingsSousIdMap","activePriceHelperLpsConfig","priceHelperLpConfig","poolBlockLimit","poolsWithDifferentFarmToken","farmsWithPricesOfDifferentTokenPools","liveData","blockLimit","totalStaking","isPoolEndBlockExceeded","isPoolFinished","apr","decimals","parseFloat","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimits","stakingLimitData","fetchPoolsUserDataAsync","rejectWithValue","stakingTokenBalances","stakedBalances","pendingRewards","e","updateUserAllowance","value","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeFlexibleSideVaultPublicData","fetchCakeVaultFees","vaultFees","fetchCakeFlexibleSideVaultFees","fetchCakeVaultUserData","fetchIfoPublicDataAsync","publicIfoData","fetchUserIfoCreditDataAsync","setIfoUserCreditData","fetchCakeFlexibleSideVaultUserData","PoolsSlice","poolIndex","livePoolsData","livePoolsSousIdMap","livePoolData","userDataSousIdMap","actions","potteryVaultAbi","getPotteryDrawAddress","PotteryDepositStatus","potteryDrawAddress","potteryDrawContract","fetchLastVaultAddress","contract","lastVaultAddress","fetchPublicPotteryValue","potteryVaultAddress","getStatus","totalLockCake","totalSupply","getLockTime","getMaxTotalDeposit","lastDrawId","totalPrize","getPot","lockTime","maxTotalDeposit","BEFORE_LOCK","fetchTotalLockedValue","totalLocked","totalLockedValue","fetchLatestRoundId","winners","potteryVaultRounds","latestRoundId","fetchPotteryFinishedRound","potteryRoundId","drawDate","prizePot","txid","isFetched","totalPlayers","lockDate","fetchPotterysAllowance","fetchVaultUserData","potteryVaultContract","previewDeposit","previewRedeem","previewDepositBalance","fetchUserDrawData","winCount","userInfos","rewards","fetchWithdrawAbleData","withdrawalsData","withdrawals","depositDate","lockedDate","withdrawAbleData","UNLOCK","publicData","finishedRoundInfo","fetchLastVaultAddressAsync","fetchPublicPotteryDataAsync","publicPotteryData","fetchPotteryUserDataAsync","vaultUserData","drawData","fetchPotteryRoundData","PotterySlice","setFinishedRoundInfoFetched","replaceSwapState","setRecipient","updatePairData","updateDerivedPairData","pairDataById","derivedPairDataById","recipient","inputCurrencyId","outputCurrencyId","pairData","pairId","timeWindow","MsgStatus","MS_UNKNOWN","MS_WAITING_FOR_SGN_CONFIRMATIONS","MS_WAITING_FOR_DESTINATION_EXECUTION","MS_COMPLETED","MS_FAIL","MS_FALLBACK","FarmTransactionStatus","FAIL","SUCCESS","NonBscFarmStepType","STAKE","UNSTAKE","addTransaction","clearAllTransactions","clearAllChainTransactions","finalizeTransaction","checkedTransaction","confirmOrderCancellation","confirmOrderSubmission","saveOrder","approval","summary","translatableSummary","claim","order","nonBscFarm","txs","addedTime","lastCheckedBlockNumber","max","receipt","confirmedTime","steps","newChainId","parseUnits","GAS_PRICE","fast","instant","GAS_PRICE_GWEI","BetPosition","BULL","BEAR","HOUSE","PredictionStatus","INITIAL","LIVE","PAUSED","ERROR","PredictionSupportedSymbol","BNB","CAKE","PredictionsChartView","TradingView","Chainlink","HistoryFilter","ALL","COLLECTED","UNCOLLECTED","SnapshotCommand","PROPOSAL","VOTE","ProposalType","ProposalState","ACTIVE","CLOSED","LOCK","FarmStakedOnly","ON_FINISHED","TRUE","FALSE","ViewMode","TABLE","CARD","ChartViewMode","BASIC","TRADING_VIEW","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserLimitOrderAcceptedWarning","updateUserPredictionChartDisclaimerShow","updateUserPredictionChainlinkChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","addWatchlistToken","addWatchlistPool","hidePhishingWarningBanner","setIsExchangeChartDisplayed","setChartViewMode","setZapDisabled","setSubgraphHealthIndicatorDisplayed","omitBy","currentTimestamp","pairKey","token0Address","token1Address","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","pairs","audioPlay","isExchangeChartDisplayed","isSubgraphHealthIndicatorDisplayed","userChartViewMode","userFarmStakedOnly","userPoolStakedOnly","userPoolsViewMode","userFarmsViewMode","userPredictionAcceptedRisk","userLimitOrderAcceptedWarning","userPredictionChartDisclaimerShow","userPredictionChainlinkChartDisclaimerShow","userExpertModeAcknowledgementShow","userUsernameVisibility","userZapDisabled","watchlistTokens","watchlistPools","hideTimestampPhishingWarningBanner","lastUpdateVersionTimestamp","serializedToken","serializedPair","token0","token1","tokenAAddress","tokenBAddress","tokenAToB","tokenBToA","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","x","poolsWatchlist","newPools","lpAprs56","getLpApr","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","cakePriceUsd","poolLiquidityUsd","farmAddress","yearlyCakeRewardAllocation","NaN","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","Contract","getPancakeProfileAddress","getPancakeBunniesAddress","getBunnyFactoryAddress","getBunnySpecialAddress","getPointCenterIfoAddress","getClaimRefundAddress","getTradingCompetitionAddressEaster","getEasterNftAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","getTradingCompetitionAddressFanToken","getTradingCompetitionAddressMobox","getTradingCompetitionAddressMoD","getBunnySpecialXmasAddress","getICakeAddress","getBCakeFarmBoosterAddress","getBCakeFarmBoosterProxyFactoryAddress","getCrossFarmingSenderAddress","getCrossFarmingReceiverAddress","profileABI","pancakeBunniesAbi","bunnyFactoryAbi","bunnySpecialAbi","bep20Abi","erc721Abi","lpTokenAbi","ifoV1Abi","ifoV2Abi","pointCenterIfo","masterChef","masterChefV1","sousChef","sousChefBnb","claimRefundAbi","tradingCompetitionEasterAbi","tradingCompetitionFanTokenAbi","tradingCompetitionMoboxAbi","tradingCompetitionMoDAbi","easterNftAbi","cakeVaultV2Abi","cakeFlexibleSideVaultV2Abi","predictionsAbi","predictionsV1Abi","chainlinkOracleAbi","MultiCallAbi","bunnySpecialCakeVaultAbi","bunnySpecialPredictionAbi","bunnySpecialLotteryAbi","bunnySpecialXmasAbi","farmAuctionAbi","anniversaryAchievementAbi","nftMarketAbi","nftSaleAbi","pancakeSquadAbi","erc721CollectionAbi","potteryDrawAbi","iCakeAbi","ifoV3Abi","cakePredictionsAbi","bCakeFarmBoosterAbi","bCakeFarmBoosterProxyFactoryAbi","bCakeProxyAbi","crossFarmingSenderAbi","crossFarmingReceiverAbi","crossFarmingProxyAbi","signerOrProvider","getLpContract","config","getSouschefV2Contract","getMulticallContract","getZapContract","getCrossFarmingSenderContract","AddressZero","bsc","memoize","getBlockExploreLink","chainIdOverride","blockExplorers","url","getBlockExploreName","getBscScanLinkForNft","tokenId","calculateGasMargin","margin","mul","add","escapeRegExp","string","isTokenOnList","defaultTokens","isNative","isToken","clear","orderBy","LS_ORDERS","hashOrder","hashOrderSet","orders","Set","clearOrdersLocalStorage","lsKey","getLSOrders","getUniqueOrders","saveOrders","removeOrders","prev","orderHashSet","orderInLS","has","removeOrder","cancellationHash","success","cancelHash","pendingKey","pendingOrders","confirmedOrder","cancelledTxHash","ordersKey","ordersToSave","submissionHash","creationHash","createdTxHash","allOrders","Map","values","createMulticall","StaticJsonRpcProvider","BSC_PROD_NODE","NEXT_PUBLIC_NODE_PRODUCTION","BinanceWalletConnector","bscTest","goerli","rinkeby","mainnet","configureChains","createClient","CoinbaseWalletConnector","InjectedConnector","MetaMaskConnector","WalletConnectConnector","jsonRpcProvider","SafeConnector","CHAINS","getNodeRealUrl","networkName","host","NEXT_PUBLIC_NODE_REAL_API_ETH","NEXT_PUBLIC_NODE_REAL_API_RINKEBY","NEXT_PUBLIC_NODE_REAL_API_GOERLI","http","webSocket","rpc","network","rpcUrls","injectedConnector","shimDisconnect","shimChainChangedDisconnect","coinbaseConnector","appName","appLogoUrl","walletConnectConnector","qrcode","walletConnectNoQrCodeConnector","metaMaskConnector","bscConnector","client","autoConnect","connectors","CHAIN_IDS","isChainTestnet","groupBy","isUndefinedOrNull","false","true","boosted","getApy","getFullDisplayBalance","getDecimalAmount","MIN_LOCK_AMOUNT","ENABLE_EXTEND_LOCK_AMOUNT","cakePerFullShare","decimalsToRound","fee","sharePriceNumber","amountInCake","multipliedBy","minus","cakeAsNumberBalance","cakeAsDisplayBalance","convertCakeToShares","amountInShares","dividedBy","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","MANUAL_POOL_AUTO_COMPOUND_FREQUENCY","getAprData","autoApr","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","getICakeWeekDisplay","weeks","isStableFarm","logged","getStableConfig","goerliTestnetTokens","weth","FarmsBscPriceHelper","FarmsBscTestnetPriceHelper","FarmsEthereumPriceHelper","FarmsGoerliPriceHelper","preferredFarm","BIG_TEN","pow","FixedNumber","FIXED_ZERO","FIXED_ONE","FIXED_TWO","FIXED_TEN_IN_POWER_18","masterChefAddresses","nonBSCVaultAddresses","equalsIgnoreCase","a","b","localeCompare","sensitivity","_toNumber","mulUnsafe","getFarmFromTokenAddress","getStableLpTokenPrice","isZero","valueOfBaseTokenInFarm","valueOfQuoteTokenInFarm","liquidity","addUnsafe","totalLpTokens","divUnsafe","getLpTokenPrice","lpTokenPrice","lpTotalSupplyAsBigNumber","lpTotalInQuoteTokenBigNumber","overallValueOfAllTokensInFarm","stableSwapAddress","constant","inputs","outputs","payable","stateMutability","vaultAddress","stableSwapAbi","internalType","fetchStableFarmData","formatUnits","getTokenAmount","tokenDividerFixed","farmV2FetchFarms","totalSpecialAllocPoint","stableFarms","stableFarmsResults","poolInfos","lpDataResults","stableFarmsData","formatStableFarm","stableFarmsDataMap","lpData","formatClassicFarmResponse","getStableFarmDynamicData","token0Decimals","token1Decimals","price1","getClassicFarmsDynamicData","getFarmAllocation","isRegular","farmsDataWithPrices","masterChefV2Abi","fetchMasterChefV2Data","cakePerBlock","stableFarmData","balance1","balance2","_price1","quoteTokenAmountMcFixed","tokenAmountMcFixed","quoteTokenAmountMcFixedByTokenAmount","_allocPoint","totalAlloc","formatEther","supportedChainId","bCakeSupportedChainId","fetchTokenList","addList","removeList","enableList","disableList","acceptListUpdate","rejectVersionUpdate","updateListVersion","useFetchListCallback","atomWithStorage","useReducerAtom","localForage","defaultStorage","createListsAtom","storeName","gotOnce","IndexedDBStorage","dbName","db","createInstance","getItem","setItem","k","v","removeItem","delayInit","listsAtom","useListState","getVersionUpgrade","VersionUpgrade","NEW_LIST_STATE","loadingRequestId","pendingUpdate","createTokenListReducer","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","requestId","byUrl","tokenList","upgradeType","NONE","activeListUrls","errorMessage","u","lastInitializedDefaultListOfLists","lastInitializedSet","s","l","newListOfListsSet","listUrl","nanoid","useCallback","sendDispatch","getTokenList","catch","message","Token","WrappedTokenInfo","constructor","tokenInfo","logoURI","projectLink","CAKE_MAINNET","CAKE_TESTNET","USDC_BSC","USDC_TESTNET","USDC_ETH","USDC_RINKEBY","USDC_GOERLI","USDT_BSC","USDT_ETH","BUSD_BSC","BUSD_TESTNET","BUSD_ETH","BUSD_RINKEBY","BUSD_GOERLI","EMPTY_LIST","serializeTokens","unserializedTokens","serializedTokens","accum","WETH9","celr","leet","WBNB","pros","bscdefi","syrup","babycake","hero","wsg","mcrn","swg","sxp","alpha","xvs","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","yfii","xtz","bch","yfi","uni","fil","bake","burger","mcoin","qsd","boring","gnt","rusd","cart","light","xms","sheesha","tt","gmee","htd","bbt","bath","prl","gear","fight","loa","tem","yel","happy","wzrd","abnbc","peak","nbt","mhunt","xcad","stkbnb","spin","hbtc","wbtc","ethereumTokens","scales","variants","scaleVariants","MD","height","padding","SM","XS","fontSize","styleVariants","PRIMARY","backgroundColor","color","SECONDARY","border","borderColor","boxShadow","TERTIARY","SUBTLE","DANGER","TEXT","LIGHT","styled","css","space","layout","variant","getDisabledStyles","$isLoading","theme","colors","backgroundDisabled","textDisabled","getOpacity","StyledButton","button","prop","decorator","text","secondary","React","cloneElement","isValidElement","EXTERNAL_LINK_PROPS","Button","props","startIcon","endIcon","external","className","disabled","children","internalProps","isDisabled","classNames","join","mr","ml","defaultProps","scale","target","rel","BIG_NINE","ethersBn","ethersToBigNumber","EthersBigNumber","getLanguageCodeFromLS","displayDecimals","toFixed","formatNumber","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","leftSide","formatLocalisedCompactNumber","codeFromStorage","isClient","isSupported","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","formatLpBalance","stakedBalanceBigNumber","lt","ROUND_DOWN"],"sourceRoot":""}