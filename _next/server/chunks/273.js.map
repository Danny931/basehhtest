{"version":3,"file":"273.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAA0D;AAEsC;AAC/C;AACQ;AACN;AACd;AACC;AAC2D;AAClC;AACR;AAYvD,MAAMkB,YAAY,GAAyD,CAAC,EAC1EC,gBAAgB,GAChBC,YAAY,GACZC,mBAAmB,GACnBC,MAAM,GACNC,SAAS,GACTC,SAAS,KACV,GAAK;IACJ,MAAM,EAAEC,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE0B,KAAK,GAAE,GAAGf,oEAAQ,EAAE;IAC5B,MAAM,EAAEgB,YAAY,GAAE,GAAGpB,sEAAQ,EAAE;IACnC,MAAM,EAAEqB,OAAO,GAAE,GAAGpB,0EAAY,EAAE;IAClC,MAAMqB,QAAQ,GAAGjB,+DAAc,EAAE;IACjC,MAAM,EAAEkB,qBAAqB,GAAEC,OAAO,EAAEC,SAAS,GAAE,GAAGtB,0EAAe,EAAE;IACvE,MAAM,EAAEuB,QAAQ,GAAE,GAAGhB,0EAAc,CAACK,MAAM,EAAEC,SAAS,CAAC;IAEtD,MAAMW,oBAAoB,GAAG,UAAY;QACvC,MAAMC,OAAO,GAAG,MAAML,qBAAqB,CAAC,IAAM;YAChD,OAAOG,QAAQ,EAAE;QACnB,CAAC,CAAC;QACF,IAAIE,OAAO,EAAEC,MAAM,EAAE;YACnBT,YAAY,CACV,CAAC,EAAEF,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,gBACpB,mDAAChB,6EAAsB;gBAAC4B,MAAM,EAAEF,OAAO,CAACG,eAAe;0BACpDb,CAAC,CAAC,uDAAuD,EAAE;oBAAEc,MAAM,EAAEnB,YAAY,CAACmB,MAAM;iBAAE,CAAC;cACrE,CAC1B;YACDV,QAAQ,CAACd,8EAAuB,CAAC;gBAAEO,MAAM;gBAAEM,OAAO;aAAE,CAAC,CAAC;YACtDC,QAAQ,CAACf,8EAAuB,CAAC;gBAAEQ,MAAM;gBAAEM,OAAO;aAAE,CAAC,CAAC;YACtDC,QAAQ,CAAChB,wEAAiB,CAAC;gBAAES,MAAM;gBAAEM,OAAO;aAAE,CAAC,CAAC;YAChDJ,SAAS;QACX,CAAC;IACH,CAAC;IAED,qBACE,wDAACnB,qEAAK;QACJmC,KAAK,EAAE,CAAC,EAAEpB,YAAY,CAACmB,MAAM,CAAC,CAAC,EAAEd,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/CD,SAAS,EAAEA,SAAS;QACpBiB,gBAAgB,EAAEf,KAAK,CAACgB,MAAM,CAACC,kBAAkB;;0BAEjD,wDAACxC,oEAAI;gBAACyC,cAAc,EAAC,eAAe;gBAACC,UAAU,EAAC,QAAQ;gBAACC,EAAE,EAAC,MAAM;;kCAChE,wDAACxC,oEAAI;;4BAAEmB,CAAC,CAAC,YAAY,CAAC;4BAAC,GAAC;;sBAAO;kCAC/B,wDAACtB,oEAAI;wBAAC4C,aAAa,EAAC,QAAQ;;0CAC1B,wDAAC3C,oEAAO;;oCACLe,gBAAgB;oCAAC,GAAC;oCAACC,YAAY,CAACmB,MAAM;;8BAC/B;4BACTlB,mBAAmB,GAAG,CAAC,kBACtB,mDAACf,oEAAI;gCAAC0C,QAAQ,EAAC,MAAM;gCAACC,KAAK,EAAC,YAAY;0CAAE,CAAC,CAAC,EAAEjC,wFAAY,CAACK,mBAAmB,CAAC,CAAC,IAAI,CAAC;8BAAQ;;sBAE1F;;cACF;0BAEP,mDAACnB,oEAAM;gBACLgD,EAAE,EAAC,KAAK;gBACRC,OAAO,EAAEjB,oBAAoB;gBAC7BkB,SAAS,EAAEpB,SAAS;gBACpBqB,OAAO,EAAErB,SAAS,iBAAG,mDAAC/B,oEAAa;oBAACqD,IAAI;oBAACL,KAAK,EAAC,cAAc;kBAAG,GAAG,IAAI;0BAEtEjB,SAAS,GAAGP,CAAC,CAAC,YAAY,CAAC,GAAGA,CAAC,CAAC,SAAS,CAAC;cACpC;0BACT,mDAACvB,oEAAM;gBAACqD,OAAO,EAAC,MAAM;gBAACJ,OAAO,EAAE3B,SAAS;gBAAEgC,EAAE,EAAC,KAAK;0BAChD/B,CAAC,CAAC,cAAc,CAAC;cACX;;MACH,CACT;AACH,CAAC;AAED,iEAAeP,YAAY;;;;;;;;;;;;;;;;;;;ACzF3B;AAAsC;AACK;AAM3C,MAAMwC,YAAY,GAAGD,wDAAM,CAACvD,mEAAM,CAAC;;EAAA,CAAC;;AAEpC,CAAC;AAED,MAAMyD,gBAAgB,GAA6D,CAAC,EAAEC,QAAQ,GAAET,OAAO,GAAE,GAAK;IAC5G,qBACE,mDAACO,YAAY;QAACG,KAAK,EAAC,IAAI;QAACC,EAAE,EAAC,KAAK;QAACC,CAAC,EAAC,UAAU;QAACR,OAAO,EAAC,UAAU;QAACJ,OAAO,EAAEA,OAAO;kBAC/ES,QAAQ;MACI,CAChB;AACH,CAAC;AAED,iEAAeD,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB/B;AAA0D;AAgB/B;AACsB;AACb;AACqB;AACN;AACd;AACmB;AAClB;AAC2D;AAE3D;AACsC;AAC4B;AACrD;AACI;AACN;AAWjD,MAAMsB,UAAU,GAAGxB,yDAAM,CAACW,oEAAI,CAAC;;EAAA,CAAC;;AAEhC,CAAC;AAED,MAAMc,kBAAkB,GAAGzB,yDAAM,CAACtD,oEAAI,CAAC;;EAAA,CAAC;;AAExC,CAAC;AAED,MAAMgF,gBAAgB,GAAG1B,yDAAM,CAACnD,oEAAI,CAAC;;EAAA,CAAC;;;;;;AAMtC,CAAC;AAED,MAAM8E,UAAU,GAAuD,CAAC,EACtE7D,SAAS,GACT8D,IAAI,GACJC,mBAAmB,GACnBC,iBAAiB,GACjBC,eAAe,EAAG,KAAK,GACvBhE,SAAS,KACV,GAAK;IACJ,MAAM,EAAEF,MAAM,GAAEmE,YAAY,GAAEC,iBAAiB,GAAEC,GAAG,GAAEC,QAAQ,GAAEC,YAAY,GAAEzE,YAAY,GAAE,GAAGiE,IAAI;IACnG,MAAM,EAAEzD,OAAO,GAAE,GAAGpB,0EAAY,EAAE;IAClC,MAAMqB,QAAQ,GAAGjB,+DAAc,EAAE;IACjC,MAAM,EAAEa,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE0B,KAAK,GAAE,GAAGf,oEAAQ,EAAE;IAC5B,MAAM,EAAEmF,OAAO,GAAE,GAAGf,yEAAY,CAACzD,MAAM,EAAEC,SAAS,CAAC;IACnD,MAAM,EAAEwE,SAAS,GAAE,GAAGf,2EAAc,CAAC1D,MAAM,EAAE+D,IAAI,CAACW,uBAAuB,CAAC;IAC1E,MAAM,EAAErE,YAAY,GAAE,GAAGpB,sEAAQ,EAAE;IACnC,MAAM,EAAEuB,qBAAqB,GAAEC,OAAO,EAAEC,SAAS,GAAE,GAAGtB,0EAAe,EAAE;IACvE,MAAM,KAACuF,WAAW,MAAEC,cAAc,MAAIvB,+CAAQ,CAAC,EAAE,CAAC;IAClD,MAAM,KAACwB,oBAAoB,MAAEC,wBAAwB,MAAIzB,+CAAQ,CAAC,KAAK,CAAC;IACxE,MAAM,KAAC0B,OAAO,MAAEC,UAAU,MAAI3B,+CAAQ,CAAC,CAAC,CAAC;IACzC,MAAM,KAAC4B,iBAAiB,MAAEC,oBAAoB,MAAI7B,+CAAQ,CAAC,KAAK,CAAC;IACjE,MAAM8B,yBAAyB,GAAGhC,kDAAW,CAAC,IAAM;QAClD,IAAIe,eAAe,EAAE;YACnB,OAAOI,QAAQ,CAACc,aAAa;QAC/B,CAAC;QACD,IAAIb,YAAY,CAACc,EAAE,CAAC,CAAC,CAAC,EAAE;YACtB,MAAMC,gBAAgB,GAAGf,YAAY,CAACgB,KAAK,CAACjB,QAAQ,CAACc,aAAa,CAAC;YACnE,IAAIpB,mBAAmB,CAACqB,EAAE,CAACC,gBAAgB,CAAC,EAAE;gBAC5C,OAAOA,gBAAgB;YACzB,CAAC;QACH,CAAC;QACD,OAAOtB,mBAAmB;IAC5B,CAAC,EAAE;QAACM,QAAQ,CAACc,aAAa;QAAEpB,mBAAmB;QAAEO,YAAY;QAAEL,eAAe;KAAC,CAAC;IAChF,MAAMsB,sBAAsB,GAAGjC,6FAAgB,CAAC,IAAIL,qDAAS,CAACyB,WAAW,CAAC,EAAER,YAAY,CAACsB,QAAQ,CAAC;IAClG,MAAMC,kBAAkB,GAAGxB,eAAe,GACtCI,QAAQ,CAACc,aAAa,CAACO,EAAE,CAACH,sBAAsB,CAAC,GACjDlB,QAAQ,CAACN,mBAAmB,CAAC2B,EAAE,CAACH,sBAAsB,CAAC;IAE3D,MAAMI,cAAc,GAAG,IAAI1C,qDAAS,CAACyB,WAAW,CAAC,CAACkB,KAAK,CAAC5B,iBAAiB,CAAC;IAC1E,MAAM6B,uBAAuB,GAAG,CAACF,cAAc,CAACG,KAAK,EAAE,IAAIrG,yFAAY,CAACkG,cAAc,CAACI,QAAQ,EAAE,CAAC;IAElG,MAAMC,iBAAiB,GAAG3C,sGAAoB,CAAC;QAC7C4C,cAAc,EAAE,CAACN,cAAc,CAACG,KAAK,EAAE,GAAGH,cAAc,CAACI,QAAQ,EAAE,GAAG,CAAC;QACvE3B,GAAG;QACHD,iBAAiB;KAClB,CAAC;IACF,MAAM+B,SAAS,GAAGF,iBAAiB,CAAC,CAAC,CAAC,GAAGlC,IAAI,CAACK,iBAAiB;IAC/D,MAAMgC,kBAAkB,GAAG1G,yFAAY,CAACyG,SAAS,EAAEA,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,EAAEA,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;IAExG,MAAME,YAAY,GAAGlC,YAAY,CAACmC,OAAO,GAAG,CAAC,qBAAqB,EAAEnC,YAAY,CAACmC,OAAO,CAAC,CAAC,GAAG,OAAO;IAEpGlD,gDAAS,CAAC,IAAM;QACd,IAAImB,YAAY,CAACc,EAAE,CAAC,CAAC,CAAC,IAAI,CAACnB,eAAe,EAAE;YAC1CY,wBAAwB,CAACU,sBAAsB,CAACe,IAAI,CAACjC,QAAQ,CAACc,aAAa,CAAC,CAACC,EAAE,CAACd,YAAY,CAAC,CAAC;QAChG,CAAC;IACH,CAAC,EAAE;QACDI,WAAW;QACXJ,YAAY;QACZD,QAAQ;QACRH,YAAY;QACZD,eAAe;QACfY,wBAAwB;QACxBU,sBAAsB;KACvB,CAAC;IAEF,MAAMgB,sBAAsB,GAAG,CAACC,KAAa,GAAK;QAChD,IAAIA,KAAK,EAAE;YACT,MAAMC,cAAc,GAAGnD,6FAAgB,CAAC,IAAIL,qDAAS,CAACuD,KAAK,CAAC,EAAEtC,YAAY,CAACsB,QAAQ,CAAC;YACpF,MAAMkB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,CAACI,SAAS,CAAC3B,yBAAyB,EAAE,CAAC,CAAC4B,YAAY,CAAC,GAAG,CAAC,CAACf,QAAQ,EAAE,CAAC;YACjHhB,UAAU,CAAC4B,IAAI,CAACI,GAAG,CAACL,UAAU,EAAE,GAAG,CAAC,CAAC;QACvC,OAAO;YACL3B,UAAU,CAAC,CAAC,CAAC;QACf,CAAC;QACDJ,cAAc,CAAC6B,KAAK,CAAC;IACvB,CAAC;IAED,MAAMQ,mBAAmB,GAAG9D,kDAAW,CACrC,CAAC+D,aAAqB,GAAK;QACzB,IAAIA,aAAa,GAAG,CAAC,EAAE;YACrB,MAAMC,sBAAsB,GAAGhC,yBAAyB,EAAE,CAAC2B,SAAS,CAAC,GAAG,CAAC,CAACC,YAAY,CAACG,aAAa,CAAC;YACrG,MAAME,aAAa,GAAG5D,kGAAqB,CACzC2D,sBAAsB,EACtBhD,YAAY,CAACsB,QAAQ,EACrBtB,YAAY,CAACsB,QAAQ,CACtB;YACDb,cAAc,CAACwC,aAAa,CAAC;QAC/B,OAAO;YACLxC,cAAc,CAAC,EAAE,CAAC;QACpB,CAAC;QACDI,UAAU,CAACkC,aAAa,CAAC;IAC3B,CAAC,EACD;QAAC/B,yBAAyB;QAAEhB,YAAY,CAACsB,QAAQ;KAAC,CACnD;IAED,MAAM4B,kBAAkB,GAAG,UAAY;QACrC,MAAMxG,OAAO,GAAG,MAAML,qBAAqB,CAAC,IAAM;YAChD,IAAI0D,eAAe,EAAE;gBACnB,OAAOO,SAAS,CAACE,WAAW,EAAER,YAAY,CAACsB,QAAQ,CAAC;YACtD,CAAC;YACD,OAAOjB,OAAO,CAACG,WAAW,EAAER,YAAY,CAACsB,QAAQ,CAAC;QACpD,CAAC,CAAC;QACF,IAAI5E,OAAO,EAAEC,MAAM,EAAE;YACnB,IAAIoD,eAAe,EAAE;gBACnB7D,YAAY,CACV,CAAC,EAAEF,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,gBACnB,mDAAChB,6EAAsB;oBAAC4B,MAAM,EAAEF,OAAO,CAACG,eAAe;8BACpDb,CAAC,CAAC,iEAAiE,EAAE;wBACpEc,MAAM,EAAEnB,YAAY,CAACmB,MAAM;qBAC5B,CAAC;kBACqB,CAC1B;YACH,OAAO;gBACLZ,YAAY,CACV,CAAC,EAAEF,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBACjB,mDAAChB,6EAAsB;oBAAC4B,MAAM,EAAEF,OAAO,CAACG,eAAe;8BACpDb,CAAC,CAAC,mDAAmD,EAAE;wBACtDc,MAAM,EAAEkD,YAAY,CAAClD,MAAM;qBAC5B,CAAC;kBACqB,CAC1B;YACH,CAAC;YACDV,QAAQ,CAACd,8EAAuB,CAAC;gBAAEO,MAAM;gBAAEM,OAAO;aAAE,CAAC,CAAC;YACtDC,QAAQ,CAACf,8EAAuB,CAAC;gBAAEQ,MAAM;gBAAEM,OAAO;aAAE,CAAC,CAAC;YACtDC,QAAQ,CAAChB,wEAAiB,CAAC;gBAAES,MAAM;gBAAEM,OAAO;aAAE,CAAC,CAAC;YAChDJ,SAAS;QACX,CAAC;IACH,CAAC;IAED,IAAI+E,iBAAiB,EAAE;QACrB,qBACE,mDAAChC,oEAAkB;YACjB3C,OAAO,EAAEA,OAAO;YAChB8D,iBAAiB,EAAEA,iBAAiB;YACpCH,iBAAiB,EAAEA,iBAAiB;YACpCI,GAAG,EAAEA,GAAG;YACRiD,SAAS,EAAEnH,CAAC,CAAC,cAAc,EAAE;gBAAEc,MAAM,EAAEkD,YAAY,CAAClD,MAAM;aAAE,CAAC;YAC7DsG,QAAQ,EAAElB,YAAY;YACtBrC,mBAAmB,EAAEM,QAAQ,CAACc,aAAa,CAACmB,IAAI,CAACvC,mBAAmB,CAAC;YACrEwD,kBAAkB,EAAErD,YAAY,CAAClD,MAAM;YACvCwG,kBAAkB,EAAE3H,YAAY,CAACmB,MAAM;YACvCyG,MAAM,EAAE,IAAMxC,oBAAoB,CAAC,KAAK,CAAC;YACzCyC,YAAY,EAAEhD,WAAW;UACzB,CACH;IACH,CAAC;IAED,qBACE,wDAAC5F,qEAAK;QACJ6I,QAAQ,EAAC,OAAO;QAChB1G,KAAK,EAAEgD,eAAe,GAAG/D,CAAC,CAAC,SAAS,CAAC,GAAGA,CAAC,CAAC,eAAe,CAAC;QAC1DD,SAAS,EAAEA,SAAS;QACpBiB,gBAAgB,EAAEf,KAAK,CAACgB,MAAM,CAACC,kBAAkB;;YAEhDkD,YAAY,CAACc,EAAE,CAAC,CAAC,CAAC,IAAI,CAACnB,eAAe,kBACrC,mDAAClF,oEAAI;gBAAC2C,KAAK,EAAC,WAAW;gBAACkG,IAAI;gBAACrG,EAAE,EAAC,MAAM;gBAACsG,KAAK,EAAE;oBAAEC,SAAS,EAAE,QAAQ;iBAAE;gBAAErG,QAAQ,EAAC,MAAM;0BACnFvB,CAAC,CAAC,2CAA2C,EAAE;oBAC9C6H,MAAM,EAAExE,kGAAqB,CAACe,YAAY,EAAEJ,YAAY,CAACsB,QAAQ,EAAE,CAAC,CAAC;oBACrEwC,KAAK,EAAE9D,YAAY,CAAClD,MAAM;iBAC3B,CAAC;cACG;0BAET,wDAACpC,oEAAI;gBAAC0C,UAAU,EAAC,QAAQ;gBAACD,cAAc,EAAC,eAAe;gBAACE,EAAE,EAAC,KAAK;;kCAC/D,wDAACxC,oEAAI;wBAAC6I,IAAI;;4BAAE3D,eAAe,GAAG/D,CAAC,CAAC,SAAS,CAAC,GAAGA,CAAC,CAAC,OAAO,CAAC;4BAAC,GAAC;;sBAAO;kCAChE,wDAACtB,oEAAI;wBAAC0C,UAAU,EAAC,QAAQ;wBAACqG,QAAQ,EAAC,MAAM;;0CACvC,mDAAC/E,oEAAK;gCAACqF,GAAG,EAAE,CAAC,eAAe,EAAE/D,YAAY,CAACmC,OAAO,CAAC,IAAI,CAAC;gCAAE6B,KAAK,EAAE,EAAE;gCAAEC,MAAM,EAAE,EAAE;gCAAEC,GAAG,EAAElE,YAAY,CAAClD,MAAM;8BAAI;0CAC7G,mDAACjC,oEAAI;gCAACsJ,EAAE,EAAC,KAAK;gCAACT,IAAI;0CAChB1D,YAAY,CAAClD,MAAM;8BACf;;sBACF;;cACF;0BACP,mDAACyB,oEAAY;gBACX6F,KAAK,EAAE5D,WAAW;gBAClB6D,WAAW,EAAEhC,sBAAsB;gBACnCiC,aAAa,EAAExE,iBAAiB,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE6B,uBAAuB,IAAI,CAAC,CAAC,IAAI,CAAC;gBAChF4C,SAAS,EAAE7D,oBAAoB,IAAIa,kBAAkB;gBACrDD,QAAQ,EAAEtB,YAAY,CAACsB,QAAQ;cAC/B;YACDZ,oBAAoB,kBACnB,mDAAC7F,oEAAI;gBAAC2C,KAAK,EAAC,SAAS;gBAACD,QAAQ,EAAC,MAAM;gBAACoG,KAAK,EAAE;oBAAEC,SAAS,EAAE,OAAO;iBAAE;gBAAEnG,EAAE,EAAC,KAAK;0BAC1EzB,CAAC,CAAC,uCAAuC,EAAE;oBAC1C6H,MAAM,EAAExE,kGAAqB,CAAC,IAAIN,qDAAS,CAACqB,YAAY,CAAC,EAAEJ,YAAY,CAACsB,QAAQ,EAAE,CAAC,CAAC;oBACpFwC,KAAK,EAAE9D,YAAY,CAAClD,MAAM;iBAC3B,CAAC;cACG;YAERyE,kBAAkB,kBACjB,mDAAC1G,oEAAI;gBAAC2C,KAAK,EAAC,SAAS;gBAACD,QAAQ,EAAC,MAAM;gBAACoG,KAAK,EAAE;oBAAEC,SAAS,EAAE,OAAO;iBAAE;gBAAEnG,EAAE,EAAC,KAAK;0BAC1EzB,CAAC,CAAC,+BAA+B,EAAE;oBAClCc,MAAM,EAAEkD,YAAY,CAAClD,MAAM;iBAC5B,CAAC;cACG;0BAET,mDAACjC,oEAAI;gBAACsJ,EAAE,EAAC,MAAM;gBAAC3G,KAAK,EAAC,YAAY;gBAACD,QAAQ,EAAC,MAAM;gBAACF,EAAE,EAAC,KAAK;0BACxDrB,CAAC,CAAC,oBAAoB,EAAE;oBACvBwI,OAAO,EAAEnF,kGAAqB,CAC5BU,eAAe,GAAGI,QAAQ,CAACc,aAAa,GAAGpB,mBAAmB,EAC9DG,YAAY,CAACsB,QAAQ,CACtB;iBACF,CAAC;cACG;0BACP,mDAACzC,oEAAM;gBACLgE,GAAG,EAAE,CAAC;gBACN4B,GAAG,EAAE,GAAG;gBACRL,KAAK,EAAExD,OAAO;gBACd8D,cAAc,EAAE5B,mBAAmB;gBACnC6B,IAAI,EAAC,OAAO;gBACZC,UAAU,EAAE,CAAC,EAAEhE,OAAO,CAAC,CAAC,CAAC;gBACzBiE,IAAI,EAAE,CAAC;cACP;0BACF,wDAACnK,oEAAI;gBAAC0C,UAAU,EAAC,QAAQ;gBAACD,cAAc,EAAC,eAAe;gBAACM,EAAE,EAAC,KAAK;;kCAC/D,mDAACS,mEAAgB;wBAACR,OAAO,EAAE,IAAMoF,mBAAmB,CAAC,EAAE,CAAC;kCAAE,KAAG;sBAAmB;kCAChF,mDAAC5E,mEAAgB;wBAACR,OAAO,EAAE,IAAMoF,mBAAmB,CAAC,EAAE,CAAC;kCAAE,KAAG;sBAAmB;kCAChF,mDAAC5E,mEAAgB;wBAACR,OAAO,EAAE,IAAMoF,mBAAmB,CAAC,EAAE,CAAC;kCAAE,KAAG;sBAAmB;kCAChF,mDAAC5E,mEAAgB;wBAACR,OAAO,EAAE,IAAMoF,mBAAmB,CAAC,GAAG,CAAC;kCAAG9G,CAAC,CAAC,KAAK,CAAC;sBAAoB;;cACnF;YACN,CAAC+D,eAAe,kBACf,wDAACrF,oEAAI;gBAAC+C,EAAE,EAAC,MAAM;gBAACL,UAAU,EAAC,QAAQ;gBAACD,cAAc,EAAC,eAAe;;kCAChE,wDAACtC,oEAAI;wBAACiK,EAAE,EAAC,KAAK;wBAACtH,KAAK,EAAC,YAAY;;4BAC9BxB,CAAC,CAAC,6BAA6B,CAAC;4BAAC,GACpC;;sBAAO;oBACN+I,MAAM,CAACC,QAAQ,CAAChD,SAAS,CAAC,iBACzB,wDAACvC,kBAAkB;wBACjBrC,UAAU,EAAC,QAAQ;wBACnBM,OAAO,EAAE,IAAM;4BACbqD,oBAAoB,CAAC,IAAI,CAAC;wBAC5B,CAAC;;0CAED,wDAACrB,gBAAgB;;oCAAC,GAAC;oCAACuC,kBAAkB;;8BAAoB;0CAC1D,mDAACxD,oEAAU;gCAACX,OAAO,EAAC,MAAM;gCAACM,KAAK,EAAC,IAAI;0CACnC,iEAACI,oEAAa;oCAAChB,KAAK,EAAC,YAAY;oCAACwG,KAAK,EAAC,MAAM;kCAAG;8BACtC;;sBACM,iBAErB,mDAACpF,oEAAQ;wBAACoF,KAAK,EAAE,EAAE;sBAAI;;cAEpB;YAERjE,eAAe,IAAIH,IAAI,CAACW,uBAAuB,kBAC9C,mDAAC7F,oEAAI;gBAACuK,QAAQ,EAAC,OAAO;gBAACxH,EAAE,EAAC,MAAM;0BAC9B,iEAAC5C,oEAAI;oBAAC+I,SAAS,EAAC,QAAQ;8BACrB5H,CAAC,CACA,6LAA6L,CAC9L;kBACI;cACF;0BAET,mDAACvB,oEAAM;gBACLkD,SAAS,EAAEpB,SAAS;gBACpBqB,OAAO,EAAErB,SAAS,iBAAG,mDAAC/B,oEAAa;oBAACqD,IAAI;oBAACL,KAAK,EAAC,cAAc;kBAAG,GAAG,IAAI;gBACvEE,OAAO,EAAEwF,kBAAkB;gBAC3BgC,QAAQ,EAAE,CAAC1E,WAAW,IAAI2E,UAAU,CAAC3E,WAAW,CAAC,KAAK,CAAC,IAAIE,oBAAoB,IAAIa,kBAAkB;gBACrG9D,EAAE,EAAC,MAAM;0BAERlB,SAAS,GAAGP,CAAC,CAAC,YAAY,CAAC,GAAGA,CAAC,CAAC,SAAS,CAAC;cACpC;YACR,CAAC+D,eAAe,kBACf,mDAACP,UAAU;gBAAC4F,QAAQ;gBAACC,IAAI,EAAEnD,YAAY;0BACrC,iEAACzH,oEAAM;oBAACuJ,KAAK,EAAC,MAAM;oBAACvG,EAAE,EAAC,KAAK;oBAACK,OAAO,EAAC,WAAW;8BAC9C9B,CAAC,CAAC,cAAc,EAAE;wBAAEc,MAAM,EAAEkD,YAAY,CAAClD,MAAM;qBAAE,CAAC;kBAC5C;cACE;;MAET,CACT;AACH,CAAC;AAED,iEAAe6C,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpUzB;AAA0D;AACqD;AAC1D;AACW;AAC5B;AAC8E;AACxD;AACH;AACxB;AACJ;AACY;AACiC;AACP;AACI;AACuB;AACnD;AACM;AAE/C,MAAM,EAAEiH,kBAAkB,GAAEC,aAAa,GAAE,GAAGhB,wEAAW;AAEzD,MAAMkB,eAAe,GAAGzB,wDAAS,CAAC;;;;;;;AAOlC,CAAC;AAED,MAAM0B,iBAAiB,GAAG1B,wDAAS,CAAC;;;;;;;AAOpC,CAAC;AAED,MAAM2B,iBAAiB,GAAGjJ,uEAAU;;EAAuB,CAAC;aAC/C,EAAE,CAAC,EAAEmJ,QAAQ,GAAE,GACxBA,QAAQ,GACJ5B,kDAAG,CAAC;UACF,EAAEwB,eAAe,CAAC;QACpB,CAAC,GACDxB,kDAAG,CAAC;UACF,EAAEyB,iBAAiB,CAAC;QACtB,CAAC,CAAC;;cAEI,EAAE,CAAC,EAAE/K,KAAK,GAAE,GAAKA,KAAK,CAACgB,MAAM,CAACmK,QAAQ,CAAC;;;;;;EAMnD,EAAE,CAAC,EAAEnL,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAACC,EAAE,CAAC;;;;AAIzC,CAAC;AAED,MAAMC,eAAe,GAAGvJ,uEAAU;;EAAiD,CAAC;;;;;;EAMlF,EAAE,CAAC,EAAE/B,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAACG,EAAE,CAAC;;;;EAIvC,EAAE,CAAC,EAAEvL,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAACG,EAAE,CAAC;oBACrB,EAAE,CAAC,EAAEC,WAAW,GAAE,GAAMA,WAAW,GAAG,KAAK,GAAG,IAAI,CAAE;iBACvD,EAAE,CAAC,EAAEA,WAAW,GAAEC,UAAU,GAAE,GAAMD,WAAW,GAAIC,UAAU,GAAG,YAAY,GAAG,SAAS,GAAI,QAAQ,CAAE;;AAEvH,CAAC;AAkBD,MAAMC,WAAW,GAAG3J,wDAAM,CAACwH,oEAAG,CAAC;;EAAA,CAAC;;;;;;EAM9B,EAAE,CAAC,EAAEvJ,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAACC,EAAE,CAAC;;;IAGrC,EAAEzM,oEAAI,CAAC;;;;AAIX,CAAC;AAED,MAAM+M,qBAAqB,GAAG,CAAC,EAAEC,WAAW,GAAEC,aAAa,GAAE,GAAK;IAChE,MAAM,EAAEC,YAAY,GAAEC,cAAc,GAAE,GAAGvB,mGAA2B,CAAC;QACnEoB,WAAW;QACXC,aAAa;KACd,CAAC;IAEF,qBACE;;0BACE,mDAACvB,kFAAa;gBAACyB,cAAc,EAAEA,cAAc;cAAI;0BACjD,mDAACxB,oFAAe;gBAACuB,YAAY,EAAEA,YAAY;cAAI;;MAC9C,CACJ;AACH,CAAC;AAED,MAAME,WAAW,GAAwD,CAAC,EAAE9L,OAAO,GAAEyD,IAAI,GAAEuH,QAAQ,GAAE,GAAK;IACxG,MAAM,EAAEhH,QAAQ,GAAE+H,QAAQ,GAAE,GAAGtI,IAAI;IACnC,MAAM,EAAE5D,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4N,QAAQ,GAAE,GAAGxC,wEAAmB,EAAE;IAE1C,MAAMyC,SAAS,GAAGtC,8EAAiB,CAACoC,QAAQ,CAAC;IAC7C,MAAM,EACJ/H,QAAQ,EAAE,EACRqE,OAAO,EAAE,EAAE6D,eAAe,GAAE,KAC7B,KACF,GAAGD,SAAS;IAEb,MAAME,aAAa,GAAGvC,0EAAgB,CAACqC,SAAS,CAACjI,QAAQ,CAAC;IAE1D,MAAMN,mBAAmB,GAAGM,QAAQ,EAAEN,mBAAmB,GAAG,IAAId,qDAAS,CAACoB,QAAQ,CAACN,mBAAmB,CAAC,GAAGqG,4EAAQ;IAClH,MAAMjF,aAAa,GAAGd,QAAQ,EAAEc,aAAa,GAAG,IAAIlC,qDAAS,CAACoB,QAAQ,CAACc,aAAa,CAAC,GAAGiF,4EAAQ;IAEhG,MAAMqC,uBAAuB,GAAGL,QAAQ,GACpCG,eAAe,CAACjG,IAAI,CAACvC,mBAAmB,CAAC,GACzCoB,aAAa,CAACmB,IAAI,CAACvC,mBAAmB,CAAC;IAE3C,MAAM2I,iBAAiB,GAAGxM,CAAC,CAAC,sEAAsE,CAAC;IACnG,MAAMyM,eAAe,GAAGzM,CAAC,CACvB,kIAAkI,CACnI;IAED,MAAM,EACJ0M,SAAS,EAAEC,YAAY,GACvBC,OAAO,EAAEC,UAAU,GACnBC,cAAc,EAAEC,iBAAiB,KAClC,GAAGrD,wEAAU,CAACwC,QAAQ,GAAGO,eAAe,GAAGD,iBAAiB,EAAE;QAC7DQ,SAAS,EAAE,cAAc;KAC1B,CAAC;IAEF,qBACE,wDAAC/B,iBAAiB;QAACE,QAAQ,EAAEA,QAAQ;;0BACnC,wDAACQ,WAAW;;oBACTQ,QAAQ,IAAID,QAAQ,KAAKjC,+EAAkB,IAAI,SAAU,CAAiC9F,QAAQ,CAAC+I,MAAM,kBACxG,mDAAC1D,oEAAG;wBAACnI,EAAE,EAAC,MAAM;kCACZ,iEAACuK,qBAAqB;4BACpBC,WAAW,EAAE,SAAU,CAAiC1H,QAAQ,CAAC0H,WAAW;4BAC5EC,aAAa,EAAE,SAAU,CAAiC3H,QAAQ,CAAC2H,aAAa;0BAChF;sBACE;kCAER,mDAACpN,oEAAI;wBAAC4C,aAAa,EAAC,QAAQ;wBAACD,EAAE,EAAC,KAAK;kCACnC,iEAACsJ,gEAAa;4BAAC/G,IAAI,EAAEA,IAAI;4BAAEzD,OAAO,EAAEA,OAAO;4BAAEgN,eAAe,EAAEhB,QAAQ;4BAAEiB,iBAAiB,EAAEjB,QAAQ;0BAAI;sBAClG;oBACND,QAAQ,iBAAG,mDAACtB,kBAAkB,KAAG,iBAAG,mDAACC,aAAa,KAAG;oBACrDkC,iBAAiB,IAAIF,UAAU;kCAChC,mDAACQ,MAAI;wBAACC,GAAG,EAAEX,YAAY;kCACrB,iEAAClD,oEAAQ;4BAACtB,EAAE,EAAC,KAAK;4BAACH,KAAK,EAAC,MAAM;4BAACC,MAAM,EAAC,MAAM;4BAACzG,KAAK,EAAC,YAAY;0BAAG;sBAC9D;;cACK;0BACd,wDAAC+J,eAAe;;oBACbY,QAAQ,IAAID,QAAQ,KAAKjC,+EAAkB,IAAIqC,aAAa,KAAKtC,6EAAkB,kBAClF,mDAACU,+DAAY;wBAAC9G,IAAI,EAAEA,IAAI;wBAAEO,QAAQ,EAAEiI,SAAS,CAACjI,QAAQ;wBAAEmI,aAAa,EAAEA,aAAa;sBAAI;kCAE1F,wDAAC9C,oEAAG;wBAACxB,KAAK,EAAC,MAAM;;4BACdpE,IAAI,CAACsI,QAAQ,KAAKjC,+EAAkB,kBACnC,mDAACK,wFAAyB;gCACxBnG,QAAQ,EAAEiI,SAAS,CAACjI,QAAQ;gCAC5B6D,KAAK,EAAE;oCAAC,MAAM;;oCAAI,aAAa;iCAAC;gCAChCG,EAAE,EAAE;oCAAC,MAAM;;;;;oCAAU,MAAM;iCAAC;8BAC5B;0CAEJ,wDAACoD,eAAe;gCAACE,WAAW,EAAE,CAAC,CAAC7H,IAAI,CAACsI,QAAQ;gCAAER,UAAU,EAAEa,uBAAuB,CAACrH,EAAE,CAAC,CAAC,CAAC;;oCACrFtB,IAAI,CAACsI,QAAQ,iBAAG,mDAAC7B,8DAAW;wCAAE,GAAGzG,IAAI;sCAAI,iBAAG,mDAACuG,yDAAO;wCAAE,GAAGvG,IAAI;sCAAI;kDAClE,mDAACwG,uDAAK;wCAACxG,IAAI,EAAEA,IAAI;sCAAI;;8BACL;;sBACd;;cACU;;MACA,CACrB;AACH,CAAC;AAED,iEAAeqI,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrM1B;AAAgH;AAC/D;AACS;AACA;AACL;AACgC;AACrB;AACjB;AAE4C;AACR;AACS;AAE5F,MAAM8B,iBAAiB,GAAuE,CAAC,EAC7FC,cAAc,GACd/J,iBAAiB,GACjBiI,QAAQ,KACT,GAAK;IACJ,MAAM,EAAElM,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4B,OAAO,GAAE,GAAGpB,0EAAY,EAAE;IAClC,MAAM,EAAEoN,QAAQ,GAAE,GAAGxC,wEAAmB,EAAE;IAE1C,MAAMyC,SAAS,GAAGtC,8EAAiB,CAACoC,QAAQ,CAAC;IAC7C,MAAM,EACJ/H,QAAQ,EAAE,EAAE8J,UAAU,GAAEC,oBAAoB,GAAE,GAC9CC,iBAAiB,KAClB,GAAG/B,SAAS;IACb,MAAM,EAAEgC,eAAe,GAAEC,iBAAiB,GAAEC,gBAAgB,GAAE,GAAGb,mFAAoB,CACnFtN,OAAO,EACP+N,oBAAoB,EACpBD,UAAU,EACVE,iBAAiB,EACjBlK,iBAAiB,EACjBiI,QAAQ,KAAKjC,+EAAkB,GAC3B,SAAU,CAAiC9F,QAAQ,CAACoK,qBAAqB,CACtEnI,IAAI,CAAC,SAAU,CAAiCjC,QAAQ,CAACqK,iBAAiB,CAAC,CAC3EpI,IAAI,CAAC,SAAU,CAAiCjC,QAAQ,CAACsK,gBAAgB,CAAC,GAC7E,IAAI,CACT;IAED,MAAM,EAAEzC,cAAc,GAAED,YAAY,GAAE,GAAGtB,mGAA2B,CAAC;QACnEqB,aAAa,EACXI,QAAQ,KAAKjC,+EAAkB,GAAG,SAAU,CAAiC9F,QAAQ,EAAE2H,aAAa,IAAI,GAAG,GAAG,GAAG;QACnHD,WAAW,EACTK,QAAQ,KAAKjC,+EAAkB,GAAG,SAAU,CAAiC9F,QAAQ,EAAE0H,WAAW,IAAI,GAAG,GAAG,GAAG;KAClH,CAAC;IAEF,MAAM,EAAE6C,WAAW,GAAE,GAAGhB,uEAAW,CAAC;QAAEiB,QAAQ,EAAE3C,cAAc;KAAE,CAAC;IAEjE,MAAMM,aAAa,GAAGvC,0EAAgB,CAACqC,SAAS,CAACjI,QAAQ,CAAC;IAE1D,MAAMyK,WAAW,iBACf,mDAAC/P,oEAAI;QAAC0C,QAAQ,EAAC,MAAM;QAACmG,IAAI;QAAClG,KAAK,EAAC,WAAW;QAACqN,EAAE,EAAC,MAAM;QAACC,aAAa,EAAC,WAAW;kBAC7E9O,CAAC,CAAC,oBAAoB,CAAC;MACnB;IAGT,IAAI,CAACG,OAAO,EAAE;QACZ,qBACE,wDAACoL,8DAAe;;8BACd,mDAACoC,2DAAY;8BAAEiB,WAAW;kBAAgB;8BAC1C,mDAAChB,4DAAa;8BACZ,iEAACjP,oEAAO;kCAAC,GAAC;sBAAU;kBACN;;UACA,CACnB;IACH,CAAC;IAED,IAAI,CAACqP,cAAc,EAAE;QACnB,qBACE,wDAACzC,8DAAe;;8BACd,mDAACoC,2DAAY;8BAAEiB,WAAW;kBAAgB;8BAC1C,mDAAChB,4DAAa;8BACZ,iEAAChL,oEAAQ;wBAACoF,KAAK,EAAE,GAAG;wBAAEC,MAAM,EAAC,MAAM;wBAAC8G,SAAS,EAAE,EAAE;sBAAI;kBACvC;;UACA,CACnB;IACH,CAAC;IAED,qBACE,wDAAClB,iEAAkB;QAAC1M,cAAc,EAAC,eAAe;;0BAChD,wDAACqI,oEAAG;gBAACxB,KAAK,EAAC,MAAM;;kCACf,mDAAC2F,2DAAY;kCAAEiB,WAAW;sBAAgB;kCAC1C,wDAAChB,4DAAa;;0CACZ,mDAAClP,oEAAI;gCAACsQ,IAAI,EAAC,GAAG;gCAAC1N,aAAa,EAAC,QAAQ;gCAAC2N,SAAS,EAAC,YAAY;0CAC1D;8CACGb,eAAe,iBACd;;0DACE,mDAACZ,oEAAkB;gDAAC0B,UAAU,EAAC,GAAG;gDAACxH,IAAI;gDAACnG,QAAQ,EAAC,MAAM;gDAAC+D,QAAQ,EAAE,CAAC;gDAAE8C,KAAK,EAAEiG,iBAAiB;8CAAI;4CAChGtF,MAAM,CAACC,QAAQ,CAAC/E,iBAAiB,CAAC,IAAIA,iBAAiB,GAAG,CAAC,kBAC1D,mDAACuJ,oEAAkB;gDACjB2B,OAAO,EAAC,QAAQ;gDAChB5N,QAAQ,EAAC,MAAM;gDACfC,KAAK,EAAC,YAAY;gDAClB8D,QAAQ,EAAE,CAAC;gDACX8J,MAAM,EAAC,GAAG;gDACVhH,KAAK,EAAEkG,gBAAgB;gDACvBe,IAAI,EAAC,MAAM;8CACX;;sCAEH,iBAEH;;0DACE,mDAAC1Q,oEAAO;gDAAC6C,KAAK,EAAC,cAAc;0DAAC,GAAC;8CAAU;0DACzC,mDAAC3C,oEAAI;gDAAC0C,QAAQ,EAAC,MAAM;gDAACC,KAAK,EAAC,cAAc;0DAAC,OAE3C;8CAAO;;sCACN;kCAEJ;8BACE;0CACP,mDAAC9C,oEAAI;gCAACsQ,IAAI,EAAC,KAAK;gCAAC1N,aAAa,EAAC,QAAQ;gCAAC2N,SAAS,EAAC,YAAY;gCAAC7N,UAAU,EAAC,YAAY;0CACnF;oCAAC4I,qFAAsB;oCAAEA,6EAAkB;iCAAC,CAACuF,QAAQ,CAACjD,aAAa,CAAC,kBACnE,mDAACwB,wFAAwB;oCAAC5B,QAAQ,EAAEA,QAAQ;oCAAEsD,cAAc;kCAAG;8BAG5D;;sBACO;;cACZ;YACL,CAACrD,QAAQ,IAAID,QAAQ,KAAKjC,+EAAkB,IAAI,SAAU,CAAiC9F,QAAQ,CAAC+I,MAAM,kBACzG,wDAAC1D,oEAAG;gBAAC/B,QAAQ,EAAC,OAAO;;kCACnB,mDAACkG,2DAAY;kCACX,iEAAC9O,oEAAI;4BAAC0C,QAAQ,EAAC,MAAM;4BAACmG,IAAI;4BAAClG,KAAK,EAAC,WAAW;4BAACqN,EAAE,EAAC,MAAM;4BAACC,aAAa,EAAC,WAAW;sCAC7E9O,CAAC,CAAC,aAAa,CAAC;0BACZ;sBACM;kCACf,mDAAC4N,4DAAa;kCACZ,sEAAClP,oEAAI;4BAACsQ,IAAI,EAAC,GAAG;4BAAC1N,aAAa,EAAC,QAAQ;4BAAC2N,SAAS,EAAC,YAAY;;8CAC1D,mDAACzB,oEAAkB;oCACjBhM,KAAK,EAAC,MAAM;oCACZ0N,UAAU,EAAC,GAAG;oCACdxH,IAAI;oCACJnG,QAAQ,EAAC,MAAM;oCACf6G,KAAK,EAAEsG,WAAW,GAAGA,WAAW,EAAEe,QAAQ,EAAE,GAAG,GAAG;oCAClDnK,QAAQ,EAAE,CAAC;oCACX+J,IAAI,EAAC,GAAG;kCACR;8CACF,mDAACxQ,oEAAI;oCAAC0C,QAAQ,EAAC,MAAM;oCAACC,KAAK,EAAC,YAAY;8CACrCxB,CAAC,CAAC,qBAAqB,EAAE;wCAAE2O,QAAQ,EAAE5C,YAAY;qCAAE,CAAC;kCAChD;;0BACF;sBACO;;cACZ;;MAEW,CACtB;AACH,CAAC;AAED,iEAAegC,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJhC;AAAwG;AAC9C;AACkD;AAC7D;AACD;AACY;AACmB;AAQ7E,MAAMrD,YAAY,GAAyD,CAAC,EAAE9G,IAAI,GAAEO,QAAQ,GAAEmI,aAAa,GAAE,GAAK;IAChH,MAAM,EAAEtM,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAE9B,MAAM,EAAEuR,WAAW,GAAEC,SAAS,GAAE,GAAGrC,uEAAW,CAAC;QAC7CiB,QAAQ,EACNrC,aAAa,GAAGtC,qFAAsB,GAClC,CAAC,QAAS,CAAiC6B,WAAW,GACtD,CAAC,QAAS,CAAiCC,aAAa,GACxD8D,+EAAiB;KACxB,CAAC;IAEF,MAAM,CAACI,yBAAyB,CAAC,GAAGN,uEAAQ,eAAC,mDAACG,4FAAuB;QAACjM,IAAI,EAAEA,IAAI;MAAI,CAAC;IACrF,MAAM,CAACqM,uBAAuB,CAAC,GAAGP,uEAAQ,eAAC,mDAACG,4FAAuB;QAACjM,IAAI,EAAEA,IAAI;QAAEsM,WAAW,EAAE,CAAC;MAAI,CAAC;IAEnG,qBACE;;0BACE,mDAAC1G,mEAAG;gBAAC2G,OAAO,EAAC,KAAK;gBAAC9O,EAAE,EAAC,KAAK;0BACzB,sEAAC3C,mEAAI;oBAACyC,cAAc,EAAC,eAAe;;sCAClC,mDAACtC,oEAAI;4BAAC0C,QAAQ,EAAC,MAAM;4BAACC,KAAK,EAAC,YAAY;4BAACoG,SAAS,EAAC,MAAM;sCACtD5H,CAAC,CAAC,cAAc,CAAC;0BACb;wBACN8P,WAAW,iBACV,wDAACpR,mEAAI;4BAAC0C,UAAU,EAAC,QAAQ;4BAACD,cAAc,EAAC,YAAY;;8CACnD,mDAACwO,oEAAO;oCAACpO,QAAQ,EAAC,MAAM;oCAAC6G,KAAK,EAAEe,UAAU,CAAC2G,WAAW,CAAC;oCAAExK,QAAQ,EAAE,CAAC;oCAAE+J,IAAI,EAAC,GAAG;oCAACe,UAAU,EAAC,KAAK;kCAAG;8CAClG,mDAAC3R,oEAAM;oCACLiD,OAAO,EAAE,CAAC2O,CAAC,GAAK;wCACdA,CAAC,CAACC,eAAe,EAAE;wCACnBN,yBAAyB,EAAE;oCAC7B,CAAC;oCACDlO,OAAO,EAAC,MAAM;oCACdkG,KAAK,EAAC,MAAM;oCACZC,MAAM,EAAC,MAAM;oCACbsI,OAAO,EAAC,KAAK;oCACbC,UAAU,EAAC,KAAK;8CAEhB,iEAAChO,oEAAa;wCAAChB,KAAK,EAAC,YAAY;wCAACwG,KAAK,EAAC,MAAM;sCAAG;kCAC1C;;0BACJ,iBAEP,mDAACpF,oEAAQ;4BAACoF,KAAK,EAAC,MAAM;4BAACC,MAAM,EAAC,MAAM;0BAAG;;kBAEpC;cACH;YACLrE,IAAI,CAACsI,QAAQ,KAAKjC,+EAAkB,kBACnC,mDAACT,mEAAG;gBAAC2G,OAAO,EAAC,KAAK;gBAAC9O,EAAE,EAAC,KAAK;0BACzB,sEAAC3C,mEAAI;oBAACyC,cAAc,EAAC,eAAe;;sCAClC,mDAACtC,oEAAI;4BAAC0C,QAAQ,EAAC,MAAM;4BAACC,KAAK,EAAC,YAAY;4BAACoG,SAAS,EAAC,MAAM;sCACtD5H,CAAC,CAAC,YAAY,CAAC;0BACX;wBACN+P,SAAS,iBACR,wDAACrR,mEAAI;4BAAC0C,UAAU,EAAC,QAAQ;4BAACD,cAAc,EAAC,YAAY;;8CACnD,mDAACtC,oEAAI;oCAAC0C,QAAQ,EAAC,MAAM;oCAACoG,KAAK,EAAE;wCAAE8I,UAAU,EAAE,QAAQ;qCAAE;oCAAEL,UAAU,EAAC,KAAK;8CACpEpQ,CAAC,CAAC,OAAO,CAAC;kCACN;8CACP,mDAAC2P,oEAAO;oCACNxH,EAAE,EAAC,KAAK;oCACR5G,QAAQ,EAAC,MAAM;oCACf6G,KAAK,EAAEe,UAAU,CAAC4G,SAAS,CAAC;oCAC5BzK,QAAQ,EAAE,CAAC;oCACX+J,IAAI,EAAC,GAAG;oCACRe,UAAU,EAAC,KAAK;kCAChB;8CACF,mDAAC3R,oEAAM;oCACLiD,OAAO,EAAE,CAAC2O,CAAC,GAAK;wCACdA,CAAC,CAACC,eAAe,EAAE;wCACnBL,uBAAuB,EAAE;oCAC3B,CAAC;oCACDnO,OAAO,EAAC,MAAM;oCACdkG,KAAK,EAAC,MAAM;oCACZC,MAAM,EAAC,MAAM;oCACbsI,OAAO,EAAC,KAAK;oCACbC,UAAU,EAAC,KAAK;8CAEhB,iEAAChO,oEAAa;wCAAChB,KAAK,EAAC,YAAY;wCAACwG,KAAK,EAAC,MAAM;sCAAG;kCAC1C;;0BACJ,iBAEP,mDAACpF,oEAAQ;4BAACoF,KAAK,EAAC,MAAM;4BAACC,MAAM,EAAC,MAAM;0BAAG;;kBAEpC;cACH;;MAEP,CACJ;AACH,CAAC;AAED,iEAAeyC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpG3B;AAA6F;AACzD;AACa;AACI;AACmD;AAC9C;AACH;AAGgB;AACnB;AAEpD,MAAMkG,aAAa,GAAuE,CAAC,EACzF/Q,MAAM,GACNgR,YAAY,GACZlR,YAAY,GACZwE,QAAQ,GACR6J,cAAc,GACd/J,iBAAiB,KAClB,GAAK;IACJ,MAAM,EAAEjE,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4B,OAAO,GAAE,GAAGpB,0EAAY,EAAE;IAElC,MAAM+R,QAAQ,GAAG3M,QAAQ,EAAE4M,aAAa,GAAG,IAAIhO,qDAAS,CAACoB,QAAQ,CAAC4M,aAAa,CAAC,GAAG7G,4EAAQ;IAC3F,MAAM8G,mBAAmB,GAAGL,4FAAgB,CAACG,QAAQ,EAAEnR,YAAY,CAAC2F,QAAQ,CAAC;IAC7E,MAAM2L,yBAAyB,GAAGN,4FAAgB,CAACG,QAAQ,CAAClK,YAAY,CAAC3C,iBAAiB,CAAC,EAAEtE,YAAY,CAAC2F,QAAQ,CAAC;IACnH,MAAM4L,WAAW,GAAGJ,QAAQ,CAAC5L,EAAE,CAAC,CAAC,CAAC;IAClC,MAAMiM,WAAW,GAAG9N,iGAAqB,CAACyN,QAAQ,EAAEnR,YAAY,CAAC2F,QAAQ,CAAC;IAC1E,MAAM5F,gBAAgB,GAAGH,wFAAY,CAACyR,mBAAmB,EAAE,CAAC,EAAE,CAAC,CAAC;IAChE,MAAMlR,SAAS,GAAG+Q,YAAY,KAAKH,0FAAoB;IAEvD,MAAM,CAACW,gBAAgB,CAAC,GAAG3B,uEAAQ,eACjC,mDAACjQ,qEAAY;QACXC,gBAAgB,EAAEA,gBAAgB;QAClCyR,WAAW,EAAEA,WAAW;QACxBxR,YAAY,EAAEA,YAAY;QAC1BC,mBAAmB,EAAEqR,yBAAyB;QAC9CpR,MAAM,EAAEA,MAAM;QACdC,SAAS,EAAEA,SAAS;MACpB,CACH;IAED,MAAM8O,WAAW,iBACf;;0BACE,wDAAC/P,oEAAI;gBAAC0C,QAAQ,EAAC,MAAM;gBAACmG,IAAI;gBAAClG,KAAK,EAAC,WAAW;gBAACqN,EAAE,EAAC,MAAM;gBAACC,aAAa,EAAC,WAAW;;oBAC7EnP,YAAY,CAACmB,MAAM;oBAAE,GAAG;;cACpB;0BACP,mDAACjC,oEAAI;gBAAC0C,QAAQ,EAAC,MAAM;gBAACmG,IAAI;gBAAClG,KAAK,EAAC,YAAY;gBAACqN,EAAE,EAAC,MAAM;gBAACC,aAAa,EAAC,WAAW;0BAC9E9O,CAAC,CAAC,QAAQ,CAAC;cACP;;MACN;IAGL,IAAI,CAACG,OAAO,EAAE;QACZ,qBACE,wDAACoL,8DAAe;;8BACd,mDAACoC,2DAAY;8BAAEiB,WAAW;kBAAgB;8BAC1C,wDAAChB,4DAAa;;sCACZ,mDAACjP,oEAAO;sCAAC,GAAC;0BAAU;sCACpB,mDAACF,oEAAM;4BAACyK,QAAQ;sCAAElJ,CAAC,CAAC,SAAS,CAAC;0BAAU;;kBAC1B;;UACA,CACnB;IACH,CAAC;IAED,IAAI,CAACgO,cAAc,EAAE;QACnB,qBACE,wDAACzC,8DAAe;;8BACd,mDAACoC,2DAAY;8BAAEiB,WAAW;kBAAgB;8BAC1C,mDAAChB,4DAAa;8BACZ,iEAAChL,oEAAQ;wBAACoF,KAAK,EAAE,GAAG;wBAAEC,MAAM,EAAC,MAAM;wBAAC8G,SAAS,EAAE,EAAE;sBAAI;kBACvC;;UACA,CACnB;IACH,CAAC;IAED,qBACE,wDAACxD,8DAAe;;0BACd,mDAACoC,2DAAY;0BAAEiB,WAAW;cAAgB;0BAC1C,wDAAChB,4DAAa;;kCACZ,mDAAClP,oEAAI;wBAACsQ,IAAI,EAAC,GAAG;wBAAC1N,aAAa,EAAC,QAAQ;wBAAC2N,SAAS,EAAC,aAAa;kCAC3D;sCACGiC,WAAW,iBACV;;kDACE,mDAACvB,oEAAO;wCAACT,UAAU,EAAC,GAAG;wCAACxH,IAAI;wCAACnG,QAAQ,EAAC,MAAM;wCAAC+D,QAAQ,EAAE,CAAC;wCAAE8C,KAAK,EAAE4I,mBAAmB;sCAAI;oCACvF/M,iBAAiB,GAAG,CAAC,kBACpB,mDAAC0L,oEAAO;wCACNR,OAAO,EAAC,QAAQ;wCAChB5N,QAAQ,EAAC,MAAM;wCACfC,KAAK,EAAC,YAAY;wCAClB8D,QAAQ,EAAE,CAAC;wCACX8J,MAAM,EAAC,GAAG;wCACVhH,KAAK,EAAE6I,yBAAyB;wCAChC5B,IAAI,EAAC,MAAM;sCACX;;8BAEH,iBAEH;;kDACE,mDAAC1Q,oEAAO;wCAAC6C,KAAK,EAAC,cAAc;kDAAC,GAAC;sCAAU;kDACzC,mDAAC3C,oEAAI;wCAAC0C,QAAQ,EAAC,MAAM;wCAACC,KAAK,EAAC,cAAc;kDAAC,OAE3C;sCAAO;;8BACN;0BAEJ;sBACE;kCACP,mDAAC/C,oEAAM;wBAACyK,QAAQ,EAAE,CAACgI,WAAW;wBAAExP,OAAO,EAAE2P,gBAAgB;kCACtDrR,CAAC,CAAC,SAAS,CAAC;sBACN;;cACK;;MACA,CACnB;AACH,CAAC;AAED,iEAAe4Q,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnH5B;AAe2B;AACsB;AACb;AAC4B;AACX;AACK;AACd;AAES;AACgC;AACrB;AAC1B;AACiB;AACmC;AACX;AACX;AACyC;AAEL;AACvC;AACG;AACpB;AAC2B;AACJ;AACE;AACP;AACM;AACG;AACV;AACM;AACC;AAExE,MAAM8B,iBAAiB,GAAG1Q,wEAAU;;EAAA,CAAC;;AAErC,CAAC;AAMD,MAAM2Q,MAAM,GAAyE,CAAC,EAAE/O,IAAI,GAAE,GAAK;IACjG,MAAM,EACJ/D,MAAM,GACNmE,YAAY,GACZrE,YAAY,GACZyE,YAAY,GACZwO,UAAU,GACV/B,YAAY,GACZ1M,QAAQ,GACRL,iBAAiB,GACjBoI,QAAQ,GACR2G,kBAAkB,GAClB7E,cAAc,KACf,GAAGpK,IAAI;IACR,MAAM,EAAE5D,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4B,OAAO,GAAE,GAAGpB,0EAAY,EAAE;IAClC,MAAM,EAAEoN,QAAQ,GAAE,GAAGxC,wEAAmB,EAAE;IAE1C,MAAMmJ,oBAAoB,GAAGpB,qEAAQ,CAAC1N,YAAY,CAACmC,OAAO,IAAI,EAAE,CAAC;IACjE,MAAM,EAAE4M,aAAa,EAAEC,iBAAiB,GAAEzS,SAAS,EAAE0S,aAAa,GAAE,GAAGpB,4EAAc,CACnFiB,oBAAoB,EACpBjT,MAAM,EACNF,YAAY,CAACmB,MAAM,CACpB;IAED,MAAM,EAAEoS,eAAe,GAAEC,cAAc,GAAE,GAAGrB,yFAA2B,CAAC5F,QAAQ,CAAC;IACjF,MAAM,EAAE6G,aAAa,EAAEK,kBAAkB,GAAE7S,SAAS,EAAE8S,cAAc,GAAE,GAAGtB,6EAAe,CAAC7F,QAAQ,EAAEiH,cAAc,CAAC;IAElH,MAAMJ,aAAa,GAAG7G,QAAQ,GAAGkH,kBAAkB,GAAGJ,iBAAiB;IACvE,MAAMzS,SAAS,GAAG2L,QAAQ,GAAGmH,cAAc,GAAGJ,aAAa;IAE3D,MAAMnT,SAAS,GAAG+Q,YAAY,KAAKH,0FAAoB;IACvD,MAAM4C,SAAS,GAAGnP,QAAQ,EAAEmP,SAAS,GAAG,IAAIvQ,qDAAS,CAACoB,QAAQ,CAACmP,SAAS,CAAC,GAAGpJ,6EAAQ;IACpF,MAAMjF,aAAa,GAAGd,QAAQ,EAAEc,aAAa,GAAG,IAAIlC,qDAAS,CAACoB,QAAQ,CAACc,aAAa,CAAC,GAAGiF,6EAAQ;IAChG,MAAMqJ,qBAAqB,GAAG,CAACrH,QAAQ,IAAIjH,aAAa,CAACC,EAAE,CAAC,CAAC,CAAC;IAE9D,MAAMrB,mBAAmB,GAAGM,QAAQ,EAAEN,mBAAmB,GAAG,IAAId,qDAAS,CAACoB,QAAQ,CAACN,mBAAmB,CAAC,GAAGqG,6EAAQ;IAElH,MAAMsJ,kBAAkB,GAAG7C,6FAAgB,CAAC1L,aAAa,EAAEjB,YAAY,CAACsB,QAAQ,CAAC;IACjF,MAAMmO,wBAAwB,GAAG9C,6FAAgB,CAC/C1L,aAAa,CAAC2B,YAAY,CAAC9C,iBAAiB,CAAC,EAC7CE,YAAY,CAACsB,QAAQ,CACtB;IAED,MAAM8G,SAAS,GAAGtC,8EAAiB,CAAClG,IAAI,CAACsI,QAAQ,CAAC;IAClD,MAAM,EACJ/H,QAAQ,EAAE,EACR8J,UAAU,GACVzF,OAAO,EAAE,EAAE6D,eAAe,GAAEqH,mBAAmB,GAAE,KAClD,KACF,GAAGtH,SAAS;IAEb,MAAM,EAAEuH,WAAW,GAAEC,aAAa,GAAEC,aAAa,GAAE,GAAGpJ,yHAA2B,CAAC;QAChFqB,aAAa,EACXI,QAAQ,KAAKjC,+EAAkB,GAAG,SAAU,CAAiC9F,QAAQ,EAAE2H,aAAa,IAAI,GAAG,GAAG,GAAG;QACnHD,WAAW,EACTK,QAAQ,KAAKjC,+EAAkB,GAAG,SAAU,CAAiC9F,QAAQ,EAAE0H,WAAW,IAAI,GAAG,GAAG,GAAG;QACjHgI,aAAa,EACX3H,QAAQ,KAAKjC,+EAAkB,GAAG,SAAU,CAAiC9F,QAAQ,EAAE0P,aAAa,IAAI,GAAG,GAAG,GAAG;KACpH,CAAC;IAEF,MAAMC,eAAe,GAAG7F,UAAU,CAAC/I,EAAE,CAAC,CAAC,CAAC;IACxC,MAAM6O,iBAAiB,GAAG7H,QAAQ,IAAI4H,eAAe;IACrD,MAAME,qBAAqB,GAAGrD,6FAAgB,CAACtE,eAAe,CAACzF,YAAY,CAAC9C,iBAAiB,CAAC,EAAEE,YAAY,CAACsB,QAAQ,CAAC;IAEtH,MAAM2O,aAAa,GAAG/H,QAAQ,GAAG,CAACgH,eAAe,GAAG,CAACI,SAAS,CAACpO,EAAE,CAAC,CAAC,CAAC,IAAI,CAACpF,SAAS;IAElF,MAAM,CAACoU,sBAAsB,CAAC,GAAGxE,wEAAQ,eAAC,mDAACuC,8EAAoB;QAACkC,WAAW,EAAEnQ,YAAY,CAAClD,MAAM;MAAI,CAAC;IAErG,MAAM,CAACsT,cAAc,CAAC,GAAG1E,wEAAQ,eAC/B,mDAAC/L,oEAAU;QACT7D,SAAS,EAAEA,SAAS;QACpB8D,IAAI,EAAEA,IAAI;QACVC,mBAAmB,EAAEA,mBAAmB;QACxCC,iBAAiB,EAAEA,iBAAiB;MACpC,CACH;IAED,MAAM,CAACuQ,mBAAmB,CAAC,GAAG3E,wEAAQ,eAAC,mDAACsC,gFAAe;QAACsC,UAAU,EAAEzQ,mBAAmB;QAAED,IAAI,EAAEA,IAAI;MAAI,CAAC;IAExG,MAAM,CAAC2Q,gBAAgB,CAAC,GAAG7E,wEAAQ,eACjC,mDAAC/L,oEAAU;QACTE,mBAAmB,EAAEA,mBAAmB;QACxC/D,SAAS,EAAEA,SAAS;QACpB8D,IAAI,EAAEA,IAAI;QACVE,iBAAiB,EAAEA,iBAAiB;QACpCC,eAAe;MACf,CACH;IAED,MAAM,CAACyQ,qBAAqB,CAAC,GAAG9E,wEAAQ,eAAC,mDAACsC,gFAAe;QAACsC,UAAU,EAAEjI,eAAe;QAAEzI,IAAI,EAAEA,IAAI;QAAEG,eAAe;MAAG,CAAC;IAEtH,MAAM,CAAC0Q,2BAA2B,CAAC,GAAG/E,wEAAQ,eAC5C,mDAAC+C,qFAAiB;QAChBiC,cAAc,EAAE7Q,mBAAmB;QACnCG,YAAY,EAAEA,YAAY;QAC1BH,mBAAmB,EAAEA,mBAAmB;MACxC,CACH;IAED,MAAM,EAAE8Q,eAAe,GAAEC,gBAAgB,GAAE,GAAGjD,wGAAqB,CAACkB,kBAAkB,CAAC;IAEvF,MAAMxO,OAAO,GAAG,IAAM;QACpB,IAAI6H,QAAQ,EAAE;YACZmI,mBAAmB,EAAE;QACvB,OAAO;YACLD,cAAc,EAAE;QAClB,CAAC;IACH,CAAC;IAED,MAAM9P,SAAS,GAAG,IAAM;QACtB,IAAI4H,QAAQ,EAAE;YACZsI,qBAAqB,EAAE;QACzB,OAAO;YACLD,gBAAgB,EAAE;QACpB,CAAC;IACH,CAAC;IAED,MAAM,EAAE7H,SAAS,GAAEE,OAAO,GAAEE,cAAc,GAAE,GAAGpD,wEAAU,CACvD1J,CAAC,CAAC,sEAAsE,CAAC,EACzE;QAAEgN,SAAS,EAAE,QAAQ;KAAE,CACxB;IAED,MAAM6H,oBAAoB,GAAG7U,CAAC,CAC5B,4OAA4O,EAC5O;QAAE6T,aAAa;KAAE,CAClB;IACD,MAAM,EACJnH,SAAS,EAAEoI,kBAAkB,GAC7BlI,OAAO,EAAEmI,gBAAgB,GACzBjI,cAAc,EAAEkI,uBAAuB,KACxC,GAAGtL,wEAAU,CAACmL,oBAAoB,EAAE;QACnC7H,SAAS,EAAE,QAAQ;KACpB,CAAC;IAEF,MAAMiI,iBAAiB,GAAG7Q,YAAY,CAACc,EAAE,CAAC,CAAC,CAAC,IAAIf,QAAQ,CAACc,aAAa,CAACiQ,GAAG,CAAC9Q,YAAY,CAAC;IAExF,IAAI,CAACjE,OAAO,EAAE;QACZ,qBACE,wDAACoL,+DAAe;;8BACd,mDAACoC,4DAAY;8BACX,iEAAC9O,oEAAI;wBAAC0C,QAAQ,EAAC,MAAM;wBAACmG,IAAI;wBAAClG,KAAK,EAAC,YAAY;wBAACqN,EAAE,EAAC,MAAM;wBAACC,aAAa,EAAC,WAAW;kCAC9E9O,CAAC,CAAC,eAAe,CAAC;sBACd;kBACM;8BACf,mDAAC4N,6DAAa;8BACZ,iEAAC6D,+EAAmB;wBAACzJ,KAAK,EAAC,MAAM;sBAAG;kBACtB;;UACA,CACnB;IACH,CAAC;IAED,IAAI,CAACgG,cAAc,EAAE;QACnB,qBACE,wDAACzC,+DAAe;;8BACd,mDAACoC,4DAAY;8BACX,iEAAC9O,oEAAI;wBAAC0C,QAAQ,EAAC,MAAM;wBAACmG,IAAI;wBAAClG,KAAK,EAAC,YAAY;wBAACqN,EAAE,EAAC,MAAM;wBAACC,aAAa,EAAC,WAAW;kCAC9E9O,CAAC,CAAC,eAAe,CAAC;sBACd;kBACM;8BACf,mDAAC4N,6DAAa;8BACZ,iEAAChL,oEAAQ;wBAACoF,KAAK,EAAE,GAAG;wBAAEC,MAAM,EAAC,MAAM;wBAAC8G,SAAS,EAAE,EAAE;sBAAI;kBACvC;;UACA,CACnB;IACH,CAAC;IAED,IAAI4F,eAAe,IAAIC,gBAAgB,EAAE;QACvC,qBACE,wDAACrJ,+DAAe;;8BACd,mDAACoC,4DAAY;8BACX,iEAAC9O,oEAAI;wBAAC0C,QAAQ,EAAC,MAAM;wBAACmG,IAAI;wBAAClG,KAAK,EAAC,YAAY;wBAACqN,EAAE,EAAC,MAAM;wBAACC,aAAa,EAAC,WAAW;kCAC9E9O,CAAC,CAAC,aAAa,CAAC;sBACZ;kBACM;8BACf,mDAAC4N,6DAAa;8BACZ,iEAACsE,2FAAyB;wBAACW,kBAAkB,EAAEA,kBAAkB;sBAAI;kBACvD;;UACA,CACnB;IACH,CAAC;IAED,IAAIoB,aAAa,EAAE;QACjB,qBACE,wDAAC1I,+DAAe;;8BACd,mDAACoC,4DAAY;8BACX,iEAAC9O,oEAAI;wBAAC0C,QAAQ,EAAC,MAAM;wBAACmG,IAAI;wBAAClG,KAAK,EAAC,YAAY;wBAACqN,EAAE,EAAC,MAAM;wBAACC,aAAa,EAAC,WAAW;kCAC9E9O,CAAC,CAAC,aAAa,CAAC;sBACZ;kBACM;8BACf,mDAAC4N,6DAAa;8BACZ,iEAACnP,oEAAM;wBAACuJ,KAAK,EAAC,MAAM;wBAACkB,QAAQ,EAAE3I,SAAS;wBAAEmB,OAAO,EAAEqR,aAAa;wBAAEjR,OAAO,EAAC,WAAW;kCAClF9B,CAAC,CAAC,QAAQ,CAAC;sBACL;kBACK;;UACA,CACnB;IACH,CAAC;IAED,kDAAkD;IAClD,IAAIuT,qBAAqB,IAAIQ,iBAAiB,EAAE;QAC9C,MAAMzH,aAAa,GAAGvC,0EAAgB,CAACqC,SAAS,CAACjI,QAAQ,CAAC;QAC1D,qBACE;;8BACE,mDAACoH,+DAAe;oBAACyD,IAAI,EAAE1C,aAAa,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;8BAChD,sEAACsB,6DAAa;wBAACnM,EAAE,EAAE,CAAC;;0CAClB,wDAAC/C,oEAAI;gCAACsQ,IAAI,EAAC,GAAG;gCAAC1N,aAAa,EAAC,QAAQ;gCAAC2N,SAAS,EAAC,YAAY;;kDAC1D,wDAACtB,4DAAY;;0DACX,wDAAC9O,oEAAI;gDAAC0C,QAAQ,EAAC,MAAM;gDAACmG,IAAI;gDAAClG,KAAK,EAAC,WAAW;gDAACqN,EAAE,EAAC,MAAM;gDAACC,aAAa,EAAC,WAAW;;oDAC7E9K,YAAY,CAAClD,MAAM;oDAAE,GAAG;;8CACpB;0DACP,mDAACjC,oEAAI;gDAAC0C,QAAQ,EAAC,MAAM;gDAACmG,IAAI;gDAAClG,KAAK,EAAC,YAAY;gDAACqN,EAAE,EAAC,MAAM;gDAACC,aAAa,EAAC,WAAW;0DAC9E5C,QAAQ,KAAKjC,+EAAkB,IAAI,SAAU,CAAiC9F,QAAQ,CAAC+I,MAAM,GAC1FlN,CAAC,CAAC,QAAQ,CAAC,GACXA,CAAC,CAAC,QAAQ,CAAC;8CACV;;sCACM;kDACf,mDAAC4N,6DAAa;kDACZ,sEAACpE,oEAAG;4CAAC2L,QAAQ,EAAC,UAAU;;8DACtB,mDAACxF,oEAAO;oDACNT,UAAU,EAAC,GAAG;oDACdxH,IAAI;oDACJnG,QAAQ,EAAC,MAAM;oDACf+D,QAAQ,EAAE,CAAC;oDACX8C,KAAK,EAAE8D,QAAQ,GAAGwH,mBAAmB,GAAGF,kBAAkB;kDAC1D;8DACF,mDAAChC,oEAAU;oDACT4D,WAAW,EAAErM,MAAM,CAACC,QAAQ,CAACkD,QAAQ,GAAG8H,qBAAqB,GAAGP,wBAAwB,CAAC;oDACzFzL,KAAK,EAAE,GAAG;oDACVqN,YAAY,EAAE;wDAAEpN,MAAM,EAAE,MAAM;qDAAE;oDAChCqN,WAAW,EAAC,KAAK;8DAEjB,iEAAC3F,oEAAO;wDACNpO,QAAQ,EAAC,MAAM;wDACf4N,OAAO,EAAC,QAAQ;wDAChB3N,KAAK,EAAC,YAAY;wDAClB8D,QAAQ,EAAE,CAAC;wDACX8C,KAAK,EAAE8D,QAAQ,GAAG8H,qBAAqB,GAAGP,wBAAwB;wDAClEpE,IAAI,EAAC,MAAM;wDACXD,MAAM,EAAC,GAAG;sDACV;kDACS;;0CACT;sCACQ;oCACf9C,aAAa,KAAKtC,iFAAoB,kBACrC,mDAACR,oEAAG;wCAAC/H,EAAE,EAAC,MAAM;kDACZ,iEAAC2Q,mFAAa;4CACZvG,WAAW,EAAE,SAAU,CAAiC1H,QAAQ,CAAC0H,WAAW;4CAC5EC,aAAa,EAAE,SAAU,CAAiC3H,QAAQ,CAAC2H,aAAa;4CAChF0J,mBAAmB,EAAEnJ,eAAe;4CACpCrI,YAAY,EAAEA,YAAY;4CAC1B0Q,cAAc,EAAE7Q,mBAAmB;4CACnCA,mBAAmB,EAAEA,mBAAmB;0CACxC;sCACE;;8BAEH;4BACNyI,aAAa,IAAItC,iFAAoB,kBACpC,wDAACtL,oEAAI;gCAACsQ,IAAI,EAAC,GAAG;gCAAC7G,EAAE,EAAC,MAAM;gCAAC7G,aAAa,EAAC,QAAQ;gCAAC2N,SAAS,EAAC,YAAY;;kDACpE,mDAACpQ,oEAAI;wCAAC0C,QAAQ,EAAC,MAAM;wCAACmG,IAAI;wCAAClG,KAAK,EAAC,YAAY;wCAACqN,EAAE,EAAC,MAAM;wCAACC,aAAa,EAAC,WAAW;kDAC9E9O,CAAC,CAAC,YAAY,CAAC;sCACX;kDACP,wDAACnB,oEAAI;wCACHqQ,UAAU,EAAC,GAAG;wCACdzN,EAAE,EAAC,KAAK;wCACRiG,IAAI;wCACJnG,QAAQ,EAAC,MAAM;wCACfC,KAAK,EAAE8K,aAAa,IAAItC,uFAAuB,GAAG,SAAS,GAAG,MAAM;;4CAEnEsC,aAAa,IAAItC,uFAAuB,GAAGhK,CAAC,CAAC,UAAU,CAAC,GAAG4T,aAAa;4CACxEoB,uBAAuB,IAAID,gBAAgB;0DAC5C,mDAAC1H,MAAI;gDAACC,GAAG,EAAEwH,kBAAkB;0DAC3B,iEAACrL,oEAAQ;oDAACtB,EAAE,EAAC,KAAK;oDAACH,KAAK,EAAC,MAAM;oDAACC,MAAM,EAAC,MAAM;oDAACzG,KAAK,EAAC,YAAY;kDAAG;8CAC9D;;sCACF;kDACP,mDAAC3C,oEAAI;wCACHoJ,MAAM,EAAC,MAAM;wCACb1G,QAAQ,EAAC,MAAM;wCACf4N,OAAO,EAAC,QAAQ;wCAChB3N,KAAK,EAAE8K,aAAa,IAAItC,uFAAuB,GAAG,SAAS,GAAG,MAAM;kDAEnEhK,CAAC,CAAC,WAAW,EAAE;4CAAE0V,IAAI,EAAE/B,WAAW;yCAAE,CAAC;sCACjC;oCACNrH,aAAa,KAAKtC,iFAAoB,kBACrC,mDAACR,oEAAG;wCAAC/H,EAAE,EAAC,MAAM;kDACZ,iEAAC4Q,0FAAY;4CACXxG,WAAW,EAAE,SAAU,CAAiC1H,QAAQ,CAAC0H,WAAW;4CAC5EC,aAAa,EAAE,SAAU,CAAiC3H,QAAQ,CAAC2H,aAAa;4CAChF9H,YAAY,EAAEA,YAAY;4CAC1B0Q,cAAc,EAAE7Q,mBAAmB;4CACnC2R,mBAAmB,EAAE9B,mBAAmB;sDAEvC1T,CAAC,CAAC,QAAQ,CAAC;0CACC;sCACX;;8BAEH;4BAEPsM,CAAAA,aAAa,KAAKtC,qFAAsB,IAAI,CAACkC,QAAQ,mBACrD,wDAACwG,iBAAiB;;kDAChB,mDAACjQ,oEAAU;wCAACX,OAAO,EAAC,WAAW;wCAACJ,OAAO,EAAE4C,SAAS;wCAAEwE,EAAE,EAAC,KAAK;kDAC1D,iEAACyI,oEAAS;4CAAC/P,KAAK,EAAC,SAAS;4CAACwG,KAAK,EAAC,MAAM;0CAAG;sCAC/B;oCACZiN,iBAAiB,iBAChB,mDAAC5H,MAAI;wCAACC,GAAG,EAAEZ,SAAS;kDAClB,iEAACjK,oEAAU;4CAACX,OAAO,EAAC,WAAW;4CAACoH,QAAQ;sDACtC,iEAACoI,oEAAO;gDAAC9P,KAAK,EAAC,cAAc;gDAACwG,KAAK,EAAC,MAAM;gDAACC,MAAM,EAAC,MAAM;8CAAG;0CAChD;sCACR,iBAEP,mDAACxF,oEAAU;wCACTX,OAAO,EAAC,WAAW;wCACnBJ,OAAO,EAAEmC,mBAAmB,CAACqB,EAAE,CAAC,CAAC,CAAC,GAAGb,OAAO,GAAG6P,sBAAsB;wCACrEhL,QAAQ,EAAE0J,UAAU;kDAEpB,iEAACtB,oEAAO;4CAAC9P,KAAK,EAAC,SAAS;4CAACwG,KAAK,EAAC,MAAM;0CAAG;sCAC7B;;8BAEG;4BAErB,CAACmE,QAAQ,IAAIG,aAAa,IAAItC,uFAAuB,kBACpD,wDAACtL,oEAAI;gCAACsQ,IAAI,EAAC,GAAG;gCAAC7G,EAAE,EAAC,MAAM;gCAAC7G,aAAa,EAAC,QAAQ;gCAAC2N,SAAS,EAAC,YAAY;;kDACpE,mDAACpQ,oEAAI;wCAAC0C,QAAQ,EAAC,MAAM;wCAACmG,IAAI;wCAAClG,KAAK,EAAC,YAAY;wCAACqN,EAAE,EAAC,MAAM;wCAACC,aAAa,EAAC,WAAW;kDAC9ExC,aAAa,KAAKtC,6FAA0B,GAAGhK,CAAC,CAAC,eAAe,CAAC,GAAGA,CAAC,CAAC,kBAAkB,CAAC;sCACrF;kDACP,mDAACnB,oEAAI;wCAACqQ,UAAU,EAAC,GAAG;wCAACzN,EAAE,EAAC,KAAK;wCAACiG,IAAI;wCAACnG,QAAQ,EAAC,MAAM;wCAACC,KAAK,EAAC,SAAS;kDAC/D8K,aAAa,KAAKtC,6FAA0B,GAC3C4H,0FAAiB,CAAC,SAAU,CAAiCzN,QAAQ,CAACqK,iBAAiB,CAAC,GACtF,GAAG,GAEHxO,CAAC,CAAC,iBAAiB,EAAE;4CACnB6H,MAAM,EAAExE,kGAAqB,CAC3B,SAAU,CAAiCc,QAAQ,CAACqK,iBAAiB,EACrE,EAAE,EACF,CAAC,CACF;yCACF,CAAC,iBAGJ,mDAACgE,qFAAgB;4CAAC3G,WAAW,EAAE,SAAU,CAAiC1H,QAAQ,CAAC0H,WAAW;0CAAI;sCAE/F;;8BACF;4BAERiB,cAAc,IAAIF,OAAO;;sBACZ;kBACA;gBACjBT,QAAQ,IAAIG,aAAa,IAAItC,uFAAuB,kBACnD,wDAACtL,oEAAI;oBAAC2C,EAAE,EAAC,MAAM;oBAACF,cAAc,EAAC,eAAe;;sCAC5C,mDAACtC,oEAAI;4BAAC0C,QAAQ,EAAC,MAAM;4BAACC,KAAK,EAAC,SAAS;4BAACqN,EAAE,EAAC,MAAM;sCAC5CvC,aAAa,KAAKtC,6FAA0B,GAAGhK,CAAC,CAAC,eAAe,CAAC,GAAGA,CAAC,CAAC,kBAAkB,CAAC;0BACrF;sCACP,mDAACnB,oEAAI;4BAAC0C,QAAQ,EAAC,MAAM;4BAACmG,IAAI;4BAAClG,KAAK,EAAC,SAAS;sCACvC8K,aAAa,KAAKtC,6FAA0B,GAC3C4H,0FAAiB,CAAC,SAAU,CAAiCzN,QAAQ,CAACqK,iBAAiB,CAAC,GACtF,GAAG,GAEHxO,CAAC,CAAC,iBAAiB,EAAE;gCACnB6H,MAAM,EAAExE,kGAAqB,CAC3B,SAAU,CAAiCc,QAAQ,CAACqK,iBAAiB,EACrE,EAAE,EACF,CAAC,CACF;6BACF,CAAC,iBAGJ,mDAACgE,qFAAgB;gCAAC3G,WAAW,EAAE,SAAU,CAAiC1H,QAAQ,CAAC0H,WAAW;8BAAI;0BAE/F;;kBACF;gBAER;oBAAC7B,6FAA0B;oBAAEA,uFAAuB;iBAAC,CAACuF,QAAQ,CAACjD,aAAa,CAAC,kBAC5E,mDAAC9C,oEAAG;oBACFxB,KAAK,EAAC,MAAM;oBACZvG,EAAE,EAAE;wBAAC,GAAG;wBAAE,GAAG;wBAAE,MAAM;wBAAE,MAAM;wBAAE,MAAM;qBAAC;oBACtC0G,EAAE,EAAE;wBAAC,GAAG;wBAAE,GAAG;wBAAE,MAAM;wBAAE,MAAM;wBAAE,MAAM;wBAAE,MAAM;qBAAC;oBAC9CW,EAAE,EAAE;wBAAC,GAAG;wBAAE,GAAG;wBAAE,MAAM;wBAAE,MAAM;wBAAE,MAAM;wBAAE,KAAK;qBAAC;8BAE7C,iEAACwJ,uFAAkB;wBACjBsD,QAAQ;wBACRT,QAAQ,EAAE7I,aAAa;wBACvBkJ,mBAAmB,EAAE9B,mBAAmB;wBACxC1P,YAAY,EAAEA,YAAY;wBAC1B6H,WAAW,EAAC,GAAG;wBACfC,aAAa,EAAC,GAAG;sBACjB;kBACE;gBAEPI,QAAQ,KAAKjC,+EAAkB,IAAIqC,aAAa,KAAKtC,qFAAsB,kBAC1E,mDAACR,oEAAG;oBACFxB,KAAK,EAAC,MAAM;oBACZvG,EAAE,EAAE;wBAAC,GAAG;wBAAE,GAAG;wBAAE,MAAM;wBAAE,MAAM;wBAAE,MAAM;qBAAC;oBACtC0G,EAAE,EAAE;wBAAC,GAAG;wBAAE,GAAG;wBAAE,MAAM;wBAAE,MAAM;wBAAE,MAAM;qBAAC;oBACtCW,EAAE,EAAE;wBAAC,GAAG;wBAAE,GAAG;wBAAE,MAAM;wBAAE,MAAM;wBAAE,GAAG;qBAAC;8BAEnC,iEAACyJ,kFAAa;wBAACvO,YAAY,EAAEA,YAAY;wBAAE6R,mBAAmB,EAAEnC,mBAAmB;wBAAEkC,QAAQ;sBAAG;kBAC5F;;UAEP,CACJ;IACH,CAAC;IAED,qBACE,wDAACrK,+DAAe;;0BACd,wDAACoC,4DAAY;;kCACX,wDAAC9O,oEAAI;wBAAC0C,QAAQ,EAAC,MAAM;wBAACmG,IAAI;wBAAClG,KAAK,EAAC,WAAW;wBAACqN,EAAE,EAAC,MAAM;wBAACC,aAAa,EAAC,WAAW;;4BAC7E9O,CAAC,CAAC,OAAO,CAAC;4BAAE,GAAG;;sBACX;kCACP,mDAACnB,oEAAI;wBAAC0C,QAAQ,EAAC,MAAM;wBAACmG,IAAI;wBAAClG,KAAK,EAAC,YAAY;wBAACqN,EAAE,EAAC,MAAM;wBAACC,aAAa,EAAC,WAAW;kCAC9E9K,YAAY,CAAClD,MAAM;sBACf;;cACM;0BACf,mDAAC8M,6DAAa;0BACX1B,QAAQ,iBACP,mDAACiG,yFAAqB;oBACpB2D,eAAe,EAAEjS,mBAAmB,CAACqB,EAAE,CAAC,CAAC,CAAC,GAAGb,OAAO,GAAG6P,sBAAsB;oBAC7E6B,aAAa,EAAE7J,QAAQ,KAAKjC,+EAAkB,GAAGwK,2BAA2B,GAAG,IAAI;kBACnF,iBAEF,mDAAChW,oEAAM;oBACLuJ,KAAK,EAAC,MAAM;oBACZtG,OAAO,EAAEmC,mBAAmB,CAACqB,EAAE,CAAC,CAAC,CAAC,GAAGb,OAAO,GAAG6P,sBAAsB;oBACrEpS,OAAO,EAAC,WAAW;oBACnBoH,QAAQ,EAAE0J,UAAU;8BAEnB5S,CAAC,CAAC,OAAO,CAAC;kBACJ;cAEG;;MACA,CACnB;AACH,CAAC;AAED,iEAAe2S,MAAM;;;;;;;;;;;;;;;;;;;;;;ACxeiB;AACG;AAElC,MAAMpH,eAAe,GAAGvJ,wDAAM,CAACtD,mEAAI,CAAC;;EAAA,CAAC;;;oBAGxB,EAAE,CAAC,EAAEuB,KAAK,GAAE,GAAKA,KAAK,CAACgB,MAAM,CAACqF,KAAK,CAAC;;;;EAItD,EAAE,CAAC,EAAErG,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAACG,EAAE,CAAC;;;;;;;EAOvC,EAAE,CAAC,EAAEvL,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAAC2K,EAAE,CAAC;;;;AAIzC,CAAC;AAEDzK,eAAe,CAAC0K,YAAY,GAAG;IAC7BjH,IAAI,EAAE,CAAC;CACR;AAEM,MAAMnB,kBAAkB,GAAG7L,wDAAM,CAACuJ,eAAe,CAAC;;EAAA,CAAC;;AAE1D,CAAC;AAEM,MAAMoC,YAAY,GAAG3L,uEAAU;;EAAA,CAAC;;;AAGvC,CAAC;AAEM,MAAM4L,aAAa,GAAG5L,wDAAM,CAACtD,mEAAI,CAAC;;EAAA,CAAC;;;;AAI1C,CAAC;AAEDkP,aAAa,CAACqI,YAAY,GAAG;IAC3BxU,EAAE,EAAE,KAAK;CACV;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CD;AAAuD;AACO;AAC1B;AAEsB;AACR;AACvB;AAM3B,MAAM4U,OAAO,GAAoD,CAAC,EAAEzS,IAAI,GAAE,GAAK;IAC7E,MAAM,EAAE5D,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4N,QAAQ,GAAE,GAAGxC,uEAAmB,EAAE;IAC1C,MAAM,EAAExF,QAAQ,GAAE,GAAGP,IAAI;IACzB,MAAMqB,aAAa,GAAGd,QAAQ,EAAEc,aAAa,GAAG,IAAIlC,qDAAS,CAACoB,QAAQ,CAACc,aAAa,CAAC,GAAGiF,4EAAQ;IAEhG,qBACE,mDAACgM,0DAAQ;QAACI,IAAI,EAAC,MAAM;QAACtH,IAAI,EAAE;YAAC,UAAU;YAAE,UAAU;YAAE,WAAW;YAAE,WAAW;YAAE,WAAW;SAAC;kBACzF,sEAACmH,2DAAW;;8BACV,mDAACtX,mEAAI;oBAAC0C,QAAQ,EAAC,MAAM;oBAACC,KAAK,EAAC,YAAY;oBAACoG,SAAS,EAAC,MAAM;8BACtD5H,CAAC,CAAC,KAAK,CAAC;kBACJ;8BACP,mDAACoW,qDAAG;oBAACxS,IAAI,EAAEA,IAAI;oBAAEqB,aAAa,EAAEA,aAAa;oBAAEsR,QAAQ,EAAE,CAACpK,QAAQ;kBAAI;;UAC1D;MACL,CACZ;AACH,CAAC;AAED,iEAAekK,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BtB;AAU2B;AACW;AACoB;AACX;AACM;AACgC;AAC3B;AACM;AACa;AAC3B;AAElD,MAAMI,iBAAiB,GAAGzU,wDAAM,CAACtD,oEAAI,CAAC;;EAAA,CAAC;;;;AAIvC,CAAC;AAMD,MAAMgY,WAAW,GAAoD,CAAC,EAAE9S,IAAI,GAAE,GAAK;IACjF,MAAM,EAAE5D,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4N,QAAQ,GAAE,GAAGxC,wEAAmB,EAAE;IAE1C,MAAM,EAAExF,QAAQ,GAAE,GAAG2F,8EAAiB,CAAClG,IAAI,CAACsI,QAAQ,CAAC;IAErD,MAAMI,aAAa,GAAGvC,0EAAgB,CAAC5F,QAAQ,CAAC;IAEhD,MAAM,EAAE2L,WAAW,GAAEC,SAAS,GAAE,GAAGrC,uEAAW,CAAC;QAC7CiB,QAAQ,EACNrC,aAAa,GAAGtC,qFAAsB,GAClC,CAAC,QAAS,CAAiC6B,WAAW,GACtD,CAAC,QAAS,CAAiCC,aAAa,GACxD8D,+EAAiB;KACxB,CAAC;IAEF,MAAM,CAACI,yBAAyB,CAAC,GAAGN,wEAAQ,eAAC,mDAACG,4FAAuB;QAACjM,IAAI,EAAEA,IAAI;MAAI,CAAC;IACrF,MAAM,CAACqM,uBAAuB,CAAC,GAAGP,wEAAQ,eACxC,mDAACG,4FAAuB;QAACjM,IAAI,EAAEA,IAAI;QAAEsM,WAAW,EAAE,CAAC;MAAI,EACvD,IAAI,EACJ,IAAI,EACJtM,IAAI,CAACsI,QAAQ,KAAKjC,+EAAkB,GAAG,+BAA+B,GAAG,qCAAqC,CAC/G;IAED,IAAIrG,IAAI,CAACsI,QAAQ,KAAKjC,+EAAkB,IAAIqC,aAAa,KAAKtC,6EAAkB,EAAE;QAChF,qBACE;;8BACE,mDAACkM,0DAAQ;oBAACI,IAAI,EAAC,MAAM;oBAACtH,IAAI,EAAE;wBAAC,UAAU;wBAAE,KAAK;wBAAE,WAAW;wBAAE,IAAI;wBAAE,WAAW;qBAAC;8BAC7E,sEAACmH,2DAAW;;0CACV,mDAACtX,oEAAI;gCAAC0C,QAAQ,EAAC,MAAM;gCAACC,KAAK,EAAC,YAAY;gCAACoG,SAAS,EAAC,MAAM;0CACtD5H,CAAC,CAAC,cAAc,CAAC;8BACb;4BACN8P,WAAW,iBACV,wDAAC2G,iBAAiB;gCAACrV,UAAU,EAAC,QAAQ;gCAACD,cAAc,EAAC,YAAY;;kDAChE,mDAACwO,oEAAO;wCACNpO,QAAQ,EAAE;4CAAC,MAAM;4CAAE,MAAM;4CAAE,MAAM;yCAAC;wCAClC6G,KAAK,EAAEe,UAAU,CAAC2G,WAAW,CAAC;wCAC9BxK,QAAQ,EAAE,CAAC;wCACX+J,IAAI,EAAC,GAAG;wCACRe,UAAU,EAAE;AAAC,+CAAG;AAAE,+CAAG;yCAAC;sCACtB;oCACD,CAACjE,QAAQ,kBACR,mDAAC1N,oEAAM;wCACLiD,OAAO,EAAE,CAAC2O,CAAC,GAAK;4CACdA,CAAC,CAACC,eAAe,EAAE;4CACnBN,yBAAyB,EAAE;wCAC7B,CAAC;wCACDlO,OAAO,EAAC,MAAM;wCACdkG,KAAK,EAAC,MAAM;wCACZC,MAAM,EAAC,MAAM;wCACbsI,OAAO,EAAC,KAAK;wCACbC,UAAU,EAAC,KAAK;kDAEhB,iEAAChO,oEAAa;4CAAChB,KAAK,EAAC,YAAY;4CAACwG,KAAK,EAAC,MAAM;0CAAG;sCAC1C;;8BAEO,iBAEpB,mDAACpF,oEAAQ;gCAACoF,KAAK,EAAC,MAAM;gCAACC,MAAM,EAAC,MAAM;8BAAG;;sBAE7B;kBACL;8BACX,mDAACiO,0DAAQ;oBAACI,IAAI,EAAC,MAAM;oBAACtH,IAAI,EAAE;wBAAC,UAAU;wBAAE,UAAU;wBAAE,WAAW;wBAAE,IAAI;wBAAE,WAAW;qBAAC;8BAClF,sEAACmH,2DAAW;;0CACV,mDAACtX,oEAAI;gCAAC0C,QAAQ,EAAC,MAAM;gCAACC,KAAK,EAAC,YAAY;gCAACoG,SAAS,EAAC,MAAM;0CACtD5H,CAAC,CAAC,YAAY,CAAC;8BACX;4BACN+P,SAAS,iBACR,mDAAC0G,iBAAiB;gCAACrV,UAAU,EAAC,QAAQ;gCAACD,cAAc,EAAC,YAAY;0CAChE,sEAACqV,oEAAO;oCAACG,GAAG,EAAC,KAAK;oCAACC,QAAQ,EAAC,MAAM;;sDAChC,mDAAC/X,oEAAI;4CAAC0C,QAAQ,EAAE;gDAAC,MAAM;gDAAE,MAAM;gDAAE,MAAM;6CAAC;4CAAEoG,KAAK,EAAE;gDAAE8I,UAAU,EAAE,QAAQ;6CAAE;4CAAEL,UAAU,EAAE;AAAC,mDAAG;AAAE,mDAAG;6CAAC;sDAC9FpQ,CAAC,CAAC,OAAO,CAAC;0CACN;sDACP,mDAAC2P,oEAAO;4CACNpO,QAAQ,EAAE;gDAAC,MAAM;gDAAE,MAAM;gDAAE,MAAM;6CAAC;4CAClC6G,KAAK,EAAEe,UAAU,CAAC4G,SAAS,CAAC;4CAC5BzK,QAAQ,EAAE,CAAC;4CACX+J,IAAI,EAAC,GAAG;4CACRe,UAAU,EAAE;AAAC,mDAAG;AAAE,mDAAG;6CAAC;0CACtB;wCACD,CAACjE,QAAQ,kBACR,mDAAC1N,oEAAM;4CACLiD,OAAO,EAAE,CAAC2O,CAAC,GAAK;gDACdA,CAAC,CAACC,eAAe,EAAE;gDACnBL,uBAAuB,EAAE;4CAC3B,CAAC;4CACDnO,OAAO,EAAC,MAAM;4CACdkG,KAAK,EAAC,MAAM;4CACZC,MAAM,EAAC,MAAM;4CACbsI,OAAO,EAAC,KAAK;4CACbC,UAAU,EAAC,KAAK;sDAEhB,iEAAChO,oEAAa;gDAAChB,KAAK,EAAC,YAAY;gDAACwG,KAAK,EAAC,MAAM;8CAAG;0CAC1C;;kCAEH;8BACQ,iBAEpB,mDAACpF,oEAAQ;gCAACoF,KAAK,EAAC,MAAM;gCAACC,MAAM,EAAC,MAAM;8BAAG;;sBAE7B;kBACL;;UACV,CACJ;IACH,CAAC;IAED,qBACE,mDAACiO,0DAAQ;QAACI,IAAI,EAAC,MAAM;QAACtH,IAAI,EAAE;YAAC,UAAU;YAAE,UAAU;YAAE,WAAW;YAAE,WAAW;YAAE,WAAW;SAAC;kBACzF,sEAACmH,2DAAW;;8BACV,mDAACtX,oEAAI;oBAAC0C,QAAQ,EAAC,MAAM;oBAACC,KAAK,EAAC,YAAY;oBAACoG,SAAS,EAAC,MAAM;8BACtD5H,CAAC,CAAC,KAAK,CAAC;kBACJ;gBACN8P,WAAW,iBACV,wDAAC2G,iBAAiB;oBAACrV,UAAU,EAAC,QAAQ;oBAACD,cAAc,EAAC,YAAY;;sCAChE,mDAACwO,oEAAO;4BACNpO,QAAQ,EAAC,MAAM;4BACf6G,KAAK,EAAEkE,aAAa,GAAGtC,qFAAsB,GAAGb,UAAU,CAAC4G,SAAS,CAAC,GAAG5G,UAAU,CAAC2G,WAAW,CAAC;4BAC/FxK,QAAQ,EAAE,CAAC;4BACX+J,IAAI,EAAC,GAAG;0BACR;sCACF,mDAAC5Q,oEAAM;4BACLiD,OAAO,EAAE,CAAC2O,CAAC,GAAK;gCACdA,CAAC,CAACC,eAAe,EAAE;gCACnB,OAAOhE,aAAa,GAAGtC,qFAAsB,GAAGiG,uBAAuB,EAAE,GAAGD,yBAAyB,EAAE;4BACzG,CAAC;4BACDlO,OAAO,EAAC,MAAM;4BACdkG,KAAK,EAAC,MAAM;4BACZC,MAAM,EAAC,MAAM;4BACbsI,OAAO,EAAC,KAAK;4BACbC,UAAU,EAAC,KAAK;sCAEhB,iEAAChO,oEAAa;gCAAChB,KAAK,EAAC,YAAY;gCAACwG,KAAK,EAAC,MAAM;8BAAG;0BAC1C;;kBACS,iBAEpB,mDAACpF,oEAAQ;oBAACoF,KAAK,EAAC,MAAM;oBAACC,MAAM,EAAC,MAAM;kBAAG;;UAE7B;MACL,CACZ;AACH,CAAC;AAED,iEAAeyO,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7K1B;AAAsC;AAC4E;AAC7B;AAChC;AACK;AACA;AACR;AACa;AAO/D,MAAMI,UAAU,GAAG9U,wDAAM,CAACkU,0DAAQ,CAAC;;EAAA,CAAC;;EAElC,EAAE,CAAC,EAAEjW,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAACG,EAAE,CAAC;;;AAGzC,CAAC;AAED,MAAMuL,eAAe,GAAG/U,uEAAU;;EAAA,CAAC;;AAEnC,CAAC;AAED,MAAMgV,gBAAgB,GAA6D,CAAC,EAAEpT,IAAI,GAAEzD,OAAO,GAAE,GAAK;IACxG,MAAM,EAAEH,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4N,QAAQ,GAAE,GAAGxC,uEAAmB,EAAE;IAC1C,MAAM,EAAE1F,iBAAiB,GAAEiI,QAAQ,GAAE,GAAGtI,IAAI;IAE5C,MAAMwI,SAAS,GAAGtC,8EAAiB,CAACoC,QAAQ,CAAC;IAC7C,MAAM,EACJ/H,QAAQ,EAAE,EAAE8J,UAAU,GAAEC,oBAAoB,GAAEvM,SAAS,GAAE,GACzDwM,iBAAiB,KAClB,GAAG/B,SAAS;IACb,MAAM,EAAEgC,eAAe,GAAEC,iBAAiB,GAAEC,gBAAgB,GAAE,GAAGb,mFAAoB,CACnFtN,OAAO,EACP+N,oBAAoB,EACpBD,UAAU,EACVE,iBAAiB,EACjBlK,iBAAiB,EACjBiI,QAAQ,KAAKjC,+EAAkB,GAC3B,SAAU,CAAiC9F,QAAQ,CAACoK,qBAAqB,CACtEnI,IAAI,CAAC,SAAU,CAAiCjC,QAAQ,CAACqK,iBAAiB,CAAC,CAC3EpI,IAAI,CAAC,SAAU,CAAiCjC,QAAQ,CAACsK,gBAAgB,CAAC,GAC7E,IAAI,CACT;IAED,MAAMwI,SAAS,GAAGjX,CAAC,CAAC,oBAAoB,CAAC;IACzC,MAAMgR,mBAAmB,GAAG3C,iBAAiB;IAC7C,MAAM6C,WAAW,GAAG9C,eAAe;IACnC,MAAM6C,yBAAyB,GAAG3C,gBAAgB;IAElD,MAAM,EAAE5B,SAAS,GAAEE,OAAO,GAAEE,cAAc,GAAE,GAAGpD,uEAAU,eAAC,mDAACmN,uEAAqB;QAACjT,IAAI,EAAEA,IAAI;QAAEzD,OAAO,EAAEA,OAAO;MAAI,EAAE;QACjH6M,SAAS,EAAE,QAAQ;KACpB,CAAC;IAEF,IAAId,QAAQ,KAAKjC,+EAAkB,IAAI,CAACgE,UAAU,CAAC/I,EAAE,CAAC,CAAC,CAAC,EAAE;QACxD,OAAO,IAAI;IACb,CAAC;IAED,qBACE,mDAAC4R,UAAU;QAACR,IAAI,EAAC,MAAM;kBACrB,sEAACH,2DAAW;;8BACV,mDAACtX,oEAAI;oBAAC0C,QAAQ,EAAC,MAAM;oBAACC,KAAK,EAAC,YAAY;oBAACoG,SAAS,EAAC,MAAM;8BACtDqP,SAAS;kBACL;gBACNtV,SAAS,IAAIxB,OAAO,iBACnB,mDAACyC,oEAAQ;oBAACoF,KAAK,EAAC,MAAM;oBAACC,MAAM,EAAC,MAAM;kBAAG,iBAEvC;;wBACG6E,cAAc,IAAIF,OAAO;sCAC1B,wDAAClO,oEAAI;;8CACH,wDAAC8K,oEAAG;oCAACV,EAAE,EAAC,KAAK;oCAACb,MAAM,EAAC,MAAM;;sDACzB,mDAAC0H,oEAAO;4CACNlO,EAAE,EAAC,KAAK;4CACRiG,IAAI,EAAE,CAACyE,QAAQ;4CACf5K,QAAQ,EAAE4K,QAAQ,GAAG,MAAM,GAAG,MAAM;4CACpC3K,KAAK,EAAE0P,WAAW,GAAG,SAAS,GAAG,cAAc;4CAC/C5L,QAAQ,EAAE4L,WAAW,GAAG,CAAC,GAAG,CAAC;4CAC7B9I,KAAK,EAAE8I,WAAW,GAAGF,mBAAmB,GAAG,CAAC;0CAC5C;wCACDE,WAAW,iBACV;sDACGjN,iBAAiB,GAAG,CAAC,kBACpB,mDAAC0L,oEAAO;gDACNR,OAAO,EAAC,QAAQ;gDAChB5N,QAAQ,EAAC,MAAM;gDACfC,KAAK,EAAC,YAAY;gDAClB8D,QAAQ,EAAE,CAAC;gDACX8J,MAAM,EAAC,GAAG;gDACVhH,KAAK,EAAE6I,yBAAyB;gDAChC5B,IAAI,EAAC,MAAM;8CACX;0CAEH,iBAEH,mDAACxQ,oEAAI;4CAAC4C,EAAE,EAAC,KAAK;4CAACF,QAAQ,EAAC,MAAM;4CAACC,KAAK,EAAC,cAAc;sDAAC,OAEpD;0CAAO;;kCAEL;gCACL0P,WAAW,IAAI,CAAC/E,QAAQ,kBACvB,mDAAC4K,eAAe;oCAACzJ,GAAG,EAAEZ,SAAS;8CAC7B,iEAACjD,oEAAQ;wCAACjI,KAAK,EAAC,YAAY;sCAAG;kCACf;;0BAEf;;kBACN;;UAEO;MACH,CACd;AACH,CAAC;AAED,iEAAewV,gBAAgB;;;;;;;;;;;;;;;;;;;;;ACnHgB;AACT;AAEtC,MAAMd,QAAQ,GAAGlU,wDAAM,CAACtD,mEAAI,CAAC;;EAAA,CAAC;;;;;;;AAO9B,CAAC;AAEM,MAAMyX,WAAW,GAAGnU,wDAAM,CAACtD,mEAAI,CAAC;;EAAA,CAAC;;;;EAItC,EAAEG,mEAAI,CAAC;;;AAGT,CAAC;AAED,iEAAeqX,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;ACrBvB;AAAsC;AACoB;AACA;AACzB;AAOjC,MAAMY,UAAU,GAAG9U,wDAAM,CAACkU,0DAAQ,CAAC;;EAAA,CAAC;;;;;;;EAOlC,EAAE,CAAC,EAAEjW,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAAC8L,EAAE,CAAC;;;;;AAKzC,CAAC;AAED,MAAMC,SAAS,GAAGpV,wDAAM,CAACkV,mEAAe,CAAC;;EAAsB,CAAC;aACnD,EAAE,CAAC,EAAEG,OAAO,GAAE,GAAMA,OAAO,GAAG,gBAAgB,GAAG,WAAW,CAAE;;AAE3E,CAAC;AAED,MAAMC,gBAAgB,GAA6D,CAAC,EAAEnM,QAAQ,GAAEoM,YAAY,GAAE,GAAK;IACjH,MAAM,EAAEvX,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,qBACE,wDAACuY,UAAU;QAACR,IAAI,EAAC,MAAM;;YACpBiB,YAAY,kBACX,mDAAC1Y,mEAAI;gBAAC2C,KAAK,EAAC,SAAS;gBAACkG,IAAI;0BACvByD,QAAQ,GAAGnL,CAAC,CAAC,MAAM,CAAC,GAAGA,CAAC,CAAC,SAAS,CAAC;cAC/B;0BAET,mDAACoX,SAAS;gBAAC5V,KAAK,EAAC,SAAS;gBAAC6V,OAAO,EAAElM,QAAQ;cAAI;;MACrC,CACd;AACH,CAAC;AAED,iEAAemM,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3C/B;AAA4G;AACxE;AACkB;AACE;AACE;AAC9B;AACyB;AACgC;AAC/C;AACiB;AAC8B;AACnC;AAMlD,MAAMR,UAAU,GAAG9U,wDAAM,CAACkU,2DAAQ,CAAC;;EAAA,CAAC;;;;EAIlC,EAAE,CAAC,EAAEjW,KAAK,GAAE,GAAKA,KAAK,CAACoL,YAAY,CAACG,EAAE,CAAC;;;;AAIzC,CAAC;AAED,MAAMoM,QAAQ,GAAqD,CAAC,EAAEhU,IAAI,GAAE,GAAK;IAC/E,MAAM,EAAE5D,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAE4N,QAAQ,GAAE,GAAGxC,wEAAmB,EAAE;IAC1C,MAAM,EAAE9J,MAAM,GAAEmE,YAAY,GAAErE,YAAY,GAAEwE,QAAQ,GAAEyO,UAAU,GAAE1G,QAAQ,GAAE2L,WAAW,GAAE,GAAGjU,IAAI;IAChG,MAAMwI,SAAS,GAAGtC,8EAAiB,CAAClG,IAAI,CAACsI,QAAQ,CAAC;IAClD,MAAM,EACJ/H,QAAQ,EAAE,EAAE8J,UAAU,GAAE,GACxB6J,gBAAgB,KACjB,GAAG1L,SAAS;IACb,MAAM2L,cAAc,GAAG9J,UAAU,CAAC/I,EAAE,CAAC,CAAC,CAAC;IAEvC,MAAMmC,kBAAkB,GAAGrD,YAAY,CAAClD,MAAM;IAC9C,MAAMwG,kBAAkB,GAAG3H,YAAY,CAACmB,MAAM;IAE9C,MAAMmE,aAAa,GAAGd,QAAQ,EAAEc,aAAa,GAAG,IAAIlC,qDAAS,CAACoB,QAAQ,CAACc,aAAa,CAAC,GAAGiF,4EAAQ;IAChG,MAAM8N,QAAQ,GAAG/S,aAAa,CAACC,EAAE,CAAC,CAAC,CAAC;IAEpC,MAAM+S,aAAa,GAAG/L,QAAQ,GAAG6L,cAAc,GAAGC,QAAQ;IAE1D,IAAIjX,KAAK,GAAoB,CAAC,EAAEf,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAEsH,kBAAkB,CAAC,CAAC;IACjE,IAAI4Q,QAAQ,GAAoB,CAAC,EAAElY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAEqH,kBAAkB,CAAC,CAAC;IACrE,MAAM8Q,YAAY,GAAGtY,MAAM,KAAK,CAAC,IAAKA,MAAM,KAAK,CAAC,IAAI,CAACsM,QAAQ;IAE/D,IAAID,QAAQ,EAAE;QACZnL,KAAK,GAAG2W,6EAAe,CAACxL,QAAQ,CAAC,CAACvD,IAAI;QACtCuP,QAAQ,GAAGR,6EAAe,CAACxL,QAAQ,CAAC,CAACkM,WAAW;IAClD,CAAC;IAED,qBACE,mDAACtB,UAAU;QAACR,IAAI,EAAC,MAAM;kBACpB,WAAY,IAAIuB,WAAW,CAAC3C,GAAG,CAAC,CAAC,CAAC,IAAM4C,gBAAgB,IAAIA,gBAAgB,CAAC5C,GAAG,CAAC,CAAC,CAAC,iBAClF;;gBACGhJ,QAAQ,iBACP,mDAACuL,oEAAgB;oBAAE,GAAGC,6EAAe,CAACxL,QAAQ,CAAC,CAACmM,UAAU;oBAAEvP,EAAE,EAAC,KAAK;oBAACd,KAAK,EAAE,EAAE;oBAAEC,MAAM,EAAE,EAAE;kBAAI,iBAE9F,mDAACuP,0EAAc;oBAACc,YAAY,EAAE3Y,YAAY;oBAAE4Y,cAAc,EAAEvU,YAAY;oBAAE8E,EAAE,EAAC,KAAK;oBAACd,KAAK,EAAE,EAAE;oBAAEC,MAAM,EAAE,EAAE;kBAAI;8BAE9G,wDAACkO,4DAAW;;wBACT8B,aAAa,IACX/L,CAAAA,QAAQ,KAAKjC,+EAAkB,iBAC9B,mDAACuO,gBAAgB;4BACfvK,UAAU,EAAEA,UAAU;4BACtBf,MAAM,EAAE,SAAU,CAAiC/I,QAAQ,CAAC+I,MAAM;4BAClErB,WAAW,EAAE,SAAU,CAAiC1H,QAAQ,CAAC0H,WAAW;0BAC5E,iBAEF,mDAAChN,oEAAI;4BAAC0C,QAAQ,EAAC,MAAM;4BAACmG,IAAI;4BAAClG,KAAK,EAAEoR,UAAU,GAAG,SAAS,GAAG,WAAW;4BAAE9D,aAAa,EAAC,WAAW;sCAC9F9O,CAAC,CAAC,QAAQ,CAAC;0BACP,CACR;sCACH,mDAACnB,oEAAI;4BAAC6I,IAAI,EAAE,CAACyE,QAAQ;4BAAEsM,KAAK,EAAEtM,QAAQ;sCACnCpL,KAAK;0BACD;wBACNoX,YAAY,kBACX,mDAACtZ,oEAAI;4BAAC0C,QAAQ,EAAC,MAAM;4BAACC,KAAK,EAAC,YAAY;sCACrC0W,QAAQ;0BACJ;;kBAEG;;UACb,iBAEH;;8BACE,mDAACtV,oEAAQ;oBAACkG,EAAE,EAAC,KAAK;oBAACd,KAAK,EAAE,EAAE;oBAAEC,MAAM,EAAE,EAAE;oBAAEnG,OAAO,EAAC,QAAQ;kBAAG;8BAC7D,wDAACqU,4DAAW;;sCACV,mDAACvT,oEAAQ;4BAACoF,KAAK,EAAE,EAAE;4BAAEC,MAAM,EAAE,EAAE;4BAAE5G,EAAE,EAAC,KAAK;0BAAG;sCAC5C,mDAACuB,oEAAQ;4BAACoF,KAAK,EAAE,EAAE;4BAAEC,MAAM,EAAE,EAAE;0BAAI;;kBACvB;;UACb;MAEM,CACd;AACH,CAAC;AAED,iEAAe2P,QAAQ;AAEvB,MAAMc,YAAY,GAAG;IACnB,CAAC1O,8EAAkB,CAAC,EAAE;QAAE2O,IAAI,EAAE,EAAE;QAAEnX,KAAK,EAAE,WAAW;KAAE;IACtD,CAACwI,kFAAoB,CAAC,EAAE;QAAE2O,IAAI,EAAE,QAAQ;QAAEnX,KAAK,EAAE,WAAW;KAAE;IAC9D,CAACwI,wFAAuB,CAAC,EAAE;QAAE2O,IAAI,EAAE,YAAY;QAAEnX,KAAK,EAAE,WAAW;KAAE;IACrE,CAACwI,8FAA0B,CAAC,EAAE;QAAE2O,IAAI,EAAE,eAAe;QAAEnX,KAAK,EAAE,SAAS;KAAE;IACzE,CAACwI,sFAAsB,CAAC,EAAE;QAAE2O,IAAI,EAAE,UAAU;QAAEnX,KAAK,EAAE,SAAS;KAAE;CACjE;AAEM,MAAMgX,gBAAgB,iBAA2Db,2CAAI,CAC1F,CAAC,EAAE1J,UAAU,GAAEf,MAAM,GAAErB,WAAW,GAAE,GAAK;IACvC,MAAMS,aAAa,GAAGvC,2EAAgB,CAAC;QAAEkE,UAAU;QAAEf,MAAM;QAAErB,WAAW;KAAE,CAAC;IAC3E,MAAM,EAAE7L,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,qBACE,mDAACM,oEAAI;QAAC0C,QAAQ,EAAC,MAAM;QAACmG,IAAI;QAAClG,KAAK,EAAEkX,YAAY,CAACpM,aAAa,CAAC,CAAC9K,KAAK;QAAEsN,aAAa,EAAC,WAAW;kBAC3F9O,CAAC,CAAC0Y,YAAY,CAACpM,aAAa,CAAC,CAACqM,IAAI,CAAC;MAC/B,CACR;AACH,CAAC,CACF;;;;;;;;;;;;;;;;;;;;;;;ACxHD;AAAuF;AAC7B;AAEY;AAE/D,SAASzG,yBAAyB,CAAC,EACxCW,kBAAkB,GAGnB,EAAE;IACD,MAAM,EAAE7S,CAAC,GAAE,GAAGzB,mFAAc,EAAE;IAC9B,MAAM,EAAEoW,eAAe,GAAEC,gBAAgB,GAAE,GAAGjD,4FAAqB,CAACkB,kBAAkB,CAAC;IACvF,qBACE,mDAAC+F,mEAAO;QAAC9W,OAAO,EAAC,SAAS;kBACxB,sEAAC0H,mEAAG;;8BACF,wDAACqP,oEAAW;;wBACTlE,eAAe,IACdC,gBAAgB,IAChB5U,CAAC,CAAC,wEAAwE,EAAE;4BAC1E6H,MAAM,EAAEgL,kBAAkB,CAACkG,eAAe,CAAClT,QAAQ,EAAE,CAACmT,cAAc,EAAE;yBACvE,CAAC;wBACHrE,eAAe,IAAI,CAACC,gBAAgB,IAAI5U,CAAC,CAAC,2CAA2C,CAAC;wBACtF,CAAC2U,eAAe,IACfC,gBAAgB,IAChB5U,CAAC,CAAC,6CAA6C,EAAE;4BAC/C6H,MAAM,EAAEgL,kBAAkB,CAACkG,eAAe,CAAClT,QAAQ,EAAE,CAACmT,cAAc,EAAE;yBACvE,CAAC;;kBACQ;gBACZrE,CAAAA,eAAe,IAAIC,gBAAgB,mBACnC,mDAACiE,oEAAW;oBAACnR,IAAI;8BACdiN,eAAe,iBACd,wDAACmE,mEAAuB;wBAACnR,KAAK,EAAE;4BAAEsR,cAAc,EAAE,WAAW;yBAAE;wBAAEC,EAAE,EAAC,iBAAiB;;4BAClFlZ,CAAC,CAAC,gBAAgB,CAAC;4BAAC,OACvB;;sBAA0B,iBAE1B,wDAAC8Y,mEAAuB;wBAACnR,KAAK,EAAE;4BAAEsR,cAAc,EAAE,WAAW;yBAAE;wBAAEC,EAAE,EAAC,UAAU;;4BAC3ElZ,CAAC,CAAC,eAAe,CAAC;4BAAC,OACtB;;sBAA0B;kBAEhB;;UAEZ;MACE,CACX;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;AC5CkC;AACoB;AACR;AACA;AAE/C,MAAMqZ,OAAO,GAAG;IACdC,QAAQ,EAAEF,oEAAsB;CACjC;AAED,MAAMG,WAAW,GAAG,OAAOC,gBAAgB,GAAK;IAC9C,OAAOA,gBAAgB,CAACC,OAAO,CAAC,GAAG,EAAEJ,OAAO,CAAC;AAC/C,CAAC;AAED,MAAMK,cAAc,GAAG,OAAOF,gBAAgB,GAAK;IACjD,OAAOA,gBAAgB,CAACC,OAAO,CAAC;QAAE,GAAGJ,OAAO;QAAEjR,KAAK,EAAE8B,4EAAQ;KAAE,CAAC;AAClE,CAAC;AAED,MAAM1K,cAAc,GAAG,CAACK,MAAM,EAAE8Z,UAAU,GAAG,KAAK,GAAK;IACrD,MAAMH,gBAAgB,GAAGL,wEAAW,CAACtZ,MAAM,CAAC;IAE5C,MAAM+Z,aAAa,GAAG5W,kDAAW,CAAC,UAAY;QAC5C,IAAI2W,UAAU,EAAE;YACd,OAAOD,cAAc,CAACF,gBAAgB,CAAC;QACzC,CAAC;QAED,OAAOD,WAAW,CAACC,gBAAgB,CAAC;IACtC,CAAC,EAAE;QAACG,UAAU;QAAEH,gBAAgB;KAAC,CAAC;IAElC,OAAO;QAAEhZ,QAAQ,EAAEoZ,aAAa;KAAE;AACpC,CAAC;AAED,iEAAepa,cAAc;;;;;;;;;;;;;;;;;;;AC/BmB;AAEjB;AAExB,SAASmS,qBAAqB,CAACkB,kBAA0D,EAAE;IAChG,MAAM,EAAEkH,OAAO,GAAEC,gBAAgB,GAAE,GAAGH,yEAAU,EAAE;IAElD,MAAMlF,eAAe,GAAGmF,8CAAO,CAC7B,IAAMjH,kBAAkB,IAAIA,kBAAkB,CAACoH,QAAQ,IAAI,CAACD,gBAAgB,EAC5E;QAACnH,kBAAkB;QAAEmH,gBAAgB;KAAC,CACvC;IACD,MAAMpF,gBAAgB,GAAGkF,8CAAO,CAC9B,IACEjH,kBAAkB,IAClBA,kBAAkB,CAACkG,eAAe,CAAC7T,EAAE,CAAC,CAAC,CAAC,IACxC2N,kBAAkB,CAACkG,eAAe,CAAC7T,EAAE,CAAC6U,OAAO,EAAEG,MAAM,IAAI,CAAC,CAAC,EAC7D;QAACrH,kBAAkB;QAAEkH,OAAO;KAAC,CAC9B;IAED,OAAO;QACLpF,eAAe;QACfC,gBAAgB;KACjB;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACvBkC;AACC;AACkC;AACgB;AACvC;AAE/C,MAAMyE,OAAO,GAAG;IACdC,QAAQ,EAAEF,oEAAsB;CACjC;AAED,MAAMiB,SAAS,GAAG,OAAOb,gBAAgB,EAAE3R,MAAM,EAAEvC,QAAQ,GAAG,EAAE,GAAK;IACnE,OAAOkU,gBAAgB,CAACC,OAAO,CAAC,IAAI1W,qDAAS,CAAC8E,MAAM,CAAC,CAACnC,KAAK,CAAC0U,8GAAwB,CAAC9U,QAAQ,CAAC,CAAC,CAACmK,QAAQ,EAAE,EAAE4J,OAAO,CAAC;AACtH,CAAC;AAED,MAAMiB,YAAY,GAAG,OAAOd,gBAAgB,EAAE3R,MAAM,GAAK;IACvD,OAAO2R,gBAAgB,CAACC,OAAO,CAAC,IAAI1W,qDAAS,CAAC8E,MAAM,CAAC,CAACnC,KAAK,CAACyU,mEAAqB,CAAC,CAAC1K,QAAQ,EAAE,EAAE4J,OAAO,CAAC;AACzG,CAAC;AAED,MAAM/V,YAAY,GAAG,CAACzD,MAAc,EAAE8Z,UAAU,GAAG,KAAK,GAAK;IAC3D,MAAMH,gBAAgB,GAAGL,wEAAW,CAACtZ,MAAM,CAAC;IAE5C,MAAM0a,WAAW,GAAGvX,kDAAW,CAC7B,OAAO6E,MAAc,EAAEvC,QAAgB,GAAK;QAC1C,IAAIqU,UAAU,EAAE;YACd,OAAOW,YAAY,CAACd,gBAAgB,EAAE3R,MAAM,CAAC;QAC/C,CAAC;QACD,OAAOwS,SAAS,CAACb,gBAAgB,EAAE3R,MAAM,EAAEvC,QAAQ,CAAC;IACtD,CAAC,EACD;QAACqU,UAAU;QAAEH,gBAAgB;KAAC,CAC/B;IAED,OAAO;QAAEnV,OAAO,EAAEkW,WAAW;KAAE;AACjC,CAAC;AAED,iEAAejX,YAAY;;;;;;;;;;;;;;;;;;;;;AClCQ;AACc;AACF;AAE/C,MAAMmX,WAAW,GAAG,CAACjB,gBAAqB,EAAE3R,MAAc,EAAEvC,QAAgB,GAAK;IAC/E,MAAMoV,KAAK,GAAGF,gEAAU,CAAC3S,MAAM,EAAEvC,QAAQ,CAAC;IAE1C,OAAOkU,gBAAgB,CAACmB,QAAQ,CAACD,KAAK,CAACjL,QAAQ,EAAE,CAAC;AACpD,CAAC;AAED,MAAMmL,oBAAoB,GAAG,CAACpB,gBAAqB,GAAK;IACtD,OAAOA,gBAAgB,CAACqB,iBAAiB,EAAE;AAC7C,CAAC;AAED,MAAMtX,cAAc,GAAG,CAAC1D,MAAc,EAAE0E,uBAAuB,GAAG,KAAK,GAAK;IAC1E,MAAMiV,gBAAgB,GAAGL,wEAAW,CAACtZ,MAAM,CAAC;IAE5C,MAAMib,aAAa,GAAG9X,kDAAW,CAC/B,OAAO6E,MAAc,EAAEvC,QAAgB,GAAK;QAC1C,IAAIf,uBAAuB,EAAE;YAC3B,OAAOqW,oBAAoB,CAACpB,gBAAgB,CAAC;QAC/C,CAAC;QAED,OAAOiB,WAAW,CAACjB,gBAAgB,EAAE3R,MAAM,EAAEvC,QAAQ,CAAC;IACxD,CAAC,EACD;QAACf,uBAAuB;QAAEiV,gBAAgB;KAAC,CAC5C;IAED,OAAO;QAAElV,SAAS,EAAEwW,aAAa;KAAE;AACrC,CAAC;AAED,iEAAevX,cAAc","sources":["webpack://web/./src/views/Pools/components/Modals/CollectModal.tsx","webpack://web/./src/views/Pools/components/Modals/PercentageButton.tsx","webpack://web/./src/views/Pools/components/Modals/StakeModal.tsx","webpack://web/./src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","webpack://web/./src/views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","webpack://web/./src/views/Pools/components/PoolsTable/ActionPanel/CakeVaultApr.tsx","webpack://web/./src/views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","webpack://web/./src/views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","webpack://web/./src/views/Pools/components/PoolsTable/ActionPanel/styles.ts","webpack://web/./src/views/Pools/components/PoolsTable/Cells/AprCell.tsx","webpack://web/./src/views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","webpack://web/./src/views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","webpack://web/./src/views/Pools/components/PoolsTable/Cells/BaseCell.tsx","webpack://web/./src/views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","webpack://web/./src/views/Pools/components/PoolsTable/Cells/NameCell.tsx","webpack://web/./src/views/Pools/components/ProfileRequirementWarning.tsx","webpack://web/./src/views/Pools/hooks/useHarvestPool.ts","webpack://web/./src/views/Pools/hooks/useProfileRequirement.ts","webpack://web/./src/views/Pools/hooks/useStakePool.ts","webpack://web/./src/views/Pools/hooks/useUnstakePool.ts"],"sourcesContent":["import { useTranslation } from '@pancakeswap/localization'\nimport { Token } from '@pancakeswap/sdk'\nimport { AutoRenewIcon, Button, Flex, Heading, Modal, Text, useToast } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport useTheme from 'hooks/useTheme'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward, updateUserStakedBalance } from 'state/pools'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport useHarvestPool from '../../hooks/useHarvestPool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<React.PropsWithChildren<CollectModalProps>> = ({\n  formattedBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess } = useToast()\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n\n  const handleHarvestConfirm = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onReward()\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Harvested')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol })}\n        </ToastDescriptionWithTx>,\n      )\n      dispatch(updateUserStakedBalance({ sousId, account }))\n      dispatch(updateUserPendingReward({ sousId, account }))\n      dispatch(updateUserBalance({ sousId, account }))\n      onDismiss?.()\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradientCardHeader}\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<React.PropsWithChildren<PercentageButtonProps>> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useTranslation } from '@pancakeswap/localization'\nimport {\n  AutoRenewIcon,\n  BalanceInput,\n  Button,\n  CalculateIcon,\n  Flex,\n  IconButton,\n  Image,\n  Link,\n  Modal,\n  Skeleton,\n  Slider,\n  Text,\n  useToast,\n  RoiCalculatorModal,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport BigNumber from 'bignumber.js'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport useTheme from 'hooks/useTheme'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward, updateUserStakedBalance } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport styled from 'styled-components'\nimport { getInterestBreakdown } from '@pancakeswap/utils/compoundApyHelpers'\nimport { formatNumber, getDecimalAmount, getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport useStakePool from '../../hooks/useStakePool'\nimport useUnstakePool from '../../hooks/useUnstakePool'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<React.PropsWithChildren<StakeModalProps>> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = useCallback(() => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    if (stakingLimit.gt(0)) {\n      const stakingLimitLeft = stakingLimit.minus(userData.stakedBalance)\n      if (stakingTokenBalance.gt(stakingLimitLeft)) {\n        return stakingLimitLeft\n      }\n    }\n    return stakingTokenBalance\n  }, [userData.stakedBalance, stakingTokenBalance, stakingLimit, isRemovingStake])\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = useCallback(\n    (sliderPercent: number) => {\n      if (sliderPercent > 0) {\n        const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n        const amountToStake = getFullDisplayBalance(\n          percentageOfStakingMax,\n          stakingToken.decimals,\n          stakingToken.decimals,\n        )\n        setStakeAmount(amountToStake)\n      } else {\n        setStakeAmount('')\n      }\n      setPercent(sliderPercent)\n    },\n    [getCalculatedStakingLimit, stakingToken.decimals],\n  )\n\n  const handleConfirmClick = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      if (isRemovingStake) {\n        return onUnstake(stakeAmount, stakingToken.decimals)\n      }\n      return onStake(stakeAmount, stakingToken.decimals)\n    })\n    if (receipt?.status) {\n      if (isRemovingStake) {\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your %symbol% earnings have also been harvested to your wallet!', {\n              symbol: earningToken.symbol,\n            })}\n          </ToastDescriptionWithTx>,\n        )\n      } else {\n        toastSuccess(\n          `${t('Staked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your %symbol% funds have been staked in the pool!', {\n              symbol: stakingToken.symbol,\n            })}\n          </ToastDescriptionWithTx>,\n        )\n      }\n      dispatch(updateUserStakedBalance({ sousId, account }))\n      dispatch(updateUserPendingReward({ sousId, account }))\n      dispatch(updateUserBalance({ sousId, account }))\n      onDismiss?.()\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        account={account}\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradientCardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(\n            isRemovingStake ? userData.stakedBalance : stakingTokenBalance,\n            stakingToken.decimals,\n          ),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          {Number.isFinite(annualRoi) ? (\n            <AnnualRoiContainer\n              alignItems=\"center\"\n              onClick={() => {\n                setShowRoiCalculator(true)\n              }}\n            >\n              <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n              <IconButton variant=\"text\" scale=\"sm\">\n                <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n              </IconButton>\n            </AnnualRoiContainer>\n          ) : (\n            <Skeleton width={60} />\n          )}\n        </Flex>\n      )}\n      {isRemovingStake && pool.enableEmergencyWithdraw && (\n        <Flex maxWidth=\"346px\" mt=\"24px\">\n          <Text textAlign=\"center\">\n            {t(\n              'This pool was misconfigured. Please unstake your tokens from it, emergencyWithdraw method will be used. Your tokens will be returned to your wallet, however rewards will not be harvested.',\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import styled, { keyframes, css } from 'styled-components'\nimport { Box, Flex, HelpIcon, Text, useTooltip, useMatchBreakpoints, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool, VaultKey, DeserializedLockedCakeVault, DeserializedLockedVaultUser } from 'state/types'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport AutoHarvest from './AutoHarvest'\nimport { VaultPositionTagWithLabel } from '../../Vault/VaultPositionTag'\nimport YieldBoostRow from '../../LockedPool/Common/YieldBoostRow'\nimport LockDurationRow from '../../LockedPool/Common/LockDurationRow'\nimport useUserDataInVaultPresenter from '../../LockedPool/hooks/useUserDataInVaultPresenter'\nimport CakeVaultApr from './CakeVaultApr'\nimport PoolStatsInfo from '../../PoolStatsInfo'\n\nconst { CompoundingPoolTag, ManualPoolTag } = FarmUI.Tags\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 1000px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 1000px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div<{ isAutoVault?: boolean; hasBalance?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  flex-wrap: wrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: ${({ isAutoVault }) => (isAutoVault ? 'row' : null)};\n    align-items: ${({ isAutoVault, hasBalance }) => (isAutoVault ? (hasBalance ? 'flex-start' : 'stretch') : 'center')};\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n    ${Text} {\n      font-size: 14px;\n    }\n  }\n`\n\nconst YieldBoostDurationRow = ({ lockEndTime, lockStartTime }) => {\n  const { weekDuration, secondDuration } = useUserDataInVaultPresenter({\n    lockEndTime,\n    lockStartTime,\n  })\n\n  return (\n    <>\n      <YieldBoostRow secondDuration={secondDuration} />\n      <LockDurationRow weekDuration={weekDuration} />\n    </>\n  )\n}\n\nconst ActionPanel: React.FC<React.PropsWithChildren<ActionPanelProps>> = ({ account, pool, expanded }) => {\n  const { userData, vaultKey } = pool\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const vaultData = useVaultPoolByKey(vaultKey)\n  const {\n    userData: {\n      balance: { cakeAsBigNumber },\n    },\n  } = vaultData\n\n  const vaultPosition = getVaultPosition(vaultData.userData)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  const poolStakingTokenBalance = vaultKey\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Rewards are distributed and included into your staking balance automatically. There’s no need to manually compound your rewards.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(vaultKey ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {isMobile && vaultKey === VaultKey.CakeVault && (vaultData as DeserializedLockedCakeVault).userData.locked && (\n          <Box mb=\"16px\">\n            <YieldBoostDurationRow\n              lockEndTime={(vaultData as DeserializedLockedCakeVault).userData.lockEndTime}\n              lockStartTime={(vaultData as DeserializedLockedCakeVault).userData.lockStartTime}\n            />\n          </Box>\n        )}\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <PoolStatsInfo pool={pool} account={account} showTotalStaked={isMobile} alignLinksToRight={isMobile} />\n        </Flex>\n        {vaultKey ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {isMobile && vaultKey === VaultKey.CakeVault && vaultPosition === VaultPosition.None && (\n          <CakeVaultApr pool={pool} userData={vaultData.userData} vaultPosition={vaultPosition} />\n        )}\n        <Box width=\"100%\">\n          {pool.vaultKey === VaultKey.CakeVault && (\n            <VaultPositionTagWithLabel\n              userData={vaultData.userData as DeserializedLockedVaultUser}\n              width={['auto', , 'fit-content']}\n              ml={['12px', , , , , '32px']}\n            />\n          )}\n          <ActionContainer isAutoVault={!!pool.vaultKey} hasBalance={poolStakingTokenBalance.gt(0)}>\n            {pool.vaultKey ? <AutoHarvest {...pool} /> : <Harvest {...pool} />}\n            <Stake pool={pool} />\n          </ActionContainer>\n        </Box>\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import { Text, Flex, Skeleton, Heading, Box, useMatchBreakpoints, BalanceWithLoading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { DeserializedPool, VaultKey, DeserializedLockedCakeVault } from 'state/types'\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\nimport { useVaultApy } from 'hooks/useVaultApy'\n\nimport { ActionContainer, ActionTitles, ActionContent, RowActionContainer } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\nimport useUserDataInVaultPresenter from '../../LockedPool/hooks/useUserDataInVaultPresenter'\n\nconst AutoHarvestAction: React.FunctionComponent<React.PropsWithChildren<DeserializedPool>> = ({\n  userDataLoaded,\n  earningTokenPrice,\n  vaultKey,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { isMobile } = useMatchBreakpoints()\n\n  const vaultData = useVaultPoolByKey(vaultKey)\n  const {\n    userData: { userShares, cakeAtLastUserAction },\n    pricePerFullShare,\n  } = vaultData\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n    vaultKey === VaultKey.CakeVault\n      ? (vaultData as DeserializedLockedCakeVault).userData.currentPerformanceFee\n          .plus((vaultData as DeserializedLockedCakeVault).userData.currentOverdueFee)\n          .plus((vaultData as DeserializedLockedCakeVault).userData.userBoostedShare)\n      : null,\n  )\n\n  const { secondDuration, weekDuration } = useUserDataInVaultPresenter({\n    lockStartTime:\n      vaultKey === VaultKey.CakeVault ? (vaultData as DeserializedLockedCakeVault).userData?.lockStartTime ?? '0' : '0',\n    lockEndTime:\n      vaultKey === VaultKey.CakeVault ? (vaultData as DeserializedLockedCakeVault).userData?.lockEndTime ?? '0' : '0',\n  })\n\n  const { boostFactor } = useVaultApy({ duration: secondDuration })\n\n  const vaultPosition = getVaultPosition(vaultData.userData)\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <RowActionContainer justifyContent=\"space-between\">\n      <Box width=\"100%\">\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <>\n              {hasAutoEarnings ? (\n                <>\n                  <BalanceWithLoading lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={autoCakeToDisplay} />\n                  {Number.isFinite(earningTokenPrice) && earningTokenPrice > 0 && (\n                    <BalanceWithLoading\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      prefix=\"~\"\n                      value={autoUsdToDisplay}\n                      unit=\" USD\"\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  <Heading color=\"textDisabled\">0</Heading>\n                  <Text fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                </>\n              )}\n            </>\n          </Flex>\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            {[VaultPosition.Flexible, VaultPosition.None].includes(vaultPosition) && (\n              <UnstakingFeeCountdownRow vaultKey={vaultKey} isTableVariant />\n            )}\n            {/* IFO credit here */}\n          </Flex>\n        </ActionContent>\n      </Box>\n      {!isMobile && vaultKey === VaultKey.CakeVault && (vaultData as DeserializedLockedCakeVault).userData.locked && (\n        <Box minWidth=\"123px\">\n          <ActionTitles>\n            <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n              {t('Yield boost')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <Flex flex=\"1\" flexDirection=\"column\" alignSelf=\"flex-start\">\n              <BalanceWithLoading\n                color=\"text\"\n                lineHeight=\"1\"\n                bold\n                fontSize=\"20px\"\n                value={boostFactor ? boostFactor?.toString() : '0'}\n                decimals={2}\n                unit=\"x\"\n              />\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                {t('Lock for %duration%', { duration: weekDuration })}\n              </Text>\n            </Flex>\n          </ActionContent>\n        </Box>\n      )}\n    </RowActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import { Box, Button, Flex, Skeleton, Text, CalculateIcon, useModal, Balance } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { DeserializedPool, DeserializedLockedVaultUser, VaultKey, DeserializedVaultUser } from 'state/types'\nimport { useVaultApy } from 'hooks/useVaultApy'\nimport { VaultPosition } from 'utils/cakePool'\nimport { MAX_LOCK_DURATION } from 'config/constants/pools'\nimport { VaultRoiCalculatorModal } from '../../Vault/VaultRoiCalculatorModal'\n\ninterface CakeVaultAprProps {\n  pool: DeserializedPool\n  userData: DeserializedVaultUser\n  vaultPosition: VaultPosition\n}\n\nconst CakeVaultApr: React.FC<React.PropsWithChildren<CakeVaultAprProps>> = ({ pool, userData, vaultPosition }) => {\n  const { t } = useTranslation()\n\n  const { flexibleApy, lockedApy } = useVaultApy({\n    duration:\n      vaultPosition > VaultPosition.Flexible\n        ? +(userData as DeserializedLockedVaultUser).lockEndTime -\n          +(userData as DeserializedLockedVaultUser).lockStartTime\n        : MAX_LOCK_DURATION,\n  })\n\n  const [onPresentFlexibleApyModal] = useModal(<VaultRoiCalculatorModal pool={pool} />)\n  const [onPresentLockedApyModal] = useModal(<VaultRoiCalculatorModal pool={pool} initialView={1} />)\n\n  return (\n    <>\n      <Box marginX=\"8px\" mb=\"8px\">\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"16px\" color=\"textSubtle\" textAlign=\"left\">\n            {t('Flexible APY')}\n          </Text>\n          {flexibleApy ? (\n            <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n              <Balance fontSize=\"16px\" value={parseFloat(flexibleApy)} decimals={2} unit=\"%\" fontWeight=\"600\" />\n              <Button\n                onClick={(e) => {\n                  e.stopPropagation()\n                  onPresentFlexibleApyModal()\n                }}\n                variant=\"text\"\n                width=\"20px\"\n                height=\"20px\"\n                padding=\"0px\"\n                marginLeft=\"4px\"\n              >\n                <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n              </Button>\n            </Flex>\n          ) : (\n            <Skeleton width=\"80px\" height=\"16px\" />\n          )}\n        </Flex>\n      </Box>\n      {pool.vaultKey === VaultKey.CakeVault && (\n        <Box marginX=\"8px\" mb=\"8px\">\n          <Flex justifyContent=\"space-between\">\n            <Text fontSize=\"16px\" color=\"textSubtle\" textAlign=\"left\">\n              {t('Locked APY')}\n            </Text>\n            {lockedApy ? (\n              <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                <Text fontSize=\"16px\" style={{ whiteSpace: 'nowrap' }} fontWeight=\"600\">\n                  {t('Up to')}\n                </Text>\n                <Balance\n                  ml=\"7px\"\n                  fontSize=\"16px\"\n                  value={parseFloat(lockedApy)}\n                  decimals={2}\n                  unit=\"%\"\n                  fontWeight=\"600\"\n                />\n                <Button\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onPresentLockedApyModal()\n                  }}\n                  variant=\"text\"\n                  width=\"20px\"\n                  height=\"20px\"\n                  padding=\"0px\"\n                  marginLeft=\"4px\"\n                >\n                  <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n                </Button>\n              </Flex>\n            ) : (\n              <Skeleton width=\"80px\" height=\"16px\" />\n            )}\n          </Flex>\n        </Box>\n      )}\n    </>\n  )\n}\n\nexport default CakeVaultApr\n","import { Button, Text, useModal, Flex, Skeleton, Heading, Balance } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../Modals/CollectModal'\n\nconst HarvestAction: React.FunctionComponent<React.PropsWithChildren<DeserializedPool>> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" flexDirection=\"column\" alignSelf=\"flex-center\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import {\n  AddIcon,\n  Button,\n  Flex,\n  IconButton,\n  MinusIcon,\n  HelpIcon,\n  Skeleton,\n  Text,\n  useModal,\n  useTooltip,\n  Box,\n  SkeletonV2,\n  useMatchBreakpoints,\n  Balance,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport BigNumber from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { PoolCategory } from 'config/constants/types'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useERC20 } from 'hooks/useContract'\n\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { DeserializedPool, VaultKey, DeserializedLockedCakeVault } from 'state/types'\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceNumber, getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport { useProfileRequirement } from 'views/Pools/hooks/useProfileRequirement'\nimport isUndefinedOrNull from '@pancakeswap/utils/isUndefinedOrNull'\nimport useUserDataInVaultPresenter from 'views/Pools/components/LockedPool/hooks/useUserDataInVaultPresenter'\n\nimport { useApprovePool, useCheckVaultApprovalStatus, useVaultApprove } from '../../../hooks/useApprove'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport NotEnoughTokensModal from '../../Modals/NotEnoughTokensModal'\nimport StakeModal from '../../Modals/StakeModal'\nimport { ProfileRequirementWarning } from '../../ProfileRequirementWarning'\nimport { ActionContainer, ActionContent, ActionTitles } from './styles'\nimport { VaultStakeButtonGroup } from '../../Vault/VaultStakeButtonGroup'\nimport AddCakeButton from '../../LockedPool/Buttons/AddCakeButton'\nimport ExtendButton from '../../LockedPool/Buttons/ExtendDurationButton'\nimport AfterLockedActions from '../../LockedPool/Common/AfterLockedActions'\nimport ConvertToLock from '../../LockedPool/Common/ConvertToLock'\nimport BurningCountDown from '../../LockedPool/Common/BurningCountDown'\nimport LockedStakedModal from '../../LockedPool/Modals/LockedStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n}\n\nconst Staked: React.FunctionComponent<React.PropsWithChildren<StackedActionProps>> = ({ pool }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    vaultKey,\n    profileRequirement,\n    userDataLoaded,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { isMobile } = useMatchBreakpoints()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, pendingTx: pendingPoolTx } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus(vaultKey)\n  const { handleApprove: handleVaultApprove, pendingTx: pendingVaultTx } = useVaultApprove(vaultKey, setLastUpdated)\n\n  const handleApprove = vaultKey ? handleVaultApprove : handlePoolApprove\n  const pendingTx = vaultKey ? pendingVaultTx : pendingPoolTx\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !vaultKey && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const vaultData = useVaultPoolByKey(pool.vaultKey)\n  const {\n    userData: {\n      userShares,\n      balance: { cakeAsBigNumber, cakeAsNumberBalance },\n    },\n  } = vaultData\n\n  const { lockEndDate, remainingTime, burnStartTime } = useUserDataInVaultPresenter({\n    lockStartTime:\n      vaultKey === VaultKey.CakeVault ? (vaultData as DeserializedLockedCakeVault).userData?.lockStartTime ?? '0' : '0',\n    lockEndTime:\n      vaultKey === VaultKey.CakeVault ? (vaultData as DeserializedLockedCakeVault).userData?.lockEndTime ?? '0' : '0',\n    burnStartTime:\n      vaultKey === VaultKey.CakeVault ? (vaultData as DeserializedLockedCakeVault).userData?.burnStartTime ?? '0' : '0',\n  })\n\n  const hasSharesStaked = userShares.gt(0)\n  const isVaultWithShares = vaultKey && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = vaultKey ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const [openPresentLockedStakeModal] = useModal(\n    <LockedStakedModal\n      currentBalance={stakingTokenBalance}\n      stakingToken={stakingToken}\n      stakingTokenBalance={stakingTokenBalance}\n    />,\n  )\n\n  const { notMeetRequired, notMeetThreshold } = useProfileRequirement(profileRequirement)\n\n  const onStake = () => {\n    if (vaultKey) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (vaultKey) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const tooltipContentOfBurn = t(\n    'After Burning starts at %burnStartTime%. You need to renew your fix-term position, to initiate a new lock or convert your staking position to flexible before it starts. Otherwise all the rewards will be burned within the next 90 days.',\n    { burnStartTime },\n  )\n  const {\n    targetRef: tagTargetRefOfBurn,\n    tooltip: tagTooltipOfBurn,\n    tooltipVisible: tagTooltipVisibleOfBurn,\n  } = useTooltip(tooltipContentOfBurn, {\n    placement: 'bottom',\n  })\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (notMeetRequired || notMeetThreshold) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ProfileRequirementWarning profileRequirement={profileRequirement} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={pendingTx} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    const vaultPosition = getVaultPosition(vaultData.userData)\n    return (\n      <>\n        <ActionContainer flex={vaultPosition > 1 ? 1.5 : 1}>\n          <ActionContent mt={0}>\n            <Flex flex=\"1\" flexDirection=\"column\" alignSelf=\"flex-start\">\n              <ActionTitles>\n                <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n                  {stakingToken.symbol}{' '}\n                </Text>\n                <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n                  {vaultKey === VaultKey.CakeVault && (vaultData as DeserializedLockedCakeVault).userData.locked\n                    ? t('Locked')\n                    : t('Staked')}\n                </Text>\n              </ActionTitles>\n              <ActionContent>\n                <Box position=\"relative\">\n                  <Balance\n                    lineHeight=\"1\"\n                    bold\n                    fontSize=\"20px\"\n                    decimals={5}\n                    value={vaultKey ? cakeAsNumberBalance : stakedTokenBalance}\n                  />\n                  <SkeletonV2\n                    isDataReady={Number.isFinite(vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance)}\n                    width={120}\n                    wrapperProps={{ height: '20px' }}\n                    skeletonTop=\"2px\"\n                  >\n                    <Balance\n                      fontSize=\"12px\"\n                      display=\"inline\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      value={vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance}\n                      unit=\" USD\"\n                      prefix=\"~\"\n                    />\n                  </SkeletonV2>\n                </Box>\n              </ActionContent>\n              {vaultPosition === VaultPosition.Locked && (\n                <Box mt=\"16px\">\n                  <AddCakeButton\n                    lockEndTime={(vaultData as DeserializedLockedCakeVault).userData.lockEndTime}\n                    lockStartTime={(vaultData as DeserializedLockedCakeVault).userData.lockStartTime}\n                    currentLockedAmount={cakeAsBigNumber}\n                    stakingToken={stakingToken}\n                    currentBalance={stakingTokenBalance}\n                    stakingTokenBalance={stakingTokenBalance}\n                  />\n                </Box>\n              )}\n            </Flex>\n            {vaultPosition >= VaultPosition.Locked && (\n              <Flex flex=\"1\" ml=\"20px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n                <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n                  {t('Unlocks In')}\n                </Text>\n                <Text\n                  lineHeight=\"1\"\n                  mt=\"8px\"\n                  bold\n                  fontSize=\"20px\"\n                  color={vaultPosition >= VaultPosition.LockedEnd ? '#D67E0A' : 'text'}\n                >\n                  {vaultPosition >= VaultPosition.LockedEnd ? t('Unlocked') : remainingTime}\n                  {tagTooltipVisibleOfBurn && tagTooltipOfBurn}\n                  <span ref={tagTargetRefOfBurn}>\n                    <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n                  </span>\n                </Text>\n                <Text\n                  height=\"20px\"\n                  fontSize=\"12px\"\n                  display=\"inline\"\n                  color={vaultPosition >= VaultPosition.LockedEnd ? '#D67E0A' : 'text'}\n                >\n                  {t('On %date%', { date: lockEndDate })}\n                </Text>\n                {vaultPosition === VaultPosition.Locked && (\n                  <Box mt=\"16px\">\n                    <ExtendButton\n                      lockEndTime={(vaultData as DeserializedLockedCakeVault).userData.lockEndTime}\n                      lockStartTime={(vaultData as DeserializedLockedCakeVault).userData.lockStartTime}\n                      stakingToken={stakingToken}\n                      currentBalance={stakingTokenBalance}\n                      currentLockedAmount={cakeAsNumberBalance}\n                    >\n                      {t('Extend')}\n                    </ExtendButton>\n                  </Box>\n                )}\n              </Flex>\n            )}\n            {(vaultPosition === VaultPosition.Flexible || !vaultKey) && (\n              <IconButtonWrapper>\n                <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n                  <MinusIcon color=\"primary\" width=\"14px\" />\n                </IconButton>\n                {reachStakingLimit ? (\n                  <span ref={targetRef}>\n                    <IconButton variant=\"secondary\" disabled>\n                      <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                    </IconButton>\n                  </span>\n                ) : (\n                  <IconButton\n                    variant=\"secondary\"\n                    onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                    disabled={isFinished}\n                  >\n                    <AddIcon color=\"primary\" width=\"14px\" />\n                  </IconButton>\n                )}\n              </IconButtonWrapper>\n            )}\n            {!isMobile && vaultPosition >= VaultPosition.LockedEnd && (\n              <Flex flex=\"1\" ml=\"20px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n                <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n                  {vaultPosition === VaultPosition.AfterBurning ? t('After Burning') : t('After Burning In')}\n                </Text>\n                <Text lineHeight=\"1\" mt=\"8px\" bold fontSize=\"20px\" color=\"failure\">\n                  {vaultPosition === VaultPosition.AfterBurning ? (\n                    isUndefinedOrNull((vaultData as DeserializedLockedCakeVault).userData.currentOverdueFee) ? (\n                      '-'\n                    ) : (\n                      t('%amount% Burned', {\n                        amount: getFullDisplayBalance(\n                          (vaultData as DeserializedLockedCakeVault).userData.currentOverdueFee,\n                          18,\n                          5,\n                        ),\n                      })\n                    )\n                  ) : (\n                    <BurningCountDown lockEndTime={(vaultData as DeserializedLockedCakeVault).userData.lockEndTime} />\n                  )}\n                </Text>\n              </Flex>\n            )}\n            {tooltipVisible && tooltip}\n          </ActionContent>\n        </ActionContainer>\n        {isMobile && vaultPosition >= VaultPosition.LockedEnd && (\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text fontSize=\"14px\" color=\"failure\" as=\"span\">\n              {vaultPosition === VaultPosition.AfterBurning ? t('After Burning') : t('After Burning In')}\n            </Text>\n            <Text fontSize=\"14px\" bold color=\"failure\">\n              {vaultPosition === VaultPosition.AfterBurning ? (\n                isUndefinedOrNull((vaultData as DeserializedLockedCakeVault).userData.currentOverdueFee) ? (\n                  '-'\n                ) : (\n                  t('%amount% Burned', {\n                    amount: getFullDisplayBalance(\n                      (vaultData as DeserializedLockedCakeVault).userData.currentOverdueFee,\n                      18,\n                      5,\n                    ),\n                  })\n                )\n              ) : (\n                <BurningCountDown lockEndTime={(vaultData as DeserializedLockedCakeVault).userData.lockEndTime} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        {[VaultPosition.AfterBurning, VaultPosition.LockedEnd].includes(vaultPosition) && (\n          <Box\n            width=\"100%\"\n            mt={['0', '0', '24px', '24px', '24px']}\n            ml={['0', '0', '12px', '12px', '12px', '32px']}\n            mr={['0', '0', '12px', '12px', '12px', '0px']}\n          >\n            <AfterLockedActions\n              isInline\n              position={vaultPosition}\n              currentLockedAmount={cakeAsNumberBalance}\n              stakingToken={stakingToken}\n              lockEndTime=\"0\"\n              lockStartTime=\"0\"\n            />\n          </Box>\n        )}\n        {vaultKey === VaultKey.CakeVault && vaultPosition === VaultPosition.Flexible && (\n          <Box\n            width=\"100%\"\n            mt={['0', '0', '24px', '24px', '24px']}\n            ml={['0', '0', '12px', '12px', '32px']}\n            mr={['0', '0', '12px', '12px', '0']}\n          >\n            <ConvertToLock stakingToken={stakingToken} currentStakedAmount={cakeAsNumberBalance} isInline />\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        {vaultKey ? (\n          <VaultStakeButtonGroup\n            onFlexibleClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n            onLockedClick={vaultKey === VaultKey.CakeVault ? openPresentLockedStakeModal : null}\n          />\n        ) : (\n          <Button\n            width=\"100%\"\n            onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n            variant=\"secondary\"\n            disabled={isFinished}\n          >\n            {t('Stake')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\n\nexport const ActionContainer = styled(Flex)`\n  flex-direction: column;\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nActionContainer.defaultProps = {\n  flex: 1,\n}\n\nexport const RowActionContainer = styled(ActionContainer)`\n  flex-direction: row;\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled(Flex)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nActionContent.defaultProps = {\n  mt: '8px',\n}\n","import { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from '@pancakeswap/localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst AprCell: React.FC<React.PropsWithChildren<AprCellProps>> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <BaseCell role=\"cell\" flex={['1 0 50px', '1 0 50px', '2 0 100px', '2 0 100px', '1 0 120px']}>\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </BaseCell>\n  )\n}\n\nexport default AprCell\n","import {\n  Skeleton,\n  Text,\n  Flex,\n  Button,\n  CalculateIcon,\n  useModal,\n  useMatchBreakpoints,\n  FlexGap,\n  Balance,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useVaultApy } from 'hooks/useVaultApy'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { DeserializedPool, DeserializedLockedVaultUser, VaultKey } from 'state/types'\nimport { MAX_LOCK_DURATION } from 'config/constants/pools'\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\nimport { VaultRoiCalculatorModal } from '../../Vault/VaultRoiCalculatorModal'\nimport BaseCell, { CellContent } from './BaseCell'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst AutoAprCell: React.FC<React.PropsWithChildren<AprCellProps>> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const { userData } = useVaultPoolByKey(pool.vaultKey)\n\n  const vaultPosition = getVaultPosition(userData)\n\n  const { flexibleApy, lockedApy } = useVaultApy({\n    duration:\n      vaultPosition > VaultPosition.Flexible\n        ? +(userData as DeserializedLockedVaultUser).lockEndTime -\n          +(userData as DeserializedLockedVaultUser).lockStartTime\n        : MAX_LOCK_DURATION,\n  })\n\n  const [onPresentFlexibleApyModal] = useModal(<VaultRoiCalculatorModal pool={pool} />)\n  const [onPresentLockedApyModal] = useModal(\n    <VaultRoiCalculatorModal pool={pool} initialView={1} />,\n    true,\n    true,\n    pool.vaultKey === VaultKey.CakeVault ? 'LockedVaultRoiCalculatorModal' : 'FlexibleSideVaultRoiCalculatorModal',\n  )\n\n  if (pool.vaultKey === VaultKey.CakeVault && vaultPosition === VaultPosition.None) {\n    return (\n      <>\n        <BaseCell role=\"cell\" flex={['1 0 50px', '4.5', '1 0 120px', null, '2 0 100px']}>\n          <CellContent>\n            <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n              {t('Flexible APY')}\n            </Text>\n            {flexibleApy ? (\n              <AprLabelContainer alignItems=\"center\" justifyContent=\"flex-start\">\n                <Balance\n                  fontSize={['14px', '14px', '16px']}\n                  value={parseFloat(flexibleApy)}\n                  decimals={2}\n                  unit=\"%\"\n                  fontWeight={[600, 400]}\n                />\n                {!isMobile && (\n                  <Button\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onPresentFlexibleApyModal()\n                    }}\n                    variant=\"text\"\n                    width=\"20px\"\n                    height=\"20px\"\n                    padding=\"0px\"\n                    marginLeft=\"4px\"\n                  >\n                    <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n                  </Button>\n                )}\n              </AprLabelContainer>\n            ) : (\n              <Skeleton width=\"80px\" height=\"16px\" />\n            )}\n          </CellContent>\n        </BaseCell>\n        <BaseCell role=\"cell\" flex={['1 0 50px', '1 0 50px', '2 0 100px', null, '1 0 120px']}>\n          <CellContent>\n            <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n              {t('Locked APY')}\n            </Text>\n            {lockedApy ? (\n              <AprLabelContainer alignItems=\"center\" justifyContent=\"flex-start\">\n                <FlexGap gap=\"4px\" flexWrap=\"wrap\">\n                  <Text fontSize={['14px', '14px', '16px']} style={{ whiteSpace: 'nowrap' }} fontWeight={[500, 400]}>\n                    {t('Up to')}\n                  </Text>\n                  <Balance\n                    fontSize={['14px', '14px', '16px']}\n                    value={parseFloat(lockedApy)}\n                    decimals={2}\n                    unit=\"%\"\n                    fontWeight={[600, 400]}\n                  />\n                  {!isMobile && (\n                    <Button\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        onPresentLockedApyModal()\n                      }}\n                      variant=\"text\"\n                      width=\"20px\"\n                      height=\"20px\"\n                      padding=\"0px\"\n                      marginLeft=\"4px\"\n                    >\n                      <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n                    </Button>\n                  )}\n                </FlexGap>\n              </AprLabelContainer>\n            ) : (\n              <Skeleton width=\"80px\" height=\"16px\" />\n            )}\n          </CellContent>\n        </BaseCell>\n      </>\n    )\n  }\n\n  return (\n    <BaseCell role=\"cell\" flex={['1 0 50px', '1 0 50px', '2 0 100px', '2 0 100px', '1 0 120px']}>\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        {flexibleApy ? (\n          <AprLabelContainer alignItems=\"center\" justifyContent=\"flex-start\">\n            <Balance\n              fontSize=\"16px\"\n              value={vaultPosition > VaultPosition.Flexible ? parseFloat(lockedApy) : parseFloat(flexibleApy)}\n              decimals={2}\n              unit=\"%\"\n            />\n            <Button\n              onClick={(e) => {\n                e.stopPropagation()\n                return vaultPosition > VaultPosition.Flexible ? onPresentLockedApyModal() : onPresentFlexibleApyModal()\n              }}\n              variant=\"text\"\n              width=\"20px\"\n              height=\"20px\"\n              padding=\"0px\"\n              marginLeft=\"4px\"\n            >\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          </AprLabelContainer>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </BaseCell>\n  )\n}\n\nexport default AutoAprCell\n","import styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints, Balance } from '@pancakeswap/uikit'\nimport { DeserializedPool, VaultKey, DeserializedPoolLockedVault } from 'state/types'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport AutoEarningsBreakdown from '../../AutoEarningsBreakdown'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<React.PropsWithChildren<AutoEarningsCellProps>> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice, vaultKey } = pool\n\n  const vaultData = useVaultPoolByKey(vaultKey)\n  const {\n    userData: { userShares, cakeAtLastUserAction, isLoading },\n    pricePerFullShare,\n  } = vaultData\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n    vaultKey === VaultKey.CakeVault\n      ? (vaultData as DeserializedPoolLockedVault).userData.currentPerformanceFee\n          .plus((vaultData as DeserializedPoolLockedVault).userData.currentOverdueFee)\n          .plus((vaultData as DeserializedPoolLockedVault).userData.userBoostedShare)\n      : null,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<AutoEarningsBreakdown pool={pool} account={account} />, {\n    placement: 'bottom',\n  })\n\n  if (vaultKey === VaultKey.CakeVault && !userShares.gt(0)) {\n    return null\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {isLoading && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled(Flex)`\n  color: black;\n\n  padding: 24px 8px;\n\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst ExpandActionCell: React.FC<React.PropsWithChildren<ExpandActionCellProps>> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default ExpandActionCell\n","import { Text, TokenPairImage as UITokenPairImage, useMatchBreakpoints, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { TokenPairImage } from 'components/TokenImage'\nimport { vaultPoolConfig } from 'config/constants/pools'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { memo } from 'react'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { DeserializedPool, VaultKey, DeserializedLockedCakeVault } from 'state/types'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getVaultPosition, VaultPosition, VaultPositionParams } from 'utils/cakePool'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<React.PropsWithChildren<NameCellProps>> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, vaultKey, totalStaked } = pool\n  const vaultData = useVaultPoolByKey(pool.vaultKey)\n  const {\n    userData: { userShares },\n    totalCakeInVault,\n  } = vaultData\n  const hasVaultShares = userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n\n  const showStakedTag = vaultKey ? hasVaultShares : isStaked\n\n  let title: React.ReactNode = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle: React.ReactNode = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (vaultKey) {\n    title = vaultPoolConfig[vaultKey].name\n    subtitle = vaultPoolConfig[vaultKey].description\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {(totalStaked && totalStaked.gte(0)) || (totalCakeInVault && totalCakeInVault.gte(0)) ? (\n        <>\n          {vaultKey ? (\n            <UITokenPairImage {...vaultPoolConfig[vaultKey].tokenImage} mr=\"8px\" width={40} height={40} />\n          ) : (\n            <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n          )}\n          <CellContent>\n            {showStakedTag &&\n              (vaultKey === VaultKey.CakeVault ? (\n                <StakedCakeStatus\n                  userShares={userShares}\n                  locked={(vaultData as DeserializedLockedCakeVault).userData.locked}\n                  lockEndTime={(vaultData as DeserializedLockedCakeVault).userData.lockEndTime}\n                />\n              ) : (\n                <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n                  {t('Staked')}\n                </Text>\n              ))}\n            <Text bold={!isMobile} small={isMobile}>\n              {title}\n            </Text>\n            {showSubtitle && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                {subtitle}\n              </Text>\n            )}\n          </CellContent>\n        </>\n      ) : (\n        <>\n          <Skeleton mr=\"8px\" width={36} height={36} variant=\"circle\" />\n          <CellContent>\n            <Skeleton width={30} height={12} mb=\"4px\" />\n            <Skeleton width={65} height={12} />\n          </CellContent>\n        </>\n      )}\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n\nconst stakedStatus = {\n  [VaultPosition.None]: { text: '', color: 'secondary' },\n  [VaultPosition.Locked]: { text: 'Locked', color: 'secondary' },\n  [VaultPosition.LockedEnd]: { text: 'Locked End', color: 'secondary' },\n  [VaultPosition.AfterBurning]: { text: 'After Burning', color: 'failure' },\n  [VaultPosition.Flexible]: { text: 'Flexible', color: 'success' },\n}\n\nexport const StakedCakeStatus: React.FC<React.PropsWithChildren<VaultPositionParams>> = memo(\n  ({ userShares, locked, lockEndTime }) => {\n    const vaultPosition = getVaultPosition({ userShares, locked, lockEndTime })\n    const { t } = useTranslation()\n    return (\n      <Text fontSize=\"12px\" bold color={stakedStatus[vaultPosition].color} textTransform=\"uppercase\">\n        {t(stakedStatus[vaultPosition].text)}\n      </Text>\n    )\n  },\n)\n","import { Box, Message, MessageText, NextLinkFromReactRouter } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { DeserializedPool } from 'state/types'\nimport { useProfileRequirement } from '../hooks/useProfileRequirement'\n\nexport function ProfileRequirementWarning({\n  profileRequirement,\n}: {\n  profileRequirement: DeserializedPool['profileRequirement']\n}) {\n  const { t } = useTranslation()\n  const { notMeetRequired, notMeetThreshold } = useProfileRequirement(profileRequirement)\n  return (\n    <Message variant=\"warning\">\n      <Box>\n        <MessageText>\n          {notMeetRequired &&\n            notMeetThreshold &&\n            t('This pool requires active Pancake Profile and %amount% profile points.', {\n              amount: profileRequirement.thresholdPoints.toNumber().toLocaleString(),\n            })}\n          {notMeetRequired && !notMeetThreshold && t('This pool requires active Pancake Profile')}\n          {!notMeetRequired &&\n            notMeetThreshold &&\n            t('This pool requires %amount% profile points.', {\n              amount: profileRequirement.thresholdPoints.toNumber().toLocaleString(),\n            })}\n        </MessageText>\n        {(notMeetRequired || notMeetThreshold) && (\n          <MessageText bold>\n            {notMeetRequired ? (\n              <NextLinkFromReactRouter style={{ textDecoration: 'underline' }} to=\"/create-profile\">\n                {t('Create Profile')} »\n              </NextLinkFromReactRouter>\n            ) : (\n              <NextLinkFromReactRouter style={{ textDecoration: 'underline' }} to=\"/profile\">\n                {t('Go to Profile')} »\n              </NextLinkFromReactRouter>\n            )}\n          </MessageText>\n        )}\n      </Box>\n    </Message>\n  )\n}\n","import { useCallback } from 'react'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { useSousChef } from 'hooks/useContract'\nimport { BOOSTED_FARM_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: BOOSTED_FARM_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  return sousChefContract.deposit('0', options)\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  return sousChefContract.deposit({ ...options, value: BIG_ZERO })\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const sousChefContract = useSousChef(sousId)\n\n  const handleHarvest = useCallback(async () => {\n    if (isUsingBnb) {\n      return harvestPoolBnb(sousChefContract)\n    }\n\n    return harvestPool(sousChefContract)\n  }, [isUsingBnb, sousChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import { useProfile } from 'state/profile/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { useMemo } from 'react'\n\nexport function useProfileRequirement(profileRequirement: DeserializedPool['profileRequirement']) {\n  const { profile, hasActiveProfile } = useProfile()\n\n  const notMeetRequired = useMemo(\n    () => profileRequirement && profileRequirement.required && !hasActiveProfile,\n    [profileRequirement, hasActiveProfile],\n  )\n  const notMeetThreshold = useMemo(\n    () =>\n      profileRequirement &&\n      profileRequirement.thresholdPoints.gt(0) &&\n      profileRequirement.thresholdPoints.gt(profile?.points ?? 0),\n    [profileRequirement, profile],\n  )\n\n  return {\n    notMeetRequired,\n    notMeetThreshold,\n  }\n}\n","import { useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, BOOSTED_FARM_GAS_LIMIT } from 'config'\nimport { getFullDecimalMultiplier } from '@pancakeswap/utils/getFullDecimalMultiplier'\nimport { useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: BOOSTED_FARM_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(getFullDecimalMultiplier(decimals)).toString(), options)\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (isUsingBnb) {\n        return sousStakeBnb(sousChefContract, amount)\n      }\n      return sousStake(sousChefContract, amount, decimals)\n    },\n    [isUsingBnb, sousChefContract],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { parseUnits } from '@ethersproject/units'\nimport { useSousChef } from 'hooks/useContract'\n\nconst sousUnstake = (sousChefContract: any, amount: string, decimals: number) => {\n  const units = parseUnits(amount, decimals)\n\n  return sousChefContract.withdraw(units.toString())\n}\n\nconst sousEmergencyUnstake = (sousChefContract: any) => {\n  return sousChefContract.emergencyWithdraw()\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (enableEmergencyWithdraw) {\n        return sousEmergencyUnstake(sousChefContract)\n      }\n\n      return sousUnstake(sousChefContract, amount, decimals)\n    },\n    [enableEmergencyWithdraw, sousChefContract],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n"],"names":["useTranslation","AutoRenewIcon","Button","Flex","Heading","Modal","Text","useToast","useWeb3React","ToastDescriptionWithTx","useCatchTxError","useTheme","useAppDispatch","updateUserBalance","updateUserPendingReward","updateUserStakedBalance","formatNumber","useHarvestPool","CollectModal","formattedBalance","earningToken","earningsDollarValue","sousId","isBnbPool","onDismiss","t","theme","toastSuccess","account","dispatch","fetchWithCatchTxError","loading","pendingTx","onReward","handleHarvestConfirm","receipt","status","txHash","transactionHash","symbol","title","headerBackground","colors","gradientCardHeader","justifyContent","alignItems","mb","flexDirection","fontSize","color","mt","onClick","isLoading","endIcon","spin","variant","pb","styled","StyledButton","PercentageButton","children","scale","mx","p","BalanceInput","CalculateIcon","IconButton","Image","Link","Skeleton","Slider","RoiCalculatorModal","BigNumber","useCallback","useEffect","useState","getInterestBreakdown","getDecimalAmount","getFullDisplayBalance","useStakePool","useUnstakePool","StyledLink","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","pool","stakingTokenBalance","stakingTokenPrice","isRemovingStake","stakingToken","earningTokenPrice","apr","userData","stakingLimit","onStake","onUnstake","enableEmergencyWithdraw","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","stakedBalance","gt","stakingLimitLeft","minus","fullDecimalStakeAmount","decimals","userNotEnoughToken","lt","usdValueStaked","times","formattedUsdValueStaked","isNaN","toNumber","interestBreakdown","principalInUSD","annualRoi","formattedAnnualRoi","getTokenLink","address","plus","handleStakeInputChange","input","convertedInput","percentage","Math","floor","dividedBy","multipliedBy","min","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","linkLabel","linkHref","stakingTokenSymbol","earningTokenSymbol","onBack","initialValue","minWidth","bold","style","textAlign","amount","token","src","width","height","alt","ml","value","onUserInput","currencyValue","isWarning","balance","max","onValueChanged","name","valueLabel","step","mr","Number","isFinite","maxWidth","disabled","parseFloat","external","href","keyframes","css","Box","HelpIcon","useTooltip","useMatchBreakpoints","Farm","FarmUI","useVaultPoolByKey","getVaultPosition","VaultPosition","VaultKey","BIG_ZERO","Harvest","Stake","AutoHarvest","VaultPositionTagWithLabel","YieldBoostRow","LockDurationRow","useUserDataInVaultPresenter","CakeVaultApr","PoolStatsInfo","CompoundingPoolTag","ManualPoolTag","Tags","expandAnimation","collapseAnimation","StyledActionPanel","div","expanded","dropdown","mediaQueries","lg","ActionContainer","sm","isAutoVault","hasBalance","InfoSection","YieldBoostDurationRow","lockEndTime","lockStartTime","weekDuration","secondDuration","ActionPanel","vaultKey","isMobile","vaultData","cakeAsBigNumber","vaultPosition","poolStakingTokenBalance","manualTooltipText","autoTooltipText","targetRef","tagTargetRef","tooltip","tagTooltip","tooltipVisible","tagTooltipVisible","placement","CakeVault","locked","showTotalStaked","alignLinksToRight","span","ref","None","BalanceWithLoading","getCakeVaultEarnings","useVaultApy","ActionTitles","ActionContent","RowActionContainer","UnstakingFeeCountdownRow","AutoHarvestAction","userDataLoaded","userShares","cakeAtLastUserAction","pricePerFullShare","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","currentPerformanceFee","currentOverdueFee","userBoostedShare","boostFactor","duration","actionTitle","as","textTransform","marginTop","flex","alignSelf","lineHeight","display","prefix","unit","Flexible","includes","isTableVariant","toString","useModal","Balance","MAX_LOCK_DURATION","VaultRoiCalculatorModal","flexibleApy","lockedApy","onPresentFlexibleApyModal","onPresentLockedApyModal","initialView","marginX","fontWeight","e","stopPropagation","padding","marginLeft","whiteSpace","PoolCategory","getBalanceNumber","HarvestAction","poolCategory","earnings","pendingReward","earningTokenBalance","earningTokenDollarBalance","hasEarnings","fullBalance","BINANCE","onPresentCollect","AddIcon","MinusIcon","SkeletonV2","ConnectWalletButton","useERC20","useProfileRequirement","isUndefinedOrNull","useApprovePool","useCheckVaultApprovalStatus","useVaultApprove","VaultStakeModal","NotEnoughTokensModal","ProfileRequirementWarning","VaultStakeButtonGroup","AddCakeButton","ExtendButton","AfterLockedActions","ConvertToLock","BurningCountDown","LockedStakedModal","IconButtonWrapper","Staked","isFinished","profileRequirement","stakingTokenContract","handleApprove","handlePoolApprove","pendingPoolTx","isVaultApproved","setLastUpdated","handleVaultApprove","pendingVaultTx","allowance","isNotVaultAndHasStake","stakedTokenBalance","stakedTokenDollarBalance","cakeAsNumberBalance","lockEndDate","remainingTime","burnStartTime","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","needsApproval","onPresentTokenRequired","tokenSymbol","onPresentStake","onPresentVaultStake","stakingMax","onPresentUnstake","onPresentVaultUnstake","openPresentLockedStakeModal","currentBalance","notMeetRequired","notMeetThreshold","tooltipContentOfBurn","tagTargetRefOfBurn","tagTooltipOfBurn","tagTooltipVisibleOfBurn","reachStakingLimit","gte","position","isDataReady","wrapperProps","skeletonTop","Locked","currentLockedAmount","LockedEnd","date","AfterBurning","isInline","currentStakedAmount","onFlexibleClick","onLockedClick","xl","defaultProps","BaseCell","CellContent","Apr","AprCell","role","showIcon","FlexGap","AprLabelContainer","AutoAprCell","gap","flexWrap","AutoEarningsBreakdown","StyledCell","HelpIconWrapper","AutoEarningsCell","labelText","ChevronDownIcon","md","ArrowIcon","toggled","ExpandActionCell","isFullLayout","TokenPairImage","UITokenPairImage","vaultPoolConfig","memo","NameCell","totalStaked","totalCakeInVault","hasVaultShares","isStaked","showStakedTag","subtitle","showSubtitle","description","tokenImage","primaryToken","secondaryToken","StakedCakeStatus","small","stakedStatus","text","Message","MessageText","NextLinkFromReactRouter","thresholdPoints","toLocaleString","textDecoration","to","useSousChef","BOOSTED_FARM_GAS_LIMIT","options","gasLimit","harvestPool","sousChefContract","deposit","harvestPoolBnb","isUsingBnb","handleHarvest","useProfile","useMemo","profile","hasActiveProfile","required","points","DEFAULT_TOKEN_DECIMAL","getFullDecimalMultiplier","sousStake","sousStakeBnb","handleStake","parseUnits","sousUnstake","units","withdraw","sousEmergencyUnstake","emergencyWithdraw","handleUnstake"],"sourceRoot":""}