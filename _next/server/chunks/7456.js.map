{"version":3,"file":"7456.js","mappings":"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","sources":["webpack://web/./src/views/Info/components/InfoTables/TokensTable.tsx","webpack://web/./src/views/Info/components/Percent/index.tsx"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect, Fragment } from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Flex,\n  Box,\n  Skeleton,\n  ArrowBackIcon,\n  ArrowForwardIcon,\n  useMatchBreakpoints,\n  NextLinkFromReactRouter,\n} from '@pancakeswap/uikit'\nimport { useGetChainName, useMultiChainPath, useStableSwapPath } from 'state/info/hooks'\nimport { TokenData } from 'state/info/types'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport Percent from 'views/Info/components/Percent'\nimport { useTranslation } from '@pancakeswap/localization'\nimport orderBy from 'lodash/orderBy'\nimport { formatAmount } from 'utils/formatInfoNumbers'\nimport { Arrow, Break, ClickableColumnHeader, PageButtons, TableWrapper } from './shared'\n\n/**\n *  Columns on different layouts\n *  6 = | # | Name | Price | Price Change | Volume 24H | TVL |\n *  5 = | # | Name | Price |              | Volume 24H | TVL |\n *  4 = | # | Name | Price |              | Volume 24H |     |\n *  2 = |   | Name |       |              | Volume 24H |     |\n *  On smallest screen Name is reduced to just symbol\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  padding: 0 24px;\n\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 2fr repeat(3, 1fr);\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 20px 2fr repeat(2, 1fr);\n    & :nth-child(6) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 670px) {\n    grid-template-columns: 1fr 1fr;\n    > *:first-child {\n      display: none;\n    }\n    > *:nth-child(3) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(NextLinkFromReactRouter)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst ResponsiveLogo = styled(CurrencyLogo)`\n  @media screen and (max-width: 670px) {\n    width: 16px;\n    height: 16px;\n  }\n`\n\nconst TableLoader: React.FC<React.PropsWithChildren> = () => {\n  const loadingRow = (\n    <ResponsiveGrid>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </ResponsiveGrid>\n  )\n  return (\n    <>\n      {loadingRow}\n      {loadingRow}\n      {loadingRow}\n    </>\n  )\n}\n\nconst DataRow: React.FC<React.PropsWithChildren<{ tokenData: TokenData; index: number }>> = ({ tokenData, index }) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  const chainName = useGetChainName()\n  const chianPath = useMultiChainPath()\n  const stableSwapPath = useStableSwapPath()\n  return (\n    <LinkWrapper to={`/info${chianPath}/tokens/${tokenData.address}${stableSwapPath}`}>\n      <ResponsiveGrid>\n        <Flex>\n          <Text>{index + 1}</Text>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ResponsiveLogo address={tokenData.address} chainName={chainName} />\n          {(isXs || isSm) && <Text ml=\"8px\">{tokenData.symbol}</Text>}\n          {!isXs && !isSm && (\n            <Flex marginLeft=\"10px\">\n              <Text>{tokenData.name}</Text>\n              <Text ml=\"8px\">({tokenData.symbol})</Text>\n            </Flex>\n          )}\n        </Flex>\n        <Text fontWeight={400}>${formatAmount(tokenData.priceUSD, { notation: 'standard' })}</Text>\n        <Text fontWeight={400}>\n          <Percent value={tokenData.priceUSDChange} fontWeight={400} />\n        </Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.volumeUSD)}</Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst SORT_FIELD = {\n  name: 'name',\n  volumeUSD: 'volumeUSD',\n  liquidityUSD: 'liquidityUSD',\n  priceUSD: 'priceUSD',\n  priceUSDChange: 'priceUSDChange',\n  priceUSDChangeWeek: 'priceUSDChangeWeek',\n}\n\nconst MAX_ITEMS = 10\n\nconst TokenTable: React.FC<\n  React.PropsWithChildren<{\n    tokenDatas: TokenData[] | undefined\n    maxItems?: number\n  }>\n> = ({ tokenDatas, maxItems = MAX_ITEMS }) => {\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n  const { t } = useTranslation()\n\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (tokenDatas) {\n      if (tokenDatas.length % maxItems === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages)\n    }\n  }, [maxItems, tokenDatas])\n\n  const sortedTokens = useMemo(() => {\n    return tokenDatas\n      ? orderBy(\n          tokenDatas,\n          (tokenData) => tokenData[sortField as keyof TokenData],\n          sortDirection ? 'desc' : 'asc',\n        ).slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [tokenDatas, maxItems, page, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  if (!tokenDatas) {\n    return <Skeleton />\n  }\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.name)}\n          textTransform=\"uppercase\"\n        >\n          {t('Name')} {arrow(SORT_FIELD.name)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price')} {arrow(SORT_FIELD.priceUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSDChange)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price Change')} {arrow(SORT_FIELD.priceUSDChange)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.liquidityUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.liquidityUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n\n      <Break />\n      {sortedTokens.length > 0 ? (\n        <>\n          {sortedTokens.map((data, i) => {\n            if (data) {\n              return (\n                <Fragment key={data.address}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} tokenData={data} />\n                  <Break />\n                </Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default TokenTable\n","import { Text, TextProps } from '@pancakeswap/uikit'\n\nexport interface PercentProps extends TextProps {\n  value: number | undefined\n}\n\nconst Percent: React.FC<React.PropsWithChildren<PercentProps>> = ({ value, ...rest }) => {\n  if (!value || Number.isNaN(value)) {\n    return <Text {...rest}>-</Text>\n  }\n\n  const isNegative = value < 0\n\n  return (\n    <Text {...rest} color={isNegative ? 'failure' : 'success'}>\n      {isNegative ? '↓' : '↑'}\n      {Math.abs(value).toFixed(2)}%\n    </Text>\n  )\n}\n\nexport default Percent\n"],"names":["useState","useMemo","useCallback","useEffect","Fragment","styled","Text","Flex","Box","Skeleton","ArrowBackIcon","ArrowForwardIcon","useMatchBreakpoints","NextLinkFromReactRouter","useGetChainName","useMultiChainPath","useStableSwapPath","CurrencyLogo","Percent","useTranslation","orderBy","formatAmount","Arrow","Break","ClickableColumnHeader","PageButtons","TableWrapper","ResponsiveGrid","div","LinkWrapper","ResponsiveLogo","TableLoader","loadingRow","DataRow","tokenData","index","isXs","isSm","chainName","chianPath","stableSwapPath","to","address","alignItems","ml","symbol","marginLeft","name","fontWeight","priceUSD","notation","value","priceUSDChange","volumeUSD","liquidityUSD","SORT_FIELD","priceUSDChangeWeek","MAX_ITEMS","TokenTable","tokenDatas","maxItems","sortField","setSortField","sortDirection","setSortDirection","t","page","setPage","maxPage","setMaxPage","extraPages","length","Math","floor","sortedTokens","slice","handleSort","newField","arrow","field","directionArrow","color","fontSize","bold","onClick","textTransform","map","data","i","rest","Number","isNaN","isNegative","abs","toFixed"],"sourceRoot":""}