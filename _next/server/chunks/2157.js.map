{"version":3,"file":"2157.js","mappings":"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","sources":["webpack://web/./src/components/Logo/ChainLogo.tsx","webpack://web/./src/components/Menu/UserMenu/TransactionRow.tsx","webpack://web/./src/components/Menu/UserMenu/WalletInfo.tsx","webpack://web/./src/components/Menu/UserMenu/WalletModal.tsx","webpack://web/./src/components/Menu/UserMenu/WalletTransactions.tsx","webpack://web/./src/components/Menu/UserMenu/WalletWrongNetwork.tsx","webpack://web/./src/config/constants/info.ts","webpack://web/./src/config/constants/supportChains.ts","webpack://web/./src/hooks/useSwitchNetwork.ts","webpack://web/./src/hooks/useTokenBalance.ts","webpack://web/./src/state/info/constant.ts","webpack://web/./src/state/transactions/hooks.tsx","webpack://web/./src/utils/graphql.ts","webpack://web/./src/views/Farms/Farms.tsx","webpack://web/./src/views/Farms/components/BCakeMigrateModal.tsx","webpack://web/./src/views/Farms/components/FarmCard/CardActionsContainer.tsx","webpack://web/./src/views/Farms/components/FarmCard/CardHeading.tsx","webpack://web/./src/views/Farms/components/FarmCard/FarmCard.tsx","webpack://web/./src/views/Farms/components/FarmCard/HarvestAction.tsx","webpack://web/./src/views/Farms/components/FarmCard/StakeAction.tsx","webpack://web/./src/views/Farms/components/FarmTable/Actions/ActionPanel.tsx","webpack://web/./src/views/Farms/components/FarmTable/Actions/HarvestAction.tsx","webpack://web/./src/views/Farms/components/FarmTable/Actions/StakedAction.tsx","webpack://web/./src/views/Farms/components/FarmTable/Actions/styles.ts","webpack://web/./src/views/Farms/components/FarmTable/CellLayout.tsx","webpack://web/./src/views/Farms/components/FarmTable/Details.tsx","webpack://web/./src/views/Farms/components/FarmTable/Earned.tsx","webpack://web/./src/views/Farms/components/FarmTable/Farm.tsx","webpack://web/./src/views/Farms/components/FarmTable/FarmTable.tsx","webpack://web/./src/views/Farms/components/FarmTable/Liquidity.tsx","webpack://web/./src/views/Farms/components/FarmTable/Multiplier.tsx","webpack://web/./src/views/Farms/components/FarmTable/Row.tsx","webpack://web/./src/views/Farms/components/MultiChainHarvestModal.tsx","webpack://web/./src/views/Farms/components/YieldBooster/components/ActionButton.tsx","webpack://web/./src/views/Farms/components/YieldBooster/components/BoostedAction.tsx","webpack://web/./src/views/Farms/components/YieldBooster/components/BoostedApr.tsx","webpack://web/./src/views/Farms/components/YieldBooster/components/BoostedTag.tsx","webpack://web/./src/views/Farms/components/YieldBooster/components/MigrateActionButton.tsx","webpack://web/./src/views/Farms/components/YieldBooster/hooks/useBoosterFarmHandlers.ts","webpack://web/./src/views/Farms/components/YieldBooster/hooks/useProxyCAKEBalance.ts","webpack://web/./src/views/Farms/components/YieldBooster/hooks/useProxyStakedActions.ts","webpack://web/./src/views/Farms/components/types.ts","webpack://web/./src/views/Farms/hooks/useFarmCProxyAddress.ts","webpack://web/./src/views/Farms/hooks/useFirstTimeCrossFarming.ts","webpack://web/./src/views/Farms/hooks/useHarvestFarm.ts","webpack://web/./src/views/Farms/hooks/useNonBscHarvestFarm.ts","webpack://web/./src/views/Farms/index.tsx","webpack://web/../../packages/uikit/src/components/CopyButton/CopyAddress.tsx","webpack://web/../../packages/uikit/src/components/CopyButton/CopyButton.tsx","webpack://web/../../packages/uikit/src/components/CopyButton/copyText.ts","webpack://web/../../packages/uikit/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/CheckmarkCircle.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Copy.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Logo.tsx"],"sourcesContent":["import Image from 'next/future/image'\nimport { HelpIcon } from '@pancakeswap/uikit'\nimport { isChainSupported } from 'utils/wagmi'\nimport { memo } from 'react'\n\nexport const ChainLogo = memo(\n  ({ chainId, width = 24, height = 24 }: { chainId: number; width?: number; height?: number }) => {\n    if (isChainSupported(chainId)) {\n      return (\n        <Image\n          alt={`chain-${chainId}`}\n          style={{ maxHeight: `${height}px` }}\n          src={`/images/chains/${chainId}.png`}\n          width={width}\n          height={height}\n          unoptimized\n        />\n      )\n    }\n\n    return <HelpIcon width={width} height={height} />\n  },\n)\n","import { BlockIcon, CheckmarkCircleIcon, Flex, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { pickFarmTransactionTx } from 'state/global/actions'\nimport { TransactionType, FarmTransactionStatus } from 'state/transactions/actions'\nimport { getBlockExploreLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n  chainId: number\n  type: TransactionType\n  onDismiss: () => void\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled.div`\n  cursor: pointer;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  const { receipt, nonBscFarm } = txn\n  if (!txn.receipt || nonBscFarm?.status === FarmTransactionStatus.PENDING) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  const isFarmStatusSuccess = nonBscFarm ? nonBscFarm.status === FarmTransactionStatus.SUCCESS : true\n  return (receipt?.status === 1 && isFarmStatusSuccess) || typeof receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<React.PropsWithChildren<TransactionRowProps>> = ({ txn, chainId, type, onDismiss }) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n\n  const onClickTransaction = () => {\n    if (type === 'non-bsc-farm') {\n      onDismiss()\n      dispatch(pickFarmTransactionTx({ tx: txn.hash, chainId }))\n    } else {\n      const url = getBlockExploreLink(txn.hash, 'transaction', chainId)\n      window.open(url, '_blank', 'noopener noreferrer')\n    }\n  }\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink onClick={onClickTransaction}>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>\n        {txn.translatableSummary\n          ? t(txn.translatableSummary.text, txn.translatableSummary.data)\n          : txn.summary ?? txn.hash}\n      </Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import {\n  Box,\n  Button,\n  Flex,\n  InjectedModalProps,\n  LinkExternal,\n  Message,\n  Skeleton,\n  Text,\n  CopyAddress,\n} from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { FetchStatus } from 'config/constants/types'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport useAuth from 'hooks/useAuth'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { ChainLogo } from 'components/Logo/ChainLogo'\n\nimport { getBlockExploreLink, getBlockExploreName } from 'utils'\nimport { formatBigNumber } from '@pancakeswap/utils/formatBalance'\nimport { useBalance } from 'wagmi'\n\nconst COLORS = {\n  ETH: '#627EEA',\n  BNB: '#14151A',\n}\n\ninterface WalletInfoProps {\n  hasLowNativeBalance: boolean\n  switchView: (newIndex: number) => void\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowNativeBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account, chainId, chain } = useActiveWeb3React()\n  const isBSC = chainId === ChainId.BSC\n  const bnbBalance = useBalance({ addressOrName: account, chainId: ChainId.BSC })\n  const nativeBalance = useBalance({ addressOrName: account, enabled: !isBSC })\n  const native = useNativeCurrency()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useGetCakeBalance()\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss?.()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress tooltipMessage={t('Copied')} account={account} mb=\"24px\" />\n      {hasLowNativeBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">\n              {t('%currency% Balance Low', {\n                currency: native.symbol,\n              })}\n            </Text>\n            <Text as=\"p\">\n              {t('You need %currency% for transaction fees.', {\n                currency: native.symbol,\n              })}\n            </Text>\n          </Box>\n        </Message>\n      )}\n      {!isBSC && chain && (\n        <Box mb=\"12px\">\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n            <Flex bg={COLORS.ETH} borderRadius=\"16px\" pl=\"4px\" pr=\"8px\" py=\"2px\">\n              <ChainLogo chainId={chain.id} />\n              <Text color=\"white\" ml=\"4px\">\n                {chain.name}\n              </Text>\n            </Flex>\n            <LinkExternal href={getBlockExploreLink(account, 'address', chainId)}>\n              {getBlockExploreName(chainId)}\n            </LinkExternal>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Text color=\"textSubtle\">\n              {native.symbol} {t('Balance')}\n            </Text>\n            {!nativeBalance.isFetched ? (\n              <Skeleton height=\"22px\" width=\"60px\" />\n            ) : (\n              <Text>{formatBigNumber(nativeBalance.data.value, 6)}</Text>\n            )}\n          </Flex>\n        </Box>\n      )}\n      <Box mb=\"24px\">\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n          <Flex bg={COLORS.BNB} borderRadius=\"16px\" pl=\"4px\" pr=\"8px\" py=\"2px\">\n            <ChainLogo chainId={ChainId.BSC} />\n            <Text color=\"white\" ml=\"4px\">\n              BNB Smart Chain\n            </Text>\n          </Flex>\n          <LinkExternal href={getBlockExploreLink(account, 'address', ChainId.BSC)}>\n            {getBlockExploreName(ChainId.BSC)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\">BNB {t('Balance')}</Text>\n          {!bnbBalance.isFetched ? (\n            <Skeleton height=\"22px\" width=\"60px\" />\n          ) : (\n            <Text>{formatBigNumber(bnbBalance.data.value, 6)}</Text>\n          )}\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\">{t('CAKE Balance')}</Text>\n          {cakeFetchStatus !== FetchStatus.Fetched ? (\n            <Skeleton height=\"22px\" width=\"60px\" />\n          ) : (\n            <Text>{formatBigNumber(cakeBalance, 3)}</Text>\n          )}\n        </Flex>\n      </Box>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import { parseUnits } from '@ethersproject/units'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { useState } from 'react'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { useBalance } from 'wagmi'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\nimport WalletWrongNetwork from './WalletWrongNetwork'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n  WRONG_NETWORK,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_NATIVE_BALANCE = parseUnits('0.002', 'ether')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradientBubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<React.PropsWithChildren<WalletModalProps>> = ({\n  initialView = WalletView.WALLET_INFO,\n  onDismiss,\n}) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { data, isFetched } = useBalance({ addressOrName: account })\n  const hasLowNativeBalance = isFetched && data && data.value.lte(LOW_NATIVE_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  const TabsComponent: React.FC<React.PropsWithChildren> = () => (\n    <Tabs>\n      <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n        <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n        <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n      </ButtonMenu>\n    </Tabs>\n  )\n\n  return (\n    <ModalContainer title={t('Welcome!')} $minWidth=\"360px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      {view !== WalletView.WRONG_NETWORK && <TabsComponent />}\n      <ModalBody p=\"24px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && (\n          <WalletInfo hasLowNativeBalance={hasLowNativeBalance} switchView={handleClick} onDismiss={onDismiss} />\n        )}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions onDismiss={onDismiss} />}\n        {view === WalletView.WRONG_NETWORK && <WalletWrongNetwork onDismiss={onDismiss} />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import styled from 'styled-components'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { useAllSortedRecentTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport isEmpty from 'lodash/isEmpty'\nimport TransactionRow from './TransactionRow'\nimport { chains } from '../../../utils/wagmi'\n\nconst TransactionsContainer = styled(Box)`\n  max-height: 300px;\n  overflow-y: auto;\n`\n\ninterface WalletTransactionsProps {\n  onDismiss: () => void\n}\n\nconst WalletTransactions: React.FC<React.PropsWithChildren<WalletTransactionsProps>> = ({ onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const sortedTransactions = useAllSortedRecentTransactions()\n\n  const hasTransactions = !isEmpty(sortedTransactions)\n\n  const handleClearAll = () => {\n    dispatch(clearAllTransactions())\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {hasTransactions && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {hasTransactions ? (\n        <TransactionsContainer>\n          {Object.entries(sortedTransactions).map(([chainId, transactions]) => {\n            const chainIdNumber = Number(chainId)\n            return (\n              <Box key={chainId}>\n                <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"4px\">\n                  {chains.find((c) => c.id === chainIdNumber)?.name ?? 'Unknown network'}\n                </Text>\n                {Object.values(transactions).map((txn) => (\n                  <TransactionRow\n                    key={txn.hash}\n                    txn={txn}\n                    chainId={chainIdNumber}\n                    type={txn.type}\n                    onDismiss={onDismiss}\n                  />\n                ))}\n              </Box>\n            )\n          })}\n        </TransactionsContainer>\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Button, Text, Link, HelpIcon, Message, MessageText } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useSwitchNetwork } from 'hooks/useSwitchNetwork'\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n  &:hover {\n    text-decoration: initial;\n  }\n`\n\ninterface WalletWrongNetworkProps {\n  onDismiss: () => void\n}\n\nconst WalletWrongNetwork: React.FC<React.PropsWithChildren<WalletWrongNetworkProps>> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n  const { switchNetworkAsync, canSwitch } = useSwitchNetwork()\n\n  const handleSwitchNetwork = async (): Promise<void> => {\n    await switchNetworkAsync(ChainId.BSC)\n    onDismiss?.()\n  }\n\n  return (\n    <>\n      <Text mb=\"24px\">{t('You’re connected to the wrong network.')}</Text>\n      {canSwitch ? (\n        <Button onClick={handleSwitchNetwork} mb=\"24px\">\n          {t('Switch Network')}\n        </Button>\n      ) : (\n        <Message variant=\"danger\">\n          <MessageText>{t('Unable to switch network. Please try it on your wallet')}</MessageText>\n        </Message>\n      )}\n      <StyledLink href=\"https://docs.pancakeswap.finance/get-started/connection-guide\" external>\n        <Button width=\"100%\" variant=\"secondary\">\n          {t('Learn How')}\n          <HelpIcon color=\"primary\" ml=\"6px\" />\n        </Button>\n      </StyledLink>\n    </>\n  )\n}\n\nexport default WalletWrongNetwork\n","export const MINIMUM_SEARCH_CHARACTERS = 2\n\nexport const WEEKS_IN_YEAR = 52.1429\n\nexport const TOTAL_FEE = 0.0025\nexport const LP_HOLDERS_FEE = 0.0017\nexport const TREASURY_FEE = 0.000225\nexport const BUYBACK_FEE = 0.000575\n\nexport const PCS_V2_START = 1619136000 // April 23, 2021, 12:00:00 AM\nexport const PCS_ETH_START = 1664130827 // Sep 23, 2022, 02:33:47 AM\nexport const ONE_DAY_UNIX = 86400 // 24h * 60m * 60s\nexport const ONE_HOUR_SECONDS = 3600\n\nexport const ITEMS_PER_INFO_TABLE_PAGE = 10\n\n// These tokens are either incorrectly priced or have some other issues that spoil the query data\n// None of them present any interest as they have almost 0 daily trade volume\nexport const TOKEN_BLACKLIST = [\n  // These ones are copied from v1 info\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xe40fc6ff5f2895b44268fd2e1a421e07f567e007',\n  '0xfd158609228b43aa380140b46fff3cdf9ad315de',\n  '0xc00af6212fcf0e6fd3143e692ccd4191dc308bea',\n  '0x205969b3ad459f7eba0dee07231a6357183d3fb6',\n  '0x0bd67d358636fd7b0597724aa4f20beedbf3073a',\n  '0xedf5d2a561e8a3cb5a846fbce24d2ccd88f50075',\n  '0x702b0789a3d4dade1688a0c8b7d944e5ba80fc30',\n  '0x041929a760d7049edaef0db246fa76ec975e90cc',\n  '0xba098df8c6409669f5e6ec971ac02cd5982ac108',\n  '0x1bbed115afe9e8d6e9255f18ef10d43ce6608d94',\n  '0xe99512305bf42745fae78003428dcaf662afb35d',\n  '0xbE609EAcbFca10F6E5504D39E3B113F808389056',\n  '0x847daf9dfdc22d5c61c4a857ec8733ef5950e82e',\n  '0xdbf8913dfe14536c0dae5dd06805afb2731f7e7b',\n  // These ones are newly found\n  '0xF1D50dB2C40b63D2c598e2A808d1871a40b1E653',\n  '0x4269e4090ff9dfc99d8846eb0d42e67f01c3ac8b',\n]\n\nexport const ETH_TOKEN_BLACKLIST = ['0x72b169ad8af6c4fb53056b6a2a85602ad6863864']\n","import { ChainId } from '@pancakeswap/sdk'\n\nexport const SUPPORT_ONLY_BSC = [ChainId.BSC]\nexport const SUPPORT_FARMS = [ChainId.BSC, ChainId.BSC_TESTNET, ChainId.ETHEREUM, ChainId.GOERLI]\n\nexport const SUPPORT_ZAP = [ChainId.BSC, ChainId.BSC_TESTNET]\n","/* eslint-disable consistent-return */\nimport { useTranslation } from '@pancakeswap/localization'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useToast } from '@pancakeswap/uikit'\nimport { useCallback, useMemo } from 'react'\nimport replaceBrowserHistory from '@pancakeswap/utils/replaceBrowserHistory'\nimport { ConnectorNames } from 'config/wallet'\nimport { useAccount, useSwitchNetwork as useSwitchNetworkWallet } from 'wagmi'\nimport { useSessionChainId } from './useSessionChainId'\nimport { useSwitchNetworkLoading } from './useSwitchNetworkLoading'\n\nexport function useSwitchNetworkLocal() {\n  const [, setSessionChainId] = useSessionChainId()\n  return useCallback(\n    (chainId: number) => {\n      setSessionChainId(chainId)\n      replaceBrowserHistory('chainId', chainId === ChainId.BSC ? null : chainId)\n    },\n    [setSessionChainId],\n  )\n}\n\nexport function useSwitchNetwork() {\n  const [loading, setLoading] = useSwitchNetworkLoading()\n  const {\n    switchNetworkAsync: _switchNetworkAsync,\n    isLoading: _isLoading,\n    switchNetwork: _switchNetwork,\n    ...switchNetworkArgs\n  } = useSwitchNetworkWallet()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { isConnected, connector } = useAccount()\n\n  const switchNetworkLocal = useSwitchNetworkLocal()\n  const isLoading = _isLoading || loading\n\n  const switchNetworkAsync = useCallback(\n    async (chainId: number) => {\n      if (isConnected && typeof _switchNetworkAsync === 'function') {\n        if (isLoading) return\n        setLoading(true)\n        return _switchNetworkAsync(chainId)\n          .then((c) => {\n            // well token pocket\n            if (window.ethereum?.isTokenPocket === true) {\n              switchNetworkLocal(chainId)\n              window.location.reload()\n            }\n            return c\n          })\n          .catch(() => {\n            // TODO: review the error\n            toastError(t('Error connecting, please retry and confirm in wallet!'))\n          })\n          .finally(() => setLoading(false))\n      }\n      return new Promise(() => {\n        switchNetworkLocal(chainId)\n      })\n    },\n    [isConnected, _switchNetworkAsync, isLoading, setLoading, toastError, t, switchNetworkLocal],\n  )\n\n  const switchNetwork = useCallback(\n    (chainId: number) => {\n      if (isConnected && typeof _switchNetwork === 'function') {\n        return _switchNetwork(chainId)\n      }\n      return switchNetworkLocal(chainId)\n    },\n    [_switchNetwork, isConnected, switchNetworkLocal],\n  )\n\n  const canSwitch = useMemo(\n    () =>\n      isConnected\n        ? !!_switchNetworkAsync &&\n          connector.id !== ConnectorNames.WalletConnect &&\n          !(\n            typeof window !== 'undefined' &&\n            // @ts-ignore // TODO: add type later\n            (window.ethereum?.isSafePal || window.ethereum?.isMathWallet)\n          )\n        : true,\n    [_switchNetworkAsync, isConnected, connector],\n  )\n\n  return {\n    ...switchNetworkArgs,\n    switchNetwork,\n    switchNetworkAsync,\n    isLoading,\n    canSwitch,\n  }\n}\n","import { useWeb3React } from '@pancakeswap/wagmi'\nimport BigNumber from 'bignumber.js'\nimport { CAKE } from '@pancakeswap/tokens'\nimport { FAST_INTERVAL } from 'config/constants'\nimport { BigNumber as EthersBigNumber } from '@ethersproject/bignumber'\nimport { Zero } from '@ethersproject/constants'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useSWR from 'swr'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { bscRpcProvider } from 'utils/providers'\nimport { useTokenContract } from './useContract'\nimport { useSWRContract } from './useSWRContract'\n\nconst useTokenBalance = (tokenAddress: string, forceBSC?: boolean) => {\n  const { account } = useWeb3React()\n\n  const contract = useTokenContract(tokenAddress, false)\n\n  const key = useMemo(\n    () =>\n      account\n        ? {\n            contract: forceBSC ? contract.connect(bscRpcProvider) : contract,\n            methodName: 'balanceOf',\n            params: [account],\n          }\n        : null,\n    [account, contract, forceBSC],\n  )\n\n  const { data, status, ...rest } = useSWRContract(key as any, {\n    refreshInterval: FAST_INTERVAL,\n  })\n\n  return {\n    ...rest,\n    fetchStatus: status,\n    balance: data ? new BigNumber(data.toString()) : BIG_ZERO,\n  }\n}\n\nexport const useGetBnbBalance = () => {\n  const { account } = useWeb3React()\n  const { status, data, mutate } = useSWR([account, 'bnbBalance'], async () => {\n    return bscRpcProvider.getBalance(account)\n  })\n\n  return { balance: data || Zero, fetchStatus: status, refresh: mutate }\n}\n\nexport const useGetCakeBalance = () => {\n  const { chainId } = useWeb3React()\n  const { balance, fetchStatus } = useTokenBalance(CAKE[chainId]?.address || CAKE[ChainId.BSC]?.address, true)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: EthersBigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import { infoClient, infoClientETH, infoStableSwapClient } from 'utils/graphql'\nimport { INFO_CLIENT, INFO_CLIENT_ETH, BLOCKS_CLIENT, BLOCKS_CLIENT_ETH } from 'config/constants/endpoints'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { PCS_V2_START, PCS_ETH_START, ETH_TOKEN_BLACKLIST, TOKEN_BLACKLIST } from 'config/constants/info'\n\nexport type MultiChainName = 'BSC' | 'ETH'\n\nexport const multiChainQueryMainToken = {\n  BSC: 'BNB',\n  ETH: 'ETH',\n}\n\nexport const multiChainBlocksClient = {\n  BSC: BLOCKS_CLIENT,\n  ETH: BLOCKS_CLIENT_ETH,\n}\n\nexport const multiChainStartTime = {\n  BSC: PCS_V2_START,\n  ETH: PCS_ETH_START,\n}\n\nexport const multiChainId = {\n  BSC: ChainId.BSC,\n  ETH: ChainId.ETHEREUM,\n}\n\nexport const multiChainPaths = {\n  [ChainId.BSC]: '',\n  [ChainId.ETHEREUM]: '/eth',\n}\n\nexport const multiChainQueryClient = {\n  BSC: infoClient,\n  ETH: infoClientETH,\n}\n\nexport const multiChainQueryEndPoint = {\n  BSC: INFO_CLIENT,\n  ETH: INFO_CLIENT_ETH,\n}\n\nexport const multiChainScan = {\n  BSC: 'BscScan',\n  ETH: 'EtherScan',\n}\n\nexport const multiChainTokenBlackList = {\n  BSC: TOKEN_BLACKLIST,\n  ETH: ETH_TOKEN_BLACKLIST,\n}\n\nexport const getMultiChainQueryEndPointWithStableSwap = (chainName: MultiChainName) => {\n  const isStableSwap = checkIsStableSwap()\n  if (isStableSwap) return infoStableSwapClient\n  return multiChainQueryClient[chainName]\n}\n\nexport const checkIsStableSwap = () => window.location.href.includes('stableSwap')\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Order } from '@gelatonetwork/limit-orders-lib'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport pickBy from 'lodash/pickBy'\nimport mapValues from 'lodash/mapValues'\nimport keyBy from 'lodash/keyBy'\nimport orderBy from 'lodash/orderBy'\nimport omitBy from 'lodash/omitBy'\nimport isEmpty from 'lodash/isEmpty'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { TransactionDetails } from './reducer'\nimport {\n  addTransaction,\n  TransactionType,\n  NonBscFarmTransactionType,\n  FarmTransactionStatus,\n  NonBscFarmStepType,\n} from './actions'\nimport { AppState, useAppDispatch } from '../index'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    translatableSummary?: { text: string; data?: Record<string, string | number> }\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n    type?: TransactionType\n    order?: Order\n    nonBscFarm?: NonBscFarmTransactionType\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        translatableSummary,\n        approval,\n        claim,\n        type,\n        order,\n        nonBscFarm,\n      }: {\n        summary?: string\n        translatableSummary?: { text: string; data?: Record<string, string | number> }\n        claim?: { recipient: string }\n        approval?: { tokenAddress: string; spender: string }\n        type?: TransactionType\n        order?: Order\n        nonBscFarm?: NonBscFarmTransactionType\n      } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(\n        addTransaction({\n          hash,\n          from: account,\n          chainId,\n          approval,\n          summary,\n          translatableSummary,\n          claim,\n          type,\n          order,\n          nonBscFarm,\n        }),\n      )\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions\nexport function useAllTransactions(): { [chainId: number]: { [txHash: string]: TransactionDetails } } {\n  const { account } = useWeb3React()\n\n  const state: {\n    [chainId: number]: {\n      [txHash: string]: TransactionDetails\n    }\n  } = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return useMemo(() => {\n    return mapValues(state, (transactions) =>\n      pickBy(transactions, (transactionDetails) => transactionDetails.from.toLowerCase() === account?.toLowerCase()),\n    )\n  }, [account, state])\n}\n\nexport function useAllSortedRecentTransactions(): { [chainId: number]: { [txHash: string]: TransactionDetails } } {\n  const allTransactions = useAllTransactions()\n  return useMemo(() => {\n    return omitBy(\n      mapValues(allTransactions, (transactions) =>\n        keyBy(\n          orderBy(\n            pickBy(transactions, (trxDetails) => isTransactionRecent(trxDetails)),\n            ['addedTime'],\n            'desc',\n          ),\n          'hash',\n        ),\n      ),\n      isEmpty,\n    )\n  }, [allTransactions])\n}\n\n// returns all the transactions for the current chain\nexport function useAllActiveChainTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  return useAllChainTransactions(chainId)\n}\n\nexport function useAllChainTransactions(chainId: number): { [txHash: string]: TransactionDetails } {\n  const { account } = useWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return useMemo(() => {\n    if (chainId && state[chainId]) {\n      return pickBy(\n        state[chainId],\n        (transactionDetails) => transactionDetails.from.toLowerCase() === account?.toLowerCase(),\n      )\n    }\n    return {}\n  }, [account, chainId, state])\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllActiveChainTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllActiveChainTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\n// calculate pending transactions\ninterface NonBscPendingData {\n  txid: string\n  lpAddress: string\n  type: NonBscFarmStepType\n}\nexport function usePendingTransactions(): {\n  hasPendingTransactions: boolean\n  pendingNumber: number\n  nonBscFarmPendingList: NonBscPendingData[]\n} {\n  const allTransactions = useAllTransactions()\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions).flatMap((trxObjects) => Object.values(trxObjects))\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions\n    .filter((tx) => !tx.receipt || tx?.nonBscFarm?.status === FarmTransactionStatus.PENDING)\n    .map((tx) => tx.hash)\n  const hasPendingTransactions = !!pending.length\n\n  const nonBscFarmPendingList = sortedRecentTransactions\n    .filter((tx) => pending.includes(tx.hash) && !!tx.nonBscFarm)\n    .map((tx) => ({ txid: tx.hash, lpAddress: tx.nonBscFarm.lpAddress, type: tx.nonBscFarm.type }))\n\n  return {\n    hasPendingTransactions,\n    nonBscFarmPendingList,\n    pendingNumber: pending.length,\n  }\n}\n\nexport function useNonBscFarmPendingTransaction(lpAddress: string): NonBscPendingData[] {\n  const { nonBscFarmPendingList } = usePendingTransactions()\n  return useMemo(() => {\n    return nonBscFarmPendingList.filter((tx) => tx.lpAddress.toLocaleLowerCase() === lpAddress.toLocaleLowerCase())\n  }, [lpAddress, nonBscFarmPendingList])\n}\n","import { BIT_QUERY, INFO_CLIENT, STABLESWAP_SUBGRAPH_CLIENT, INFO_CLIENT_ETH } from 'config/constants/endpoints'\nimport { GraphQLClient } from 'graphql-request'\nimport { INFO_CLIENT_WITH_CHAIN } from '../config/constants/endpoints'\n\n// Extra headers\n// Mostly for dev environment\n// No production env check since production preview might also need them\nexport const getGQLHeaders = (endpoint: string) => {\n  if (endpoint === INFO_CLIENT) {\n    return {\n      'X-Sf':\n        process.env.NEXT_PUBLIC_SF_HEADER ||\n        // hack for inject CI secret on window\n        (typeof window !== 'undefined' &&\n          // @ts-ignore\n          window.sfHeader),\n    }\n  }\n  return undefined\n}\n\nexport const infoClient = new GraphQLClient(INFO_CLIENT, { headers: getGQLHeaders(INFO_CLIENT) })\n\nexport const infoClientWithChain = (chainId: number) => {\n  return new GraphQLClient(INFO_CLIENT_WITH_CHAIN[chainId], { headers: getGQLHeaders(INFO_CLIENT_WITH_CHAIN[chainId]) })\n}\n\nexport const infoClientETH = new GraphQLClient(INFO_CLIENT_ETH)\n\nexport const infoStableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT)\n\nexport const infoServerClient = new GraphQLClient(INFO_CLIENT, {\n  headers: {\n    'X-Sf': process.env.SF_HEADER,\n  },\n  timeout: 5000,\n})\n\nexport const stableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT, {\n  headers: getGQLHeaders(STABLESWAP_SUBGRAPH_CLIENT),\n})\n\nexport const bitQueryServerClient = new GraphQLClient(BIT_QUERY, {\n  headers: {\n    // only server, no `NEXT_PUBLIC` not going to expose in client\n    'X-API-KEY': process.env.BIT_QUERY_HEADER,\n  },\n  timeout: 5000,\n})\n","import { useEffect, useCallback, useState, useMemo, useRef, createContext } from 'react'\nimport { createPortal } from 'react-dom'\nimport BigNumber from 'bignumber.js'\nimport { ChainId } from '@pancakeswap/sdk'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport {\n  Image,\n  Heading,\n  Toggle,\n  Text,\n  Button,\n  ArrowForwardIcon,\n  Flex,\n  Link,\n  Box,\n  Farm as FarmUI,\n  ScrollToTopButtonV2,\n  Loading,\n  SearchInput,\n  Select,\n  OptionProps,\n  FlexLayout,\n  PageHeader,\n  NextLinkFromReactRouter,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsWithUserData, usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVaultUserData } from 'state/pools/hooks'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getFarmApr } from 'utils/apr'\nimport orderBy from 'lodash/orderBy'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport { useRouter } from 'next/router'\nimport ToggleView from 'components/ToggleView/ToggleView'\nimport Table from './components/FarmTable/FarmTable'\nimport { FarmWithStakedValue } from './components/types'\nimport { BCakeBoosterCard } from './components/BCakeBoosterCard'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\nconst FarmFlexWrapper = styled(Flex)`\n  flex-wrap: wrap;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-wrap: nowrap;\n  }\n`\nconst FarmH1 = styled(Heading)`\n  font-size: 32px;\n  margin-bottom: 8px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 64px;\n    margin-bottom: 24px;\n  }\n`\nconst FarmH2 = styled(Heading)`\n  font-size: 16px;\n  margin-bottom: 8px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 24px;\n    margin-bottom: 18px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst FinishedTextContainer = styled(Flex)`\n  padding-bottom: 32px;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst FinishedTextLink = styled(Link)`\n  font-weight: 400;\n  white-space: nowrap;\n  text-decoration: underline;\n`\n\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Farms: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const { pathname, query: urlQuery } = useRouter()\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const { data: farmsLP, userDataLoaded, poolLength, regularCakePerBlock } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n\n  const [_query, setQuery] = useState('')\n  const normalizedUrlSearch = useMemo(() => (typeof urlQuery?.search === 'string' ? urlQuery.search : ''), [urlQuery])\n  const query = normalizedUrlSearch && !_query ? normalizedUrlSearch : _query\n\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const chosenFarmsLength = useRef(0)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  useCakeVaultUserData()\n\n  usePollFarmsWithUserData()\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n  const [boostedOnly, setBoostedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter(\n    (farm) => farm.pid !== 0 && farm.multiplier !== '0X' && (!poolLength || poolLength > farm.pid),\n  )\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n  const archivedFarms = farmsLP\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) =>\n      farm.userData &&\n      (new BigNumber(farm.userData.stakedBalance).isGreaterThan(0) ||\n        new BigNumber(farm.userData.proxy?.stakedBalance).isGreaterThan(0)),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) =>\n      farm.userData &&\n      (new BigNumber(farm.userData.stakedBalance).isGreaterThan(0) ||\n        new BigNumber(farm.userData.proxy?.stakedBalance).isGreaterThan(0)),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) =>\n      farm.userData &&\n      (new BigNumber(farm.userData.stakedBalance).isGreaterThan(0) ||\n        new BigNumber(farm.userData.proxy?.stakedBalance).isGreaterThan(0)),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: DeserializedFarm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\n          return farm\n        }\n\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(\n              chainId,\n              new BigNumber(farm.poolWeight),\n              cakePrice,\n              totalLiquidity,\n              farm.lpAddress,\n              regularCakePerBlock,\n            )\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n\n      return farmsToDisplayWithAPR\n    },\n    [query, isActive, chainId, cakePrice, regularCakePerBlock],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n\n  const chosenFarms = useMemo(() => {\n    let chosenFs = []\n    if (isActive) {\n      chosenFs = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFs = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFs = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    if (boostedOnly) {\n      chosenFs = chosenFs.filter((f) => f.boosted)\n    }\n\n    return chosenFs\n  }, [\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    boostedOnly,\n  ])\n\n  const chosenFarmsMemoized = useMemo(() => {\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        case 'latest':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.pid), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [chosenFarms, sortOption, numberOfFarmsVisible])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n        if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n        }\n        return farmsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <FarmsContext.Provider value={{ chosenFarmsMemoized }}>\n      <PageHeader>\n        <FarmFlexWrapper justifyContent=\"space-between\">\n          <Box>\n            <FarmH1 as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Farms')}\n            </FarmH1>\n            <FarmH2 scale=\"lg\" color=\"text\">\n              {t('Stake LP tokens to earn.')}\n            </FarmH2>\n            <NextLinkFromReactRouter to=\"/farms/auction\" prefetch={false}>\n              <Button p=\"0\" variant=\"text\">\n                <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\n                  {t('Community Auctions')}\n                </Text>\n                <ArrowForwardIcon color=\"primary\" />\n              </Button>\n            </NextLinkFromReactRouter>\n          </Box>\n          {chainId === ChainId.BSC && (\n            <Box>\n              <BCakeBoosterCard />\n            </Box>\n          )}\n        </FarmFlexWrapper>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView idPrefix=\"clickFarm\" viewMode={viewMode} onToggle={setViewMode} />\n            <ToggleWrapper>\n              <Toggle\n                id=\"staked-only-farms\"\n                checked={stakedOnly}\n                onChange={() => setStakedOnly(!stakedOnly)}\n                scale=\"sm\"\n              />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <ToggleWrapper>\n              <Toggle\n                id=\"staked-only-farms\"\n                checked={boostedOnly}\n                onChange={() => setBoostedOnly((prev) => !prev)}\n                scale=\"sm\"\n              />\n              <Text> {t('Booster Available')}</Text>\n            </ToggleWrapper>\n            <FarmUI.FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                  {\n                    label: t('Latest'),\n                    value: 'latest',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput initialValue={normalizedUrlSearch} onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {isInactive && (\n          <FinishedTextContainer>\n            <Text fontSize={['16px', null, '20px']} color=\"failure\" pr=\"4px\">\n              {t(\"Don't see the farm you are staking?\")}\n            </Text>\n            <Flex>\n              <FinishedTextLink href=\"/migration\" fontSize={['16px', null, '20px']} color=\"failure\">\n                {t('Go to migration page')}\n              </FinishedTextLink>\n              <Text fontSize={['16px', null, '20px']} color=\"failure\" padding=\"0px 4px\">\n                or\n              </Text>\n              <FinishedTextLink\n                external\n                color=\"failure\"\n                fontSize={['16px', null, '20px']}\n                href=\"https://v1-farms.pancakeswap.finance/farms/history\"\n              >\n                {t('check out v1 farms')}.\n              </FinishedTextLink>\n            </Flex>\n          </FinishedTextContainer>\n        )}\n        {viewMode === ViewMode.TABLE ? (\n          <Table farms={chosenFarmsMemoized} cakePrice={cakePrice} userDataReady={userDataReady} />\n        ) : (\n          <FlexLayout>{children}</FlexLayout>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        {poolLength && <div ref={observerRef} />}\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n      {createPortal(<ScrollToTopButtonV2 />, document.body)}\n    </FarmsContext.Provider>\n  )\n}\n\nexport const FarmsContext = createContext({ chosenFarmsMemoized: [] })\n\nexport default Farms\n","import { Contract } from '@ethersproject/contracts'\nimport { useTranslation } from '@pancakeswap/localization'\nimport {\n  AutoRenewIcon,\n  Box,\n  Button,\n  CheckmarkIcon,\n  HelpIcon,\n  LogoIcon,\n  Modal,\n  Text,\n  useToast,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport BigNumber from 'bignumber.js'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useBCakeProxyContract } from 'hooks/useContract'\nimport { useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport { useBCakeProxyContractAddress } from '../hooks/useBCakeProxyContractAddress'\nimport useProxyStakedActions from './YieldBooster/hooks/useProxyStakedActions'\n\nexport const StepperCircle = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  color: white;\n  text-align: center;\n  line-height: 20px;\n  padding: 2px;\n  box-sizing: border-box;\n  font-size: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n`\nexport const StepperText = styled.div`\n  position: absolute;\n  top: calc(100% + 10px);\n  left: 50%;\n  transform: translateX(-50%);\n  transition: 0.3s color ease-in-out;\n  will-change: color;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nexport const StepperWrapper = styled.div<{ finished: boolean; active: boolean }>`\n  position: relative;\n  height: 20px;\n  width: 20px;\n  display: inline-block;\n  vertical-align: top;\n  &:not(:last-child) {\n    margin-right: calc((100% - 60px) / 2);\n    &::before {\n      position: absolute;\n      content: '';\n      width: calc(((100vw / 2) - 108px));\n      height: 2px;\n      top: 9px;\n      left: 30px;\n      transition: 0.3s background-color ease-in-out;\n      will-change: background-color;\n      background-color: ${({ theme, finished }) => (finished ? theme.colors.textSubtle : theme.colors.disabled)};\n    }\n    ${({ theme }) => theme.mediaQueries.md} {\n      &::before {\n        width: 104px;\n      }\n    }\n  }\n  ${StepperCircle} {\n    background: ${({ theme, finished }) => (finished ? theme.colors.textSubtle : theme.colors.disabled)};\n  }\n  ${StepperText} {\n    color: ${({ theme, active, finished }) =>\n      active ? theme.colors.primary : finished ? theme.colors.textSubtle : theme.colors.disabled};\n  }\n`\n\nexport const FooterBox = styled.div`\n  margin-top: 24px;\n  padding-top: 24px;\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    height: 1px;\n    width: 100%;\n    top: 0px;\n    left: 0px;\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n`\n\nexport const InfoBox = styled.div`\n  padding: 16px;\n  background: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  line-height: 120%;\n  margin-bottom: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 372px;\n  }\n`\nexport const InfoText = styled.div``\nexport const InfoIconBox = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\ninterface BCakeMigrateModalProps {\n  lpContract: Contract\n  stakedBalance: BigNumber\n  onUnStack: (amount: string, callback: () => void) => void\n  onDismiss?: () => void\n  pid: number\n}\n\nenum Steps {\n  'Unstake',\n  'Enable',\n  'Stake',\n}\n\nexport const BCakeMigrateModal: React.FC<BCakeMigrateModalProps> = ({\n  lpContract,\n  stakedBalance,\n  onDismiss,\n  onUnStack,\n  pid,\n}) => {\n  const { account, chainId } = useActiveWeb3React()\n  const [activatedState, setActivatedState] = useState<Steps>(Steps.Unstake)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isApproved, setIsApproved] = useState(false)\n  const { t } = useTranslation()\n  const steps: Record<Steps, string> = useMemo(\n    () => ({\n      [Steps.Unstake]: t('Unstake'),\n      [Steps.Enable]: t('Enable'),\n      [Steps.Stake]: t('Stake'),\n    }),\n    [t],\n  )\n  const migrationSteps: Record<Steps, string> = useMemo(\n    () => ({\n      [Steps.Unstake]: t('Unstake LP tokens from the farm'),\n      [Steps.Enable]: t('Enable staking with yield booster'),\n      [Steps.Stake]: t('Stake LP tokens back to the farm'),\n    }),\n    [t],\n  )\n  const migrationStepsKeys = useMemo(() => Object.keys(migrationSteps), [migrationSteps])\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(stakedBalance)\n  }, [stakedBalance])\n  const { proxyAddress } = useBCakeProxyContractAddress(account, chainId)\n  const { onApprove, onDone, onStake } = useProxyStakedActions(pid, lpContract)\n\n  const bCakeProxy = useBCakeProxyContract(proxyAddress)\n  const { fetchWithCatchTxError, loading } = useCatchTxError()\n  const { toastSuccess } = useToast()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <Text>\n      {t(\n        'To enable farm yield boosters, you must follow the guide and migrate your current farming positions. However, for each farm, you will only need to migrate once.',\n      )}\n    </Text>,\n    {\n      placement: 'right',\n    },\n  )\n\n  useEffect(() => {\n    if (!bCakeProxy) return\n    bCakeProxy.lpApproved(lpContract.address).then((enabled) => {\n      setIsApproved(enabled)\n    })\n  }, [lpContract, bCakeProxy])\n\n  const onStepChange = async () => {\n    if (activatedState === Steps.Unstake) {\n      setIsLoading(true)\n      onUnStack(fullBalance, () => {\n        if (isApproved) setActivatedState(Steps.Stake)\n        else setActivatedState(Steps.Enable)\n        setIsLoading(false)\n      })\n    } else if (activatedState === Steps.Enable) {\n      const receipt = await fetchWithCatchTxError(onApprove)\n      if (receipt?.status) {\n        toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n        setActivatedState(Steps.Stake)\n        onDone()\n      }\n    } else {\n      setIsLoading(true)\n      try {\n        const receipt = await fetchWithCatchTxError(() => onStake(fullBalance))\n        if (receipt?.status) {\n          toastSuccess(\n            `${t('Staked')}!`,\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your funds have been staked in the farm')}\n            </ToastDescriptionWithTx>,\n          )\n          onDone()\n          onDismiss?.()\n        }\n      } catch (error) {\n        console.error(error)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n  }\n  return (\n    <Modal title={t('Migrate your stakings')} width=\"420px\" onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <InfoBox ref={targetRef}>\n        <InfoText>{t('You will need to migrate your stakings before activating yield booster for a farm')}</InfoText>\n        <InfoIconBox>\n          <HelpIcon />\n        </InfoIconBox>\n      </InfoBox>\n      <Box pb={20} pl={38} pr={30}>\n        {migrationStepsKeys.map((step, index) => {\n          return (\n            <StepperWrapper\n              key={step}\n              active={step === activatedState.toString()}\n              finished={parseInt(step) < parseInt(activatedState.toString())}\n            >\n              {step === activatedState.toString() ? (\n                <LogoIcon width={22} />\n              ) : (\n                <StepperCircle>\n                  {parseInt(step) < parseInt(activatedState.toString()) ? (\n                    <CheckmarkIcon color=\"white\" width={16} />\n                  ) : (\n                    index + 1\n                  )}\n                </StepperCircle>\n              )}\n              <StepperText>{steps[step]}</StepperText>\n            </StepperWrapper>\n          )\n        })}\n      </Box>\n      <FooterBox>\n        <Text mb=\"16px\" textAlign=\"center\">\n          {activatedState + 1}. {t(migrationSteps[activatedState])}\n          {/* t('Unstake LP tokens from the farm') */}\n          {/* t('Enable staking with yield booster') */}\n          {/* t('Stake LP tokens back to the farm') */}\n        </Text>\n        <Button\n          onClick={onStepChange}\n          isLoading={isLoading || loading}\n          width=\"100%\"\n          endIcon={isLoading || loading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n        >\n          {isLoading || loading ? t('Confirming...') : t(steps[activatedState])}\n        </Button>\n      </FooterBox>\n    </Modal>\n  )\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useContext } from 'react'\nimport styled from 'styled-components'\nimport { HarvestActionContainer, ProxyHarvestActionContainer } from '../FarmTable/Actions/HarvestAction'\nimport { ProxyStakedContainer, StakedContainer } from '../FarmTable/Actions/StakedAction'\nimport { FarmWithStakedValue } from '../types'\nimport BoostedAction from '../YieldBooster/components/BoostedAction'\nimport { YieldBoosterStateContext } from '../YieldBooster/components/ProxyFarmContainer'\nimport HarvestAction from './HarvestAction'\nimport StakeAction from './StakeAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nconst ActionContainer = styled.div`\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst CardActions: React.FC<React.PropsWithChildren<FarmCardActionsProps>> = ({\n  farm,\n  account,\n  addLiquidityUrl,\n  lpLabel,\n  displayApr,\n}) => {\n  const { t } = useTranslation()\n  const { pid, token, quoteToken, vaultPid, lpSymbol, lpAddress } = farm\n  const { earnings } = farm.userData || {}\n  const { shouldUseProxyFarm } = useContext(YieldBoosterStateContext)\n  const isReady = farm.multiplier !== undefined\n  const { stakedBalance, tokenBalance, proxy } = farm.userData\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      {shouldUseProxyFarm ? (\n        <ProxyHarvestActionContainer\n          lpAddress={lpAddress}\n          earnings={earnings}\n          pid={pid}\n          vaultPid={vaultPid}\n          token={token}\n          quoteToken={quoteToken}\n          lpSymbol={lpSymbol}\n        >\n          {(props) => <HarvestAction {...props} />}\n        </ProxyHarvestActionContainer>\n      ) : (\n        <HarvestActionContainer\n          earnings={earnings}\n          pid={pid}\n          vaultPid={vaultPid}\n          token={token}\n          quoteToken={quoteToken}\n          lpSymbol={lpSymbol}\n        >\n          {(props) => <HarvestAction {...props} />}\n        </HarvestActionContainer>\n      )}\n      {farm.boosted && (\n        <BoostedAction\n          title={(status) => (\n            <Flex>\n              <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n                {t('Yield Booster')}\n              </Text>\n              <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n                {status}\n              </Text>\n            </Flex>\n          )}\n          desc={(actionBtn) => <ActionContainer>{actionBtn}</ActionContainer>}\n          farmPid={farm.pid}\n          lpTotalSupply={farm.lpTotalSupply}\n          userBalanceInFarm={\n            (stakedBalance.plus(tokenBalance).gt(0)\n              ? stakedBalance.plus(tokenBalance)\n              : proxy?.stakedBalance.plus(proxy?.tokenBalance)) ?? new BigNumber(0)\n          }\n        />\n      )}\n      {isReady ? (\n        <Flex>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n            {farm.lpSymbol}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Staked')}\n          </Text>\n        </Flex>\n      ) : (\n        <Skeleton width={80} height={18} mb=\"4px\" />\n      )}\n      {!account ? (\n        <ConnectWalletButton mt=\"8px\" width=\"100%\" />\n      ) : shouldUseProxyFarm ? (\n        <ProxyStakedContainer {...farm} lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} displayApr={displayApr}>\n          {(props) => <StakeAction {...props} />}\n        </ProxyStakedContainer>\n      ) : (\n        <StakedContainer {...farm} lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} displayApr={displayApr}>\n          {(props) => <StakeAction {...props} />}\n        </StakedContainer>\n      )}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import styled from 'styled-components'\nimport { Tag, Flex, Heading, Box, Skeleton, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { TokenPairImage } from 'components/TokenImage'\nimport BoostedTag from '../YieldBooster/components/BoostedTag'\n\nconst { FarmAuctionTag, CoreTag, StableFarmTag } = FarmUI.Tags\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  token: Token\n  quoteToken: Token\n  boosted?: boolean\n  isStable?: boolean\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<React.PropsWithChildren<ExpandableSectionProps>> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  token,\n  quoteToken,\n  boosted,\n  isStable,\n}) => {\n  const isReady = multiplier !== undefined\n\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      {isReady ? (\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n      ) : (\n        <Skeleton mr=\"8px\" width={63} height={63} variant=\"circle\" />\n      )}\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        {isReady ? <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading> : <Skeleton mb=\"4px\" width={60} height={18} />}\n        <Flex justifyContent=\"center\">\n          {isStable ? <StableFarmTag mr=\"4px\" /> : null}\n          {isReady ? <Box>{isCommunityFarm ? <FarmAuctionTag /> : <CoreTag />}</Box> : null}\n          {boosted && <BoostedTag ml=\"4px\" />}\n          {isReady ? (\n            <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Card, Farm as FarmUI, Flex, Skeleton, Text, ExpandableSectionButton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { multiChainPaths } from 'state/info/constant'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { getBlockExploreLink } from 'utils'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { FarmWithStakedValue } from '../types'\nimport ApyButton from './ApyButton'\nimport CardActionsContainer from './CardActionsContainer'\nimport CardHeading from './CardHeading'\n\nimport BoostedApr from '../YieldBooster/components/BoostedApr'\n\nconst { DetailsSection } = FarmUI.FarmCard\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n  max-width: 100%;\n  margin: 0 0 24px 0;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 350px;\n    margin: 0 12px 46px;\n  }\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n  originalLiquidity?: BigNumber\n}\n\nconst FarmCard: React.FC<React.PropsWithChildren<FarmCardProps>> = ({\n  farm,\n  displayApr,\n  removed,\n  cakePrice,\n  account,\n  originalLiquidity,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const liquidity =\n    farm?.liquidity && originalLiquidity?.gt(0) ? farm.liquidity.plus(originalLiquidity) : farm.liquidity\n\n  const totalValueFormatted =\n    liquidity && liquidity.gt(0)\n      ? `$${liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('CAKE + Fees')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n    chainId,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const { lpAddress } = farm\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n  const { stakedBalance, proxy, tokenBalance } = farm.userData\n\n  const toggleExpandableSection = useCallback(() => {\n    setShowExpandableSection((prev) => !prev)\n  }, [])\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          token={farm.token}\n          quoteToken={farm.quoteToken}\n          boosted={farm.boosted}\n          isStable={farm.isStable}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <>\n                  {farm.boosted ? (\n                    <BoostedApr\n                      mr=\"4px\"\n                      lpRewardsApr={farm.lpRewardsApr}\n                      apr={farm.apr}\n                      pid={farm?.pid}\n                      lpTotalSupply={farm.lpTotalSupply}\n                      userBalanceInFarm={\n                        (stakedBalance.plus(tokenBalance).gt(0)\n                          ? stakedBalance?.plus(tokenBalance)\n                          : proxy?.stakedBalance.plus(proxy?.tokenBalance)) ?? new BigNumber(0)\n                      }\n                    />\n                  ) : null}\n                  <ApyButton\n                    variant=\"text-and-button\"\n                    pid={farm.pid}\n                    lpTokenPrice={farm.lpTokenPrice}\n                    lpSymbol={farm.lpSymbol}\n                    multiplier={farm.multiplier}\n                    lpLabel={lpLabel}\n                    addLiquidityUrl={addLiquidityUrl}\n                    cakePrice={cakePrice}\n                    apr={farm.apr}\n                    displayApr={displayApr}\n                    lpRewardsApr={farm.lpRewardsApr}\n                    strikethrough={farm.boosted}\n                    useTooltipText\n                    boosted={farm.boosted}\n                  />\n                </>\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>{earnLabel}</Text>\n        </Flex>\n        <CardActionsContainer\n          farm={farm}\n          lpLabel={lpLabel}\n          account={account}\n          addLiquidityUrl={addLiquidityUrl}\n          displayApr={displayApr}\n        />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton onClick={toggleExpandableSection} expanded={showExpandableSection} />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            scanAddressLink={getBlockExploreLink(lpAddress, 'address', chainId)}\n            infoAddress={`/info${multiChainPaths[chainId]}/pools/${lpAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n            isCommunity={farm.isCommunity}\n            auctionHostingEndDate={farm.auctionHostingEndDate}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Button, Flex, Heading, TooltipText, useToast, useTooltip, useModal, Balance } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport BigNumber from 'bignumber.js'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\n\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport { Token } from '@pancakeswap/sdk'\nimport MultiChainHarvestModal from 'views/Farms/components/MultiChainHarvestModal'\n\ninterface FarmCardActionsProps {\n  pid?: number\n  token?: Token\n  quoteToken?: Token\n  earnings?: BigNumber\n  vaultPid?: number\n  proxyCakeBalance?: number\n  lpSymbol?: string\n  onReward?: () => Promise<TransactionResponse>\n  onDone?: () => void\n}\n\nconst HarvestAction: React.FC<React.PropsWithChildren<FarmCardActionsProps>> = ({\n  pid,\n  token,\n  quoteToken,\n  vaultPid,\n  earnings,\n  proxyCakeBalance,\n  lpSymbol,\n  onReward,\n  onDone,\n}) => {\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const { t } = useTranslation()\n  const cakePrice = usePriceCakeBusd()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(5, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n  const tooltipBalance = rawEarningsBalance.isGreaterThan(new BigNumber(0.00001)) ? displayBalance : '< 0.00001'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    `${tooltipBalance} ${t(\n      `CAKE has been harvested to the farm booster contract and will be automatically sent to your wallet upon the next harvest.`,\n    )}`,\n    {\n      placement: 'bottom',\n    },\n  )\n\n  const onClickHarvestButton = () => {\n    if (vaultPid) {\n      onPresentNonBscHarvestModal()\n    } else {\n      handleHarvest()\n    }\n  }\n\n  const handleHarvest = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onReward()\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Harvested')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      onDone?.()\n    }\n  }\n\n  const [onPresentNonBscHarvestModal] = useModal(\n    <MultiChainHarvestModal\n      pid={pid}\n      token={token}\n      lpSymbol={lpSymbol}\n      quoteToken={quoteToken}\n      earningsBigNumber={earnings}\n      earningsBusd={earningsBusd}\n    />,\n  )\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        {proxyCakeBalance ? (\n          <>\n            <TooltipText ref={targetRef} decorationColor=\"secondary\">\n              <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n            </TooltipText>\n            {tooltipVisible && tooltip}\n          </>\n        ) : (\n          <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        )}\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button disabled={rawEarningsBalance.eq(0) || pendingTx} onClick={onClickHarvestButton}>\n        {pendingTx ? t('Harvesting') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useTranslation } from '@pancakeswap/localization'\nimport { AddIcon, Button, Flex, IconButton, MinusIcon, useModal, useToast, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport BCakeCalculator from 'views/Farms/components/YieldBooster/components/BCakeCalculator'\nimport { useCallback, useContext, useState, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useRouter } from 'next/router'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useAppDispatch } from 'state'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { formatLpBalance } from '@pancakeswap/utils/formatBalance'\nimport { pickFarmTransactionTx } from 'state/global/actions'\nimport { useTransactionAdder, useNonBscFarmPendingTransaction } from 'state/transactions/hooks'\nimport { FarmTransactionStatus, NonBscFarmStepType } from 'state/transactions/actions'\nimport WalletModal, { WalletView } from 'components/Menu/UserMenu/WalletModal'\nimport { FarmWithStakedValue } from '../types'\nimport { YieldBoosterStateContext } from '../YieldBooster/components/ProxyFarmContainer'\nimport { YieldBoosterState } from '../YieldBooster/hooks/useYieldBoosterState'\nimport { useFirstTimeCrossFarming } from '../../hooks/useFirstTimeCrossFarming'\n\ninterface FarmCardActionsProps extends FarmWithStakedValue {\n  lpLabel?: string\n  addLiquidityUrl?: string\n  displayApr?: string\n  onStake?: (value: string) => Promise<TransactionResponse>\n  onUnstake?: (value: string) => Promise<TransactionResponse>\n  onDone?: () => void\n  onApprove?: () => Promise<TransactionResponse>\n  isApproved?: boolean\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<React.PropsWithChildren<FarmCardActionsProps>> = ({\n  pid,\n  vaultPid,\n  quoteToken,\n  token,\n  lpSymbol,\n  lpTokenPrice,\n  multiplier,\n  apr,\n  lpAddress,\n  displayApr,\n  addLiquidityUrl,\n  lpLabel,\n  lpTotalSupply,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n  userData,\n  onStake,\n  onUnstake,\n  onDone,\n  onApprove,\n  isApproved,\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const addTransaction = useTransactionAdder()\n  const { account, chainId } = useActiveWeb3React()\n  const native = useNativeCurrency()\n  const { tokenBalance, stakedBalance } = userData\n  const cakePrice = usePriceCakeBusd()\n  const router = useRouter()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, fetchTxResponse, loading: pendingTx } = useCatchTxError()\n  const { boosterState } = useContext(YieldBoosterStateContext)\n  const [bCakeMultiplier, setBCakeMultiplier] = useState<number | null>(() => null)\n  const pendingFarm = useNonBscFarmPendingTransaction(lpAddress)\n  const { isFirstTime } = useFirstTimeCrossFarming(vaultPid)\n\n  const crossChainWarningText = useMemo(() => {\n    return isFirstTime\n      ? t('A small amount of %nativeToken% is required for the first-time setup of cross-chain CAKE farming.', {\n          nativeToken: native.symbol,\n        })\n      : t('For safety, cross-chain transactions will take around 30 minutes to confirm.')\n  }, [isFirstTime, native, t])\n\n  const isStakeReady = useMemo(() => {\n    return ['history', 'archived'].some((item) => router.pathname.includes(item)) || pendingFarm.length > 0\n  }, [pendingFarm, router])\n\n  const handleStake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscStake(amount)\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onStake(amount))\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Staked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the farm')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onStake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber))\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Stake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.STAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              isFirstTime: !isFirstTime,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              tx: '',\n              chainId: ChainId.BSC,\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const handleUnstake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscUnStake(amount)\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onUnstake(amount))\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your earnings have also been harvested to your wallet')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscUnStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onUnstake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber))\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Unstake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.UNSTAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              chainId: ChainId.BSC,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 3,\n              chainId,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const handleApprove = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onApprove()\n    })\n    if (receipt?.status) {\n      toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      onDone()\n    }\n  }, [onApprove, t, toastSuccess, fetchWithCatchTxError, onDone])\n\n  const bCakeCalculatorSlot = (calculatorBalance) => (\n    <BCakeCalculator\n      targetInputBalance={calculatorBalance}\n      earningTokenPrice={cakePrice.toNumber()}\n      lpTotalSupply={lpTotalSupply}\n      setBCakeMultiplier={setBCakeMultiplier}\n    />\n  )\n\n  const [onPresentDeposit] = useModal(\n    <FarmUI.DepositModal\n      account={account}\n      pid={pid}\n      lpTotalSupply={lpTotalSupply}\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      lpPrice={lpTokenPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      bCakeMultiplier={bCakeMultiplier}\n      bCakeCalculatorSlot={bCakeCalculatorSlot}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n      crossChainWarningText={crossChainWarningText}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <FarmUI.WithdrawModal\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      max={stakedBalance}\n      onConfirm={handleUnstake}\n      tokenName={lpSymbol}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button onClick={onPresentDeposit} disabled={isStakeReady}>\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton mr=\"6px\" variant=\"tertiary\" disabled={pendingFarm.length > 0} onClick={onPresentWithdraw}>\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit} disabled={isStakeReady}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n\n  const onClickLoadingIcon = () => {\n    const { length } = pendingFarm\n    if (length) {\n      if (length > 1) {\n        onPresentTransactionModal()\n      } else {\n        dispatch(pickFarmTransactionTx({ tx: pendingFarm[0].txid, chainId }))\n      }\n    }\n  }\n\n  // TODO: Move this out to prevent unnecessary re-rendered\n  if (!isApproved) {\n    return (\n      <Button mt=\"8px\" width=\"100%\" disabled={pendingTx} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <FarmUI.StakedLP\n        stakedBalance={stakedBalance}\n        quoteTokenSymbol={quoteToken.symbol}\n        tokenSymbol={token.symbol}\n        lpTotalSupply={lpTotalSupply}\n        lpTokenPrice={lpTokenPrice}\n        tokenAmountTotal={tokenAmountTotal}\n        quoteTokenAmountTotal={quoteTokenAmountTotal}\n        pendingFarmLength={pendingFarm.length}\n        onClickLoadingIcon={onClickLoadingIcon}\n      />\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useTranslation } from '@pancakeswap/localization'\nimport { LinkExternal, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useContext } from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { getBlockExploreLink } from 'utils'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { multiChainPaths } from 'state/info/constant'\nimport { FarmWithStakedValue } from '../../types'\n\nimport BoostedAction from '../../YieldBooster/components/BoostedAction'\nimport { YieldBoosterStateContext } from '../../YieldBooster/components/ProxyFarmContainer'\nimport Apr, { AprProps } from '../Apr'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport { HarvestAction, HarvestActionContainer, ProxyHarvestActionContainer } from './HarvestAction'\nimport StakedAction, { ProxyStakedContainer, StakedContainer } from './StakedAction'\nimport { ActionContainer as ActionContainerSection, ActionContent, ActionTitles } from './styles'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    align-items: center;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n    flex-wrap: wrap;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div``\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<React.PropsWithChildren<ActionPanelProps>> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const { proxyFarm, shouldUseProxyFarm } = useContext(YieldBoosterStateContext)\n\n  const farm = details\n\n  const { isDesktop } = useMatchBreakpoints()\n\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n    chainId,\n  })\n  const { lpAddress } = farm\n  const bsc = getBlockExploreLink(lpAddress, 'address', chainId)\n  const info = `/info${multiChainPaths[chainId]}/pools/${lpAddress}`\n  const { stakedBalance, tokenBalance, proxy } = farm.userData\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        <ValueContainer>\n          {farm.isCommunity && farm.auctionHostingEndDate && (\n            <ValueWrapper>\n              <Text>{t('Auction Hosting Ends')}</Text>\n              <Text paddingLeft=\"4px\">\n                {new Date(farm.auctionHostingEndDate).toLocaleString(locale, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </Text>\n            </ValueWrapper>\n          )}\n          {!isDesktop && (\n            <>\n              <ValueWrapper>\n                <Text>{t('APR')}</Text>\n                <Apr {...apr} useTooltipText={false} boosted={farm.boosted} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Multiplier')}</Text>\n                <Multiplier {...multiplier} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Liquidity')}</Text>\n                <Liquidity {...liquidity} />\n              </ValueWrapper>\n            </>\n          )}\n        </ValueContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n      </InfoContainer>\n      <ActionContainer>\n        {shouldUseProxyFarm ? (\n          <ProxyHarvestActionContainer {...proxyFarm} userDataReady={userDataReady}>\n            {(props) => <HarvestAction {...props} />}\n          </ProxyHarvestActionContainer>\n        ) : (\n          <HarvestActionContainer {...farm} userDataReady={userDataReady}>\n            {(props) => <HarvestAction {...props} />}\n          </HarvestActionContainer>\n        )}\n        {farm?.boosted && (\n          <ActionContainerSection style={{ minHeight: 124.5 }}>\n            <BoostedAction\n              title={(status) => (\n                <ActionTitles>\n                  <Text mr=\"3px\" bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n                    {t('Yield Booster')}\n                  </Text>\n                  <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n                    {status}\n                  </Text>\n                </ActionTitles>\n              )}\n              desc={(actionBtn) => <ActionContent>{actionBtn}</ActionContent>}\n              farmPid={farm?.pid}\n              lpTotalSupply={farm?.lpTotalSupply}\n              userBalanceInFarm={\n                stakedBalance.plus(tokenBalance).gt(0)\n                  ? stakedBalance.plus(tokenBalance)\n                  : proxy.stakedBalance.plus(proxy.tokenBalance)\n              }\n            />\n          </ActionContainerSection>\n        )}\n        {shouldUseProxyFarm ? (\n          <ProxyStakedContainer {...proxyFarm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value}>\n            {(props) => <StakedAction {...props} />}\n          </ProxyStakedContainer>\n        ) : (\n          <StakedContainer {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value}>\n            {(props) => <StakedAction {...props} />}\n          </StakedContainer>\n        )}\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useTranslation } from '@pancakeswap/localization'\nimport {\n  Button,\n  Heading,\n  Skeleton,\n  Text,\n  TooltipText,\n  useToast,\n  useTooltip,\n  Balance,\n  useModal,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useERC20 } from 'hooks/useContract'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\n\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCallback } from 'react'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport MultiChainHarvestModal from 'views/Farms/components/MultiChainHarvestModal'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\nimport { FarmWithStakedValue } from '../../types'\nimport useProxyStakedActions from '../../YieldBooster/hooks/useProxyStakedActions'\nimport { ActionContainer, ActionContent, ActionTitles } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  onReward?: () => Promise<TransactionResponse>\n  proxyCakeBalance?: number\n  onDone?: () => void\n}\n\nexport const ProxyHarvestActionContainer = ({ children, ...props }) => {\n  const { lpAddress } = props\n  const lpContract = useERC20(lpAddress)\n\n  const { onReward, onDone, proxyCakeBalance } = useProxyStakedActions(props.pid, lpContract)\n\n  return children({ ...props, onReward, proxyCakeBalance, onDone })\n}\n\nexport const HarvestActionContainer = ({ children, ...props }) => {\n  const { onReward } = useHarvestFarm(props.pid)\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n\n  const onDone = useCallback(\n    () => dispatch(fetchFarmUserDataAsync({ account, pids: [props.pid], chainId })),\n    [account, dispatch, chainId, props.pid],\n  )\n\n  return children({ ...props, onDone, onReward })\n}\n\nexport const HarvestAction: React.FunctionComponent<React.PropsWithChildren<HarvestActionProps>> = ({\n  pid,\n  token,\n  quoteToken,\n  vaultPid,\n  userData,\n  userDataReady,\n  proxyCakeBalance,\n  lpSymbol,\n  onReward,\n  onDone,\n}) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toFixed(5, BigNumber.ROUND_DOWN) : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(5, BigNumber.ROUND_DOWN)\n  }\n\n  const toolTipBalance = !userDataReady ? (\n    <Skeleton width={60} />\n  ) : earnings.isGreaterThan(new BigNumber(0.00001)) ? (\n    earnings.toFixed(5, BigNumber.ROUND_DOWN)\n  ) : (\n    `< 0.00001`\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    `${toolTipBalance} ${t(\n      `CAKE has been harvested to the farm booster contract and will be automatically sent to your wallet upon the next harvest.`,\n    )}`,\n    {\n      placement: 'bottom',\n    },\n  )\n\n  const onClickHarvestButton = () => {\n    if (vaultPid) {\n      onPresentNonBscHarvestModal()\n    } else {\n      handleHarvest()\n    }\n  }\n\n  const handleHarvest = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onReward()\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Harvested')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      onDone?.()\n    }\n  }\n\n  const [onPresentNonBscHarvestModal] = useModal(\n    <MultiChainHarvestModal\n      pid={pid}\n      token={token}\n      lpSymbol={lpSymbol}\n      quoteToken={quoteToken}\n      earningsBigNumber={earningsBigNumber}\n      earningsBusd={earningsBusd}\n    />,\n  )\n\n  return (\n    <ActionContainer style={{ minHeight: 124.5 }}>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          {proxyCakeBalance ? (\n            <>\n              <TooltipText ref={targetRef} decorationColor=\"secondary\">\n                <Heading>{displayBalance}</Heading>\n              </TooltipText>\n              {tooltipVisible && tooltip}\n            </>\n          ) : (\n            <Heading>{displayBalance}</Heading>\n          )}\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button ml=\"4px\" disabled={earnings.eq(0) || pendingTx || !userDataReady} onClick={onClickHarvestButton}>\n          {pendingTx ? t('Harvesting') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useTranslation } from '@pancakeswap/localization'\nimport {\n  AddIcon,\n  Button,\n  IconButton,\n  MinusIcon,\n  Skeleton,\n  Text,\n  useModal,\n  useToast,\n  Farm as FarmUI,\n} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { BASE_ADD_LIQUIDITY_URL, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useERC20 } from 'hooks/useContract'\nimport { useRouter } from 'next/router'\nimport { useCallback, useContext, useState, useMemo } from 'react'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useTransactionAdder, useNonBscFarmPendingTransaction } from 'state/transactions/hooks'\nimport { FarmTransactionStatus, NonBscFarmStepType } from 'state/transactions/actions'\nimport { pickFarmTransactionTx } from 'state/global/actions'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport styled from 'styled-components'\nimport BCakeCalculator from 'views/Farms/components/YieldBooster/components/BCakeCalculator'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport BigNumber from 'bignumber.js'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { formatLpBalance } from '@pancakeswap/utils/formatBalance'\nimport { ChainId } from '@pancakeswap/sdk'\nimport WalletModal, { WalletView } from 'components/Menu/UserMenu/WalletModal'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport { FarmWithStakedValue } from '../../types'\nimport { YieldBoosterStateContext } from '../../YieldBooster/components/ProxyFarmContainer'\nimport useProxyStakedActions from '../../YieldBooster/hooks/useProxyStakedActions'\nimport { YieldBoosterState } from '../../YieldBooster/hooks/useYieldBoosterState'\nimport { ActionContainer, ActionContent, ActionTitles } from './styles'\nimport { useFirstTimeCrossFarming } from '../../../hooks/useFirstTimeCrossFarming'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n  onStake?: (value: string) => Promise<TransactionResponse>\n  onUnstake?: (value: string) => Promise<TransactionResponse>\n  onDone?: () => void\n  onApprove?: () => Promise<TransactionResponse>\n  isApproved?: boolean\n  shouldUseProxyFarm?: boolean\n}\n\nconst StyledActionContainer = styled(ActionContainer)`\n  &:nth-child(3) {\n    flex-basis: 100%;\n  }\n  min-height: 124.5px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    &:nth-child(3) {\n      margin-top: 16px;\n    }\n  }\n`\n\nexport function useStakedActions(lpContract, pid, vaultPid) {\n  const { account, chainId } = useActiveWeb3React()\n  const { onStake } = useStakeFarms(pid, vaultPid)\n  const { onUnstake } = useUnstakeFarms(pid, vaultPid)\n  const dispatch = useAppDispatch()\n\n  const { onApprove } = useApproveFarm(lpContract, chainId)\n\n  const onDone = useCallback(\n    () => dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId })),\n    [account, pid, chainId, dispatch],\n  )\n\n  return {\n    onStake,\n    onUnstake,\n    onApprove,\n    onDone,\n  }\n}\n\nexport const ProxyStakedContainer = ({ children, ...props }) => {\n  const { account } = useWeb3React()\n\n  const { lpAddress } = props\n  const lpContract = useERC20(lpAddress)\n\n  const { onStake, onUnstake, onApprove, onDone } = useProxyStakedActions(props.pid, lpContract)\n\n  const { allowance } = props.userData || {}\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  return children({\n    ...props,\n    onStake,\n    onDone,\n    onUnstake,\n    onApprove,\n    isApproved,\n  })\n}\n\nexport const StakedContainer = ({ children, ...props }) => {\n  const { account } = useWeb3React()\n\n  const { lpAddress } = props\n  const lpContract = useERC20(lpAddress)\n  const { onStake, onUnstake, onApprove, onDone } = useStakedActions(lpContract, props.pid, props.vaultPid)\n\n  const { allowance } = props.userData || {}\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  return children({\n    ...props,\n    onStake,\n    onDone,\n    onUnstake,\n    onApprove,\n    isApproved,\n  })\n}\n\nconst Staked: React.FunctionComponent<React.PropsWithChildren<StackedActionProps>> = ({\n  pid,\n  apr,\n  vaultPid,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddress,\n  lpTokenPrice,\n  quoteToken,\n  token,\n  userDataReady,\n  displayApr,\n  lpTotalSupply,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n  userData,\n  onDone,\n  onStake,\n  onUnstake,\n  onApprove,\n  isApproved,\n}) => {\n  const dispatch = useAppDispatch()\n  const native = useNativeCurrency()\n  const pendingFarm = useNonBscFarmPendingTransaction(lpAddress)\n  const { boosterState } = useContext(YieldBoosterStateContext)\n  const { isFirstTime } = useFirstTimeCrossFarming(vaultPid)\n\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const addTransaction = useTransactionAdder()\n  const { fetchWithCatchTxError, fetchTxResponse, loading: pendingTx } = useCatchTxError()\n  const { account, chainId } = useActiveWeb3React()\n\n  const { tokenBalance, stakedBalance } = userData || {}\n\n  const router = useRouter()\n  const cakePrice = usePriceCakeBusd()\n  const [bCakeMultiplier, setBCakeMultiplier] = useState<number | null>(() => null)\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n    chainId,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const isStakeReady = useMemo(() => {\n    return ['history', 'archived'].some((item) => router.pathname.includes(item)) || pendingFarm.length > 0\n  }, [pendingFarm, router])\n\n  const crossChainWarningText = useMemo(() => {\n    return isFirstTime\n      ? t('A small amount of %nativeToken% is required for the first-time setup of cross-chain CAKE farming.', {\n          nativeToken: native.symbol,\n        })\n      : t('For safety, cross-chain transactions will take around 30 minutes to confirm.')\n  }, [isFirstTime, native, t])\n\n  const handleStake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscStake(amount)\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onStake(amount))\n\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Staked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the farm')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onStake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber))\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Stake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.STAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              isFirstTime: !isFirstTime,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              tx: '',\n              chainId: ChainId.BSC,\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const handleUnstake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscUnStake(amount)\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onUnstake(amount))\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your earnings have also been harvested to your wallet')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscUnStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onUnstake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber))\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Unstake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.UNSTAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              chainId: ChainId.BSC,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 3,\n              chainId,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const bCakeCalculatorSlot = (calculatorBalance) => (\n    <BCakeCalculator\n      targetInputBalance={calculatorBalance}\n      earningTokenPrice={cakePrice.toNumber()}\n      lpTotalSupply={lpTotalSupply}\n      setBCakeMultiplier={setBCakeMultiplier}\n    />\n  )\n\n  const [onPresentDeposit] = useModal(\n    <FarmUI.DepositModal\n      account={account}\n      pid={pid}\n      lpTotalSupply={lpTotalSupply}\n      max={tokenBalance}\n      lpPrice={lpTokenPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      bCakeMultiplier={bCakeMultiplier}\n      bCakeCalculatorSlot={bCakeCalculatorSlot}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n      crossChainWarningText={crossChainWarningText}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <FarmUI.WithdrawModal\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      max={stakedBalance}\n      onConfirm={handleUnstake}\n      tokenName={lpSymbol}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onApprove()\n    })\n    if (receipt?.status) {\n      toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      onDone()\n    }\n  }, [onApprove, t, toastSuccess, fetchWithCatchTxError, onDone])\n\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n\n  const onClickLoadingIcon = () => {\n    const { length } = pendingFarm\n    if (length) {\n      if (length > 1) {\n        onPresentTransactionModal()\n      } else {\n        dispatch(pickFarmTransactionTx({ tx: pendingFarm[0].txid, chainId }))\n      }\n    }\n  }\n\n  if (!account) {\n    return (\n      <StyledActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </StyledActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <StyledActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <FarmUI.StakedLP\n              stakedBalance={stakedBalance}\n              quoteTokenSymbol={quoteToken.symbol}\n              tokenSymbol={token.symbol}\n              lpTotalSupply={lpTotalSupply}\n              lpTokenPrice={lpTokenPrice}\n              tokenAmountTotal={tokenAmountTotal}\n              quoteTokenAmountTotal={quoteTokenAmountTotal}\n              pendingFarmLength={pendingFarm.length}\n              onClickLoadingIcon={onClickLoadingIcon}\n            />\n            <IconButtonWrapper>\n              <IconButton mr=\"6px\" variant=\"secondary\" disabled={pendingFarm.length > 0} onClick={onPresentWithdraw}>\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit} disabled={isStakeReady}>\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </StyledActionContainer>\n      )\n    }\n\n    return (\n      <StyledActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake')}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\" disabled={isStakeReady}>\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </StyledActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <StyledActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </StyledActionContainer>\n    )\n  }\n\n  return (\n    <StyledActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={pendingTx} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </StyledActionContainer>\n  )\n}\n\nexport default Staked\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 12px;\n    /* max-height: 130px; */\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-right: 0;\n    margin-bottom: 0;\n    /* max-height: 130px; */\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<React.PropsWithChildren<CellLayoutProps>> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<React.PropsWithChildren<DetailsProps>> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<React.PropsWithChildren<EarnedPropsWithLoading>> = ({\n  earnings,\n  userDataReady,\n}) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Text, Skeleton, Flex, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { TokenPairImage } from 'components/TokenImage'\n\nconst { StableFarmTag } = FarmUI.Tags\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n  isReady: boolean\n  isStable?: boolean\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<React.PropsWithChildren<FarmProps>> = ({\n  token,\n  quoteToken,\n  label,\n  pid,\n  isReady,\n  isStable,\n}) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  if (!isReady) {\n    return (\n      <Container>\n        <Skeleton mr=\"8px\" width={32} height={32} variant=\"circle\" />\n        <div>\n          <Skeleton width={40} height={10} mb=\"4px\" />\n          <Skeleton width={60} height={24} />\n        </div>\n      </Container>\n    )\n  }\n\n  const pairContainer = (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n\n  return isStable ? (\n    <Flex flexDirection=\"column\">\n      {pairContainer}\n      <StableFarmTag mt=\"4px\" />\n    </Flex>\n  ) : (\n    pairContainer\n  )\n}\n\nexport default Farm\n","import { useRef, useMemo } from 'react'\nimport { latinise } from 'utils/latinise'\nimport styled from 'styled-components'\nimport { RowType } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { useRouter } from 'next/router'\nimport { getDisplayApr } from '../getDisplayApr'\n\nimport Row, { RowProps } from './Row'\nimport { DesktopColumnSchema, FarmWithStakedValue } from '../types'\nimport ProxyFarmContainer from '../YieldBooster/components/ProxyFarmContainer'\n\nexport interface ITableProps {\n  farms: FarmWithStakedValue[]\n  userDataReady: boolean\n  cakePrice: BigNumber\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n  scroll-margin-top: 64px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst FarmTable: React.FC<React.PropsWithChildren<ITableProps>> = ({ farms, cakePrice, userDataReady }) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { query } = useRouter()\n\n  const columns = useMemo(\n    () =>\n      DesktopColumnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      })),\n    [],\n  )\n\n  const getFarmEarnings = (farm) => {\n    let earnings = BIG_ZERO\n    const existingEarnings = new BigNumber(farm.userData.earnings)\n\n    if (farm.boosted) {\n      const proxyEarnings = new BigNumber(farm.userData?.proxy?.earnings)\n\n      earnings = proxyEarnings.gt(0) ? proxyEarnings : existingEarnings\n    } else {\n      earnings = existingEarnings\n    }\n\n    return getBalanceNumber(earnings)\n  }\n\n  const generateRow = (farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n    const lowercaseQuery = latinise(typeof query?.search === 'string' ? query.search.toLowerCase() : '')\n    const initialActivity = latinise(lpLabel?.toLowerCase()) === lowercaseQuery\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        lpTokenPrice: farm.lpTokenPrice,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        lpRewardsApr: farm.lpRewardsApr,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n        isReady: farm.multiplier !== undefined,\n        isStable: farm.isStable,\n      },\n      earned: {\n        earnings: getFarmEarnings(farm),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm?.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      type: farm.isCommunity ? 'community' : 'core',\n      details: farm,\n      initialActivity,\n    }\n\n    return row\n  }\n\n  const rowData = farms.map((farm) => generateRow(farm))\n\n  const generateSortedRow = (row) => {\n    // @ts-ignore\n    const newRow: RowProps = {}\n    columns.forEach((column) => {\n      if (!(column.name in row)) {\n        throw new Error(`Invalid row data, ${column.name} not found`)\n      }\n      newRow[column.name] = row[column.name]\n    })\n    newRow.initialActivity = row.initialActivity\n    return newRow\n  }\n\n  const sortedRows = rowData.map(generateSortedRow)\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer id=\"table-container\">\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {sortedRows.map((row) => {\n                return row?.details?.boosted ? (\n                  <ProxyFarmContainer key={`table-row-${row.farm.pid}`} farm={row.details}>\n                    <Row {...row} userDataReady={userDataReady} />\n                  </ProxyFarmContainer>\n                ) : (\n                  <Row {...row} userDataReady={userDataReady} key={`table-row-${row.farm.pid}`} />\n                )\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<React.PropsWithChildren<LiquidityProps>> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<React.PropsWithChildren<MultiplierProps>> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import { useEffect, useState, createElement, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, useMatchBreakpoints, Skeleton, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/farms/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\n\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema, FarmWithStakedValue } from '../types'\nimport BoostedApr from '../YieldBooster/components/BoostedApr'\nimport BoostedTag from '../YieldBooster/components/BoostedTag'\n\nconst { FarmAuctionTag, CoreTag } = FarmUI.Tags\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  type: 'core' | 'community'\n  initialActivity?: boolean\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  &:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<React.PropsWithChildren<RowPropsWithLoading>> = (props) => {\n  const { details, initialActivity, multiplier } = props\n  const { stakedBalance, proxy, tokenBalance } = props.details.userData\n  const userDataReady = multiplier.multiplier !== undefined\n  const hasSetInitialValue = useRef(false)\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n  useEffect(() => {\n    if (initialActivity && hasSetInitialValue.current === false) {\n      setActionPanelExpanded(initialActivity)\n      hasSetInitialValue.current = true\n    }\n  }, [initialActivity])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'type':\n                return (\n                  <td key={key}>\n                    {userDataReady ? (\n                      <CellInner style={{ width: '140px' }}>\n                        {props[key] === 'community' ? <FarmAuctionTag scale=\"sm\" /> : <CoreTag scale=\"sm\" />}\n                        {props?.details?.boosted ? <BoostedTag scale=\"sm\" ml=\"16px\" /> : null}\n                      </CellInner>\n                    ) : (\n                      <Skeleton width={60} height={24} />\n                    )}\n                  </td>\n                )\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr\n                          {...props.apr}\n                          hideButton={isSmallerScreen}\n                          strikethrough={props?.details?.boosted}\n                          boosted={props?.details?.boosted}\n                        />\n                        {props?.details?.boosted ? (\n                          <BoostedApr\n                            lpRewardsApr={props?.apr?.lpRewardsApr}\n                            apr={props?.apr?.originalValue}\n                            pid={props.farm?.pid}\n                            lpTotalSupply={props.details?.lpTotalSupply}\n                            userBalanceInFarm={\n                              stakedBalance.plus(tokenBalance).gt(0)\n                                ? stakedBalance.plus(tokenBalance)\n                                : proxy.stakedBalance.plus(proxy.tokenBalance)\n                            }\n                          />\n                        ) : null}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <>\n        <tr style={{ cursor: 'pointer' }} onClick={toggleActionPanel}>\n          <FarmMobileCell colSpan={3}>\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <Farm {...props.farm} />\n              {props.type === 'community' ? (\n                <FarmAuctionTag marginRight=\"16px\" scale=\"sm\" />\n              ) : (\n                <Box style={{ marginRight: '16px' }}>\n                  <CoreTag scale=\"sm\" />\n                  {props?.details?.boosted ? (\n                    <BoostedTag style={{ verticalAlign: 'bottom' }} scale=\"sm\" ml=\"4px\" />\n                  ) : null}\n                </Box>\n              )}\n            </Flex>\n          </FarmMobileCell>\n        </tr>\n        <StyledTr onClick={toggleActionPanel}>\n          <td width=\"33%\">\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n          </td>\n          <td width=\"33%\">\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr\n                  {...props.apr}\n                  hideButton\n                  strikethrough={props?.details?.boosted}\n                  boosted={props?.details?.boosted}\n                />\n                {props?.details?.boosted ? (\n                  <BoostedApr\n                    lpRewardsApr={props?.apr?.lpRewardsApr}\n                    apr={props?.apr?.originalValue}\n                    pid={props.farm?.pid}\n                    lpTotalSupply={props.details?.lpTotalSupply}\n                    userBalanceInFarm={\n                      stakedBalance.plus(tokenBalance).gt(0)\n                        ? stakedBalance.plus(tokenBalance)\n                        : proxy.stakedBalance.plus(proxy.tokenBalance)\n                    }\n                  />\n                ) : null}\n              </CellLayout>\n            </AprMobileCell>\n          </td>\n          <td width=\"33%\">\n            <CellInner style={{ justifyContent: 'flex-end' }}>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellInner>\n          </td>\n        </StyledTr>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={7}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import { useCallback, useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { BigNumber } from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useSwitchNetwork } from 'hooks/useSwitchNetwork'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport styled from 'styled-components'\nimport { TokenPairImage } from 'components/TokenImage'\nimport {\n  Modal,\n  InjectedModalProps,\n  Flex,\n  Box,\n  Text,\n  Button,\n  Message,\n  MessageText,\n  ArrowForwardIcon,\n  AutoRenewIcon,\n  useToast,\n  FlexGap,\n  Balance,\n} from '@pancakeswap/uikit'\nimport { ChainLogo } from 'components/Logo/ChainLogo'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport { LightGreyCard } from 'components/Card'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useFarmCProxyAddress } from 'views/Farms/hooks/useFarmCProxyAddress'\nimport useNonBscHarvestFarm from 'views/Farms/hooks/useNonBscHarvestFarm'\nimport { farmFetcher } from 'state/farms'\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\ninterface MultiChainHarvestModalProp extends InjectedModalProps {\n  pid: number\n  token: Token\n  lpSymbol: string\n  quoteToken: Token\n  earningsBigNumber: BigNumber\n  earningsBusd: number\n}\n\nconst MultiChainHarvestModal: React.FC<MultiChainHarvestModalProp> = ({\n  pid,\n  token,\n  lpSymbol,\n  quoteToken,\n  earningsBigNumber,\n  earningsBusd,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { account, chainId, isWrongNetwork } = useActiveWeb3React()\n  const { switchNetworkAsync } = useSwitchNetwork()\n  const { cProxyAddress } = useFarmCProxyAddress(account, chainId)\n  const { onReward } = useNonBscHarvestFarm(pid, cProxyAddress)\n  const { fetchWithCatchTxError, loading: isPending } = useCatchTxError()\n\n  const earnings = getBalanceAmount(earningsBigNumber)\n  const displayBalance = earnings.toFixed(5, BigNumber.ROUND_DOWN)\n\n  const isTestnet = farmFetcher.isTestnet(chainId)\n  const network = isTestnet ? ChainId.BSC_TESTNET : ChainId.BSC\n  const isBscNetwork = useMemo(() => chainId === network, [chainId, network])\n\n  const handleCancel = useCallback(() => {\n    onDismiss?.()\n  }, [onDismiss])\n\n  const handleSwitchNetwork = () => {\n    switchNetworkAsync(network)\n  }\n\n  const handleHarvest = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => onReward())\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Harvested')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      handleCancel()\n    }\n  }, [t, onReward, fetchWithCatchTxError, toastSuccess, handleCancel])\n\n  return (\n    <Modal\n      title={isBscNetwork ? t('Harvest now!') : t('Switch chain to harvest')}\n      style={{ maxWidth: '340px' }}\n      onDismiss={handleCancel}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          <TokenWrapper>\n            <TokenPairImage\n              width={40}\n              height={40}\n              variant=\"inverted\"\n              primaryToken={token}\n              secondaryToken={quoteToken}\n            />\n          </TokenWrapper>\n          <Text bold fontSize=\"24px\">\n            {lpSymbol}\n          </Text>\n        </Flex>\n        {!isBscNetwork && (\n          <Message mb=\"16px\" variant=\"warning\" icon={false} p=\"8px 12px\">\n            <MessageText>\n              <FlexGap gap=\"12px\">\n                <FlexGap gap=\"6px\">\n                  <ChainLogo chainId={chainId} /> <ArrowForwardIcon color=\"#D67E0A\" />\n                  <ChainLogo chainId={ChainId.BSC} />\n                </FlexGap>\n                <span>{t('Harvest on BNB Smart Chain')}</span>\n              </FlexGap>\n            </MessageText>\n          </Message>\n        )}\n        <LightGreyCard padding=\"16px\">\n          <Box mb=\"8px\">\n            <Text fontSize=\"12px\" color=\"secondary\" bold as=\"span\">\n              {t('CAKE')}\n            </Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\" ml=\"4px\" bold as=\"span\">\n              {t('Earned')}\n            </Text>\n          </Box>\n          <Box>\n            <Text fontSize=\"20px\" lineHeight=\"110%\" bold>\n              {displayBalance}\n            </Text>\n            <Balance\n              mb=\"16px\"\n              prefix=\"~\"\n              unit=\" USD\"\n              decimals={2}\n              value={earningsBusd}\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n            />\n            {isBscNetwork ? (\n              <Button\n                width=\"100%\"\n                variant=\"secondary\"\n                disabled={isPending || !account || isWrongNetwork}\n                endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                onClick={handleHarvest}\n              >\n                {isPending ? t('Harvesting') : t('Harvest')}\n              </Button>\n            ) : (\n              <Button width=\"100%\" variant=\"secondary\" onClick={handleSwitchNetwork}>\n                {t('Switch to BNB Smart Chain')}\n              </Button>\n            )}\n          </Box>\n        </LightGreyCard>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default MultiChainHarvestModal\n","import {\n  Button,\n  Heading,\n  Text,\n  ButtonProps,\n  HelpIcon,\n  Flex,\n  TooltipText,\n  useTooltip,\n  LinkExternal,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport _isEmpty from 'lodash/isEmpty'\nimport { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\n\nconst Container = styled.div`\n  margin-right: 4px;\n`\n\ninterface ActionButtonPropsType extends ButtonProps {\n  title: string\n  description: string\n  button?: ReactNode\n}\n\nconst BoosterTooltip = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {t(\n        `Boost multiplier is calculated based on the staking conditions from both Farms and fixed-term CAKE syrup pool and will be automatically updated upon user actions.`,\n      )}\n      <LinkExternal\n        href=\"https://docs.pancakeswap.finance/products/yield-farming/bcake/faq#how-are-the-bcake-multipliers-calculated\"\n        external\n      >\n        {t('Learn More')}\n      </LinkExternal>\n    </>\n  )\n}\n\nconst ActionButton: React.FC<ActionButtonPropsType> = ({ title, description, button, ...props }) => {\n  const { isMobile } = useMatchBreakpoints()\n  let btn = null\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<BoosterTooltip />, {\n    placement: 'top',\n    ...(isMobile && { hideTimeout: 1500 }),\n  })\n\n  if (button) {\n    btn = button\n  } else if (!_isEmpty(props)) {\n    btn = <Button {...props} />\n  }\n\n  return (\n    <>\n      <Container>\n        <Flex>\n          <Heading mr=\"4px\">{title}</Heading>\n          <TooltipText ref={targetRef}>\n            <HelpIcon width=\"20px\" height=\"20px\" />\n          </TooltipText>\n          {tooltipVisible && tooltip}\n        </Flex>\n\n        <Text color=\"textSubtle\" fontSize=\"12px\">\n          {description}\n        </Text>\n      </Container>\n      {btn}\n    </>\n  )\n}\n\nexport default ActionButton\n","import { useTranslation } from '@pancakeswap/localization'\nimport { AutoRenewIcon, NextLinkFromReactRouter, Button } from '@pancakeswap/uikit'\nimport { ReactNode, useCallback, useContext } from 'react'\n\nimport BigNumber from 'bignumber.js'\nimport useBoosterFarmHandlers from '../hooks/useBoosterFarmHandlers'\nimport { useGetBoostedMultiplier } from '../hooks/useGetBoostedAPR'\nimport { YieldBoosterState } from '../hooks/useYieldBoosterState'\n\nimport useBoostMultiplier from '../hooks/useBoostMultiplier'\nimport ActionButton from './ActionButton'\nimport CreateProxyButton from './CreateProxyButton'\nimport MigrateActionButton from './MigrateActionButton'\nimport { YieldBoosterStateContext } from './ProxyFarmContainer'\n\ninterface BoostedActionPropsType {\n  farmPid: number\n  title: (status: YieldBoosterState) => ReactNode\n  desc: (actionBtn: ReactNode) => ReactNode\n  userBalanceInFarm: BigNumber\n  lpTotalSupply: BigNumber\n}\n\nconst BoostedAction: React.FunctionComponent<BoostedActionPropsType> = ({\n  farmPid,\n  title,\n  desc,\n  userBalanceInFarm,\n  lpTotalSupply,\n}) => {\n  const { t } = useTranslation()\n  const { boosterState, refreshActivePool, refreshProxyAddress, proxyAddress } = useContext(YieldBoosterStateContext)\n  const { isConfirming, ...handlers } = useBoosterFarmHandlers(farmPid, refreshActivePool)\n  const boostMultiplierFromSC = useBoostMultiplier({ pid: farmPid, boosterState, proxyAddress })\n  const boostedMultiplierFromFE = useGetBoostedMultiplier(userBalanceInFarm, lpTotalSupply)\n  const boostMultiplier = userBalanceInFarm.eq(0) ? boostMultiplierFromSC : boostedMultiplierFromFE\n  const boostMultiplierDisplay = boostMultiplier.toLocaleString(undefined, { maximumFractionDigits: 3 })\n\n  const renderBtn = useCallback(() => {\n    switch (boosterState) {\n      case YieldBoosterState.UNCONNECTED:\n        return (\n          <ActionButton\n            title={`${t('Up to')} ${boostMultiplierDisplay}x`}\n            description={t('Connect wallet to activate yield booster')}\n          />\n        )\n      case YieldBoosterState.NO_LOCKED:\n        return (\n          <ActionButton\n            title={`${t('Up to')} ${boostMultiplierDisplay}x`}\n            description={t('Lock CAKE to activate yield booster')}\n            style={{ whiteSpace: 'nowrap' }}\n            button={\n              <NextLinkFromReactRouter to=\"/pools\">\n                <Button> {t('Go to Pool')}</Button>\n              </NextLinkFromReactRouter>\n            }\n          />\n        )\n      case YieldBoosterState.LOCKED_END:\n        return (\n          <ActionButton\n            title={`${t('Up to')} ${boostMultiplierDisplay}x`}\n            description={t('Lock CAKE is ended. Re-lock CAKE to activate yield booster')}\n            style={{ whiteSpace: 'nowrap' }}\n            button={\n              <NextLinkFromReactRouter to=\"/pools\">\n                <Button> {t('Go to Pool')}</Button>\n              </NextLinkFromReactRouter>\n            }\n          />\n        )\n      case YieldBoosterState.NO_PROXY_CREATED:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('One-time setup is required for activating farm yield boosters')}\n            button={<CreateProxyButton onDone={refreshProxyAddress} width=\"auto\" />}\n          />\n        )\n      case YieldBoosterState.NO_MIGRATE:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('Migration required to activate boost')}\n            button={<MigrateActionButton pid={farmPid} />}\n          />\n        )\n      case YieldBoosterState.NO_LP:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('Stake LP tokens to start boosting')}\n            disabled\n          >\n            {t('Boost')}\n          </ActionButton>\n        )\n      case YieldBoosterState.DEACTIVE:\n        return (\n          <ActionButton\n            disabled={isConfirming}\n            onClick={handlers.activate}\n            title={`${boostMultiplierDisplay}x`}\n            isLoading={isConfirming}\n            description={t('Yield booster available')}\n            endIcon={isConfirming && <AutoRenewIcon spin color=\"currentColor\" />}\n          >\n            {t('Boost')}\n          </ActionButton>\n        )\n      case YieldBoosterState.ACTIVE:\n      case YieldBoosterState.ACTIVE_AND_NO_LP:\n        return (\n          <ActionButton\n            disabled={isConfirming}\n            onClick={handlers.deactivate}\n            title={`${boostMultiplierDisplay}x`}\n            isLoading={isConfirming}\n            description={t('Active')}\n            endIcon={isConfirming && <AutoRenewIcon spin color=\"currentColor\" />}\n          >\n            {t('Unset')}\n          </ActionButton>\n        )\n      case YieldBoosterState.MAX:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('Unset other boosters to activate')}\n            disabled\n          >\n            {t('Boost')}\n          </ActionButton>\n        )\n      default:\n        return null\n    }\n  }, [\n    boosterState,\n    t,\n    handlers.activate,\n    handlers.deactivate,\n    isConfirming,\n    farmPid,\n    refreshProxyAddress,\n    boostMultiplierDisplay,\n  ])\n\n  let status = null\n\n  if ([YieldBoosterState.NO_MIGRATE, YieldBoosterState.DEACTIVE].includes(boosterState)) {\n    status = t('Ready')\n  } else if ([YieldBoosterState.ACTIVE, YieldBoosterState.ACTIVE_AND_NO_LP].includes(boosterState)) {\n    status = t('Active')\n  }\n\n  return (\n    <>\n      {title && title(status)}\n      {desc && desc(renderBtn())}\n    </>\n  )\n}\n\nexport default BoostedAction\n","import { useTranslation } from '@pancakeswap/localization'\nimport { RocketIcon, Text } from '@pancakeswap/uikit'\nimport isUndefinedOrNull from '@pancakeswap/utils/isUndefinedOrNull'\nimport BigNumber from 'bignumber.js'\nimport _toNumber from 'lodash/toNumber'\nimport { memo, useContext } from 'react'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport useBoostMultiplier from '../hooks/useBoostMultiplier'\nimport useGetBoostedAPR from '../hooks/useGetBoostedAPR'\nimport { YieldBoosterState } from '../hooks/useYieldBoosterState'\nimport { YieldBoosterStateContext } from './ProxyFarmContainer'\n\ninterface BoostedAprPropsType {\n  apr: number\n  lpRewardsApr: number\n  pid: number\n  mr?: string\n  userBalanceInFarm: BigNumber\n  lpTotalSupply: BigNumber\n}\n\nfunction BoostedApr(props: BoostedAprPropsType) {\n  const { lpRewardsApr, apr, pid, userBalanceInFarm, lpTotalSupply, ...rest } = props\n  const { boosterState, proxyAddress } = useContext(YieldBoosterStateContext)\n  const { t } = useTranslation()\n\n  const boostedAprFromFE = useGetBoostedAPR(userBalanceInFarm, lpTotalSupply, apr, lpRewardsApr)\n\n  const multiplier = useBoostMultiplier({ pid, boosterState, proxyAddress })\n\n  const boostedAprFromSC =\n    (!isUndefinedOrNull(multiplier) &&\n      !isUndefinedOrNull(apr) &&\n      formatNumber(\n        _toNumber(apr) * Number(multiplier) + (!isUndefinedOrNull(lpRewardsApr) ? _toNumber(lpRewardsApr) : 0),\n      )) ||\n    '0'\n\n  const msg =\n    boosterState === YieldBoosterState.ACTIVE ? (\n      `${boostedAprFromSC}%`\n    ) : (\n      <>\n        <Text bold color=\"success\" {...rest} fontSize={14} display=\"inline-block\" mr=\"3px\">\n          {t('Up to')}\n        </Text>\n        {`${userBalanceInFarm.eq(0) ? boostedAprFromSC : boostedAprFromFE}%`}\n      </>\n    )\n  // if (boostedAPR === '0') {\n  //   return null\n  // }\n\n  return (\n    <>\n      <RocketIcon m=\"4px\" color=\"success\" />\n      <Text bold color=\"success\" {...rest} fontSize={16}>\n        {msg}\n      </Text>\n    </>\n  )\n}\n\nexport default memo(BoostedApr)\n","import { RocketIcon, Tag, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { memo } from 'react'\n\ninterface BoostedTag extends TagProps {\n  // Add Object to bypass typescript warning\n  style?: object\n}\n\nconst BoostedTag: React.FC<BoostedTag> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag\n      variant=\"success\"\n      style={{ background: 'none' }}\n      outline\n      startIcon={<RocketIcon width=\"18px\" color=\"success\" mr=\"4px\" />}\n      {...props}\n    >\n      {t('Boosted')}\n    </Tag>\n  )\n}\n\nexport default memo(BoostedTag)\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Button, useModal, useToast } from '@pancakeswap/uikit'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useERC20 } from 'hooks/useContract'\nimport { useAppDispatch } from 'state'\n\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useFarmFromPid, useFarmUser } from 'state/farms/hooks'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport { BCakeMigrateModal } from '../../BCakeMigrateModal'\n\ninterface MigrateActionButtonPropsType {\n  pid: number\n}\n\nconst MigrateActionButton: React.FunctionComponent<MigrateActionButtonPropsType> = ({ pid }) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError } = useCatchTxError()\n  const { account, chainId } = useActiveWeb3React()\n  const { onUnstake } = useUnstakeFarms(pid)\n  const { stakedBalance } = useFarmUser(pid)\n  const { lpAddress } = useFarmFromPid(pid)\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n\n  const handleUnstakeWithCallback = async (amount: string, callback: () => void) => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onUnstake(amount)\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Unstaked')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your earnings have also been harvested to your wallet')}\n        </ToastDescriptionWithTx>,\n      )\n      callback()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId }))\n    }\n  }\n\n  const [onPresentMigrate] = useModal(\n    <BCakeMigrateModal\n      pid={pid}\n      stakedBalance={stakedBalance}\n      lpContract={lpContract}\n      onUnStack={handleUnstakeWithCallback}\n    />,\n  )\n\n  return <Button onClick={onPresentMigrate}>{t('Migrate')}</Button>\n}\n\nexport default MigrateActionButton\n","import { useCallback } from 'react'\n\nimport _isEmpty from 'lodash/isEmpty'\nimport { useBCakeFarmBoosterContract } from 'hooks/useContract'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useCallWithMarketGasPrice } from 'hooks/useCallWithMarketGasPrice'\n\nconst useBoosterFarmHandlers = (farmPid: number, onDone) => {\n  const farmBoosterContract = useBCakeFarmBoosterContract()\n  const { fetchWithCatchTxError, loading: isConfirming } = useCatchTxError()\n  const { callWithMarketGasPrice } = useCallWithMarketGasPrice()\n\n  const activate = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return callWithMarketGasPrice(farmBoosterContract, 'activate', [farmPid])\n    })\n\n    if (receipt?.status && onDone) {\n      onDone()\n    }\n  }, [farmPid, farmBoosterContract, callWithMarketGasPrice, fetchWithCatchTxError, onDone])\n\n  const deactivate = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return callWithMarketGasPrice(farmBoosterContract, 'deactive', [farmPid])\n    })\n\n    if (receipt?.status && onDone) {\n      onDone()\n    }\n  }, [farmPid, farmBoosterContract, callWithMarketGasPrice, fetchWithCatchTxError, onDone])\n\n  return { activate, deactivate, isConfirming }\n}\n\nexport default useBoosterFarmHandlers\n","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useSWRContract } from 'hooks/useSWRContract'\nimport { getCakeContract } from 'utils/contractHelpers'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { useBCakeProxyContractAddress } from 'views/Farms/hooks/useBCakeProxyContractAddress'\nimport BigNumber from 'bignumber.js'\n\nconst useProxyCAKEBalance = () => {\n  const { account, chainId } = useActiveWeb3React()\n  const { proxyAddress } = useBCakeProxyContractAddress(account, chainId)\n  const cakeContract = getCakeContract()\n\n  const { data, mutate } = useSWRContract([cakeContract, 'balanceOf', [proxyAddress]])\n\n  return {\n    refreshProxyCakeBalance: mutate,\n    proxyCakeBalance: data ? getBalanceNumber(new BigNumber(data.toString())) : 0,\n  }\n}\n\nexport default useProxyCAKEBalance\n","import { useBCakeProxyContract } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { harvestFarm, stakeFarm, unstakeFarm } from 'utils/calls/farms'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useBCakeProxyContractAddress } from 'views/Farms/hooks/useBCakeProxyContractAddress'\nimport { useApproveBoostProxyFarm } from '../../../hooks/useApproveFarm'\nimport useProxyCAKEBalance from './useProxyCAKEBalance'\n\nexport default function useProxyStakedActions(pid, lpContract) {\n  const { account, chainId } = useActiveWeb3React()\n  const { proxyAddress } = useBCakeProxyContractAddress(account, chainId)\n  const bCakeProxy = useBCakeProxyContract(proxyAddress)\n  const dispatch = useAppDispatch()\n  const { proxyCakeBalance, refreshProxyCakeBalance } = useProxyCAKEBalance()\n\n  const onDone = useCallback(() => {\n    refreshProxyCakeBalance()\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId, proxyAddress }))\n  }, [account, proxyAddress, chainId, pid, dispatch, refreshProxyCakeBalance])\n\n  const { onApprove } = useApproveBoostProxyFarm(lpContract, proxyAddress)\n\n  const onStake = useCallback((value) => stakeFarm(bCakeProxy, pid, value), [bCakeProxy, pid])\n\n  const onUnstake = useCallback((value) => unstakeFarm(bCakeProxy, pid, value), [bCakeProxy, pid])\n\n  const onReward = useCallback(() => harvestFarm(bCakeProxy, pid), [bCakeProxy, pid])\n\n  return {\n    onStake,\n    onUnstake,\n    onReward,\n    onApprove,\n    onDone,\n    proxyCakeBalance,\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { DeserializedFarm } from 'state/types'\n\nexport type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'type',\n    sortable: false,\n    label: '',\n  },\n  {\n    id: 3,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 4,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 5,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 6,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 7,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n","import useSWR from 'swr'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { fetchCProxyAddress } from 'state/farms/fetchFarmUser'\nimport { farmFetcher } from 'state/farms'\n\nexport const useFarmCProxyAddress = (account?: string, chainId?: number) => {\n  const multiCallChainId = farmFetcher.isTestnet(chainId) ? ChainId.BSC_TESTNET : ChainId.BSC\n  const { data } = useSWR(account && chainId && ['proxyAddress'], async () =>\n    fetchCProxyAddress(account, multiCallChainId),\n  )\n\n  return {\n    cProxyAddress: data,\n  }\n}\n","import useSWR from 'swr'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getCrossFarmingSenderContract } from 'utils/contractHelpers'\n\nexport const useFirstTimeCrossFarming = (vaultPid: number) => {\n  const { account, chainId } = useActiveWeb3React()\n  const crossFarmingAddress = getCrossFarmingSenderContract(null, chainId)\n\n  const { data } = useSWR(account && vaultPid && chainId && ['isFirstTimeCrossFarming'], async () => {\n    const firstTimeDeposit = await crossFarmingAddress.is1st(account)\n    return !firstTimeDeposit\n  })\n\n  return { isFirstTime: data }\n}\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    return harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import { useCallback } from 'react'\nimport { useCrossFarmingProxy } from 'hooks/useContract'\n\nconst useNonBscHarvestFarm = (farmPid: number, cProxyAddress: string) => {\n  const contract = useCrossFarmingProxy(cProxyAddress)\n\n  const handleHarvest = useCallback(async () => {\n    return contract.harvest(farmPid)\n  }, [contract, farmPid])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useNonBscHarvestFarm\n","import { FC } from 'react'\nimport Farms, { FarmsContext } from './Farms'\n\nexport const FarmsPageLayout: FC<React.PropsWithChildren<unknown>> = ({ children }) => {\n  return <Farms>{children}</Farms>\n}\n\nexport { FarmsContext }\n","import styled from \"styled-components\";\nimport { CopyButton } from \"./CopyButton\";\nimport { Box, Flex, FlexProps } from \"../Box\";\n\ninterface CopyAddressProps extends FlexProps {\n  account: string;\n  tooltipMessage: string;\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`;\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: \"\";\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`;\n\nexport const CopyAddress: React.FC<React.PropsWithChildren<CopyAddressProps>> = ({\n  account,\n  tooltipMessage,\n  ...props\n}) => {\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <Flex margin=\"12px\">\n          <CopyButton width=\"24px\" text={account} tooltipMessage={tooltipMessage} tooltipTop={-40} />\n        </Flex>\n      </Wrapper>\n    </Box>\n  );\n};\n","import { useState } from \"react\";\nimport { CopyIcon, SvgProps } from \"@pancakeswap/uikit\";\nimport styled from \"styled-components\";\nimport { copyText } from \"./copyText\";\n\nconst Tooltip = styled.div<{\n  isTooltipDisplayed: boolean;\n  tooltipTop: number;\n  tooltipRight?: number;\n  tooltipFontSize?: number;\n}>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? \"inline\" : \"none\")};\n  position: absolute;\n  padding: 8px;\n  top: ${({ tooltipTop }) => `${tooltipTop}px`};\n  right: ${({ tooltipRight }) => (tooltipRight ? `${tooltipRight}px` : 0)};\n  text-align: center;\n  font-size: ${({ tooltipFontSize }) => `${tooltipFontSize}px` ?? \"100%\"};\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: max-content;\n`;\n\ninterface CopyButtonProps extends SvgProps {\n  text: string;\n  tooltipMessage: string;\n  tooltipTop: number;\n  tooltipRight?: number;\n  tooltipFontSize?: number;\n  buttonColor?: string;\n}\n\nexport const CopyButton: React.FC<React.PropsWithChildren<CopyButtonProps>> = ({\n  text,\n  tooltipMessage,\n  width,\n  tooltipTop,\n  tooltipRight,\n  tooltipFontSize,\n  buttonColor = \"primary\",\n  ...props\n}) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\n\n  const displayTooltip = () => {\n    setIsTooltipDisplayed(true);\n    setTimeout(() => {\n      setIsTooltipDisplayed(false);\n    }, 1000);\n  };\n  return (\n    <>\n      <CopyIcon\n        style={{ cursor: \"pointer\" }}\n        color={buttonColor}\n        width={width}\n        onClick={() => copyText(text, displayTooltip)}\n        {...props}\n      />\n      <Tooltip\n        isTooltipDisplayed={isTooltipDisplayed}\n        tooltipTop={tooltipTop}\n        tooltipRight={tooltipRight}\n        tooltipFontSize={tooltipFontSize}\n      >\n        {tooltipMessage}\n      </Tooltip>\n    </>\n  );\n};\n","export const copyText = (text: string, cb?: () => void) => {\n  if (navigator.clipboard && navigator.permissions) {\n    navigator.clipboard.writeText(text).then(cb);\n  } else if (document.queryCommandSupported(\"copy\")) {\n    const ele = document.createElement(\"textarea\");\n    ele.value = text;\n    document.body.appendChild(ele);\n    ele.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(ele);\n    cb?.();\n  }\n};\n","import styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { useCallback } from \"react\";\nimport { Text } from \"../Text\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"../Svg\";\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void;\n  expanded?: boolean;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst ExpandableSectionButton: React.FC<React.PropsWithChildren<ExpandableSectionButtonProps>> = ({\n  onClick,\n  expanded = false,\n}) => {\n  const { t } = useTranslation();\n  const handleOnClick = useCallback(() => onClick?.(), [onClick]);\n\n  return (\n    <Wrapper aria-label={t(\"Hide or show expandable content\")} role=\"button\" onClick={handleOnClick}>\n      <Text color=\"primary\" bold>\n        {expanded ? t(\"Hide\") : t(\"Details\")}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  );\n};\n\nexport default ExpandableSectionButton;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20ZM15.88 8.29L10 14.17L8.12 12.29C7.73 11.9 7.1 11.9 6.71 12.29C6.32 12.68 6.32 13.31 6.71 13.7L9.3 16.29C9.69 16.68 10.32 16.68 10.71 16.29L17.3 9.7C17.69 9.31 17.69 8.68 17.3 8.29C16.91 7.9 16.27 7.9 15.88 8.29Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M15 1H4C2.9 1 2 1.9 2 3V16C2 16.55 2.45 17 3 17C3.55 17 4 16.55 4 16V4C4 3.45 4.45 3 5 3H15C15.55 3 16 2.55 16 2C16 1.45 15.55 1 15 1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM18 21H9C8.45 21 8 20.55 8 20V8C8 7.45 8.45 7 9 7H18C18.55 7 19 7.45 19 8V20C19 20.55 18.55 21 18 21Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 198 199\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M98.552 198.607c-29.49-.022-53.246-7.027-69.844-19.609C11.91 166.265 3 148.195 3 127.748c0-19.701 8.891-33.907 18.952-43.51 7.884-7.525 16.584-12.344 22.642-15.117-1.37-4.162-3.079-9.61-4.608-15.238-2.046-7.53-4.053-16.366-4.053-22.84 0-7.663 1.687-15.36 6.238-21.34C46.98 3.385 54.218 0 62.926 0c6.806 0 12.584 2.499 17.108 6.81 4.324 4.12 7.202 9.593 9.189 15.298 3.491 10.024 4.85 22.618 5.232 35.187h8.341c.382-12.569 1.741-25.163 5.233-35.187 1.987-5.705 4.865-11.177 9.189-15.298C121.741 2.5 127.519 0 134.325 0c8.708 0 15.947 3.385 20.755 9.703 4.551 5.98 6.239 13.677 6.239 21.34 0 6.474-2.007 15.31-4.054 22.84-1.529 5.628-3.238 11.076-4.608 15.238 6.058 2.773 14.759 7.592 22.643 15.118 10.06 9.602 18.952 23.808 18.952 43.509 0 20.447-8.911 38.517-25.708 51.25-16.598 12.582-40.354 19.587-69.844 19.609h-.148z\"\n        fill=\"#633001\"\n      />\n      <path\n        d=\"M62.926 7.288c-12.754 0-18.626 9.516-18.626 22.675 0 10.46 6.822 31.408 9.621 39.563.63 1.835-.36 3.844-2.164 4.555-10.222 4.031-40.39 18.789-40.39 52.588 0 35.603 30.658 62.448 87.191 62.49h.135c56.534-.042 87.19-26.887 87.19-62.49 0-33.799-30.167-48.557-40.389-52.588-1.804-.71-2.794-2.72-2.164-4.555 2.799-8.154 9.621-29.103 9.621-39.563 0-13.16-5.871-22.675-18.626-22.675-18.36 0-22.936 26.007-23.263 53.92-.022 1.863-1.528 3.375-3.392 3.375H89.58c-1.863 0-3.37-1.512-3.391-3.375-.326-27.913-4.903-53.92-23.263-53.92z\"\n        fill=\"#D1884F\"\n      />\n      <path\n        d=\"M98.693 177.755c-41.538 0-87.253-22.235-87.325-51.018v.134c0 35.632 30.705 62.491 87.325 62.491 56.62 0 87.325-26.859 87.325-62.491v-.134c-.072 28.783-45.787 51.018-87.325 51.018z\"\n        fill=\"#FEDC90\"\n      />\n      <path\n        className=\"eye\"\n        d=\"M75.614 117.896c0 9.718-4.593 14.779-10.258 14.779-5.665 0-10.258-5.061-10.258-14.779s4.593-14.779 10.258-14.779c5.665 0 10.258 5.061 10.258 14.779zM142.288 117.896c0 9.718-4.592 14.779-10.257 14.779-5.666 0-10.258-5.061-10.258-14.779s4.592-14.779 10.258-14.779c5.665 0 10.257 5.061 10.257 14.779z\"\n        fill=\"#633001\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n"],"names":["Image","HelpIcon","isChainSupported","memo","ChainLogo","chainId","width","height","alt","style","maxHeight","src","unoptimized","BlockIcon","CheckmarkCircleIcon","Flex","OpenNewIcon","RefreshIcon","styled","useAppDispatch","useTranslation","pickFarmTransactionTx","FarmTransactionStatus","getBlockExploreLink","TxnIcon","Summary","div","TxnLink","theme","colors","text","renderIcon","txn","receipt","nonBscFarm","status","PENDING","spin","isFarmStatusSuccess","SUCCESS","color","TransactionRow","type","onDismiss","t","dispatch","onClickTransaction","tx","hash","url","window","open","onClick","translatableSummary","data","summary","Box","Button","LinkExternal","Message","Skeleton","Text","CopyAddress","ChainId","FetchStatus","useActiveWeb3React","useAuth","useNativeCurrency","useGetCakeBalance","getBlockExploreName","formatBigNumber","useBalance","COLORS","ETH","BNB","WalletInfo","hasLowNativeBalance","account","chain","isBSC","BSC","bnbBalance","addressOrName","nativeBalance","enabled","native","balance","cakeBalance","fetchStatus","cakeFetchStatus","logout","handleLogout","fontSize","textTransform","fontWeight","mb","tooltipMessage","variant","currency","symbol","as","justifyContent","alignItems","bg","borderRadius","pl","pr","py","id","ml","name","href","isFetched","value","Fetched","parseUnits","ButtonMenu","ButtonMenuItem","CloseIcon","Heading","IconButton","ModalBody","ModalContainer","ModalHeader","UIKitModalHeader","ModalTitle","useWeb3React","useState","WalletTransactions","WalletWrongNetwork","WalletView","WALLET_INFO","TRANSACTIONS","WRONG_NETWORK","LOW_NATIVE_BALANCE","gradientBubblegum","Tabs","dropdown","cardBorder","WalletModal","initialView","view","setView","lte","handleClick","newIndex","TabsComponent","scale","onItemClick","activeIndex","fullWidth","title","$minWidth","p","switchView","useAllSortedRecentTransactions","clearAllTransactions","isEmpty","chains","TransactionsContainer","sortedTransactions","hasTransactions","handleClearAll","minHeight","px","Object","entries","map","transactions","chainIdNumber","Number","find","c","values","textAlign","Link","MessageText","useSwitchNetwork","StyledLink","switchNetworkAsync","canSwitch","handleSwitchNetwork","external","MINIMUM_SEARCH_CHARACTERS","WEEKS_IN_YEAR","TOTAL_FEE","LP_HOLDERS_FEE","TREASURY_FEE","BUYBACK_FEE","PCS_V2_START","PCS_ETH_START","ONE_DAY_UNIX","ONE_HOUR_SECONDS","ITEMS_PER_INFO_TABLE_PAGE","TOKEN_BLACKLIST","ETH_TOKEN_BLACKLIST","SUPPORT_ONLY_BSC","SUPPORT_FARMS","BSC_TESTNET","ETHEREUM","GOERLI","SUPPORT_ZAP","useToast","useCallback","useMemo","replaceBrowserHistory","ConnectorNames","useAccount","useSwitchNetworkWallet","useSessionChainId","useSwitchNetworkLoading","useSwitchNetworkLocal","setSessionChainId","loading","setLoading","_switchNetworkAsync","isLoading","_isLoading","switchNetwork","_switchNetwork","switchNetworkArgs","toastError","isConnected","connector","switchNetworkLocal","then","ethereum","isTokenPocket","location","reload","catch","finally","Promise","WalletConnect","isSafePal","isMathWallet","BigNumber","CAKE","FAST_INTERVAL","EthersBigNumber","Zero","useSWR","BIG_ZERO","bscRpcProvider","useTokenContract","useSWRContract","useTokenBalance","tokenAddress","forceBSC","contract","key","connect","methodName","params","rest","refreshInterval","toString","useGetBnbBalance","mutate","getBalance","refresh","address","from","infoClient","infoClientETH","infoStableSwapClient","INFO_CLIENT","INFO_CLIENT_ETH","BLOCKS_CLIENT","BLOCKS_CLIENT_ETH","multiChainQueryMainToken","multiChainBlocksClient","multiChainStartTime","multiChainId","multiChainPaths","multiChainQueryClient","multiChainQueryEndPoint","multiChainScan","multiChainTokenBlackList","getMultiChainQueryEndPointWithStableSwap","chainName","isStableSwap","checkIsStableSwap","includes","useSelector","pickBy","mapValues","keyBy","orderBy","omitBy","addTransaction","useTransactionAdder","response","approval","claim","order","Error","useAllTransactions","state","s","transactionDetails","toLowerCase","allTransactions","trxDetails","isTransactionRecent","useAllActiveChainTransactions","useAllChainTransactions","useIsTransactionPending","transactionHash","Date","getTime","addedTime","useHasPendingApproval","spender","keys","some","newTransactionsFirst","a","b","usePendingTransactions","sortedRecentTransactions","txs","flatMap","trxObjects","filter","sort","pending","hasPendingTransactions","length","nonBscFarmPendingList","txid","lpAddress","pendingNumber","useNonBscFarmPendingTransaction","toLocaleLowerCase","BIT_QUERY","STABLESWAP_SUBGRAPH_CLIENT","GraphQLClient","INFO_CLIENT_WITH_CHAIN","getGQLHeaders","endpoint","process","env","NEXT_PUBLIC_SF_HEADER","sfHeader","undefined","headers","infoClientWithChain","infoServerClient","SF_HEADER","timeout","stableSwapClient","bitQueryServerClient","BIT_QUERY_HEADER","useEffect","useRef","createContext","createPortal","Toggle","ArrowForwardIcon","Farm","FarmUI","ScrollToTopButtonV2","Loading","SearchInput","Select","FlexLayout","PageHeader","NextLinkFromReactRouter","Page","useFarms","usePollFarmsWithUserData","usePriceCakeBusd","useCakeVaultUserData","useIntersectionObserver","getFarmApr","latinise","useUserFarmStakedOnly","useUserFarmsViewMode","ViewMode","useRouter","ToggleView","Table","BCakeBoosterCard","ControlContainer","mediaQueries","sm","FarmFlexWrapper","md","FarmH1","FarmH2","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","FinishedTextContainer","FinishedTextLink","NUMBER_OF_FARMS_VISIBLE","Farms","children","pathname","query","urlQuery","farmsLP","userDataLoaded","poolLength","regularCakePerBlock","cakePrice","_query","setQuery","normalizedUrlSearch","search","viewMode","setViewMode","sortOption","setSortOption","observerRef","isIntersecting","chosenFarmsLength","isArchived","isInactive","isActive","userDataReady","stakedOnly","setStakedOnly","boostedOnly","setBoostedOnly","activeFarms","farm","pid","multiplier","inactiveFarms","archivedFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","proxy","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","times","cakeRewardsApr","lpRewardsApr","poolWeight","apr","liquidity","lowercaseQuery","lpSymbol","handleChangeQuery","event","target","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenFarms","chosenFs","f","boosted","chosenFarmsMemoized","sortFarms","farms","slice","earnings","current","farmsCurrentlyVisible","handleSortOptionChange","option","FarmsContext","Provider","to","prefetch","bold","mr","idPrefix","onToggle","checked","onChange","prev","FarmTabButtons","hasStakeInFinishedFarms","options","label","onOptionChange","marginLeft","initialValue","placeholder","padding","TABLE","ref","document","body","AutoRenewIcon","CheckmarkIcon","LogoIcon","Modal","useTooltip","ToastDescriptionWithTx","useCatchTxError","useBCakeProxyContract","getFullDisplayBalance","useBCakeProxyContractAddress","useProxyStakedActions","StepperCircle","StepperText","StepperWrapper","finished","textSubtle","disabled","active","primary","FooterBox","InfoBox","background","InfoText","InfoIconBox","Steps","BCakeMigrateModal","lpContract","onUnStack","activatedState","setActivatedState","Unstake","setIsLoading","isApproved","setIsApproved","steps","Enable","Stake","migrationSteps","migrationStepsKeys","fullBalance","proxyAddress","onApprove","onDone","onStake","bCakeProxy","fetchWithCatchTxError","toastSuccess","targetRef","tooltip","tooltipVisible","placement","lpApproved","onStepChange","txHash","error","console","pb","step","index","parseInt","endIcon","ConnectWalletButton","useContext","HarvestActionContainer","ProxyHarvestActionContainer","ProxyStakedContainer","StakedContainer","BoostedAction","YieldBoosterStateContext","HarvestAction","StakeAction","Action","ActionContainer","CardActions","addLiquidityUrl","lpLabel","displayApr","token","quoteToken","vaultPid","shouldUseProxyFarm","isReady","tokenBalance","props","desc","actionBtn","farmPid","lpTotalSupply","userBalanceInFarm","plus","gt","mt","Tag","TokenPairImage","BoostedTag","FarmAuctionTag","CoreTag","StableFarmTag","Tags","Wrapper","MultiplierTag","CardHeading","isCommunityFarm","isStable","primaryToken","secondaryToken","flexDirection","split","Card","ExpandableSectionButton","BASE_ADD_LIQUIDITY_URL","getLiquidityUrlPathParts","ApyButton","CardActionsContainer","BoostedApr","DetailsSection","FarmCard","StyledCard","FarmCardInnerContainer","ExpandingWrapper","removed","originalLiquidity","showExpandableSection","setShowExpandableSection","totalValueFormatted","toNumber","toLocaleString","maximumFractionDigits","toUpperCase","replace","earnLabel","dual","liquidityUrlPathParts","quoteTokenAddress","isPromotedFarm","toggleExpandableSection","isCommunity","display","lpTokenPrice","strikethrough","useTooltipText","expanded","scanAddressLink","infoAddress","auctionHostingEndDate","TooltipText","useModal","Balance","getBalanceAmount","MultiChainHarvestModal","proxyCakeBalance","onReward","pendingTx","rawEarningsBalance","displayBalance","toFixed","ROUND_DOWN","earningsBusd","multipliedBy","tooltipBalance","onClickHarvestButton","onPresentNonBscHarvestModal","handleHarvest","earningsBigNumber","decorationColor","eq","decimals","unit","prefix","AddIcon","MinusIcon","BCakeCalculator","DEFAULT_TOKEN_DECIMAL","formatLpBalance","NonBscFarmStepType","YieldBoosterState","useFirstTimeCrossFarming","IconButtonWrapper","tokenAmountTotal","quoteTokenAmountTotal","onUnstake","router","fetchTxResponse","boosterState","bCakeMultiplier","setBCakeMultiplier","pendingFarm","isFirstTime","crossChainWarningText","nativeToken","isStakeReady","item","handleStake","amount","handleNonBscStake","amountValue","amountAsBigNumber","STAKE","handleUnstake","handleNonBscUnStake","UNSTAKE","handleApprove","bCakeCalculatorSlot","calculatorBalance","targetInputBalance","earningTokenPrice","onPresentDeposit","DepositModal","max","onConfirm","tokenName","lpPrice","showActiveBooster","ACTIVE","showCrossChainFarmWarning","onPresentWithdraw","WithdrawModal","renderStakingButtons","onPresentTransactionModal","onClickLoadingIcon","StakedLP","quoteTokenSymbol","tokenSymbol","pendingFarmLength","useMatchBreakpoints","css","keyframes","Apr","Liquidity","Multiplier","StakedAction","ActionContainerSection","ActionContent","ActionTitles","expandAnimation","collapseAnimation","Container","lg","StyledLinkExternal","StakeContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","proxyFarm","isDesktop","currentLanguage","locale","bsc","info","paddingLeft","month","day","year","useERC20","fetchFarmUserDataAsync","useHarvestFarm","pids","isZero","toolTipBalance","useApproveFarm","useStakeFarms","useUnstakeFarms","StyledActionContainer","useStakedActions","allowance","Staked","marginBottom","marginTop","input","xl","Label","ContentContainer","CellLayout","ChevronDownIcon","ArrowIcon","toggled","Details","actionPanelToggled","Amount","span","earned","textDisabled","Earned","useFarmUser","getBalanceNumber","TokenWrapper","rawStakedBalance","handleRenderFarming","pairContainer","getDisplayApr","Row","DesktopColumnSchema","ProxyFarmContainer","card","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","FarmTable","tableWrapperEl","columns","column","original","sortable","getFarmEarnings","existingEarnings","proxyEarnings","generateRow","initialActivity","row","originalValue","rowData","generateSortedRow","newRow","forEach","sortedRows","ReferenceElement","LiquidityWrapper","displayLiquidity","tooltipOffset","MultiplierWrapper","displayMultiplier","tooltipContent","my","createElement","useDelayedUnmount","MobileColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","hasSetInitialValue","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isMobile","isSmallerScreen","tableSchema","columnNames","handleRenderRow","columnIndex","indexOf","hideButton","cursor","colSpan","marginRight","verticalAlign","FlexGap","LightGreyCard","useFarmCProxyAddress","useNonBscHarvestFarm","farmFetcher","isWrongNetwork","cProxyAddress","isPending","isTestnet","network","isBscNetwork","handleCancel","maxWidth","icon","gap","lineHeight","_isEmpty","BoosterTooltip","ActionButton","description","button","btn","hideTimeout","useBoosterFarmHandlers","useGetBoostedMultiplier","useBoostMultiplier","CreateProxyButton","MigrateActionButton","refreshActivePool","refreshProxyAddress","isConfirming","handlers","boostMultiplierFromSC","boostedMultiplierFromFE","boostMultiplier","boostMultiplierDisplay","renderBtn","UNCONNECTED","NO_LOCKED","whiteSpace","LOCKED_END","NO_PROXY_CREATED","NO_MIGRATE","NO_LP","DEACTIVE","activate","ACTIVE_AND_NO_LP","deactivate","MAX","RocketIcon","isUndefinedOrNull","_toNumber","formatNumber","useGetBoostedAPR","boostedAprFromFE","boostedAprFromSC","msg","m","outline","startIcon","useFarmFromPid","handleUnstakeWithCallback","callback","onPresentMigrate","useBCakeFarmBoosterContract","useCallWithMarketGasPrice","farmBoosterContract","callWithMarketGasPrice","getCakeContract","useProxyCAKEBalance","cakeContract","refreshProxyCakeBalance","harvestFarm","stakeFarm","unstakeFarm","useApproveBoostProxyFarm","fetchCProxyAddress","multiCallChainId","getCrossFarmingSenderContract","crossFarmingAddress","firstTimeDeposit","is1st","useMasterchef","masterChefContract","useCrossFarmingProxy","harvest","FarmsPageLayout","CopyButton","Address","position","readOnly","margin","tooltipTop","CopyIcon","copyText","Tooltip","isTooltipDisplayed","tooltipRight","tooltipFontSize","contrast","invertedContrast","buttonColor","setIsTooltipDisplayed","displayTooltip","setTimeout","cb","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","appendChild","select","execCommand","removeChild","ChevronUpIcon","handleOnClick","aria-label","role","React","Svg","Icon","viewBox","path","d","fillRule","clipRule","fill","className"],"sourceRoot":""}