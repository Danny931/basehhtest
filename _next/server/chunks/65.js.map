{"version":3,"file":"65.js","mappings":"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","sources":["webpack://web/./src/views/Info/Tokens/index.tsx","webpack://web/./src/views/Info/components/TopTokenMovers/index.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/ArrowBack.tsx"],"sourcesContent":["import { useTranslation } from '@pancakeswap/localization'\nimport { Card, Heading, Text } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { useMemo } from 'react'\nimport { useAllTokenDataSWR, useTokenDatasSWR } from 'state/info/hooks'\nimport { useWatchlistTokens } from 'state/user/hooks'\nimport TokenTable from 'views/Info/components/InfoTables/TokensTable'\nimport TopTokenMovers from 'views/Info/components/TopTokenMovers'\n\nconst TokensOverview: React.FC<React.PropsWithChildren> = () => {\n  const { t } = useTranslation()\n\n  const allTokens = useAllTokenDataSWR()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((token) => token.data)\n      .filter((token) => token)\n  }, [allTokens])\n\n  const [savedTokens] = useWatchlistTokens()\n  const watchListTokens = useTokenDatasSWR(savedTokens)\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\">\n        {t('Your Watchlist')}\n      </Heading>\n      {watchListTokens.length > 0 ? (\n        <TokenTable tokenDatas={watchListTokens} />\n      ) : (\n        <Card>\n          <Text py=\"16px\" px=\"24px\">\n            {t('Saved tokens will appear here')}\n          </Text>\n        </Card>\n      )}\n      <TopTokenMovers />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\" id=\"info-tokens-title\">\n        {t('All Tokens')}\n      </Heading>\n      <TokenTable tokenDatas={formattedTokens} />\n    </Page>\n  )\n}\n\nexport default TokensOverview\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Box, Card, Flex, Text, NextLinkFromReactRouter } from '@pancakeswap/uikit'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useAllTokenDataSWR, useGetChainName, useMultiChainPath } from 'state/info/hooks'\nimport { TokenData } from 'state/info/types'\nimport styled from 'styled-components'\nimport { formatAmount } from 'utils/formatInfoNumbers'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport Percent from 'views/Info/components/Percent'\n\nconst CardWrapper = styled(NextLinkFromReactRouter)`\n  display: inline-block;\n  min-width: 190px;\n  margin-left: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst TopMoverCard = styled(Box)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  padding: 16px;\n`\n\nexport const ScrollableRow = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 16px 0;\n  white-space: nowrap;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst DataCard = ({ tokenData }: { tokenData: TokenData }) => {\n  const chainName = useGetChainName()\n  const chainPath = useMultiChainPath()\n  return (\n    <CardWrapper to={`/info${chainPath}/tokens/${tokenData.address}`}>\n      <TopMoverCard>\n        <Flex>\n          <Box width=\"32px\" height=\"32px\">\n            {/* wrapped in a box because of alignment issues between img and svg */}\n            <CurrencyLogo address={tokenData.address} size=\"32px\" chainName={chainName} />\n          </Box>\n          <Box ml=\"16px\">\n            <Text>{tokenData.symbol}</Text>\n            <Flex alignItems=\"center\">\n              <Text fontSize=\"14px\" mr=\"6px\" lineHeight=\"16px\">\n                ${formatAmount(tokenData.priceUSD)}\n              </Text>\n              <Percent fontSize=\"14px\" value={tokenData.priceUSDChange} />\n            </Flex>\n          </Box>\n        </Flex>\n      </TopMoverCard>\n    </CardWrapper>\n  )\n}\n\nconst TopTokenMovers: React.FC<React.PropsWithChildren> = () => {\n  const allTokens = useAllTokenDataSWR()\n  const { t } = useTranslation()\n\n  const topPriceIncrease = useMemo(() => {\n    return Object.values(allTokens)\n      .sort(({ data: a }, { data: b }) => {\n        // eslint-disable-next-line no-nested-ternary\n        return a && b ? (Math.abs(a?.priceUSDChange) > Math.abs(b?.priceUSDChange) ? -1 : 1) : -1\n      })\n      .slice(0, Math.min(20, Object.values(allTokens).length))\n      .filter((d) => d?.data?.exists)\n  }, [allTokens])\n\n  const increaseRef = useRef<HTMLDivElement>(null)\n  const moveLeftRef = useRef<boolean>(true)\n\n  useEffect(() => {\n    const scrollInterval = setInterval(() => {\n      if (increaseRef.current) {\n        if (increaseRef.current.scrollLeft === increaseRef.current.scrollWidth - increaseRef.current.clientWidth) {\n          moveLeftRef.current = false\n        } else if (increaseRef.current.scrollLeft === 0) {\n          moveLeftRef.current = true\n        }\n        increaseRef.current.scrollTo(\n          moveLeftRef.current ? increaseRef.current.scrollLeft + 1 : increaseRef.current.scrollLeft - 1,\n          0,\n        )\n      }\n    }, 30)\n\n    return () => {\n      clearInterval(scrollInterval)\n    }\n  }, [])\n\n  if (topPriceIncrease.length === 0 || !topPriceIncrease.some((entry) => entry.data)) {\n    return null\n  }\n\n  return (\n    <Card my=\"16px\">\n      <Text ml=\"16px\" mt=\"8px\">\n        {t('Top Movers')}\n      </Text>\n      <ScrollableRow ref={increaseRef}>\n        {topPriceIncrease.map((entry) =>\n          entry.data ? <DataCard key={`top-card-token-${entry.data?.address}`} tokenData={entry.data} /> : null,\n        )}\n      </ScrollableRow>\n    </Card>\n  )\n}\n\nexport default TopTokenMovers\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19 11H7.82998L12.71 6.12C13.1 5.73 13.1 5.09 12.71 4.7C12.32 4.31 11.69 4.31 11.3 4.7L4.70998 11.29C4.31998 11.68 4.31998 12.31 4.70998 12.7L11.3 19.29C11.69 19.68 12.32 19.68 12.71 19.29C13.1 18.9 13.1 18.27 12.71 17.88L7.82998 13H19C19.55 13 20 12.55 20 12C20 11.45 19.55 11 19 11Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n"],"names":["useTranslation","Card","Heading","Text","Page","useMemo","useAllTokenDataSWR","useTokenDatasSWR","useWatchlistTokens","TokenTable","TopTokenMovers","TokensOverview","t","allTokens","formattedTokens","Object","values","map","token","data","filter","savedTokens","watchListTokens","scale","mb","length","tokenDatas","py","px","mt","id","Box","Flex","NextLinkFromReactRouter","useEffect","useRef","useGetChainName","useMultiChainPath","styled","formatAmount","CurrencyLogo","Percent","CardWrapper","TopMoverCard","theme","colors","cardBorder","radii","card","ScrollableRow","div","DataCard","tokenData","chainName","chainPath","to","address","width","height","size","ml","symbol","alignItems","fontSize","mr","lineHeight","priceUSD","value","priceUSDChange","topPriceIncrease","sort","a","b","Math","abs","slice","min","d","exists","increaseRef","moveLeftRef","scrollInterval","setInterval","current","scrollLeft","scrollWidth","clientWidth","scrollTo","clearInterval","some","entry","my","ref","React","Svg","Icon","props","viewBox","path"],"sourceRoot":""}