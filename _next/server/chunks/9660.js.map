{"version":3,"file":"9660.js","mappings":"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AC/D;AACA;AACA;AACA,wEAAwE,SAAS;AACjF;AACA,IAAI;AACJ,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,eAAe;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4CAA4C;AACpE,uBAAuB,oDAAoD;AAC3E,sBAAsB,mDAAmD;AACzE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,mBAAO,CAAC,KAA4B;AAChE,sBAAsB,mBAAO,CAAC,KAAwB;AACtD,sBAAsB,mBAAO,CAAC,KAAyB;AACvD,2BAA2B,mBAAO,CAAC,KAAM;AACzC,qCAAqC,mBAAO,CAAC,IAAgB;AAC7D;AACA,wCAAwC,eAAe,GAAG,eAAe,GAAG,eAAe;AAC3F;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qEAAqE;AACrqCAAqC,mBAAO,CAAC,IAAgB;AAC7D,4BAA4B,mBAAO,CAAC,KAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,mBAAO,CAAC,IAAgB;AAC7D,4BAA4B,mBAAO,CAAC,KAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,kEAAkE,iCAAiC,IAAI;AACvG;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,iCAAiC,IAAI;AACxG;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,mBAAO,CAAC,IAAgB;AAC7D,4BAA4B,mBAAO,CAAC,KAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC,+CAA+C,iCAAiC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,mBAAO,CAAC,KAA4B;AAChE,qCAAqC,mBAAO,CAAC,IAAgB;AAC7D;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oEAAoE,SAAS,8BAA8B;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAO,CAAC,KAA4B;AAC5D;AACA,MAAM,CAqBL;;;;;;;;;;;;;;;;;;;;;ACnnBD;AACwD;AAC9B;AACkB;AACgB;AAC5D;AACA,yBAAyB,gDAAmB,CAAC,8CAAW;AACxD;AACA,GAAG,kBAAkB,gDAAmB;AACxC;AACA,yBAAyB,gDAAmB;AAC5C;AACA,SAAS,6CAAgB;AACzB;AACA;AACA,UAAU,YAAY,EAAE,iDAAU;AAClC,UAAU,QAAQ,EAAE,iDAAU;AAC9B,UAAU,gBAAgB,EAAE,yDAAe;AAC3C;AACA,eAAe,kEAAY;AAC3B,GAAG;AACH,yBAAyB,gDAAmB;AAC5C;AACA,GAAG;AACH;;AAEA;AAC6E;AAC7E;AACA,UAAU,QAAQ,EAAE,iDAAW;AAC/B,UAAU,gDAAgD,EAAE,iDAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACoC;AACqD;AACzF;AACA,UAAU,qBAAqB,EAAE,iDAAW;AAC5C,UAAU,yBAAyB,EAAE,qDAAmB;AACxD;AACA,sBAAsB,kDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAME","sources":["webpack://web/./src/config/constants/contracts.ts","webpack://web/./src/utils/addressHelpers.ts","webpack://web/../../packages/multicall/index.ts","webpack://web/../../packages/swap-sdk-core/dist/index.js","webpack://web/../../packages/swap-sdk/dist/index.js","webpack://web/../../packages/wagmi/dist/index.mjs"],"sourcesContent":["import { multicallAddresses } from '@pancakeswap/multicall'\n\nexport default {\n  masterChef: {\n    97: '0xB4A466911556e39210a6bB2FaECBB59E4eB7E43d',\n    56: '0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652',\n  },\n  masterChefV1: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: multicallAddresses,\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeBunnies: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetitionEaster: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  tradingCompetitionFanToken: {\n    56: '0xA8FECf847e28aa1Df39E995a45b7FCfb91b676d4',\n    97: '',\n  },\n  tradingCompetitionMobox: {\n    56: '0x1C5161CdB145dE35a8961F82b065fd1F75C3BaDf',\n    97: '',\n  },\n  tradingCompetitionMoD: {\n    56: '0xbDd9a61c67ee16c10f5E37b1D0c907a9EC959f33',\n    97: '',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x45c54210128a065de780C4B0Df3d16664f7f859e',\n    97: '0x683433ba14e8F26774D43D3E90DA6Dd7a22044Fe',\n  },\n  cakeFlexibleSideVault: {\n    56: '0x615e896A8C2CA8470A2e9dc2E9552998f8658Ea0',\n    97: '',\n  },\n  predictionsBNB: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  predictionsCAKE: {\n    56: '0x0E3A8078EDD2021dadcdE733C6b4a86E51EE8f07',\n    97: '',\n  },\n  chainlinkOracleBNB: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  chainlinkOracleCAKE: {\n    56: '0xB6064eD41d4f67e353768aA239cA86f4F73665a1',\n    97: '',\n  },\n  predictionsV1: {\n    56: '0x516ffd7d1e0ca40b1879935b2de87cb20fc1124b',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  bunnySpecialXmas: {\n    56: '0x59EdDF3c21509dA3b0aCCd7c5ccc596d930f4783',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0xF839286bD9D14b358496829F3BaB3145C16ad3C1',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\n  },\n  nftSale: {\n    56: '0x29fE7148636b7Ae0b1E53777b28dfbaA9327af8E',\n    97: '0xe486De509c5381cbdBF3e71F57D7F1f7570f5c46',\n  },\n  pancakeSquad: {\n    56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n    97: '0xfC0c3F11fDA72Cb9A56F28Ec8D44C0ae4B3ABF86',\n  },\n  potteryDraw: {\n    56: '0x01871991587d5671f3A2d4E2BcDC22F4E026396e',\n    97: '0xDB9D365b50E62fce747A90515D2bd1254A16EbB9',\n  },\n  // TODO: multi\n  zap: {\n    56: '0xD4c4a7C55c9f7B3c48bafb6E8643Ba79F42418dF',\n    97: '0xD85835207054F25620109bdc745EC1D1f84F04e1',\n  },\n  iCake: {\n    56: '0x3C458828D1622F5f4d526eb0d24Da8C4Eb8F07b1',\n    97: '',\n  },\n  bCakeFarmBooster: {\n    56: '0xE4FAa3Ef5A9708C894435B0F39c2B440936A3A52',\n    97: '',\n  },\n  bCakeFarmBoosterProxyFactory: {\n    56: '0x2C36221bF724c60E9FEE3dd44e2da8017a8EF3BA',\n    97: '',\n  },\n  nonBscVault: {\n    56: '0xE6c904424417D03451fADd6E3f5b6c26BcC43841', // Only for pass contracts test\n    1: '0x2e71B2688019ebdFDdE5A45e6921aaebb15b25fb',\n    5: '0xE6c904424417D03451fADd6E3f5b6c26BcC43841',\n  },\n  crossFarmingSender: {\n    56: '0x327d26dE30f92600620A99043034e0A5FD9402C8', // Only for pass contracts test\n    1: '0x8EA90Ef07f37c77137453C7A1B72B7886d51eCFb',\n    5: '0x327d26dE30f92600620A99043034e0A5FD9402C8',\n  },\n  crossFarmingReceiver: {\n    56: '0x0726a8C8206b9eC0AfB788df5adb36a8AEDB13c2',\n    97: '0xBab5d3B6bA24E185f216419f3ba07f03984bF983',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\nimport { VaultKey } from 'state/types'\n\nexport const getAddress = (address: Address, chainId?: number): string => {\n  return address[chainId] ? address[chainId] : address[ChainId.BSC]\n}\n\nexport const getMasterChefAddress = (chainId?: number) => {\n  return getAddress(addresses.masterChef, chainId)\n}\nexport const getMasterChefV1Address = () => {\n  return getAddress(addresses.masterChefV1)\n}\nexport const getMulticallAddress = (chainId?: number) => {\n  return getAddress(addresses.multiCall, chainId)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeBunniesAddress = () => {\n  return getAddress(addresses.pancakeBunnies)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getPredictionsV1Address = () => {\n  return getAddress(addresses.predictionsV1)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddressEaster = () => {\n  return getAddress(addresses.tradingCompetitionEaster)\n}\nexport const getTradingCompetitionAddressFanToken = () => {\n  return getAddress(addresses.tradingCompetitionFanToken)\n}\n\nexport const getTradingCompetitionAddressMobox = () => {\n  return getAddress(addresses.tradingCompetitionMobox)\n}\n\nexport const getTradingCompetitionAddressMoD = () => {\n  return getAddress(addresses.tradingCompetitionMoD)\n}\n\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\n\nexport const getVaultPoolAddress = (vaultKey: VaultKey) => {\n  if (!vaultKey) {\n    return null\n  }\n  return getAddress(addresses[vaultKey])\n}\n\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\n\nexport const getCakeFlexibleSideVaultAddress = () => {\n  return getAddress(addresses.cakeFlexibleSideVault)\n}\n\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getBunnySpecialXmasAddress = () => {\n  return getAddress(addresses.bunnySpecialXmas)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\n\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\nexport const getNftSaleAddress = () => {\n  return getAddress(addresses.nftSale)\n}\nexport const getPancakeSquadAddress = () => {\n  return getAddress(addresses.pancakeSquad)\n}\nexport const getPotteryDrawAddress = () => {\n  return getAddress(addresses.potteryDraw)\n}\n\nexport const getZapAddress = () => {\n  return getAddress(addresses.zap)\n}\nexport const getICakeAddress = () => {\n  return getAddress(addresses.iCake)\n}\n\nexport const getBCakeFarmBoosterAddress = () => {\n  return getAddress(addresses.bCakeFarmBooster)\n}\n\nexport const getBCakeFarmBoosterProxyFactoryAddress = () => {\n  return getAddress(addresses.bCakeFarmBoosterProxyFactory)\n}\n\nexport const getNonBscVaultAddress = (chainId?: number) => {\n  return getAddress(addresses.nonBscVault, chainId)\n}\n\nexport const getCrossFarmingSenderAddress = (chainId?: number) => {\n  return getAddress(addresses.crossFarmingSender, chainId)\n}\n\nexport const getCrossFarmingReceiverAddress = (chainId?: number) => {\n  return getAddress(addresses.crossFarmingReceiver, chainId)\n}\n","import { Interface } from '@ethersproject/abi'\nimport { CallOverrides, Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/providers'\nimport { ChainId } from '@pancakeswap/sdk'\nimport multicallAbi from './Multicall.json'\n\nexport const multicallAddresses = {\n  1: '0xcA11bde05977b3631167028862bE2a173976CA11',\n  4: '0xcA11bde05977b3631167028862bE2a173976CA11',\n  5: '0xcA11bde05977b3631167028862bE2a173976CA11',\n  56: '0xcA11bde05977b3631167028862bE2a173976CA11',\n  97: '0xcA11bde05977b3631167028862bE2a173976CA11',\n}\n\nexport const getMulticallContract = (chainId: ChainId, provider) => {\n  if (multicallAddresses[chainId]) {\n    return new Contract(multicallAddresses[chainId], multicallAbi, provider)\n  }\n  return null\n}\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nexport interface MulticallOptions extends CallOverrides {\n  requireSuccess?: boolean\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\ninterface MulticallV2Params {\n  abi: any[]\n  calls: Call[]\n  chainId?: ChainId\n  options?: MulticallOptions\n  provider?: Provider\n}\n\nexport interface CallV3 extends Call {\n  abi: any[]\n  allowFailure?: boolean\n}\n\ninterface MulticallV3Params {\n  calls: CallV3[]\n  chainId?: ChainId\n  allowFailure?: boolean\n  overrides?: CallOverrides\n}\n\nexport type MultiCallV2 = <T = any>(params: MulticallV2Params) => Promise<T>\nexport type MultiCall = <T = any>(abi: any[], calls: Call[], chainId?: ChainId) => Promise<T>\n\nexport function createMulticall<TProvider>(provider: ({ chainId }: { chainId?: number | undefined }) => TProvider) {\n  const multicall: MultiCall = async (abi: any[], calls: Call[], chainId = ChainId.BSC) => {\n    const multi = getMulticallContract(chainId, provider({ chainId }))\n    if (!multi) throw new Error(`Multicall Provider missing for ${chainId}`)\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => ({\n      target: call.address.toLowerCase(),\n      callData: itf.encodeFunctionData(call.name, call.params),\n    }))\n    const { returnData } = await multi.callStatic.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res as any\n  }\n\n  const multicallv2: MultiCallV2 = async ({ abi, calls, chainId = ChainId.BSC, options, provider: _provider }) => {\n    const { requireSuccess = true, ...overrides } = options || {}\n    const multi = getMulticallContract(chainId, _provider || provider({ chainId }))\n    if (!multi) throw new Error(`Multicall Provider missing for ${chainId}`)\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => ({\n      target: call.address.toLowerCase(),\n      callData: itf.encodeFunctionData(call.name, call.params),\n    }))\n\n    const returnData = await multi.callStatic.tryAggregate(requireSuccess, calldata, overrides)\n    const res = returnData.map((call, i) => {\n      const [result, data] = call\n      return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n    })\n\n    return res as any\n  }\n\n  const multicallv3 = async ({ calls, chainId = ChainId.BSC, allowFailure, overrides }: MulticallV3Params) => {\n    const multi = getMulticallContract(chainId, provider({ chainId }))\n    if (!multi) throw new Error(`Multicall Provider missing for ${chainId}`)\n    const _calls = calls.map(({ abi, address, name, params, allowFailure: _allowFailure }) => {\n      const contract = new Contract(address, abi)\n      const callData = contract.interface.encodeFunctionData(name, params ?? [])\n      if (!contract[name]) console.error(`${name} missing on ${address}`)\n      return {\n        target: address,\n        allowFailure: allowFailure || _allowFailure,\n        callData,\n      }\n    })\n\n    const result = await multi.callStatic.aggregate3([...[_calls], ...(overrides ? [overrides] : [])])\n\n    return result.map((call, i) => {\n      const { returnData, success } = call\n      if (!success || returnData === '0x') return null\n      const { address, abi, name } = calls[i]\n      const contract = new Contract(address, abi)\n      const decoded = contract.interface.decodeFunctionResult(name, returnData)\n      return decoded\n    })\n  }\n\n  return {\n    multicall,\n    multicallv2,\n    multicallv3,\n  }\n}\n","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  BaseCurrency: () => BaseCurrency,\n  CurrencyAmount: () => CurrencyAmount,\n  FIVE: () => FIVE,\n  Fraction: () => Fraction,\n  InsufficientInputAmountError: () => InsufficientInputAmountError,\n  InsufficientReservesError: () => InsufficientReservesError,\n  JSBI: () => import_jsbi7.default,\n  MINIMUM_LIQUIDITY: () => MINIMUM_LIQUIDITY,\n  MaxUint256: () => MaxUint256,\n  NativeCurrency: () => NativeCurrency,\n  ONE: () => ONE,\n  Percent: () => Percent,\n  Price: () => Price,\n  Rounding: () => Rounding,\n  TEN: () => TEN,\n  THREE: () => THREE,\n  TWO: () => TWO,\n  Token: () => Token,\n  TradeType: () => TradeType,\n  VMType: () => VMType,\n  VM_TYPE_MAXIMA: () => VM_TYPE_MAXIMA,\n  ZERO: () => ZERO,\n  _100: () => _100,\n  _10000: () => _10000,\n  _9975: () => _9975,\n  computePriceImpact: () => computePriceImpact,\n  sortedInsert: () => sortedInsert,\n  sqrt: () => sqrt,\n  validateVMTypeInstance: () => validateVMTypeInstance\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_jsbi7 = __toESM(require(\"jsbi\"));\n\n// src/constants.ts\nvar import_jsbi = __toESM(require(\"jsbi\"));\nvar TradeType = /* @__PURE__ */ ((TradeType2) => {\n  TradeType2[TradeType2[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n  TradeType2[TradeType2[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n  return TradeType2;\n})(TradeType || {});\nvar Rounding = /* @__PURE__ */ ((Rounding2) => {\n  Rounding2[Rounding2[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n  Rounding2[Rounding2[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n  Rounding2[Rounding2[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n  return Rounding2;\n})(Rounding || {});\nvar MINIMUM_LIQUIDITY = import_jsbi.default.BigInt(1e3);\nvar ZERO = import_jsbi.default.BigInt(0);\nvar ONE = import_jsbi.default.BigInt(1);\nvar TWO = import_jsbi.default.BigInt(2);\nvar THREE = import_jsbi.default.BigInt(3);\nvar FIVE = import_jsbi.default.BigInt(5);\nvar TEN = import_jsbi.default.BigInt(10);\nvar _100 = import_jsbi.default.BigInt(100);\nvar _9975 = import_jsbi.default.BigInt(9975);\nvar _10000 = import_jsbi.default.BigInt(1e4);\nvar MaxUint256 = import_jsbi.default.BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nvar VMType = /* @__PURE__ */ ((VMType2) => {\n  VMType2[\"uint8\"] = \"uint8\";\n  VMType2[\"uint256\"] = \"uint256\";\n  return VMType2;\n})(VMType || {});\nvar VM_TYPE_MAXIMA = {\n  [\"uint8\" /* uint8 */]: import_jsbi.default.BigInt(\"0xff\"),\n  [\"uint256\" /* uint256 */]: import_jsbi.default.BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\")\n};\n\n// src/baseCurrency.ts\nvar import_tiny_invariant = __toESM(require(\"tiny-invariant\"));\nvar BaseCurrency = class {\n  constructor(chainId, decimals, symbol, name) {\n    (0, import_tiny_invariant.default)(Number.isSafeInteger(chainId), \"CHAIN_ID\");\n    (0, import_tiny_invariant.default)(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), \"DECIMALS\");\n    this.chainId = chainId;\n    this.decimals = decimals;\n    this.symbol = symbol;\n    this.name = name;\n  }\n};\n\n// src/fractions/fraction.ts\nvar import_jsbi2 = __toESM(require(\"jsbi\"));\nvar import_tiny_invariant2 = __toESM(require(\"tiny-invariant\"));\nvar import_decimal = __toESM(require(\"decimal.js-light\"));\nvar import_big = __toESM(require(\"big.js\"));\nvar import_toformat = __toESM(require(\"toformat\"));\nvar Decimal = (0, import_toformat.default)(import_decimal.default);\nvar Big = (0, import_toformat.default)(import_big.default);\nvar toSignificantRounding = {\n  [0 /* ROUND_DOWN */]: Decimal.ROUND_DOWN,\n  [1 /* ROUND_HALF_UP */]: Decimal.ROUND_HALF_UP,\n  [2 /* ROUND_UP */]: Decimal.ROUND_UP\n};\nvar toFixedRounding = {\n  [0 /* ROUND_DOWN */]: 0 /* RoundDown */,\n  [1 /* ROUND_HALF_UP */]: 1 /* RoundHalfUp */,\n  [2 /* ROUND_UP */]: 3 /* RoundUp */\n};\nvar Fraction = class {\n  constructor(numerator, denominator = import_jsbi2.default.BigInt(1)) {\n    this.numerator = import_jsbi2.default.BigInt(numerator);\n    this.denominator = import_jsbi2.default.BigInt(denominator);\n  }\n  static tryParseFraction(fractionish) {\n    if (fractionish instanceof import_jsbi2.default || typeof fractionish === \"number\" || typeof fractionish === \"string\")\n      return new Fraction(fractionish);\n    if (\"numerator\" in fractionish && \"denominator\" in fractionish)\n      return fractionish;\n    throw new Error(\"Could not parse fraction\");\n  }\n  get quotient() {\n    return import_jsbi2.default.divide(this.numerator, this.denominator);\n  }\n  get remainder() {\n    return new Fraction(import_jsbi2.default.remainder(this.numerator, this.denominator), this.denominator);\n  }\n  invert() {\n    return new Fraction(this.denominator, this.numerator);\n  }\n  add(other) {\n    const otherParsed = Fraction.tryParseFraction(other);\n    if (import_jsbi2.default.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(import_jsbi2.default.add(this.numerator, otherParsed.numerator), this.denominator);\n    }\n    return new Fraction(import_jsbi2.default.add(import_jsbi2.default.multiply(this.numerator, otherParsed.denominator), import_jsbi2.default.multiply(otherParsed.numerator, this.denominator)), import_jsbi2.default.multiply(this.denominator, otherParsed.denominator));\n  }\n  subtract(other) {\n    const otherParsed = Fraction.tryParseFraction(other);\n    if (import_jsbi2.default.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(import_jsbi2.default.subtract(this.numerator, otherParsed.numerator), this.denominator);\n    }\n    return new Fraction(import_jsbi2.default.subtract(import_jsbi2.default.multiply(this.numerator, otherParsed.denominator), import_jsbi2.default.multiply(otherParsed.numerator, this.denominator)), import_jsbi2.default.multiply(this.denominator, otherParsed.denominator));\n  }\n  lessThan(other) {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return import_jsbi2.default.lessThan(import_jsbi2.default.multiply(this.numerator, otherParsed.denominator), import_jsbi2.default.multiply(otherParsed.numerator, this.denominator));\n  }\n  equalTo(other) {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return import_jsbi2.default.equal(import_jsbi2.default.multiply(this.numerator, otherParsed.denominator), import_jsbi2.default.multiply(otherParsed.numerator, this.denominator));\n  }\n  greaterThan(other) {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return import_jsbi2.default.greaterThan(import_jsbi2.default.multiply(this.numerator, otherParsed.denominator), import_jsbi2.default.multiply(otherParsed.numerator, this.denominator));\n  }\n  multiply(other) {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(import_jsbi2.default.multiply(this.numerator, otherParsed.numerator), import_jsbi2.default.multiply(this.denominator, otherParsed.denominator));\n  }\n  divide(other) {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(import_jsbi2.default.multiply(this.numerator, otherParsed.denominator), import_jsbi2.default.multiply(this.denominator, otherParsed.numerator));\n  }\n  toSignificant(significantDigits, format = { groupSeparator: \"\" }, rounding = 1 /* ROUND_HALF_UP */) {\n    (0, import_tiny_invariant2.default)(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`);\n    (0, import_tiny_invariant2.default)(significantDigits > 0, `${significantDigits} is not positive.`);\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] });\n    const quotient = new Decimal(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n  toFixed(decimalPlaces, format = { groupSeparator: \"\" }, rounding = 1 /* ROUND_HALF_UP */) {\n    (0, import_tiny_invariant2.default)(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`);\n    (0, import_tiny_invariant2.default)(decimalPlaces >= 0, `${decimalPlaces} is negative.`);\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n  get asFraction() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n};\n\n// src/fractions/percent.ts\nvar import_jsbi3 = __toESM(require(\"jsbi\"));\nvar ONE_HUNDRED = new Fraction(import_jsbi3.default.BigInt(100));\nfunction toPercent(fraction) {\n  return new Percent(fraction.numerator, fraction.denominator);\n}\nvar Percent = class extends Fraction {\n  constructor() {\n    super(...arguments);\n    this.isPercent = true;\n  }\n  add(other) {\n    return toPercent(super.add(other));\n  }\n  subtract(other) {\n    return toPercent(super.subtract(other));\n  }\n  multiply(other) {\n    return toPercent(super.multiply(other));\n  }\n  divide(other) {\n    return toPercent(super.divide(other));\n  }\n  toSignificant(significantDigits = 5, format, rounding) {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding);\n  }\n  toFixed(decimalPlaces = 2, format, rounding) {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);\n  }\n};\n\n// src/fractions/currencyAmount.ts\nvar import_tiny_invariant3 = __toESM(require(\"tiny-invariant\"));\nvar import_jsbi4 = __toESM(require(\"jsbi\"));\nvar import_big2 = __toESM(require(\"big.js\"));\nvar import_toformat2 = __toESM(require(\"toformat\"));\nvar Big2 = (0, import_toformat2.default)(import_big2.default);\nvar CurrencyAmount = class extends Fraction {\n  constructor(currency, numerator, denominator) {\n    super(numerator, denominator);\n    (0, import_tiny_invariant3.default)(import_jsbi4.default.lessThanOrEqual(this.quotient, MaxUint256), \"AMOUNT\");\n    this.currency = currency;\n    this.decimalScale = import_jsbi4.default.exponentiate(import_jsbi4.default.BigInt(10), import_jsbi4.default.BigInt(currency.decimals));\n  }\n  static fromRawAmount(currency, rawAmount) {\n    return new CurrencyAmount(currency, rawAmount);\n  }\n  static fromFractionalAmount(currency, numerator, denominator) {\n    return new CurrencyAmount(currency, numerator, denominator);\n  }\n  add(other) {\n    (0, import_tiny_invariant3.default)(this.currency.equals(other.currency), \"CURRENCY\");\n    const added = super.add(other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator);\n  }\n  subtract(other) {\n    (0, import_tiny_invariant3.default)(this.currency.equals(other.currency), \"CURRENCY\");\n    const subtracted = super.subtract(other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator);\n  }\n  multiply(other) {\n    const multiplied = super.multiply(other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator);\n  }\n  divide(other) {\n    const divided = super.divide(other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator);\n  }\n  toSignificant(significantDigits = 6, format, rounding = 0 /* ROUND_DOWN */) {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding);\n  }\n  toFixed(decimalPlaces = this.currency.decimals, format, rounding = 0 /* ROUND_DOWN */) {\n    (0, import_tiny_invariant3.default)(decimalPlaces <= this.currency.decimals, \"DECIMALS\");\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding);\n  }\n  toExact(format = { groupSeparator: \"\" }) {\n    Big2.DP = this.currency.decimals;\n    return new Big2(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format);\n  }\n  get wrapped() {\n    if (this.currency.isToken)\n      return this;\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator);\n  }\n};\n\n// src/fractions/price.ts\nvar import_jsbi5 = __toESM(require(\"jsbi\"));\nvar import_tiny_invariant4 = __toESM(require(\"tiny-invariant\"));\nvar Price = class extends Fraction {\n  constructor(...args) {\n    let baseCurrency;\n    let quoteCurrency;\n    let denominator;\n    let numerator;\n    if (args.length === 4) {\n      ;\n      [baseCurrency, quoteCurrency, denominator, numerator] = args;\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount);\n      [baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ];\n    }\n    super(numerator, denominator);\n    this.baseCurrency = baseCurrency;\n    this.quoteCurrency = quoteCurrency;\n    this.scalar = new Fraction(import_jsbi5.default.exponentiate(import_jsbi5.default.BigInt(10), import_jsbi5.default.BigInt(baseCurrency.decimals)), import_jsbi5.default.exponentiate(import_jsbi5.default.BigInt(10), import_jsbi5.default.BigInt(quoteCurrency.decimals)));\n  }\n  invert() {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n  }\n  multiply(other) {\n    (0, import_tiny_invariant4.default)(this.quoteCurrency.equals(other.baseCurrency), \"TOKEN\");\n    const fraction = super.multiply(other);\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);\n  }\n  quote(currencyAmount) {\n    (0, import_tiny_invariant4.default)(currencyAmount.currency.equals(this.baseCurrency), \"TOKEN\");\n    const result = super.multiply(currencyAmount);\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator);\n  }\n  get adjustedForDecimals() {\n    return super.multiply(this.scalar);\n  }\n  toSignificant(significantDigits = 6, format, rounding) {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding);\n  }\n  toFixed(decimalPlaces = 4, format, rounding) {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding);\n  }\n};\n\n// src/nativeCurrency.ts\nvar NativeCurrency = class extends BaseCurrency {\n  constructor() {\n    super(...arguments);\n    this.isNative = true;\n    this.isToken = false;\n  }\n};\n\n// src/token.ts\nvar import_tiny_invariant5 = __toESM(require(\"tiny-invariant\"));\nvar Token = class extends BaseCurrency {\n  constructor(chainId, address, decimals, symbol, name, projectLink) {\n    super(chainId, decimals, symbol, name);\n    this.isNative = false;\n    this.isToken = true;\n    this.address = address;\n    this.projectLink = projectLink;\n  }\n  equals(other) {\n    return other.isToken && this.chainId === other.chainId && this.address === other.address;\n  }\n  sortsBefore(other) {\n    (0, import_tiny_invariant5.default)(this.chainId === other.chainId, \"CHAIN_IDS\");\n    (0, import_tiny_invariant5.default)(this.address !== other.address, \"ADDRESSES\");\n    return this.address.toLowerCase() < other.address.toLowerCase();\n  }\n  get wrapped() {\n    return this;\n  }\n  get serialize() {\n    return {\n      address: this.address,\n      chainId: this.chainId,\n      decimals: this.decimals,\n      symbol: this.symbol,\n      name: this.name,\n      projectLink: this.projectLink\n    };\n  }\n};\n\n// src/errors.ts\nvar CAN_SET_PROTOTYPE = \"setPrototypeOf\" in Object;\nvar InsufficientReservesError = class extends Error {\n  constructor() {\n    super();\n    this.isInsufficientReservesError = true;\n    this.name = this.constructor.name;\n    if (CAN_SET_PROTOTYPE)\n      Object.setPrototypeOf(this, new.target.prototype);\n  }\n};\nvar InsufficientInputAmountError = class extends Error {\n  constructor() {\n    super();\n    this.isInsufficientInputAmountError = true;\n    this.name = this.constructor.name;\n    if (CAN_SET_PROTOTYPE)\n      Object.setPrototypeOf(this, new.target.prototype);\n  }\n};\n\n// src/utils.ts\nvar import_jsbi6 = __toESM(require(\"jsbi\"));\nvar import_tiny_invariant6 = __toESM(require(\"tiny-invariant\"));\nfunction validateVMTypeInstance(value, vmType) {\n  (0, import_tiny_invariant6.default)(import_jsbi6.default.greaterThanOrEqual(value, ZERO), `${value} is not a ${vmType}.`);\n  (0, import_tiny_invariant6.default)(import_jsbi6.default.lessThanOrEqual(value, VM_TYPE_MAXIMA[vmType]), `${value} is not a ${vmType}.`);\n}\nfunction sqrt(y) {\n  validateVMTypeInstance(y, \"uint256\" /* uint256 */);\n  let z = ZERO;\n  let x;\n  if (import_jsbi6.default.greaterThan(y, THREE)) {\n    z = y;\n    x = import_jsbi6.default.add(import_jsbi6.default.divide(y, TWO), ONE);\n    while (import_jsbi6.default.lessThan(x, z)) {\n      z = x;\n      x = import_jsbi6.default.divide(import_jsbi6.default.add(import_jsbi6.default.divide(y, x), x), TWO);\n    }\n  } else if (import_jsbi6.default.notEqual(y, ZERO)) {\n    z = ONE;\n  }\n  return z;\n}\nfunction sortedInsert(items, add, maxSize, comparator) {\n  (0, import_tiny_invariant6.default)(maxSize > 0, \"MAX_SIZE_ZERO\");\n  (0, import_tiny_invariant6.default)(items.length <= maxSize, \"ITEMS_SIZE\");\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    const isFull = items.length === maxSize;\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n    let lo = 0, hi = items.length;\n    while (lo < hi) {\n      const mid = lo + hi >>> 1;\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n    items.splice(lo, 0, add);\n    return isFull ? items.pop() : null;\n  }\n}\nfunction computePriceImpact(midPrice, inputAmount, outputAmount) {\n  const quotedOutputAmount = midPrice.quote(inputAmount);\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount);\n  return new Percent(priceImpact.numerator, priceImpact.denominator);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  BaseCurrency,\n  CurrencyAmount,\n  FIVE,\n  Fraction,\n  InsufficientInputAmountError,\n  InsufficientReservesError,\n  JSBI,\n  MINIMUM_LIQUIDITY,\n  MaxUint256,\n  NativeCurrency,\n  ONE,\n  Percent,\n  Price,\n  Rounding,\n  TEN,\n  THREE,\n  TWO,\n  Token,\n  TradeType,\n  VMType,\n  VM_TYPE_MAXIMA,\n  ZERO,\n  _100,\n  _10000,\n  _9975,\n  computePriceImpact,\n  sortedInsert,\n  sqrt,\n  validateVMTypeInstance\n});\n","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  ChainId: () => ChainId,\n  ERC20Token: () => ERC20Token,\n  FACTORY_ADDRESS: () => FACTORY_ADDRESS,\n  FACTORY_ADDRESS_MAP: () => FACTORY_ADDRESS_MAP,\n  INIT_CODE_HASH: () => INIT_CODE_HASH,\n  INIT_CODE_HASH_MAP: () => INIT_CODE_HASH_MAP,\n  JSBI: () => import_jsbi3.default,\n  NATIVE: () => NATIVE,\n  Native: () => Native,\n  Pair: () => Pair,\n  Route: () => Route,\n  Router: () => Router,\n  Trade: () => Trade,\n  WBNB: () => WBNB,\n  WETH9: () => WETH9,\n  WNATIVE: () => WNATIVE,\n  computePairAddress: () => computePairAddress,\n  computePriceImpact: () => computePriceImpact,\n  inputOutputComparator: () => inputOutputComparator,\n  tradeComparator: () => tradeComparator\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_jsbi3 = __toESM(require(\"jsbi\"));\n\n// src/entities/token.ts\nvar import_swap_sdk_core2 = require(\"@pancakeswap/swap-sdk-core\");\n\n// src/utils.ts\nvar import_address = require(\"@ethersproject/address\");\nvar import_jsbi = __toESM(require(\"jsbi\"));\nvar import_tiny_invariant = __toESM(require(\"tiny-invariant\"));\nvar import_tiny_warning = __toESM(require(\"tiny-warning\"));\nvar import_swap_sdk_core = require(\"@pancakeswap/swap-sdk-core\");\nfunction validateAndParseAddress(address) {\n  try {\n    const checksummedAddress = (0, import_address.getAddress)(address);\n    (0, import_tiny_warning.default)(address === checksummedAddress, `${address} is not checksummed.`);\n    return checksummedAddress;\n  } catch (error) {\n    (0, import_tiny_invariant.default)(false, `${address} is not a valid address.`);\n  }\n}\nfunction sortedInsert(items, add, maxSize, comparator) {\n  (0, import_tiny_invariant.default)(maxSize > 0, \"MAX_SIZE_ZERO\");\n  (0, import_tiny_invariant.default)(items.length <= maxSize, \"ITEMS_SIZE\");\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    const isFull = items.length === maxSize;\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n    let lo = 0, hi = items.length;\n    while (lo < hi) {\n      const mid = lo + hi >>> 1;\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n    items.splice(lo, 0, add);\n    return isFull ? items.pop() : null;\n  }\n}\nfunction computePriceImpact(midPrice, inputAmount, outputAmount) {\n  const quotedOutputAmount = midPrice.quote(inputAmount);\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount);\n  return new import_swap_sdk_core.Percent(priceImpact.numerator, priceImpact.denominator);\n}\n\n// src/entities/token.ts\nvar ERC20Token = class extends import_swap_sdk_core2.Token {\n  constructor(chainId, address, decimals, symbol, name, projectLink) {\n    super(chainId, validateAndParseAddress(address), decimals, symbol, name, projectLink);\n  }\n};\n\n// src/constants.ts\nvar ChainId = /* @__PURE__ */ ((ChainId2) => {\n  ChainId2[ChainId2[\"ETHEREUM\"] = 1] = \"ETHEREUM\";\n  ChainId2[ChainId2[\"RINKEBY\"] = 4] = \"RINKEBY\";\n  ChainId2[ChainId2[\"GOERLI\"] = 5] = \"GOERLI\";\n  ChainId2[ChainId2[\"BSC\"] = 56] = \"BSC\";\n  ChainId2[ChainId2[\"BSC_TESTNET\"] = 8453] = \"BSC_TESTNET\";\n  return ChainId2;\n})(ChainId || {});\nvar FACTORY_ADDRESS = \"0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73\";\nvar FACTORY_ADDRESS_ETH = \"0x1097053Fd2ea711dad45caCcc45EfF7548fCB362\";\nvar FACTORY_ADDRESS_MAP = {\n  [1 /* ETHEREUM */]: FACTORY_ADDRESS_ETH,\n  [4 /* RINKEBY */]: FACTORY_ADDRESS_ETH,\n  [5 /* GOERLI */]: FACTORY_ADDRESS_ETH,\n  [56 /* BSC */]: FACTORY_ADDRESS,\n  [8453 /* BSC_TESTNET */]: \"0xC0Cd06C6b1Eb550Dcbb8A2414025b379352D530C\"\n};\nvar INIT_CODE_HASH = \"0x00fb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5\";\nvar INIT_CODE_HASH_ETH = \"0x57224589c67f3f30a6b0d7a1b54cf3153ab84563bc609ef41dfb34f8b2974d2d\";\nvar INIT_CODE_HASH_MAP = {\n  [1 /* ETHEREUM */]: INIT_CODE_HASH_ETH,\n  [4 /* RINKEBY */]: INIT_CODE_HASH_ETH,\n  [5 /* GOERLI */]: INIT_CODE_HASH_ETH,\n  [56 /* BSC */]: INIT_CODE_HASH,\n  [8453 /* BSC_TESTNET */]: \"0xfeed6e61271f297843ab9183051b7331de901ca9e3509908ffd95e765d55af0c\"\n};\nvar WETH9 = {\n  [1 /* ETHEREUM */]: new ERC20Token(1 /* ETHEREUM */, \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", 18, \"WETH\", \"Wrapped Ether\", \"https://weth.io\"),\n  [4 /* RINKEBY */]: new ERC20Token(4 /* RINKEBY */, \"0xc778417E063141139Fce010982780140Aa0cD5Ab\", 18, \"WETH\", \"Wrapped Ether\", \"https://weth.io\"),\n  [5 /* GOERLI */]: new ERC20Token(5 /* GOERLI */, \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\", 18, \"WETH\", \"Wrapped Ether\", \"https://weth.io\")\n};\nvar WBNB = {\n  [1 /* ETHEREUM */]: new ERC20Token(1 /* ETHEREUM */, \"0x418D75f65a02b3D53B2418FB8E1fe493759c7605\", 18, \"WBNB\", \"Wrapped BNB\", \"https://www.binance.org\"),\n  [56 /* BSC */]: new ERC20Token(56 /* BSC */, \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\", 18, \"WBNB\", \"Wrapped BNB\", \"https://www.binance.org\"),\n  [8453 /* BSC_TESTNET */]: new ERC20Token(8453 /* BSC_TESTNET */, \"0x75e09819777137e6928Aa4BC836Ac1EaDB235e79\", 18, \"WETH\", \"Wrapped Ether\", \"https://weth.io\")\n};\nvar WNATIVE = {\n  [1 /* ETHEREUM */]: WETH9[1 /* ETHEREUM */],\n  [4 /* RINKEBY */]: WETH9[4 /* RINKEBY */],\n  [5 /* GOERLI */]: WETH9[5 /* GOERLI */],\n  [56 /* BSC */]: WBNB[56 /* BSC */],\n  [8453 /* BSC_TESTNET */]: WBNB[8453 /* BSC_TESTNET */]\n};\nvar NATIVE = {\n  [1 /* ETHEREUM */]: { name: \"Ether\", symbol: \"ETH\", decimals: 18 },\n  [4 /* RINKEBY */]: { name: \"Rinkeby Ether\", symbol: \"RIN\", decimals: 18 },\n  [5 /* GOERLI */]: { name: \"Goerli Ether\", symbol: \"GOR\", decimals: 18 },\n  [56 /* BSC */]: {\n    name: \"Binance Chain Native Token\",\n    symbol: \"BNB\",\n    decimals: 18\n  },\n  [8453 /* BSC_TESTNET */]: {\n    name: \"Base Chain Native Token\",\n    symbol: \"ETH\",\n    decimals: 18\n  }\n};\n\n// src/entities/pair.ts\nvar import_swap_sdk_core3 = require(\"@pancakeswap/swap-sdk-core\");\nvar import_address2 = require(\"@ethersproject/address\");\nvar import_solidity = require(\"@ethersproject/solidity\");\nvar import_jsbi2 = __toESM(require(\"jsbi\"));\nvar import_tiny_invariant2 = __toESM(require(\"tiny-invariant\"));\nvar PAIR_ADDRESS_CACHE = {};\nvar composeKey = (token0, token1) => `${token0.chainId}-${token0.address}-${token1.address}`;\nvar computePairAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB\n}) => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n  const key = composeKey(token0, token1);\n  if ((PAIR_ADDRESS_CACHE == null ? void 0 : PAIR_ADDRESS_CACHE[key]) === void 0) {\n    PAIR_ADDRESS_CACHE = {\n      ...PAIR_ADDRESS_CACHE,\n      [key]: (0, import_address2.getCreate2Address)(factoryAddress, (0, import_solidity.keccak256)([\"bytes\"], [(0, import_solidity.pack)([\"address\", \"address\"], [token0.address, token1.address])]), INIT_CODE_HASH_MAP[token0.chainId])\n    };\n  }\n  return PAIR_ADDRESS_CACHE[key];\n};\nvar Pair = class {\n  static getAddress(tokenA, tokenB) {\n    return computePairAddress({ factoryAddress: FACTORY_ADDRESS_MAP[tokenA.chainId], tokenA, tokenB });\n  }\n  constructor(currencyAmountA, tokenAmountB) {\n    const tokenAmounts = currencyAmountA.currency.sortsBefore(tokenAmountB.currency) ? [currencyAmountA, tokenAmountB] : [tokenAmountB, currencyAmountA];\n    this.liquidityToken = new ERC20Token(tokenAmounts[0].currency.chainId, Pair.getAddress(tokenAmounts[0].currency, tokenAmounts[1].currency), 18, \"Cake-LP\", \"Pancake LPs\");\n    this.tokenAmounts = tokenAmounts;\n  }\n  involvesToken(token) {\n    return token.equals(this.token0) || token.equals(this.token1);\n  }\n  get token0Price() {\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0]);\n    return new import_swap_sdk_core3.Price(this.token0, this.token1, result.denominator, result.numerator);\n  }\n  get token1Price() {\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1]);\n    return new import_swap_sdk_core3.Price(this.token1, this.token0, result.denominator, result.numerator);\n  }\n  priceOf(token) {\n    (0, import_tiny_invariant2.default)(this.involvesToken(token), \"TOKEN\");\n    return token.equals(this.token0) ? this.token0Price : this.token1Price;\n  }\n  get chainId() {\n    return this.token0.chainId;\n  }\n  get token0() {\n    return this.tokenAmounts[0].currency;\n  }\n  get token1() {\n    return this.tokenAmounts[1].currency;\n  }\n  get reserve0() {\n    return this.tokenAmounts[0];\n  }\n  get reserve1() {\n    return this.tokenAmounts[1];\n  }\n  reserveOf(token) {\n    (0, import_tiny_invariant2.default)(this.involvesToken(token), \"TOKEN\");\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1;\n  }\n  getOutputAmount(inputAmount) {\n    (0, import_tiny_invariant2.default)(this.involvesToken(inputAmount.currency), \"TOKEN\");\n    if (import_jsbi2.default.equal(this.reserve0.quotient, import_swap_sdk_core3.ZERO) || import_jsbi2.default.equal(this.reserve1.quotient, import_swap_sdk_core3.ZERO)) {\n      throw new import_swap_sdk_core3.InsufficientReservesError();\n    }\n    const inputReserve = this.reserveOf(inputAmount.currency);\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0);\n    const inputAmountWithFee = import_jsbi2.default.multiply(inputAmount.quotient, import_swap_sdk_core3._9975);\n    const numerator = import_jsbi2.default.multiply(inputAmountWithFee, outputReserve.quotient);\n    const denominator = import_jsbi2.default.add(import_jsbi2.default.multiply(inputReserve.quotient, import_swap_sdk_core3._10000), inputAmountWithFee);\n    const outputAmount = import_swap_sdk_core3.CurrencyAmount.fromRawAmount(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0, import_jsbi2.default.divide(numerator, denominator));\n    if (import_jsbi2.default.equal(outputAmount.quotient, import_swap_sdk_core3.ZERO)) {\n      throw new import_swap_sdk_core3.InsufficientInputAmountError();\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))];\n  }\n  getInputAmount(outputAmount) {\n    (0, import_tiny_invariant2.default)(this.involvesToken(outputAmount.currency), \"TOKEN\");\n    if (import_jsbi2.default.equal(this.reserve0.quotient, import_swap_sdk_core3.ZERO) || import_jsbi2.default.equal(this.reserve1.quotient, import_swap_sdk_core3.ZERO) || import_jsbi2.default.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)) {\n      throw new import_swap_sdk_core3.InsufficientReservesError();\n    }\n    const outputReserve = this.reserveOf(outputAmount.currency);\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0);\n    const numerator = import_jsbi2.default.multiply(import_jsbi2.default.multiply(inputReserve.quotient, outputAmount.quotient), import_swap_sdk_core3._10000);\n    const denominator = import_jsbi2.default.multiply(import_jsbi2.default.subtract(outputReserve.quotient, outputAmount.quotient), import_swap_sdk_core3._9975);\n    const inputAmount = import_swap_sdk_core3.CurrencyAmount.fromRawAmount(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0, import_jsbi2.default.add(import_jsbi2.default.divide(numerator, denominator), import_swap_sdk_core3.ONE));\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))];\n  }\n  getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB) {\n    (0, import_tiny_invariant2.default)(totalSupply.currency.equals(this.liquidityToken), \"LIQUIDITY\");\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) ? [tokenAmountA, tokenAmountB] : [tokenAmountB, tokenAmountA];\n    (0, import_tiny_invariant2.default)(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), \"TOKEN\");\n    let liquidity;\n    if (import_jsbi2.default.equal(totalSupply.quotient, import_swap_sdk_core3.ZERO)) {\n      liquidity = import_jsbi2.default.subtract((0, import_swap_sdk_core3.sqrt)(import_jsbi2.default.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)), import_swap_sdk_core3.MINIMUM_LIQUIDITY);\n    } else {\n      const amount0 = import_jsbi2.default.divide(import_jsbi2.default.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient);\n      const amount1 = import_jsbi2.default.divide(import_jsbi2.default.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient);\n      liquidity = import_jsbi2.default.lessThanOrEqual(amount0, amount1) ? amount0 : amount1;\n    }\n    if (!import_jsbi2.default.greaterThan(liquidity, import_swap_sdk_core3.ZERO)) {\n      throw new import_swap_sdk_core3.InsufficientInputAmountError();\n    }\n    return import_swap_sdk_core3.CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity);\n  }\n  getLiquidityValue(token, totalSupply, liquidity, feeOn = false, kLast) {\n    (0, import_tiny_invariant2.default)(this.involvesToken(token), \"TOKEN\");\n    (0, import_tiny_invariant2.default)(totalSupply.currency.equals(this.liquidityToken), \"TOTAL_SUPPLY\");\n    (0, import_tiny_invariant2.default)(liquidity.currency.equals(this.liquidityToken), \"LIQUIDITY\");\n    (0, import_tiny_invariant2.default)(import_jsbi2.default.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), \"LIQUIDITY\");\n    let totalSupplyAdjusted;\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply;\n    } else {\n      (0, import_tiny_invariant2.default)(!!kLast, \"K_LAST\");\n      const kLastParsed = import_jsbi2.default.BigInt(kLast);\n      if (!import_jsbi2.default.equal(kLastParsed, import_swap_sdk_core3.ZERO)) {\n        const rootK = (0, import_swap_sdk_core3.sqrt)(import_jsbi2.default.multiply(this.reserve0.quotient, this.reserve1.quotient));\n        const rootKLast = (0, import_swap_sdk_core3.sqrt)(kLastParsed);\n        if (import_jsbi2.default.greaterThan(rootK, rootKLast)) {\n          const numerator = import_jsbi2.default.multiply(totalSupply.quotient, import_jsbi2.default.subtract(rootK, rootKLast));\n          const denominator = import_jsbi2.default.add(import_jsbi2.default.multiply(rootK, import_swap_sdk_core3.FIVE), rootKLast);\n          const feeLiquidity = import_jsbi2.default.divide(numerator, denominator);\n          totalSupplyAdjusted = totalSupply.add(import_swap_sdk_core3.CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity));\n        } else {\n          totalSupplyAdjusted = totalSupply;\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply;\n      }\n    }\n    return import_swap_sdk_core3.CurrencyAmount.fromRawAmount(token, import_jsbi2.default.divide(import_jsbi2.default.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient));\n  }\n};\n\n// src/entities/route.ts\nvar import_tiny_invariant3 = __toESM(require(\"tiny-invariant\"));\nvar import_swap_sdk_core4 = require(\"@pancakeswap/swap-sdk-core\");\nvar Route = class {\n  constructor(pairs, input, output) {\n    this._midPrice = null;\n    (0, import_tiny_invariant3.default)(pairs.length > 0, \"PAIRS\");\n    const chainId = pairs[0].chainId;\n    (0, import_tiny_invariant3.default)(pairs.every((pair) => pair.chainId === chainId), \"CHAIN_IDS\");\n    const wrappedInput = input.wrapped;\n    (0, import_tiny_invariant3.default)(pairs[0].involvesToken(wrappedInput), \"INPUT\");\n    (0, import_tiny_invariant3.default)(typeof output === \"undefined\" || pairs[pairs.length - 1].involvesToken(output.wrapped), \"OUTPUT\");\n    const path = [wrappedInput];\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i];\n      (0, import_tiny_invariant3.default)(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), \"PATH\");\n      const output2 = currentInput.equals(pair.token0) ? pair.token1 : pair.token0;\n      path.push(output2);\n    }\n    this.pairs = pairs;\n    this.path = path;\n    this.input = input;\n    this.output = output;\n  }\n  get midPrice() {\n    if (this._midPrice !== null)\n      return this._midPrice;\n    const prices = [];\n    for (const [i, pair] of this.pairs.entries()) {\n      prices.push(this.path[i].equals(pair.token0) ? new import_swap_sdk_core4.Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient) : new import_swap_sdk_core4.Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient));\n    }\n    const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0]);\n    return this._midPrice = new import_swap_sdk_core4.Price(this.input, this.output, reduced.denominator, reduced.numerator);\n  }\n  get chainId() {\n    return this.pairs[0].chainId;\n  }\n};\n\n// src/entities/trade.ts\nvar import_tiny_invariant4 = __toESM(require(\"tiny-invariant\"));\nvar import_swap_sdk_core5 = require(\"@pancakeswap/swap-sdk-core\");\nfunction inputOutputComparator(a, b) {\n  (0, import_tiny_invariant4.default)(a.inputAmount.currency.equals(b.inputAmount.currency), \"INPUT_CURRENCY\");\n  (0, import_tiny_invariant4.default)(a.outputAmount.currency.equals(b.outputAmount.currency), \"OUTPUT_CURRENCY\");\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0;\n    }\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\nfunction tradeComparator(a, b) {\n  const ioComp = inputOutputComparator(a, b);\n  if (ioComp !== 0) {\n    return ioComp;\n  }\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1;\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1;\n  }\n  return a.route.path.length - b.route.path.length;\n}\nvar Trade = class {\n  static exactIn(route, amountIn) {\n    return new Trade(route, amountIn, import_swap_sdk_core5.TradeType.EXACT_INPUT);\n  }\n  static exactOut(route, amountOut) {\n    return new Trade(route, amountOut, import_swap_sdk_core5.TradeType.EXACT_OUTPUT);\n  }\n  constructor(route, amount, tradeType) {\n    this.route = route;\n    this.tradeType = tradeType;\n    const tokenAmounts = new Array(route.path.length);\n    if (tradeType === import_swap_sdk_core5.TradeType.EXACT_INPUT) {\n      (0, import_tiny_invariant4.default)(amount.currency.equals(route.input), \"INPUT\");\n      tokenAmounts[0] = amount.wrapped;\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i];\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i]);\n        tokenAmounts[i + 1] = outputAmount;\n      }\n      this.inputAmount = import_swap_sdk_core5.CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator);\n      this.outputAmount = import_swap_sdk_core5.CurrencyAmount.fromFractionalAmount(route.output, tokenAmounts[tokenAmounts.length - 1].numerator, tokenAmounts[tokenAmounts.length - 1].denominator);\n    } else {\n      (0, import_tiny_invariant4.default)(amount.currency.equals(route.output), \"OUTPUT\");\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped;\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1];\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i]);\n        tokenAmounts[i - 1] = inputAmount;\n      }\n      this.inputAmount = import_swap_sdk_core5.CurrencyAmount.fromFractionalAmount(route.input, tokenAmounts[0].numerator, tokenAmounts[0].denominator);\n      this.outputAmount = import_swap_sdk_core5.CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator);\n    }\n    this.executionPrice = new import_swap_sdk_core5.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient);\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount);\n  }\n  minimumAmountOut(slippageTolerance) {\n    (0, import_tiny_invariant4.default)(!slippageTolerance.lessThan(import_swap_sdk_core5.ZERO), \"SLIPPAGE_TOLERANCE\");\n    if (this.tradeType === import_swap_sdk_core5.TradeType.EXACT_OUTPUT) {\n      return this.outputAmount;\n    } else {\n      const slippageAdjustedAmountOut = new import_swap_sdk_core5.Fraction(import_swap_sdk_core5.ONE).add(slippageTolerance).invert().multiply(this.outputAmount.quotient).quotient;\n      return import_swap_sdk_core5.CurrencyAmount.fromRawAmount(this.outputAmount.currency, slippageAdjustedAmountOut);\n    }\n  }\n  maximumAmountIn(slippageTolerance) {\n    (0, import_tiny_invariant4.default)(!slippageTolerance.lessThan(import_swap_sdk_core5.ZERO), \"SLIPPAGE_TOLERANCE\");\n    if (this.tradeType === import_swap_sdk_core5.TradeType.EXACT_INPUT) {\n      return this.inputAmount;\n    } else {\n      const slippageAdjustedAmountIn = new import_swap_sdk_core5.Fraction(import_swap_sdk_core5.ONE).add(slippageTolerance).multiply(this.inputAmount.quotient).quotient;\n      return import_swap_sdk_core5.CurrencyAmount.fromRawAmount(this.inputAmount.currency, slippageAdjustedAmountIn);\n    }\n  }\n  static bestTradeExactIn(pairs, currencyAmountIn, currencyOut, { maxNumResults = 3, maxHops = 3 } = {}, currentPairs = [], nextAmountIn = currencyAmountIn, bestTrades = []) {\n    (0, import_tiny_invariant4.default)(pairs.length > 0, \"PAIRS\");\n    (0, import_tiny_invariant4.default)(maxHops > 0, \"MAX_HOPS\");\n    (0, import_tiny_invariant4.default)(currencyAmountIn === nextAmountIn || currentPairs.length > 0, \"INVALID_RECURSION\");\n    const amountIn = nextAmountIn.wrapped;\n    const tokenOut = currencyOut.wrapped;\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i];\n      if (!pair.token0.equals(amountIn.currency) && !pair.token1.equals(amountIn.currency))\n        continue;\n      if (pair.reserve0.equalTo(import_swap_sdk_core5.ZERO) || pair.reserve1.equalTo(import_swap_sdk_core5.ZERO))\n        continue;\n      let amountOut;\n      try {\n        ;\n        [amountOut] = pair.getOutputAmount(amountIn);\n      } catch (error) {\n        if (error.isInsufficientInputAmountError) {\n          continue;\n        }\n        throw error;\n      }\n      if (amountOut.currency.equals(tokenOut)) {\n        sortedInsert(bestTrades, new Trade(new Route([...currentPairs, pair], currencyAmountIn.currency, currencyOut), currencyAmountIn, import_swap_sdk_core5.TradeType.EXACT_INPUT), maxNumResults, tradeComparator);\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length));\n        Trade.bestTradeExactIn(pairsExcludingThisPair, currencyAmountIn, currencyOut, {\n          maxNumResults,\n          maxHops: maxHops - 1\n        }, [...currentPairs, pair], amountOut, bestTrades);\n      }\n    }\n    return bestTrades;\n  }\n  worstExecutionPrice(slippageTolerance) {\n    return new import_swap_sdk_core5.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(slippageTolerance).quotient, this.minimumAmountOut(slippageTolerance).quotient);\n  }\n  static bestTradeExactOut(pairs, currencyIn, currencyAmountOut, { maxNumResults = 3, maxHops = 3 } = {}, currentPairs = [], nextAmountOut = currencyAmountOut, bestTrades = []) {\n    (0, import_tiny_invariant4.default)(pairs.length > 0, \"PAIRS\");\n    (0, import_tiny_invariant4.default)(maxHops > 0, \"MAX_HOPS\");\n    (0, import_tiny_invariant4.default)(currencyAmountOut === nextAmountOut || currentPairs.length > 0, \"INVALID_RECURSION\");\n    const amountOut = nextAmountOut.wrapped;\n    const tokenIn = currencyIn.wrapped;\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i];\n      if (!pair.token0.equals(amountOut.currency) && !pair.token1.equals(amountOut.currency))\n        continue;\n      if (pair.reserve0.equalTo(import_swap_sdk_core5.ZERO) || pair.reserve1.equalTo(import_swap_sdk_core5.ZERO))\n        continue;\n      let amountIn;\n      try {\n        ;\n        [amountIn] = pair.getInputAmount(amountOut);\n      } catch (error) {\n        if (error.isInsufficientReservesError) {\n          continue;\n        }\n        throw error;\n      }\n      if (amountIn.currency.equals(tokenIn)) {\n        sortedInsert(bestTrades, new Trade(new Route([pair, ...currentPairs], currencyIn, currencyAmountOut.currency), currencyAmountOut, import_swap_sdk_core5.TradeType.EXACT_OUTPUT), maxNumResults, tradeComparator);\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length));\n        Trade.bestTradeExactOut(pairsExcludingThisPair, currencyIn, currencyAmountOut, {\n          maxNumResults,\n          maxHops: maxHops - 1\n        }, [pair, ...currentPairs], amountIn, bestTrades);\n      }\n    }\n    return bestTrades;\n  }\n};\n\n// src/entities/native.ts\nvar import_tiny_invariant5 = __toESM(require(\"tiny-invariant\"));\nvar import_swap_sdk_core6 = require(\"@pancakeswap/swap-sdk-core\");\nvar _Native = class extends import_swap_sdk_core6.NativeCurrency {\n  constructor({\n    chainId,\n    decimals,\n    name,\n    symbol\n  }) {\n    super(chainId, decimals, symbol, name);\n  }\n  get wrapped() {\n    const wnative = WNATIVE[this.chainId];\n    (0, import_tiny_invariant5.default)(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n  static onChain(chainId) {\n    if (chainId in this.cache) {\n      return this.cache[chainId];\n    }\n    (0, import_tiny_invariant5.default)(!!NATIVE[chainId], \"NATIVE_CURRENCY\");\n    const { decimals, name, symbol } = NATIVE[chainId];\n    return this.cache[chainId] = new _Native({ chainId, decimals, symbol, name });\n  }\n  equals(other) {\n    return other.isNative && other.chainId === this.chainId;\n  }\n};\nvar Native = _Native;\nNative.cache = {};\n\n// src/router.ts\nvar import_swap_sdk_core7 = require(\"@pancakeswap/swap-sdk-core\");\nvar import_tiny_invariant6 = __toESM(require(\"tiny-invariant\"));\nfunction toHex(currencyAmount) {\n  return `0x${currencyAmount.quotient.toString(16)}`;\n}\nvar ZERO_HEX = \"0x0\";\nvar Router = class {\n  constructor() {\n  }\n  static swapCallParameters(trade, options) {\n    const etherIn = trade.inputAmount.currency.isNative;\n    const etherOut = trade.outputAmount.currency.isNative;\n    (0, import_tiny_invariant6.default)(!(etherIn && etherOut), \"ETHER_IN_OUT\");\n    (0, import_tiny_invariant6.default)(!(\"ttl\" in options) || options.ttl > 0, \"TTL\");\n    const to = validateAndParseAddress(options.recipient);\n    const amountIn = toHex(trade.maximumAmountIn(options.allowedSlippage));\n    const amountOut = toHex(trade.minimumAmountOut(options.allowedSlippage));\n    const path = trade.route.path.map((token) => token.address);\n    const deadline = \"ttl\" in options ? `0x${(Math.floor(new Date().getTime() / 1e3) + options.ttl).toString(16)}` : `0x${options.deadline.toString(16)}`;\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer);\n    let methodName;\n    let args;\n    let value;\n    switch (trade.tradeType) {\n      case import_swap_sdk_core7.TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? \"swapExactETHForTokensSupportingFeeOnTransferTokens\" : \"swapExactETHForTokens\";\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? \"swapExactTokensForETHSupportingFeeOnTransferTokens\" : \"swapExactTokensForETH\";\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = useFeeOnTransfer ? \"swapExactTokensForTokensSupportingFeeOnTransferTokens\" : \"swapExactTokensForTokens\";\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        }\n        break;\n      case import_swap_sdk_core7.TradeType.EXACT_OUTPUT:\n        (0, import_tiny_invariant6.default)(!useFeeOnTransfer, \"EXACT_OUT_FOT\");\n        if (etherIn) {\n          methodName = \"swapETHForExactTokens\";\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = \"swapTokensForExactETH\";\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = \"swapTokensForExactTokens\";\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        }\n        break;\n    }\n    return {\n      methodName,\n      args,\n      value\n    };\n  }\n};\n\n// src/index.ts\n__reExport(src_exports, require(\"@pancakeswap/swap-sdk-core\"), module.exports);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  ChainId,\n  ERC20Token,\n  FACTORY_ADDRESS,\n  FACTORY_ADDRESS_MAP,\n  INIT_CODE_HASH,\n  INIT_CODE_HASH_MAP,\n  JSBI,\n  NATIVE,\n  Native,\n  Pair,\n  Route,\n  Router,\n  Trade,\n  WBNB,\n  WETH9,\n  WNATIVE,\n  computePairAddress,\n  computePriceImpact,\n  inputOutputComparator,\n  tradeComparator\n});\n","// src/provider.tsx\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport React from \"react\";\nimport useSWRImmutable from \"swr/immutable\";\nimport { useAccount, WagmiConfig, useNetwork } from \"wagmi\";\nfunction WagmiProvider(props) {\n  return /* @__PURE__ */ React.createElement(WagmiConfig, {\n    client: props.client\n  }, /* @__PURE__ */ React.createElement(Web3LibraryProvider, null, props.children));\n}\nvar Web3LibraryContext = React.createContext(void 0);\nvar useWeb3LibraryContext = () => {\n  return React.useContext(Web3LibraryContext);\n};\nvar Web3LibraryProvider = (props) => {\n  const { connector } = useAccount();\n  const { chain } = useNetwork();\n  const { data: library } = useSWRImmutable(connector && [\"web3-library\", connector, chain], async () => {\n    const provider = await (connector == null ? void 0 : connector.getProvider());\n    return new Web3Provider(provider);\n  });\n  return /* @__PURE__ */ React.createElement(Web3LibraryContext.Provider, {\n    value: library\n  }, props.children);\n};\n\n// src/useWeb3React.ts\nimport { useAccount as useAccount2, useNetwork as useNetwork2 } from \"wagmi\";\nfunction useWeb3React() {\n  const { chain } = useNetwork2();\n  const { address, connector, isConnected, isConnecting } = useAccount2();\n  return {\n    chainId: chain == null ? void 0 : chain.id,\n    account: isConnected ? address : null,\n    isConnected,\n    isConnecting,\n    chain,\n    connector\n  };\n}\n\n// src/hooks/useSignMessage.ts\nimport { useCallback } from \"react\";\nimport { useAccount as useAccount3, useSignMessage as useSignMessageWagmi } from \"wagmi\";\nfunction useSignMessage() {\n  const { address, connector } = useAccount3();\n  const { signMessageAsync: sign } = useSignMessageWagmi();\n  return {\n    signMessageAsync: useCallback(async (args) => {\n      var _a, _b;\n      if ((connector == null ? void 0 : connector.id) === \"bsc\" && window.BinanceChain && address) {\n        const res = await ((_b = (_a = window.BinanceChain).bnbSign) == null ? void 0 : _b.call(_a, address, args.message));\n        if (res) {\n          return res.signature;\n        }\n        return null;\n      }\n      return sign(args);\n    }, [address, connector == null ? void 0 : connector.id, sign])\n  };\n}\nexport {\n  WagmiProvider,\n  useSignMessage,\n  useWeb3LibraryContext,\n  useWeb3React\n};\n"],"names":["multicallAddresses","masterChef","masterChefV1","sousChef","lotteryV2","multiCall","pancakeProfile","pancakeBunnies","bunnyFactory","claimRefund","pointCenterIfo","bunnySpecial","tradingCompetitionEaster","tradingCompetitionFanToken","tradingCompetitionMobox","tradingCompetitionMoD","easterNft","cakeVault","cakeFlexibleSideVault","predictionsBNB","predictionsCAKE","chainlinkOracleBNB","chainlinkOracleCAKE","predictionsV1","bunnySpecialCakeVault","bunnySpecialPrediction","bunnySpecialLottery","bunnySpecialXmas","farmAuction","AnniversaryAchievement","nftMarket","nftSale","pancakeSquad","potteryDraw","zap","iCake","bCakeFarmBooster","bCakeFarmBoosterProxyFactory","nonBscVault","crossFarmingSender","crossFarmingReceiver","ChainId","addresses","getAddress","address","chainId","BSC","getMasterChefAddress","getMasterChefV1Address","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeBunniesAddress","getBunnyFactoryAddress","getPredictionsV1Address","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddressEaster","getTradingCompetitionAddressFanToken","getTradingCompetitionAddressMobox","getTradingCompetitionAddressMoD","getEasterNftAddress","getVaultPoolAddress","vaultKey","getCakeVaultAddress","getCakeFlexibleSideVaultAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getBunnySpecialXmasAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","getPotteryDrawAddress","getZapAddress","getICakeAddress","getBCakeFarmBoosterAddress","getBCakeFarmBoosterProxyFactoryAddress","getNonBscVaultAddress","getCrossFarmingSenderAddress","getCrossFarmingReceiverAddress","Interface","Contract","multicallAbi","getMulticallContract","provider","createMulticall","multicall","abi","calls","multi","Error","itf","calldata","map","call","target","toLowerCase","callData","encodeFunctionData","name","params","returnData","callStatic","aggregate","res","i","decodeFunctionResult","multicallv2","options","_provider","requireSuccess","overrides","tryAggregate","result","data","multicallv3","allowFailure","_calls","_allowFailure","contract","interface","console","error","aggregate3","success","decoded","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","all","get","enumerable","__copyProps","to","from","except","desc","key","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","src_exports","BaseCurrency","CurrencyAmount","FIVE","Fraction","InsufficientInputAmountError","InsufficientReservesError","JSBI","import_jsbi7","default","MINIMUM_LIQUIDITY","MaxUint256","NativeCurrency","ONE","Percent","Price","Rounding","TEN","THREE","TWO","Token","TradeType","VMType","VM_TYPE_MAXIMA","ZERO","_100","_10000","_9975","computePriceImpact","sortedInsert","sqrt","validateVMTypeInstance","module","exports","require","import_jsbi","TradeType2","Rounding2","BigInt","VMType2","import_tiny_invariant","constructor","decimals","symbol","Number","isSafeInteger","isInteger","import_jsbi2","import_tiny_invariant2","import_decimal","import_big","import_toformat","Decimal","Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","numerator","denominator","tryParseFraction","fractionish","quotient","divide","remainder","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","toSignificant","significantDigits","format","groupSeparator","rounding","set","precision","toString","div","toSignificantDigits","toFormat","decimalPlaces","toFixed","DP","RM","asFraction","import_jsbi3","ONE_HUNDRED","toPercent","fraction","arguments","isPercent","import_tiny_invariant3","import_jsbi4","import_big2","import_toformat2","Big2","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","toExact","wrapped","isToken","import_jsbi5","import_tiny_invariant4","args","baseCurrency","quoteCurrency","length","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","isNative","import_tiny_invariant5","projectLink","sortsBefore","serialize","CAN_SET_PROTOTYPE","isInsufficientReservesError","setPrototypeOf","isInsufficientInputAmountError","import_jsbi6","import_tiny_invariant6","vmType","greaterThanOrEqual","y","z","x","notEqual","items","maxSize","comparator","push","isFull","lo","hi","mid","splice","pop","midPrice","inputAmount","outputAmount","quotedOutputAmount","priceImpact"],"sourceRoot":""}