{"version":3,"file":"5366.js","mappings":"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","sources":["webpack://web/./src/components/Loader/Dots.tsx","webpack://web/./src/components/PositionCard/index.tsx","webpack://web/./src/hooks/useTotalSupply.ts","webpack://web/./src/state/burn/hooks.ts","webpack://web/./src/state/mint/hooks.ts","webpack://web/./src/views/AddLiquidity/AddStableLiquidity/hooks/useStableLPDerivedMintInfo.tsx","webpack://web/./src/views/RemoveLiquidity/RemoveStableLiquidity/hooks/useStableDerivedBurnInfo.ts","webpack://web/./src/views/Swap/StableSwap/hooks/useStableConfig.ts","webpack://web/./src/views/Swap/StableSwap/hooks/useStableTradeExactIn.ts","webpack://web/../../packages/uikit/src/components/Card/CardBody.tsx","webpack://web/../../packages/uikit/src/components/NextLink/NextLink.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/Add.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","webpack://web/../../packages/uikit/src/components/Text/TooltipText.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { useState, useMemo, useContext } from 'react'\nimport { Currency, CurrencyAmount, JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n  TooltipText,\n  useTooltip,\n  NextLinkFromReactRouter,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\nimport useTotalSupply from 'hooks/useTotalSupply'\nimport useBUSDPrice from 'hooks/useBUSDPrice'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { BIG_INT_ZERO } from 'config/constants/exchange'\nimport { useGetRemovedTokenAmounts } from 'views/RemoveLiquidity/RemoveStableLiquidity/hooks/useStableDerivedBurnInfo'\nimport useStableConfig, { StableConfigContext } from 'views/Swap/StableSwap/hooks/useStableConfig'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport Dots from '../Loader/Dots'\nimport { formatAmount } from '../../utils/formatInfoNumbers'\nimport { useLPApr } from '../../state/swap/hooks'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n  currency0: Currency\n  currency1: Currency\n  token0Deposited: CurrencyAmount<Currency>\n  token1Deposited: CurrencyAmount<Currency>\n  totalUSDValue: number\n  userPoolBalance: CurrencyAmount<Currency>\n  poolTokenPercentage: Percent\n}\n\nconst useTokensDeposited = ({ pair, totalPoolTokens, userPoolBalance }) => {\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return [token0Deposited, token1Deposited]\n}\n\nconst useTotalUSDValue = ({ currency0, currency1, token0Deposited, token1Deposited }) => {\n  const token0Price = useBUSDPrice(currency0)\n  const token1Price = useBUSDPrice(currency1)\n\n  const token0USDValue =\n    token0Deposited && token0Price\n      ? multiplyPriceByAmount(token0Price, parseFloat(token0Deposited.toSignificant(6)))\n      : null\n  const token1USDValue =\n    token1Deposited && token1Price\n      ? multiplyPriceByAmount(token1Price, parseFloat(token1Deposited.toSignificant(6)))\n      : null\n  return token0USDValue && token1USDValue ? token0USDValue + token1USDValue : null\n}\n\nconst usePoolTokenPercentage = ({ userPoolBalance, totalPoolTokens }) => {\n  return !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n    ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n    : undefined\n}\n\nconst withLPValuesFactory =\n  ({ useLPValuesHook, hookArgFn }) =>\n  (Component) =>\n  (props) => {\n    const { account } = useWeb3React()\n\n    const currency0 = props.showUnwrapped ? props.pair.token0 : unwrappedToken(props.pair.token0)\n    const currency1 = props.showUnwrapped ? props.pair.token1 : unwrappedToken(props.pair.token1)\n\n    const userPoolBalance = useTokenBalance(account ?? undefined, props.pair.liquidityToken)\n\n    const totalPoolTokens = useTotalSupply(props.pair.liquidityToken)\n\n    const poolTokenPercentage = usePoolTokenPercentage({ totalPoolTokens, userPoolBalance })\n\n    const args = useMemo(\n      () =>\n        hookArgFn({\n          userPoolBalance,\n          pair: props.pair,\n          totalPoolTokens,\n        }),\n      [userPoolBalance, props.pair, totalPoolTokens],\n    )\n\n    const [token0Deposited, token1Deposited] = useLPValuesHook(args)\n\n    const totalUSDValue = useTotalUSDValue({ currency0, currency1, token0Deposited, token1Deposited })\n\n    return (\n      <Component\n        {...props}\n        currency0={currency0}\n        currency1={currency1}\n        token0Deposited={token0Deposited}\n        token1Deposited={token1Deposited}\n        totalUSDValue={totalUSDValue}\n        userPoolBalance={userPoolBalance}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\nconst withLPValues = withLPValuesFactory({\n  useLPValuesHook: useTokensDeposited,\n  hookArgFn: ({ pair, userPoolBalance, totalPoolTokens }) => ({ pair, userPoolBalance, totalPoolTokens }),\n})\n\nconst withStableLPValues = withLPValuesFactory({\n  useLPValuesHook: useGetRemovedTokenAmounts,\n  hookArgFn: ({ userPoolBalance }) => ({\n    lpAmount: userPoolBalance?.quotient?.toString(),\n  }),\n})\n\nfunction MinimalPositionCardView({\n  pair,\n  currency0,\n  currency1,\n  token0Deposited,\n  token1Deposited,\n  totalUSDValue,\n  userPoolBalance,\n  poolTokenPercentage,\n}: PositionCardProps) {\n  const isStableLP = useContext(StableConfigContext)\n\n  const { t } = useTranslation()\n  const poolData = useLPApr(pair)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {\n      placement: 'bottom',\n    },\n  )\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, BIG_INT_ZERO) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                    <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                    {Number.isFinite(totalUSDValue) && (\n                      <Text small color=\"textSubtle\">{`(~${totalUSDValue.toLocaleString(undefined, {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2,\n                      })} USD)`}</Text>\n                    )}\n                  </Flex>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                {poolData && (\n                  <FixedHeightRow>\n                    <TooltipText ref={targetRef} color=\"textSubtle\" small>\n                      {t('LP reward APR')}:\n                    </TooltipText>\n                    {tooltipVisible && tooltip}\n                    <Text>{formatAmount(poolData.lpApr7d)}%</Text>\n                  </FixedHeightRow>\n                )}\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                {isStableLP ? null : (\n                  <FixedHeightRow>\n                    <Text color=\"textSubtle\" small>\n                      {t('Pooled %asset%', { asset: currency0.symbol })}:\n                    </Text>\n                    {token0Deposited ? (\n                      <RowFixed>\n                        <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                      </RowFixed>\n                    ) : (\n                      '-'\n                    )}\n                  </FixedHeightRow>\n                )}\n                {isStableLP ? null : (\n                  <FixedHeightRow>\n                    <Text color=\"textSubtle\" small>\n                      {t('Pooled %asset%', { asset: currency1.symbol })}:\n                    </Text>\n                    {token1Deposited ? (\n                      <RowFixed>\n                        <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                      </RowFixed>\n                    ) : (\n                      '-'\n                    )}\n                  </FixedHeightRow>\n                )}\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nfunction FullPositionCard({\n  pair,\n  currency0,\n  currency1,\n  token0Deposited,\n  token1Deposited,\n  totalUSDValue,\n  userPoolBalance,\n  poolTokenPercentage,\n  ...props\n}: PositionCardProps) {\n  const isStableLP = useContext(StableConfigContext)\n\n  const { t } = useTranslation()\n  const poolData = useLPApr(pair)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {\n      placement: 'bottom',\n    },\n  )\n  const [showMore, setShowMore] = useState(false)\n\n  return (\n    <Card {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>{t('Loading')}</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n            {isStableLP ? (\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {' '}\n                - Stable\n              </Text>\n            ) : null}\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n          {Number.isFinite(totalUSDValue) && (\n            <Text small color=\"textSubtle\">{`(~${totalUSDValue.toLocaleString(undefined, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })} USD)`}</Text>\n          )}\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          {isStableLP ? null : (\n            <FixedHeightRow>\n              <RowFixed>\n                <CurrencyLogo size=\"20px\" currency={currency0} />\n                <Text color=\"textSubtle\" ml=\"4px\">\n                  {t('Pooled %asset%', { asset: currency0.symbol })}:\n                </Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n          )}\n\n          {isStableLP ? null : (\n            <FixedHeightRow>\n              <RowFixed>\n                <CurrencyLogo size=\"20px\" currency={currency1} />\n                <Text color=\"textSubtle\" ml=\"4px\">\n                  {t('Pooled %asset%', { asset: currency1.symbol })}:\n                </Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n          )}\n          {poolData && (\n            <FixedHeightRow>\n              <RowFixed>\n                <TooltipText ref={targetRef} color=\"textSubtle\">\n                  {t('LP reward APR')}:\n                </TooltipText>\n                {tooltipVisible && tooltip}\n              </RowFixed>\n              <Text>{formatAmount(poolData.lpApr7d)}%</Text>\n            </FixedHeightRow>\n          )}\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">{t('Share of Pool')}</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={NextLinkFromReactRouter}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}${isStableLP ? '?stable=1' : ''}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                {t('Remove')}\n              </Button>\n              <Button\n                as={NextLinkFromReactRouter}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}?step=1`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                {t('Add liquidity instead')}\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n\nexport const MinimalPositionCard = withLPValues(MinimalPositionCardView)\n\nexport const StableFullPositionCardContainer = withStableLPValues(FullPositionCard)\n\nexport const StableFullPositionCard = (props) => {\n  const { stableSwapConfig, ...config } = useStableConfig({\n    tokenA: props.pair?.token0,\n    tokenB: props.pair?.token1,\n  })\n\n  if (!stableSwapConfig) return null\n\n  return (\n    <StableConfigContext.Provider value={{ stableSwapConfig, ...config }}>\n      <StableFullPositionCardContainer {...props} />\n    </StableConfigContext.Provider>\n  )\n}\n\nexport default withLPValues(FullPositionCard)\n","import { useMemo } from 'react'\nimport { Currency, CurrencyAmount, Token } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr],\n  )\n}\n\nexport default useTotalSupply\n","import { Currency, CurrencyAmount, JSBI, Pair, Percent, Token } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { useTranslation } from '@pancakeswap/localization'\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { AppState, useAppDispatch } from '../index'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  removalCheckedA?: boolean,\n  removalCheckedB?: boolean,\n  zapMode?: boolean,\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  }\n  error?: string\n  tokenToReceive?: string\n  estimateZapOutAmount?: CurrencyAmount<Token>\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  const { t } = useTranslation()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient)\n      : undefined\n\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: CurrencyAmount<Token>; [Field.CURRENCY_B]?: CurrencyAmount<Token> } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else if (tokens[independentField]) {\n    const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n    const liquidityValue = liquidityValues[independentField]\n    if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n      percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\n    }\n  }\n\n  const liquidityToRemove =\n    userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n      ? CurrencyAmount.fromRawAmount(userLiquidity.currency, percentToRemove.multiply(userLiquidity.quotient).quotient)\n      : undefined\n\n  const tokenToReceive =\n    removalCheckedA && removalCheckedB\n      ? undefined\n      : removalCheckedA\n      ? tokens[Field.CURRENCY_A]?.address\n      : tokens[Field.CURRENCY_B]?.address\n\n  const amountA =\n    tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n      ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\n      : undefined\n\n  const amountB =\n    tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n      ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\n      : undefined\n\n  const tokenAmountToZap = removalCheckedA && removalCheckedB ? undefined : removalCheckedA ? amountB : amountA\n\n  const estimateZapOutAmount = useMemo(() => {\n    if (pair && tokenAmountToZap) {\n      try {\n        return pair.getOutputAmount(tokenAmountToZap)[0]\n      } catch (error) {\n        return undefined\n      }\n    }\n    return undefined\n  }, [pair, tokenAmountToZap])\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Token>\n    [Field.CURRENCY_B]?: CurrencyAmount<Token>\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]: liquidityToRemove,\n    [Field.CURRENCY_A]: !zapMode\n      ? amountA\n      : amountA && removalCheckedA && !removalCheckedB && estimateZapOutAmount\n      ? CurrencyAmount.fromRawAmount(\n          tokenA,\n          JSBI.add(percentToRemove.multiply(liquidityValueA.quotient).quotient, estimateZapOutAmount.quotient),\n        )\n      : !removalCheckedA\n      ? undefined\n      : amountA,\n    [Field.CURRENCY_B]: !zapMode\n      ? amountB\n      : amountB && removalCheckedB && !removalCheckedA && estimateZapOutAmount\n      ? CurrencyAmount.fromRawAmount(\n          tokenB,\n          JSBI.add(percentToRemove.multiply(liquidityValueB.quotient).quotient, estimateZapOutAmount.quotient),\n        )\n      : !removalCheckedB\n      ? undefined\n      : amountB,\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (\n    !parsedAmounts[Field.LIQUIDITY] ||\n    (removalCheckedA && !parsedAmounts[Field.CURRENCY_A]) ||\n    (removalCheckedB && !parsedAmounts[Field.CURRENCY_B])\n  ) {\n    error = error ?? t('Enter an amount')\n  }\n\n  return { pair, parsedAmounts, error, tokenToReceive, estimateZapOutAmount }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onUserInput,\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { formatUnits } from '@ethersproject/units'\nimport { useTranslation } from '@pancakeswap/localization'\nimport {\n  computePriceImpact,\n  Currency,\n  CurrencyAmount,\n  JSBI,\n  MINIMUM_LIQUIDITY,\n  Pair,\n  Percent,\n  Price,\n  Token,\n} from '@pancakeswap/sdk'\nimport { BIG_INT_ZERO } from 'config/constants/exchange'\nimport { FetchStatus } from 'config/constants/types'\nimport { useTradeExactIn } from 'hooks/Trades'\nimport { useZapContract } from 'hooks/useContract'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport { usePreviousValue } from '@pancakeswap/hooks'\nimport { useSWRContract } from 'hooks/useSWRContract'\nimport useTotalSupply from 'hooks/useTotalSupply'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useGasPrice } from 'state/user/hooks'\nimport { warningSeverity } from 'utils/exchange'\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { AppState, useAppDispatch } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: string\n  addError?: string\n} {\n  const { account } = useWeb3React()\n\n  const { t } = useTranslation()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(totalSupply && JSBI.equal(totalSupply.quotient, BIG_INT_ZERO)) ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, BIG_INT_ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, BIG_INT_ZERO),\n    )\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n    typedValue,\n    currencies[independentField],\n  )\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency?.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(\n          currencyAAmount.currency,\n          currencyBAmount.currency,\n          currencyAAmount.quotient,\n          currencyBAmount.quotient,\n        )\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = currencyA?.wrapped\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    }\n    return undefined\n  }, [parsedAmounts, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  let addError: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Choose a valid pair')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (\n    currencyAAmount &&\n    currencyBAmount &&\n    currencyBalances?.[Field.CURRENCY_A]?.equalTo(0) &&\n    currencyBalances?.[Field.CURRENCY_B]?.equalTo(0)\n  ) {\n    error = error ?? t('No token balance')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    addError = t('Enter an amount')\n  }\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    addError = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    addError = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    addError,\n  }\n}\n\nconst MAX_ZAP_REVERSE_RATIO = JSBI.BigInt(50)\n\nconst getMaxZapSwapAmount = (pair: Pair, tokenZap: Token) =>\n  pair &&\n  tokenZap &&\n  pair.involvesToken(tokenZap) &&\n  JSBI.divide(pair.reserveOf(tokenZap).quotient, MAX_ZAP_REVERSE_RATIO)\n\n// simplify version to guess the zap in amount by swapInAmount from max zap reserves ratio 50\nfunction guessMaxZappableAmount(\n  pair: Pair,\n  token0AmountIn: CurrencyAmount<Token>,\n  token1AmountIn?: CurrencyAmount<Token>,\n) {\n  if (!token1AmountIn) {\n    if (token0AmountIn) {\n      const maxSwapAmount = getMaxZapSwapAmount(pair, token0AmountIn.currency)\n      return maxSwapAmount && JSBI.multiply(maxSwapAmount, JSBI.BigInt(2))\n    }\n    return undefined\n  }\n  if (token0AmountIn && token1AmountIn) {\n    const maxSwapAmount = getMaxZapSwapAmount(pair, token0AmountIn.currency)\n\n    if (!maxSwapAmount) {\n      return undefined\n    }\n\n    const [_, newPair] = pair.getInputAmount(CurrencyAmount.fromRawAmount(token0AmountIn.currency, maxSwapAmount))\n\n    return JSBI.add(\n      maxSwapAmount,\n      JSBI.divide(\n        JSBI.multiply(token1AmountIn.quotient, newPair.reserveOf(token0AmountIn.currency).quotient),\n        newPair.reserveOf(token1AmountIn.currency).quotient,\n      ),\n    )\n  }\n\n  return undefined\n}\n\n// compare the gas is larger than swap in amount\nfunction useZapInGasOverhead(inputAmount: CurrencyAmount<Currency> | undefined) {\n  const gasPrice = useGasPrice()\n  const native = useNativeCurrency()\n  const requiredGas = formatUnits(gasPrice ? BigNumber.from(gasPrice).mul('500000') : '0')\n  const requiredGasAsCurrencyAmount = inputAmount ? tryParseAmount(requiredGas, native) : undefined\n  const inputIsBNB = inputAmount?.currency.symbol === 'BNB'\n\n  const gasCostInInputTokens = useTradeExactIn(requiredGasAsCurrencyAmount, inputIsBNB ? null : inputAmount?.currency)\n\n  return gasCostInInputTokens?.outputAmount?.greaterThan(inputAmount?.quotient) ?? false\n}\n\nexport function useZapIn({\n  canZap,\n  currencyA,\n  currencyB,\n  pair,\n  currencyBalances,\n  zapTokenCheckedA,\n  zapTokenCheckedB,\n  maxAmounts,\n}: {\n  canZap?: boolean\n  currencyA?: Currency\n  currencyB?: Currency\n  pair: Pair\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  zapTokenCheckedA?: boolean\n  zapTokenCheckedB?: boolean\n  maxAmounts?: { [field in Field]?: CurrencyAmount<Currency> }\n}) {\n  const { t } = useTranslation()\n  const [inputBlurOnce, setInputBlurOnce] = useState(false)\n  const previousBlur = usePreviousValue(inputBlurOnce)\n  const [triedAutoReduce, setTriedAutoReduce] = useState(false)\n  const { independentField, typedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n    typedValue,\n    currencies[independentField],\n  )\n\n  const _dependentAmount = useMemo(() => {\n    if (!canZap) {\n      return undefined\n    }\n    if (independentAmount) {\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [canZap, currencyA, currencyB, dependentField, independentAmount, pair])\n\n  const isDependentAmountGreaterThanMaxAmount =\n    maxAmounts[dependentField] && _dependentAmount && _dependentAmount?.greaterThan(maxAmounts[dependentField])\n\n  // amounts\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    return isDependentAmountGreaterThanMaxAmount ? maxAmounts[dependentField] : _dependentAmount\n  }, [isDependentAmountGreaterThanMaxAmount, maxAmounts, dependentField, _dependentAmount])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: !zapTokenCheckedA\n        ? undefined\n        : independentField === Field.CURRENCY_A\n        ? independentAmount\n        : dependentAmount,\n      [Field.CURRENCY_B]: !zapTokenCheckedB\n        ? undefined\n        : independentField === Field.CURRENCY_A\n        ? dependentAmount\n        : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField, zapTokenCheckedA, zapTokenCheckedB],\n  )\n\n  const wrappedParsedAmounts: { [field in Field]: CurrencyAmount<Token> | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: parsedAmounts[Field.CURRENCY_A]?.wrapped,\n      [Field.CURRENCY_B]: parsedAmounts[Field.CURRENCY_B]?.wrapped,\n    }),\n    [parsedAmounts],\n  )\n\n  const zapContract = useZapContract()\n\n  const rebalancing =\n    !!zapTokenCheckedA && !!zapTokenCheckedB && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n\n  const singleTokenToZapField =\n    !rebalancing && zapTokenCheckedB && !!parsedAmounts[Field.CURRENCY_B] ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  const singleTokenToZapAmount = useMemo(\n    () => wrappedParsedAmounts[singleTokenToZapField],\n    [singleTokenToZapField, wrappedParsedAmounts],\n  )\n\n  const noNeedZap = useMemo(() => {\n    if (!rebalancing) {\n      return false\n    }\n    if (!wrappedParsedAmounts[independentField] || !wrappedParsedAmounts[dependentField]) {\n      return undefined\n    }\n\n    if (!isDependentAmountGreaterThanMaxAmount) {\n      return true\n    }\n\n    const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n\n    if (tokenA && tokenB && wrappedParsedAmounts[independentField] && pair) {\n      return wrappedParsedAmounts[dependentField].equalTo(\n        dependentField === Field.CURRENCY_B\n          ? pair.priceOf(tokenA).quote(wrappedParsedAmounts[independentField])\n          : pair.priceOf(tokenB).quote(wrappedParsedAmounts[independentField]),\n      )\n    }\n    return undefined\n  }, [\n    currencyA,\n    currencyB,\n    dependentField,\n    independentField,\n    isDependentAmountGreaterThanMaxAmount,\n    pair,\n    rebalancing,\n    wrappedParsedAmounts,\n  ])\n\n  const singleZapEstimate = useSWRContract(\n    canZap &&\n      !noNeedZap &&\n      zapContract &&\n      singleTokenToZapAmount &&\n      singleTokenToZapAmount?.currency &&\n      pair &&\n      !rebalancing && {\n        contract: zapContract,\n        methodName: 'estimateZapInSwap',\n        params: [\n          singleTokenToZapAmount.currency.address,\n          singleTokenToZapAmount.quotient.toString(),\n          pair.liquidityToken.address,\n        ],\n      },\n    {\n      onError(err) {\n        console.error(err)\n      },\n    },\n  )\n\n  const rebalancingZapEstimate = useSWRContract(\n    canZap &&\n      zapContract &&\n      !noNeedZap &&\n      wrappedParsedAmounts &&\n      wrappedParsedAmounts[Field.CURRENCY_A] &&\n      wrappedParsedAmounts[Field.CURRENCY_B] &&\n      pair &&\n      rebalancing && {\n        contract: zapContract,\n        methodName: 'estimateZapInRebalancingSwap',\n        params: [\n          wrappedParsedAmounts[Field.CURRENCY_A].currency.address,\n          wrappedParsedAmounts[Field.CURRENCY_B].currency.address,\n          wrappedParsedAmounts[Field.CURRENCY_A].quotient.toString(),\n          wrappedParsedAmounts[Field.CURRENCY_B]?.quotient?.toString(),\n          pair.liquidityToken.address,\n        ],\n      },\n    {\n      onError(err) {\n        console.error(err)\n      },\n    },\n  )\n\n  const zapInEstimated = useMemo(\n    () =>\n      (rebalancingZapEstimate?.data || singleZapEstimate?.data) && {\n        swapAmountIn: rebalancing ? rebalancingZapEstimate.data?.swapAmountIn : singleZapEstimate.data?.swapAmountIn,\n        swapAmountOut: rebalancing ? rebalancingZapEstimate.data?.swapAmountOut : singleZapEstimate.data?.swapAmountOut,\n        isToken0Sold: rebalancing\n          ? rebalancingZapEstimate.data?.sellToken0\n          : singleZapEstimate.data?.swapTokenOut === singleTokenToZapAmount?.currency.address,\n      },\n    [rebalancing, rebalancingZapEstimate.data, singleZapEstimate.data, singleTokenToZapAmount?.currency.address],\n  )\n\n  const rebalancingSellToken0 = useMemo(() => {\n    if (rebalancingZapEstimate.data) {\n      return rebalancingZapEstimate.data.sellToken0\n    }\n    if (!pair || !wrappedParsedAmounts[Field.CURRENCY_A] || !wrappedParsedAmounts[Field.CURRENCY_B]) {\n      return undefined\n    }\n    const token0toZap = pair.token0.equals(wrappedParsedAmounts[Field.CURRENCY_A].currency)\n    if (token0toZap) {\n      return JSBI.greaterThan(\n        JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_A].quotient, pair.reserve1.quotient),\n        JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_B].quotient, pair.reserve0.quotient),\n      )\n    }\n    return JSBI.greaterThan(\n      JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_B].quotient, pair.reserve0.quotient),\n      JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_A].quotient, pair.reserve1.quotient),\n    )\n  }, [pair, rebalancingZapEstimate.data, wrappedParsedAmounts])\n\n  const swapTokenField = !rebalancing\n    ? singleTokenToZapField\n    : rebalancingSellToken0\n    ? Field.CURRENCY_A\n    : Field.CURRENCY_B\n  const swapOutTokenField = swapTokenField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  const swapTokens: { [field in Field]?: Token } = useMemo(\n    () => ({\n      [swapTokenField]: currencies[swapTokenField]?.wrapped,\n      [swapOutTokenField]: currencies[swapOutTokenField]?.wrapped,\n    }),\n    [currencies, swapOutTokenField, swapTokenField],\n  )\n\n  const zapInEstimatedError = useMemo(\n    () => (rebalancing ? rebalancingZapEstimate.error : singleZapEstimate.error),\n    [rebalancing, rebalancingZapEstimate.error, singleZapEstimate.error],\n  )\n\n  const zapInEstimatedStatus = useMemo(\n    () => (rebalancing ? rebalancingZapEstimate.status : singleZapEstimate.status),\n    [rebalancing, rebalancingZapEstimate.status, singleZapEstimate.status],\n  )\n\n  const priceImpact = useMemo(() => {\n    if (!zapInEstimated) {\n      return undefined\n    }\n    const tokenAmountIn = CurrencyAmount.fromRawAmount(\n      swapTokens[swapTokenField],\n      zapInEstimated.swapAmountIn.toString(),\n    )\n    const tokenAmountOut = CurrencyAmount.fromRawAmount(\n      swapTokens[swapOutTokenField],\n      zapInEstimated.swapAmountOut.toString(),\n    )\n    const midPrice = new Price(\n      swapTokens[swapTokenField],\n      swapTokens[swapOutTokenField],\n      pair.token0.equals(swapTokens[swapTokenField]) ? pair.reserve0.quotient : pair.reserve1.quotient,\n      pair.token0.equals(swapTokens[swapTokenField]) ? pair.reserve1.quotient : pair.reserve0.quotient,\n    )\n    return computePriceImpact(midPrice, tokenAmountIn, tokenAmountOut)\n  }, [pair, swapOutTokenField, swapTokenField, swapTokens, zapInEstimated])\n\n  const overLimitZapRatio = useMemo(() => {\n    if (!zapInEstimated) {\n      return false\n    }\n\n    return JSBI.lessThan(\n      JSBI.divide(\n        pair.reserveOf(swapTokens[swapTokenField]).quotient,\n        JSBI.BigInt(zapInEstimated.swapAmountIn.toString()),\n      ),\n      MAX_ZAP_REVERSE_RATIO,\n    )\n  }, [pair, swapTokens, zapInEstimated, swapTokenField])\n\n  const priceSeverity = overLimitZapRatio || zapInEstimatedError ? 4 : priceImpact ? warningSeverity(priceImpact) : 0\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(false)\n\n  const maxZappableAmount = useMemo(\n    () =>\n      guessMaxZappableAmount(\n        pair,\n        wrappedParsedAmounts[swapTokenField],\n        rebalancing ? wrappedParsedAmounts[swapOutTokenField] : undefined,\n      ),\n    [pair, wrappedParsedAmounts, swapTokenField, rebalancing, swapOutTokenField],\n  )\n\n  const convertToMaxZappable = useCallback(() => {\n    if (maxZappableAmount) {\n      if (maxAmounts[swapTokenField]) {\n        const formatInput = formatUnits(\n          JSBI.greaterThan(maxAmounts[swapTokenField].quotient, maxZappableAmount)\n            ? maxZappableAmount.toString()\n            : maxAmounts[swapTokenField].quotient.toString(),\n          maxAmounts[swapTokenField]?.currency.decimals,\n        )\n\n        if (swapTokenField === Field.CURRENCY_A) {\n          onFieldAInput(formatInput)\n        } else {\n          onFieldBInput(formatInput)\n        }\n      }\n    }\n  }, [maxAmounts, maxZappableAmount, onFieldAInput, onFieldBInput, swapTokenField])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    if (\n      !pair ||\n      !swapTokens[swapTokenField] ||\n      !swapTokens[swapOutTokenField] ||\n      !zapInEstimated?.swapAmountIn ||\n      !zapInEstimated?.swapAmountOut ||\n      !wrappedParsedAmounts[swapTokenField]\n    ) {\n      return undefined\n    }\n\n    if (pair && totalSupply) {\n      try {\n        // calc the tokenA amount after swap\n        const zappedTokenAmountA = wrappedParsedAmounts[swapTokenField].greaterThan(\n          zapInEstimated.swapAmountIn.toString(),\n        )\n          ? wrappedParsedAmounts[swapTokenField].subtract(\n              CurrencyAmount.fromRawAmount(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString()),\n            )\n          : wrappedParsedAmounts[swapTokenField]\n\n        let zappedTokenAmountB = CurrencyAmount.fromRawAmount(\n          swapTokens[swapOutTokenField],\n          zapInEstimated.swapAmountOut.toString(),\n        )\n\n        if (wrappedParsedAmounts[swapOutTokenField]) {\n          zappedTokenAmountB = zappedTokenAmountB.add(wrappedParsedAmounts[swapOutTokenField])\n        }\n        const lpMinted = pair.getLiquidityMinted(totalSupply, zappedTokenAmountA, zappedTokenAmountB)\n        return lpMinted\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    }\n    return undefined\n  }, [\n    pair,\n    swapTokens,\n    swapTokenField,\n    swapOutTokenField,\n    zapInEstimated?.swapAmountIn,\n    zapInEstimated?.swapAmountOut,\n    wrappedParsedAmounts,\n    totalSupply,\n  ])\n\n  const swapTokenAmountTooLow = useMemo(\n    () =>\n      wrappedParsedAmounts[swapTokenField] &&\n      JSBI.lessThan(wrappedParsedAmounts[swapTokenField].quotient, MINIMUM_LIQUIDITY),\n    [swapTokenField, wrappedParsedAmounts],\n  )\n  const swapOutAmountTooLow = useMemo(\n    () =>\n      wrappedParsedAmounts[swapOutTokenField] &&\n      JSBI.lessThan(wrappedParsedAmounts[swapOutTokenField].quotient, MINIMUM_LIQUIDITY),\n    [swapOutTokenField, wrappedParsedAmounts],\n  )\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  const gasOverhead = useZapInGasOverhead(\n    useMemo(\n      () =>\n        zapInEstimated\n          ? CurrencyAmount.fromRawAmount(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString())\n          : null,\n      [swapTokenField, swapTokens, zapInEstimated],\n    ),\n  )\n\n  useEffect(() => {\n    if (\n      !triedAutoReduce &&\n      parsedAmounts[swapTokenField] &&\n      maxZappableAmount &&\n      !previousBlur &&\n      inputBlurOnce &&\n      !rebalancing\n    ) {\n      if (JSBI.greaterThan(parsedAmounts[swapTokenField].quotient, maxZappableAmount)) {\n        convertToMaxZappable()\n        setTriedAutoReduce(true)\n      }\n    }\n  }, [\n    convertToMaxZappable,\n    inputBlurOnce,\n    maxZappableAmount,\n    parsedAmounts,\n    previousBlur,\n    rebalancing,\n    singleTokenToZapAmount,\n    swapTokenField,\n    triedAutoReduce,\n  ])\n\n  const onInputBlurOnce = useCallback(() => {\n    setInputBlurOnce(true)\n  }, [])\n\n  let error: string | undefined\n\n  if (zapInEstimatedError) {\n    error = t('Cannot estimate zap amount')\n  }\n\n  if (swapTokenAmountTooLow || (rebalancing && swapOutAmountTooLow)) {\n    error = t('Zap in amount too low')\n  }\n\n  if (\n    wrappedParsedAmounts[swapTokenField] &&\n    currencyBalances[swapTokenField]?.lessThan(wrappedParsedAmounts[swapTokenField])\n  ) {\n    error = t('Insufficient %token% balance', {\n      token: wrappedParsedAmounts[swapTokenField]?.currency.symbol ?? '',\n    })\n  }\n\n  if (\n    wrappedParsedAmounts[swapOutTokenField] &&\n    rebalancing &&\n    currencyBalances[swapOutTokenField]?.lessThan(wrappedParsedAmounts[swapOutTokenField])\n  ) {\n    error = t('Insufficient %token% balance', { token: wrappedParsedAmounts[swapOutTokenField]?.currency.symbol ?? '' })\n  }\n\n  return {\n    zapInEstimating: zapInEstimatedStatus !== FetchStatus.Fetched,\n    zapInEstimatedError,\n    zapInEstimated,\n    error,\n    liquidityMinted,\n    poolTokenPercentage,\n    parsedAmounts,\n    swapTokenField,\n    swapOutTokenField,\n    priceSeverity,\n    convertToMaxZappable,\n    rebalancing,\n    noNeedZap,\n    gasOverhead,\n    isDependentAmountGreaterThanMaxAmount,\n    onInputBlurOnce,\n  }\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Price, Token } from '@pancakeswap/sdk'\nimport { BIG_INT_ZERO } from 'config/constants/exchange'\n\nimport { PairState } from 'hooks/usePairs'\n\nimport useTotalSupply from 'hooks/useTotalSupply'\nimport { useContext, useMemo } from 'react'\n\nimport tryParseAmount from '@pancakeswap/utils/tryParseAmount'\nimport { Field } from 'state/mint/actions'\nimport { useCurrencyBalances } from 'state/wallet/hooks'\nimport { StableConfigContext } from 'views/Swap/StableSwap/hooks/useStableConfig'\nimport { useEstimatedAmount } from 'views/Swap/StableSwap/hooks/useStableTradeExactIn'\nimport useSWR from 'swr'\nimport { useMintState } from 'state/mint/hooks'\nimport { useWeb3React } from '@pancakeswap/wagmi'\n\nexport interface StablePair {\n  liquidityToken: Token | null\n  tokenAmounts: any[]\n  token0: Currency\n  token1: Currency\n  priceOf: (token: Currency) => CurrencyAmount<Currency> | Price<Currency, Currency> | Fraction\n  token0Price: () => CurrencyAmount<Currency> | Price<Currency, Currency> | Fraction\n  token1Price: () => CurrencyAmount<Currency> | Price<Currency, Currency> | Fraction\n  // NOTE: Stable Tokens don't need this\n  reserve1: CurrencyAmount<Currency>\n  reserve0: CurrencyAmount<Currency>\n  getLiquidityValue: () => CurrencyAmount<Currency>\n}\n\ninterface UseStablePairResponse {\n  pairState: PairState\n  pair: StablePair\n}\n\nexport function useStablePair(currencyA: Token, currencyB: Token): UseStablePairResponse {\n  const { stableSwapConfig, stableSwapContract } = useContext(StableConfigContext)\n\n  const currencyAAmountQuotient = tryParseAmount('1', currencyA)?.quotient\n\n  const { data: estimatedToken1Amount } = useEstimatedAmount({\n    estimatedCurrency: currencyB,\n    quotient: currencyAAmountQuotient?.toString(),\n    stableSwapContract,\n    stableSwapConfig,\n  })\n\n  const pair = useMemo(() => {\n    const isPriceValid = currencyAAmountQuotient && estimatedToken1Amount\n\n    const ZERO_AMOUNT = CurrencyAmount.fromRawAmount(currencyB, '0')\n\n    const token0Price = isPriceValid\n      ? new Price(currencyA, currencyB, currencyAAmountQuotient, estimatedToken1Amount.quotient)\n      : ZERO_AMOUNT\n\n    return {\n      liquidityToken: stableSwapConfig?.liquidityToken || null,\n      tokenAmounts: [],\n      token0: currencyA,\n      token1: currencyB,\n      priceOf: (token) =>\n        isPriceValid ? (token?.address === currencyA?.address ? token0Price : token0Price.invert()) : ZERO_AMOUNT,\n      token0Price: () => token0Price,\n      token1Price: () => token0Price.invert(),\n      // NOTE: Stable Tokens don't need this\n      reserve1: ZERO_AMOUNT,\n      reserve0: ZERO_AMOUNT,\n      getLiquidityValue: () => ZERO_AMOUNT,\n    }\n  }, [stableSwapConfig?.liquidityToken, currencyA, currencyB, currencyAAmountQuotient, estimatedToken1Amount])\n\n  if (!stableSwapConfig) {\n    return { pairState: PairState.NOT_EXISTS, pair: undefined }\n  }\n\n  return { pairState: PairState.EXISTS, pair }\n}\n\nfunction useMintedStabelLP({\n  stableSwapInfoContract,\n  stableSwapConfig,\n  stableSwapAddress,\n  currencyInput,\n  currencyInputAmount,\n  currencyOutputAmount,\n}) {\n  const quotient0Str = currencyInputAmount?.toString()\n  const quotient1Str = currencyOutputAmount?.toString()\n\n  const isValid = !!stableSwapAddress && !!quotient0Str && !!quotient1Str\n\n  return useSWR(\n    isValid ? ['get_add_liquidity_mint_amount', stableSwapAddress, quotient0Str, quotient1Str] : null,\n    async () => {\n      const isToken0 = stableSwapConfig?.token0?.address === currencyInput?.address\n\n      const amounts = isToken0 ? [quotient0Str, quotient1Str] : [quotient1Str, quotient0Str]\n\n      return stableSwapInfoContract.get_add_liquidity_mint_amount(stableSwapAddress, amounts)\n    },\n  )\n}\n\nexport function useStableLPDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: StablePair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: string\n  addError?: string\n} {\n  const { account } = useWeb3React()\n\n  const { t } = useTranslation()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const { pairState, pair } = useStablePair(currencyA?.wrapped, currencyB?.wrapped)\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.quotient, BIG_INT_ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [currencyA, currencyB])\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n    typedValue,\n    currencies[independentField],\n  )\n\n  const dependentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n    otherTypedValue,\n    currencies[dependentField],\n  )\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const { stableSwapConfig, stableSwapContract, stableSwapInfoContract } = useContext(StableConfigContext)\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  const currencyAAmountQuotient = currencyAAmount?.quotient\n  const currencyBAmountQuotient = currencyBAmount?.quotient\n\n  const { data: estimatedOutputAmount } = useEstimatedAmount({\n    estimatedCurrency: currencyAAmountQuotient ? currencyB : currencyA,\n    quotient: currencyAAmountQuotient ? currencyAAmountQuotient?.toString() : currencyBAmountQuotient?.toString(),\n    stableSwapConfig,\n    stableSwapContract,\n  })\n\n  const price = useMemo(() => {\n    const isEstimatedOutputAmountZero = estimatedOutputAmount?.equalTo(0)\n\n    if ((currencyAAmountQuotient || currencyBAmountQuotient) && estimatedOutputAmount && !isEstimatedOutputAmountZero) {\n      return currencyAAmountQuotient\n        ? new Price(currencyA, currencyB, currencyAAmountQuotient, estimatedOutputAmount.quotient)\n        : new Price(currencyA, currencyB, estimatedOutputAmount.quotient, currencyBAmountQuotient)\n    }\n    return undefined\n  }, [estimatedOutputAmount, currencyA, currencyB, currencyBAmountQuotient, currencyAAmountQuotient])\n\n  const { data: lpMinted } = useMintedStabelLP({\n    stableSwapAddress: stableSwapConfig?.stableSwapAddress,\n    stableSwapInfoContract,\n    stableSwapConfig,\n    currencyInput: currencyAAmountQuotient ? currencyA : currencyB,\n    currencyInputAmount: currencyAAmountQuotient || currencyBAmountQuotient,\n    currencyOutputAmount: currencyAAmountQuotient ? currencyBAmountQuotient : currencyAAmountQuotient,\n  })\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    if (pair?.liquidityToken && totalSupply && lpMinted) {\n      try {\n        return CurrencyAmount.fromRawAmount(pair?.liquidityToken, lpMinted?.toString())\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    }\n    return undefined\n  }, [pair?.liquidityToken, totalSupply, lpMinted])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  let addError: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Choose a valid pair')\n  }\n\n  if (\n    currencyAAmount &&\n    currencyBAmount &&\n    currencyBalances?.[Field.CURRENCY_A]?.equalTo(0) &&\n    currencyBalances?.[Field.CURRENCY_B]?.equalTo(0)\n  ) {\n    error = error ?? t('No token balance')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    addError = t('Enter an amount')\n  }\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    addError = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    addError = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    addError,\n  }\n}\n","import { Currency, CurrencyAmount, Percent, Token } from '@pancakeswap/sdk'\n\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Field } from 'state/burn/actions'\nimport { useTokenBalances } from 'state/wallet/hooks'\nimport { useBurnState } from 'state/burn/hooks'\nimport { StablePair, useStablePair } from 'views/AddLiquidity/AddStableLiquidity/hooks/useStableLPDerivedMintInfo'\nimport { StableConfigContext } from 'views/Swap/StableSwap/hooks/useStableConfig'\nimport useSWR from 'swr'\nimport { useContext } from 'react'\nimport { useWeb3React } from '@pancakeswap/wagmi'\n\nexport function useGetRemovedTokenAmounts({ lpAmount }) {\n  const { stableSwapInfoContract, stableSwapConfig } = useContext(StableConfigContext)\n\n  const { data } = useSWR(\n    !lpAmount ? null : ['stableSwapInfoContract', 'calc_coins_amount', stableSwapConfig?.stableSwapAddress, lpAmount],\n    async () => {\n      return stableSwapInfoContract.calc_coins_amount(stableSwapConfig?.stableSwapAddress, lpAmount)\n    },\n  )\n\n  if (!Array.isArray(data)) return []\n\n  const tokenAAmount = CurrencyAmount.fromRawAmount(stableSwapConfig?.token0, data[0].toString())\n  const tokenBAmount = CurrencyAmount.fromRawAmount(stableSwapConfig?.token1, data[1].toString())\n\n  return [tokenAAmount, tokenBAmount]\n}\n\nexport function useStableDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  pair?: StablePair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  }\n  error?: string\n  tokenToReceive?: string\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  const { t } = useTranslation()\n\n  // pair + totalsupply\n  const { pair } = useStablePair(currencyA?.wrapped, currencyB?.wrapped)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n\n  const liquidityToRemove =\n    userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n      ? CurrencyAmount.fromRawAmount(userLiquidity.currency, percentToRemove.multiply(userLiquidity.quotient).quotient)\n      : undefined\n\n  const [amountA, amountB] = useGetRemovedTokenAmounts({\n    lpAmount: liquidityToRemove?.quotient?.toString(),\n  })\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Token>\n    [Field.CURRENCY_B]?: CurrencyAmount<Token>\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]: liquidityToRemove,\n    [Field.CURRENCY_A]: amountA,\n    [Field.CURRENCY_B]: amountB,\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  return { pair, parsedAmounts, error }\n}\n","import { useContract } from 'hooks/useContract'\nimport stableSwapABI from 'config/abi/stableSwap.json'\nimport stableSwapInfoABI from 'config/abi/infoStableSwap.json'\nimport stableLPABI from 'config/abi/stableLP.json'\nimport { Currency, CurrencyAmount, ERC20Token } from '@pancakeswap/sdk'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { createContext, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useSWRImmutable from 'swr/immutable'\nimport { getStableConfig } from '@pancakeswap/farms/constants'\nimport { deserializeToken } from '@pancakeswap/token-lists'\n\nexport function useStableFarms() {\n  const { chainId } = useActiveWeb3React()\n\n  const { data: stableFarms = [] } = useSWRImmutable(chainId && ['stable-farms', chainId], async () => {\n    const farms = await getStableConfig(chainId)\n\n    return farms.map(({ token, quoteToken, lpAddress, ...rest }) => ({\n      ...rest,\n      liquidityToken: new ERC20Token(chainId, lpAddress, 18, 'Stable-LP', 'Pancake StableSwap LPs'),\n      token0: deserializeToken(token),\n      token1: deserializeToken(quoteToken),\n    }))\n  })\n\n  return stableFarms\n}\n\nfunction useFindStablePair({ tokenA, tokenB }) {\n  const stableFarms = useStableFarms()\n\n  return useMemo(\n    () =>\n      stableFarms.find((stablePair) => {\n        return (\n          tokenA &&\n          tokenB &&\n          ((stablePair?.token0?.equals(tokenA) && stablePair?.token1?.equals(tokenB)) ||\n            (stablePair?.token1?.equals(tokenA) && stablePair?.token0?.equals(tokenB)))\n        )\n      }),\n    [tokenA, tokenB, stableFarms],\n  )\n}\n\nexport function useLPTokensWithBalanceByAccount(account) {\n  const lpTokens = useStableFarms()\n\n  const [stableBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    lpTokens.map(({ liquidityToken }) => liquidityToken),\n  )\n\n  const lpTokensWithBalance = useMemo(\n    () => lpTokens.filter(({ liquidityToken }) => stableBalances[liquidityToken.address]?.greaterThan('0')),\n    [lpTokens, stableBalances],\n  )\n\n  return lpTokensWithBalance.map((lpToken) => ({\n    ...lpToken,\n    tokenAmounts: [],\n    reserve0: CurrencyAmount.fromRawAmount(lpToken?.token0, '0'),\n    reserve1: CurrencyAmount.fromRawAmount(lpToken?.token1, '0'),\n    getLiquidityValue: () => CurrencyAmount.fromRawAmount(lpToken?.token0, '0'),\n  }))\n}\n\nexport const StableConfigContext = createContext(null)\n\nexport default function useStableConfig({ tokenA, tokenB }: { tokenA: Currency; tokenB: Currency }) {\n  const stablePair = useFindStablePair({ tokenA, tokenB })\n  const stableSwapContract = useContract(stablePair?.stableSwapAddress, stableSwapABI)\n  const stableSwapInfoContract = useContract(stablePair?.infoStableSwapAddress, stableSwapInfoABI)\n  const stableSwapLPContract = useContract(stablePair?.liquidityToken.address, stableLPABI)\n\n  return useMemo(\n    () => ({\n      stableSwapConfig: stablePair,\n      stableSwapContract,\n      stableSwapInfoContract,\n      stableSwapLPContract,\n    }),\n    [stablePair, stableSwapContract, stableSwapInfoContract, stableSwapLPContract],\n  )\n}\n","import { CurrencyAmount, Price, Percent, TradeType, Fraction, ONE, Currency } from '@pancakeswap/sdk'\nimport { laggyMiddleware } from 'hooks/useSWRContract'\nimport { useCallback, useMemo, useContext, useDeferredValue } from 'react'\nimport useSWR from 'swr'\nimport { StableConfigContext } from './useStableConfig'\n\nexport interface StableTrade {\n  tradeType: TradeType\n  inputAmount: CurrencyAmount<Currency>\n  outputAmount: CurrencyAmount<Currency>\n  executionPrice: Price<Currency, Currency>\n  priceImpact: null\n  maximumAmountIn: (slippaged: Percent) => CurrencyAmount<Currency>\n  minimumAmountOut: (slippaged: Percent) => CurrencyAmount<Currency>\n}\n\nexport const maximumAmountInFactory = (currencyAmountIn: CurrencyAmount<Currency>, slippageTolerance: number) => {\n  const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(currencyAmountIn.quotient).quotient\n\n  return CurrencyAmount.fromRawAmount(currencyAmountIn.currency, slippageAdjustedAmountIn)\n}\n\nexport const minimumAmountOutFactory = (currencyAmountOut: CurrencyAmount<Currency>, slippageTolerance: number) => {\n  const slippageAdjustedAmountOut = new Fraction(ONE)\n    .add(slippageTolerance)\n    .invert()\n    .multiply(currencyAmountOut.quotient).quotient\n  return CurrencyAmount.fromRawAmount(currencyAmountOut.currency, slippageAdjustedAmountOut)\n}\n\ninterface UseStableTradeResponse {\n  currencyAmountIn: CurrencyAmount<Currency>\n  currencyAmountOut: CurrencyAmount<Currency>\n  stableSwapConfig: any\n  tradeType: TradeType\n}\n\nexport function useStableTradeResponse({\n  currencyAmountIn,\n  currencyAmountOut,\n  stableSwapConfig,\n  tradeType,\n}: UseStableTradeResponse) {\n  const maximumAmountIn = useCallback(\n    (slippageTolerance) => {\n      if (tradeType === TradeType.EXACT_INPUT) {\n        return currencyAmountIn\n      }\n\n      return currencyAmountIn\n        ? maximumAmountInFactory(currencyAmountIn, slippageTolerance)\n        : CurrencyAmount.fromRawAmount(currencyAmountIn.currency, '0')\n    },\n    [currencyAmountIn, tradeType],\n  )\n\n  const minimumAmountOut = useCallback(\n    (slippageTolerance) => {\n      if (tradeType === TradeType.EXACT_OUTPUT) {\n        return currencyAmountOut\n      }\n\n      return currencyAmountOut\n        ? minimumAmountOutFactory(currencyAmountOut, slippageTolerance)\n        : CurrencyAmount.fromRawAmount(currencyAmountOut.currency, '0')\n    },\n    [currencyAmountOut, tradeType],\n  )\n\n  const isInvalid = !currencyAmountIn || !currencyAmountOut || !stableSwapConfig || !currencyAmountIn\n\n  const executionPrice = useMemo(() => {\n    if (isInvalid) return null\n\n    return new Price(\n      currencyAmountIn.currency,\n      currencyAmountOut.currency,\n      currencyAmountIn.quotient,\n      currencyAmountOut.quotient,\n    )\n  }, [isInvalid, currencyAmountIn, currencyAmountOut])\n\n  if (isInvalid) return null\n\n  return {\n    tradeType: TradeType.EXACT_INPUT,\n    inputAmount: currencyAmountIn,\n    outputAmount: currencyAmountOut,\n    executionPrice,\n    priceImpact: null,\n    maximumAmountIn,\n    minimumAmountOut,\n  }\n}\n\nexport function useEstimatedAmount({ estimatedCurrency, stableSwapConfig, quotient, stableSwapContract }) {\n  const deferQuotient = useDeferredValue(quotient)\n\n  return useSWR(\n    stableSwapConfig?.stableSwapAddress && estimatedCurrency && !!deferQuotient\n      ? ['swapContract', stableSwapConfig?.stableSwapAddress, deferQuotient]\n      : null,\n    async () => {\n      const isToken0 = stableSwapConfig?.token0?.address === estimatedCurrency?.address\n\n      const args = isToken0 ? [1, 0, deferQuotient] : [0, 1, deferQuotient]\n\n      const estimatedAmount = await stableSwapContract.get_dy(...args)\n\n      return CurrencyAmount.fromRawAmount(estimatedCurrency, estimatedAmount)\n    },\n    {\n      use: [laggyMiddleware],\n    },\n  )\n}\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport default function useStableTradeExactIn(\n  currencyAmountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency,\n): StableTrade | null {\n  const { stableSwapContract, stableSwapConfig } = useContext(StableConfigContext)\n\n  const currencyAmountInQuotient = currencyAmountIn?.quotient?.toString()\n\n  const { data: currencyAmountOut } = useEstimatedAmount({\n    estimatedCurrency: currencyOut,\n    quotient: currencyAmountInQuotient,\n    stableSwapContract,\n    stableSwapConfig,\n  })\n\n  return useStableTradeResponse({\n    currencyAmountIn,\n    currencyAmountOut,\n    stableSwapConfig,\n    tradeType: TradeType.EXACT_INPUT,\n  })\n}\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n","import { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport NextLink from \"next/link\";\n\n// react-router-dom LinkProps types\ninterface LinkProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  to: any;\n  replace?: boolean;\n  innerRef?: React.Ref<HTMLAnchorElement>;\n  // next\n  prefetch?: boolean;\n}\n\nconst A = styled.a``;\n\n/**\n * temporary solution for migrating React Router to Next.js Link\n */\nconst NextLinkFromReactRouter = forwardRef<any, LinkProps>(({ to, replace, children, prefetch, ...props }, ref) => (\n  <NextLink href={to as string} replace={replace} passHref prefetch={prefetch}>\n    <A ref={ref} {...props}>\n      {children}\n    </A>\n  </NextLink>\n));\n\nexport default NextLinkFromReactRouter;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from \"styled-components\";\nimport { Colors } from \"../../theme/types\";\nimport Text from \"./Text\";\n\nconst TooltipText = styled(Text)<{ decorationColor?: keyof Colors }>`\n  text-decoration: underline dotted;\n  text-decoration-color: ${({ theme, decorationColor }) =>\n    `${theme?.colors && decorationColor ? theme.colors[decorationColor] : theme?.colors?.textSubtle}`};\n  text-underline-offset: 0.1em;\n`;\n\nexport default TooltipText;\n"],"names":["styled","Dots","span","useState","useMemo","useContext","JSBI","Percent","Button","Text","ChevronUpIcon","ChevronDownIcon","Card","CardBody","Flex","AddIcon","TooltipText","useTooltip","NextLinkFromReactRouter","useTranslation","useTotalSupply","useBUSDPrice","multiplyPriceByAmount","useWeb3React","BIG_INT_ZERO","useGetRemovedTokenAmounts","useStableConfig","StableConfigContext","useTokenBalance","currencyId","unwrappedToken","LightCard","AutoColumn","CurrencyLogo","DoubleCurrencyLogo","RowBetween","RowFixed","formatAmount","useLPApr","FixedHeightRow","useTokensDeposited","pair","totalPoolTokens","userPoolBalance","token0Deposited","token1Deposited","greaterThanOrEqual","quotient","getLiquidityValue","token0","token1","undefined","useTotalUSDValue","currency0","currency1","token0Price","token1Price","token0USDValue","parseFloat","toSignificant","token1USDValue","usePoolTokenPercentage","withLPValuesFactory","useLPValuesHook","hookArgFn","Component","props","account","showUnwrapped","liquidityToken","poolTokenPercentage","args","totalUSDValue","withLPValues","withStableLPValues","lpAmount","toString","MinimalPositionCardView","isStableLP","t","poolData","targetRef","tooltip","tooltipVisible","placement","greaterThan","gap","color","bold","margin","size","small","symbol","flexDirection","alignItems","Number","isFinite","toLocaleString","minimumFractionDigits","maximumFractionDigits","ref","lpApr7d","toFixed","asset","ml","fontSize","style","textAlign","role","aria-label","FullPositionCard","showMore","setShowMore","justifyContent","onClick","p","mb","padding","currency","as","to","variant","width","startIcon","MinimalPositionCard","StableFullPositionCardContainer","StableFullPositionCard","stableSwapConfig","config","tokenA","tokenB","Provider","value","CurrencyAmount","useTokenContract","useSingleCallResult","token","contract","isToken","address","totalSupplyStr","result","fromRawAmount","useCallback","useSelector","useActiveWeb3React","wrappedCurrency","usePair","tryParseAmount","useAppDispatch","useTokenBalances","Field","typeInput","useBurnState","state","burn","useDerivedBurnInfo","currencyA","currencyB","removalCheckedA","removalCheckedB","zapMode","chainId","independentField","typedValue","relevantTokenBalances","userLiquidity","tokens","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","liquidityValueA","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","liquidityValue","liquidityToRemove","multiply","tokenToReceive","amountA","amountB","tokenAmountToZap","estimateZapOutAmount","getOutputAmount","error","parsedAmounts","add","useBurnActionHandlers","dispatch","onUserInput","field","BigNumber","formatUnits","computePriceImpact","MINIMUM_LIQUIDITY","Price","FetchStatus","useTradeExactIn","useZapContract","useNativeCurrency","PairState","usePreviousValue","useSWRContract","useEffect","useGasPrice","warningSeverity","useCurrencyBalances","useMintState","mint","useMintActionHandlers","noLiquidity","onFieldAInput","onFieldBInput","useDerivedMintInfo","otherTypedValue","dependentField","currencies","pairState","NOT_EXISTS","Boolean","equal","EXISTS","reserve0","reserve1","balances","currencyBalances","dependentAmount","wrappedIndependentAmount","wrapped","dependentCurrency","dependentTokenAmount","priceOf","quote","isNative","price","currencyAAmount","currencyBAmount","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","console","addError","INVALID","equalTo","lessThan","MAX_ZAP_REVERSE_RATIO","BigInt","getMaxZapSwapAmount","tokenZap","involvesToken","divide","reserveOf","guessMaxZappableAmount","token0AmountIn","token1AmountIn","maxSwapAmount","_","newPair","getInputAmount","useZapInGasOverhead","inputAmount","gasPrice","native","requiredGas","from","mul","requiredGasAsCurrencyAmount","inputIsBNB","gasCostInInputTokens","outputAmount","useZapIn","canZap","zapTokenCheckedA","zapTokenCheckedB","maxAmounts","inputBlurOnce","setInputBlurOnce","previousBlur","triedAutoReduce","setTriedAutoReduce","_dependentAmount","isDependentAmountGreaterThanMaxAmount","wrappedParsedAmounts","zapContract","rebalancing","singleTokenToZapField","singleTokenToZapAmount","noNeedZap","singleZapEstimate","methodName","params","onError","err","rebalancingZapEstimate","zapInEstimated","data","swapAmountIn","swapAmountOut","isToken0Sold","sellToken0","swapTokenOut","rebalancingSellToken0","token0toZap","equals","swapTokenField","swapOutTokenField","swapTokens","zapInEstimatedError","zapInEstimatedStatus","status","priceImpact","tokenAmountIn","tokenAmountOut","midPrice","overLimitZapRatio","priceSeverity","maxZappableAmount","convertToMaxZappable","formatInput","decimals","zappedTokenAmountA","subtract","zappedTokenAmountB","lpMinted","swapTokenAmountTooLow","swapOutAmountTooLow","gasOverhead","onInputBlurOnce","zapInEstimating","Fetched","useEstimatedAmount","useSWR","useStablePair","stableSwapContract","currencyAAmountQuotient","estimatedToken1Amount","estimatedCurrency","isPriceValid","ZERO_AMOUNT","tokenAmounts","invert","useMintedStabelLP","stableSwapInfoContract","stableSwapAddress","currencyInput","currencyInputAmount","currencyOutputAmount","quotient0Str","quotient1Str","isValid","isToken0","amounts","get_add_liquidity_mint_amount","useStableLPDerivedMintInfo","currencyBAmountQuotient","estimatedOutputAmount","isEstimatedOutputAmountZero","calc_coins_amount","Array","isArray","tokenAAmount","tokenBAmount","useStableDerivedBurnInfo","useContract","stableSwapABI","stableSwapInfoABI","stableLPABI","ERC20Token","useTokenBalancesWithLoadingIndicator","createContext","useSWRImmutable","getStableConfig","deserializeToken","useStableFarms","stableFarms","farms","map","quoteToken","lpAddress","rest","useFindStablePair","find","stablePair","useLPTokensWithBalanceByAccount","lpTokens","stableBalances","lpTokensWithBalance","filter","lpToken","infoStableSwapAddress","stableSwapLPContract","TradeType","Fraction","ONE","laggyMiddleware","useDeferredValue","maximumAmountInFactory","currencyAmountIn","slippageTolerance","slippageAdjustedAmountIn","minimumAmountOutFactory","currencyAmountOut","slippageAdjustedAmountOut","useStableTradeResponse","tradeType","maximumAmountIn","EXACT_INPUT","minimumAmountOut","EXACT_OUTPUT","isInvalid","executionPrice","deferQuotient","estimatedAmount","get_dy","use","useStableTradeExactIn","currencyOut","currencyAmountInQuotient","space","div","defaultProps","forwardRef","NextLink","A","a","replace","children","prefetch","href","passHref","React","Svg","Icon","viewBox","path","d","theme","decorationColor","colors","textSubtle"],"sourceRoot":""}