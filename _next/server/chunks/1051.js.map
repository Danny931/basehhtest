{"version":3,"file":"1051.js","mappings":"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","sources":["webpack://web/./src/config/constants/info.ts","webpack://web/./src/config/constants/lists.ts","webpack://web/./src/hooks/Tokens.ts","webpack://web/./src/hooks/useNativeCurrency.ts","webpack://web/./src/hooks/useTheme.ts","webpack://web/./src/state/info/constant.ts","webpack://web/./src/state/info/hooks.ts","webpack://web/./src/state/info/queries/helpers.ts","webpack://web/./src/state/info/queries/pools/chartData.ts","webpack://web/./src/state/info/queries/pools/poolData.ts","webpack://web/./src/state/info/queries/pools/topPools.ts","webpack://web/./src/state/info/queries/pools/transactions.ts","webpack://web/./src/state/info/queries/protocol/chart.ts","webpack://web/./src/state/info/queries/protocol/overview.ts","webpack://web/./src/state/info/queries/protocol/transactions.ts","webpack://web/./src/state/info/queries/tokens/chartData.ts","webpack://web/./src/state/info/queries/tokens/poolsForToken.ts","webpack://web/./src/state/info/queries/tokens/priceData.ts","webpack://web/./src/state/info/queries/tokens/tokenData.ts","webpack://web/./src/state/info/queries/tokens/topTokens.ts","webpack://web/./src/state/info/queries/tokens/transactions.ts","webpack://web/./src/state/info/types.ts","webpack://web/./src/state/lists/hooks.ts","webpack://web/./src/state/lists/lists.ts","webpack://web/./src/state/user/hooks/index.tsx","webpack://web/./src/state/user/hooks/useUserAddedTokens.ts","webpack://web/./src/utils/formatInfoNumbers.ts","webpack://web/./src/utils/getBlocksFromTimestamps.ts","webpack://web/./src/utils/getChangeForPeriod.ts","webpack://web/./src/utils/getDeltaTimestamps.ts","webpack://web/./src/utils/getLpFeesAndApr.ts","webpack://web/./src/utils/getTokenLogoURL.ts","webpack://web/./src/utils/graphql.ts","webpack://web/./src/utils/requestWithTimeout.ts","webpack://web/./src/views/Info/hooks/useBlocksFromTimestamps.ts","webpack://web/./src/views/Info/utils/infoDataHelpers.ts","webpack://web/./src/views/Info/utils/infoQueryHelpers.ts","webpack://web/../../packages/uikit/src/components/Svg/Icons/ChevronDown.tsx"],"sourcesContent":["export const MINIMUM_SEARCH_CHARACTERS = 2\n\nexport const WEEKS_IN_YEAR = 52.1429\n\nexport const TOTAL_FEE = 0.0025\nexport const LP_HOLDERS_FEE = 0.0017\nexport const TREASURY_FEE = 0.000225\nexport const BUYBACK_FEE = 0.000575\n\nexport const PCS_V2_START = 1619136000 // April 23, 2021, 12:00:00 AM\nexport const PCS_ETH_START = 1664130827 // Sep 23, 2022, 02:33:47 AM\nexport const ONE_DAY_UNIX = 86400 // 24h * 60m * 60s\nexport const ONE_HOUR_SECONDS = 3600\n\nexport const ITEMS_PER_INFO_TABLE_PAGE = 10\n\n// These tokens are either incorrectly priced or have some other issues that spoil the query data\n// None of them present any interest as they have almost 0 daily trade volume\nexport const TOKEN_BLACKLIST = [\n  // These ones are copied from v1 info\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xe40fc6ff5f2895b44268fd2e1a421e07f567e007',\n  '0xfd158609228b43aa380140b46fff3cdf9ad315de',\n  '0xc00af6212fcf0e6fd3143e692ccd4191dc308bea',\n  '0x205969b3ad459f7eba0dee07231a6357183d3fb6',\n  '0x0bd67d358636fd7b0597724aa4f20beedbf3073a',\n  '0xedf5d2a561e8a3cb5a846fbce24d2ccd88f50075',\n  '0x702b0789a3d4dade1688a0c8b7d944e5ba80fc30',\n  '0x041929a760d7049edaef0db246fa76ec975e90cc',\n  '0xba098df8c6409669f5e6ec971ac02cd5982ac108',\n  '0x1bbed115afe9e8d6e9255f18ef10d43ce6608d94',\n  '0xe99512305bf42745fae78003428dcaf662afb35d',\n  '0xbE609EAcbFca10F6E5504D39E3B113F808389056',\n  '0x847daf9dfdc22d5c61c4a857ec8733ef5950e82e',\n  '0xdbf8913dfe14536c0dae5dd06805afb2731f7e7b',\n  // These ones are newly found\n  '0xF1D50dB2C40b63D2c598e2A808d1871a40b1E653',\n  '0x4269e4090ff9dfc99d8846eb0d42e67f01c3ac8b',\n]\n\nexport const ETH_TOKEN_BLACKLIST = ['0x72b169ad8af6c4fb53056b6a2a85602ad6863864']\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst COINGECKO = 'https://tokens.pancakeswap.finance/coingecko.json'\nconst CMC = 'https://tokens.pancakeswap.finance/cmc.json'\n\n// List of official tokens list\nexport const OFFICIAL_LISTS = [PANCAKE_EXTENDED]\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\nexport const WARNING_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_EXTENDED,\n  CMC,\n  COINGECKO,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n  ...WARNING_LIST_URLS,\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","/* eslint-disable no-param-reassign */\nimport { arrayify } from '@ethersproject/bytes'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ERC20Token, ChainId } from '@pancakeswap/sdk'\nimport { TokenAddressMap } from '@pancakeswap/token-lists'\nimport { GELATO_NATIVE } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAtomValue } from 'jotai'\nimport { useMemo } from 'react'\nimport {\n  combinedTokenMapFromActiveUrlsAtom,\n  combinedTokenMapFromOfficialsUrlsAtom,\n  useUnsupportedTokenList,\n  useWarningTokenList,\n} from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport useNativeCurrency from './useNativeCurrency'\n\nconst mapWithoutUrls = (tokenMap: TokenAddressMap<ChainId>, chainId: number) =>\n  Object.keys(tokenMap[chainId] || {}).reduce<{ [address: string]: ERC20Token }>((newMap, address) => {\n    newMap[address] = tokenMap[chainId][address].token\n    return newMap\n  }, {})\n\n/**\n * Returns all tokens that are from active urls and user added tokens\n */\nexport function useAllTokens(): { [address: string]: ERC20Token } {\n  const { chainId } = useActiveWeb3React()\n  const tokenMap = useAtomValue(combinedTokenMapFromActiveUrlsAtom)\n  const userAddedTokens = useUserAddedTokens()\n  return useMemo(() => {\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: ERC20Token }>(\n          (tokenMap_, token) => {\n            tokenMap_[token.address] = token\n            return tokenMap_\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          mapWithoutUrls(tokenMap, chainId),\n        )\n    )\n  }, [userAddedTokens, tokenMap, chainId])\n}\n\n/**\n * Returns all tokens that are from officials token list and user added tokens\n */\nexport function useOfficialsAndUserAddedTokens(): { [address: string]: ERC20Token } {\n  const { chainId } = useActiveWeb3React()\n  const tokenMap = useAtomValue(combinedTokenMapFromOfficialsUrlsAtom)\n  const userAddedTokens = useUserAddedTokens()\n  return useMemo(() => {\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: ERC20Token }>(\n          (tokenMap_, token) => {\n            tokenMap_[token.address] = token\n            return tokenMap_\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          mapWithoutUrls(tokenMap, chainId),\n        )\n    )\n  }, [userAddedTokens, tokenMap, chainId])\n}\n\nexport function useUnsupportedTokens(): { [address: string]: ERC20Token } {\n  const { chainId } = useActiveWeb3React()\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useMemo(() => mapWithoutUrls(unsupportedTokensMap, chainId), [unsupportedTokensMap, chainId])\n}\n\nexport function useWarningTokens(): { [address: string]: ERC20Token } {\n  const warningTokensMap = useWarningTokenList()\n  const { chainId } = useActiveWeb3React()\n  return useMemo(() => mapWithoutUrls(warningTokensMap, chainId), [warningTokensMap, chainId])\n}\n\nexport function useIsTokenActive(token: ERC20Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currency?.equals(token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): ERC20Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: ERC20Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new ERC20Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | ERC20Token | null | undefined {\n  const native = useNativeCurrency()\n  const isNative =\n    currencyId?.toUpperCase() === native.symbol?.toUpperCase() || currencyId?.toLowerCase() === GELATO_NATIVE\n  const token = useToken(isNative ? undefined : currencyId)\n  return isNative ? native : token\n}\n","import { ChainId, Native, NativeCurrency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nexport default function useNativeCurrency(): NativeCurrency {\n  const { chainId } = useActiveWeb3React()\n  return useMemo(() => {\n    try {\n      return Native.onChain(chainId)\n    } catch (e) {\n      return Native.onChain(ChainId.BSC)\n    }\n  }, [chainId])\n}\n","import { useContext } from 'react'\nimport Cookie from 'js-cookie'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useTheme as useNextTheme } from 'next-themes'\n\nexport const COOKIE_THEME_KEY = 'theme'\nexport const THEME_DOMAIN = '.pancakeswap.finance'\n\nconst useTheme = () => {\n  const { resolvedTheme, setTheme } = useNextTheme()\n  const theme = useContext(StyledThemeContext)\n\n  const handleSwitchTheme = (themeValue: 'light' | 'dark') => {\n    try {\n      setTheme(themeValue)\n      Cookie.set(COOKIE_THEME_KEY, themeValue, { domain: THEME_DOMAIN })\n    } catch (err) {\n      // ignore set cookie error for perp theme\n    }\n  }\n\n  return { isDark: resolvedTheme === 'dark', theme, setTheme: handleSwitchTheme }\n}\n\nexport default useTheme\n","import { infoClient, infoClientETH, infoStableSwapClient } from 'utils/graphql'\nimport { INFO_CLIENT, INFO_CLIENT_ETH, BLOCKS_CLIENT, BLOCKS_CLIENT_ETH } from 'config/constants/endpoints'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { PCS_V2_START, PCS_ETH_START, ETH_TOKEN_BLACKLIST, TOKEN_BLACKLIST } from 'config/constants/info'\n\nexport type MultiChainName = 'BSC' | 'ETH'\n\nexport const multiChainQueryMainToken = {\n  BSC: 'BNB',\n  ETH: 'ETH',\n}\n\nexport const multiChainBlocksClient = {\n  BSC: BLOCKS_CLIENT,\n  ETH: BLOCKS_CLIENT_ETH,\n}\n\nexport const multiChainStartTime = {\n  BSC: PCS_V2_START,\n  ETH: PCS_ETH_START,\n}\n\nexport const multiChainId = {\n  BSC: ChainId.BSC,\n  ETH: ChainId.ETHEREUM,\n}\n\nexport const multiChainPaths = {\n  [ChainId.BSC]: '',\n  [ChainId.ETHEREUM]: '/eth',\n}\n\nexport const multiChainQueryClient = {\n  BSC: infoClient,\n  ETH: infoClientETH,\n}\n\nexport const multiChainQueryEndPoint = {\n  BSC: INFO_CLIENT,\n  ETH: INFO_CLIENT_ETH,\n}\n\nexport const multiChainScan = {\n  BSC: 'BscScan',\n  ETH: 'EtherScan',\n}\n\nexport const multiChainTokenBlackList = {\n  BSC: TOKEN_BLACKLIST,\n  ETH: ETH_TOKEN_BLACKLIST,\n}\n\nexport const getMultiChainQueryEndPointWithStableSwap = (chainName: MultiChainName) => {\n  const isStableSwap = checkIsStableSwap()\n  if (isStableSwap) return infoStableSwapClient\n  return multiChainQueryClient[chainName]\n}\n\nexport const checkIsStableSwap = () => window.location.href.includes('stableSwap')\n","import { Duration, getUnixTime, startOfHour, sub } from 'date-fns'\nimport { useRouter } from 'next/router'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\n\nimport fetchPoolChartData from 'state/info/queries/pools/chartData'\nimport { fetchAllPoolData, fetchAllPoolDataWithAddress } from 'state/info/queries/pools/poolData'\nimport fetchPoolTransactions from 'state/info/queries/pools/transactions'\nimport { fetchGlobalChartData } from 'state/info/queries/protocol/chart'\nimport { fetchProtocolData } from 'state/info/queries/protocol/overview'\nimport fetchTopTransactions from 'state/info/queries/protocol/transactions'\nimport fetchTokenChartData from 'state/info/queries/tokens/chartData'\nimport fetchPoolsForToken from 'state/info/queries/tokens/poolsForToken'\nimport fetchTokenPriceData from 'state/info/queries/tokens/priceData'\nimport { fetchAllTokenData, fetchAllTokenDataByAddresses } from 'state/info/queries/tokens/tokenData'\nimport fetchTokenTransactions from 'state/info/queries/tokens/transactions'\nimport { Transaction } from 'state/info/types'\nimport useSWRImmutable from 'swr/immutable'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport { useBlockFromTimeStampSWR } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { MultiChainName, checkIsStableSwap } from './constant'\nimport { ChartEntry, PoolData, PriceChartEntry, ProtocolData, TokenData } from './types'\n// Protocol hooks\n\nconst refreshIntervalForInfo = 15000 // 15s\nconst SWR_SETTINGS = { refreshInterval: refreshIntervalForInfo }\n\nexport const useProtocolDataSWR = (): ProtocolData | undefined => {\n  const chainName = useGetChainName()\n  const [t24, t48] = getDeltaTimestamps()\n  const { blocks } = useBlockFromTimeStampSWR([t24, t48])\n  const [block24, block48] = blocks ?? []\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data: protocolData } = useSWRImmutable(\n    chainName && block24 && block48 ? [`info/protocol/updateProtocolData/${type}`, chainName] : null,\n    () => fetchProtocolData(chainName, block24, block48),\n  )\n\n  return protocolData ?? undefined\n}\n\nexport const useProtocolChartDataSWR = (): ChartEntry[] | undefined => {\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data: chartData } = useSWRImmutable([`info/protocol/updateProtocolChartData/${type}`, chainName], () =>\n    fetchGlobalChartData(chainName),\n  )\n  return chartData ?? undefined\n}\n\nexport const useProtocolTransactionsSWR = (): Transaction[] | undefined => {\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data: transactions } = useSWRImmutable(\n    [`info/protocol/updateProtocolTransactionsData/${type}`, chainName],\n    () => fetchTopTransactions(chainName),\n    SWR_SETTINGS, // update latest Transactions per 15s\n  )\n  return transactions ?? undefined\n}\n\nexport const useAllPoolDataSWR = () => {\n  const chainName = useGetChainName()\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks } = useBlockFromTimeStampSWR([t24h, t48h, t7d, t14d])\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable(blocks && chainName && [`info/pools/data/${type}`, chainName], () =>\n    fetchAllPoolData(blocks, chainName),\n  )\n  return data ?? {}\n}\n\nexport const usePoolDatasSWR = (poolAddresses: string[]): PoolData[] => {\n  const name = poolAddresses.join('')\n  const chainName = useGetChainName()\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks } = useBlockFromTimeStampSWR([t24h, t48h, t7d, t14d])\n\n  const { data } = useSWRImmutable(\n    blocks && chainName && [`info/pool/data/${name}`, chainName],\n    () => fetchAllPoolDataWithAddress(blocks, chainName, poolAddresses),\n    SWR_SETTINGS,\n  )\n\n  const poolsWithData = poolAddresses\n    .map((address) => {\n      return data?.[address]?.data\n    })\n    .filter((pool) => pool)\n\n  return poolsWithData\n}\n\nexport const usePoolChartDataSWR = (address: string): ChartEntry[] | undefined => {\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable([`info/pool/chartData/${address}/${type}`, chainName], () =>\n    fetchPoolChartData(chainName, address),\n  )\n  return data?.data ?? undefined\n}\n\nexport const usePoolTransactionsSWR = (address: string): Transaction[] | undefined => {\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable(\n    [`info/pool/transactionsData/${address}/${type}`, chainName],\n    () => fetchPoolTransactions(chainName, address),\n    SWR_SETTINGS,\n  )\n  return data?.data ?? undefined\n}\n\n// Tokens hooks\n\nexport const useAllTokenDataSWR = (): {\n  [address: string]: { data?: TokenData }\n} => {\n  const chainName = useGetChainName()\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks } = useBlockFromTimeStampSWR([t24h, t48h, t7d, t14d])\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable(blocks && chainName && [`info/token/data/${type}`, chainName], () =>\n    fetchAllTokenData(chainName, blocks),\n  )\n  return data ?? {}\n}\n\nexport const useTokenDatasSWR = (addresses?: string[]): TokenData[] | undefined => {\n  const name = addresses.join('')\n  const chainName = useGetChainName()\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks } = useBlockFromTimeStampSWR([t24h, t48h, t7d, t14d])\n\n  const { data } = useSWRImmutable(\n    blocks && chainName && [`info/token/data/${name}`, chainName],\n    () => fetchAllTokenDataByAddresses(chainName, blocks, addresses),\n    SWR_SETTINGS,\n  )\n\n  const tokensWithData = useMemo(() => {\n    if (!addresses) {\n      return undefined\n    }\n    return addresses\n      .map((a) => {\n        return data?.[a]?.data\n      })\n      .filter((d) => d && d.exists)\n  }, [addresses, data])\n\n  return tokensWithData ?? undefined\n}\n\nexport const useTokenDataSWR = (address: string | undefined): TokenData | undefined => {\n  const allTokenData = useTokenDatasSWR([address])\n  return allTokenData.find((d) => d.address === address) ?? undefined\n}\n\nexport const usePoolsForTokenSWR = (address: string): string[] | undefined => {\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable([`info/token/poolAddress/${address}/${type}`, chainName], () =>\n    fetchPoolsForToken(chainName, address),\n  )\n\n  return data?.addresses ?? undefined\n}\n\nexport const useTokenChartDataSWR = (address: string): ChartEntry[] | undefined => {\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable(\n    address && chainName && [`info/token/chartData/${address}/${type}`, chainName],\n    () => fetchTokenChartData(chainName, address),\n    SWR_SETTINGS,\n  )\n\n  return data?.data ?? undefined\n}\n\nexport const useTokenPriceDataSWR = (\n  address: string,\n  interval: number,\n  timeWindow: Duration,\n): PriceChartEntry[] | undefined => {\n  const utcCurrentTime = getUnixTime(new Date()) * 1000\n  const startTimestamp = getUnixTime(startOfHour(sub(utcCurrentTime, timeWindow)))\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable(\n    [`info/token/priceData/${address}/${type}`, chainName],\n    () => fetchTokenPriceData(chainName, address, interval, startTimestamp),\n    SWR_SETTINGS,\n  )\n  return data?.data ?? undefined\n}\n\nexport const useTokenTransactionsSWR = (address: string): Transaction[] | undefined => {\n  const chainName = useGetChainName()\n  const type = checkIsStableSwap() ? 'stableSwap' : 'swap'\n  const { data } = useSWRImmutable(\n    [`info/token/transactionsData/${address}/${type}`, chainName],\n    () => fetchTokenTransactions(chainName, address),\n    SWR_SETTINGS,\n  )\n  return data?.data ?? undefined\n}\n\nexport const useGetChainName = () => {\n  const path = window.location.href\n\n  const getChain = useCallback(() => {\n    if (path.includes('eth') || path.includes('chainId=1')) return 'ETH'\n    return 'BSC'\n  }, [path])\n  const [name, setName] = useState<MultiChainName | null>(getChain())\n  const result = useMemo(() => name, [name])\n\n  useEffect(() => {\n    setName(getChain())\n  }, [getChain])\n\n  return result\n}\n\nexport const useMultiChainPath = () => {\n  const router = useRouter()\n  const { chainName } = router.query\n  return chainName ? `/${chainName}` : ''\n}\n\nexport const useStableSwapPath = () => {\n  return checkIsStableSwap() ? '?type=stableSwap' : ''\n}\n","import fromPairs from 'lodash/fromPairs'\nimport { ONE_DAY_UNIX } from 'config/constants/info'\nimport { getUnixTime } from 'date-fns'\nimport { TransactionType } from 'state/info/types'\nimport { ChartEntry } from '../types'\nimport { MultiChainName, multiChainStartTime } from '../constant'\nimport { MintResponse, SwapResponse, BurnResponse, TokenDayData, PairDayData, PancakeDayData } from './types'\n\nexport const mapMints = (mint: MintResponse) => {\n  return {\n    type: TransactionType.MINT,\n    hash: mint.id.split('-')[0],\n    timestamp: mint.timestamp,\n    sender: mint.to,\n    token0Symbol: mint.pair.token0.symbol,\n    token1Symbol: mint.pair.token1.symbol,\n    token0Address: mint.pair.token0.id,\n    token1Address: mint.pair.token1.id,\n    amountUSD: parseFloat(mint.amountUSD),\n    amountToken0: parseFloat(mint.amount0),\n    amountToken1: parseFloat(mint.amount1),\n  }\n}\n\nexport const mapBurns = (burn: BurnResponse) => {\n  return {\n    type: TransactionType.BURN,\n    hash: burn.id.split('-')[0],\n    timestamp: burn.timestamp,\n    sender: burn.sender,\n    token0Symbol: burn.pair.token0.symbol,\n    token1Symbol: burn.pair.token1.symbol,\n    token0Address: burn.pair.token0.id,\n    token1Address: burn.pair.token1.id,\n    amountUSD: parseFloat(burn.amountUSD),\n    amountToken0: parseFloat(burn.amount0),\n    amountToken1: parseFloat(burn.amount1),\n  }\n}\n\nexport const mapSwaps = (swap: SwapResponse) => {\n  return {\n    type: TransactionType.SWAP,\n    hash: swap.id.split('-')[0],\n    timestamp: swap.timestamp,\n    sender: swap.from,\n    token0Symbol: swap.pair.token0.symbol,\n    token1Symbol: swap.pair.token1.symbol,\n    token0Address: swap.pair.token0.id,\n    token1Address: swap.pair.token1.id,\n    amountUSD: parseFloat(swap.amountUSD),\n    amountToken0: parseFloat(swap.amount0In) - parseFloat(swap.amount0Out),\n    amountToken1: parseFloat(swap.amount1In) - parseFloat(swap.amount1Out),\n  }\n}\n\nexport const mapDayData = (tokenDayData: TokenDayData | PancakeDayData): ChartEntry => ({\n  date: tokenDayData.date,\n  volumeUSD: parseFloat(tokenDayData.dailyVolumeUSD),\n  liquidityUSD: parseFloat(tokenDayData.totalLiquidityUSD),\n})\n\nexport const mapPairDayData = (pairDayData: PairDayData): ChartEntry => ({\n  date: pairDayData.date,\n  volumeUSD: parseFloat(pairDayData.dailyVolumeUSD),\n  liquidityUSD: parseFloat(pairDayData.reserveUSD),\n})\n\ntype PoolOrTokenFetchFn = (\n  chainName: MultiChainName,\n  skip: number,\n  address: string,\n) => Promise<{ data?: ChartEntry[]; error: boolean }>\n\ntype OverviewFetchFn = (chianName: MultiChainName, skip: number) => Promise<{ data?: ChartEntry[]; error: boolean }>\n\n// Common helper function to retrieve chart data\n// Used for both Pool and Token charts\nexport const fetchChartData = async (\n  chainName: MultiChainName,\n  getEntityDayDatas: OverviewFetchFn,\n): Promise<{ data?: ChartEntry[]; error: boolean }> => {\n  let chartEntries: ChartEntry[] = []\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  while (!allFound) {\n    // eslint-disable-next-line no-await-in-loop\n    const { data, error: fetchError } = await getEntityDayDatas(chainName, skip)\n    skip += 1000\n    allFound = data?.length < 1000\n    error = fetchError\n    if (data) {\n      chartEntries = chartEntries.concat(data)\n    }\n  }\n\n  if (error || chartEntries.length === 0) {\n    return {\n      error: true,\n    }\n  }\n\n  const formattedDayDatas = fromPairs(\n    chartEntries.map((dayData) => {\n      // At this stage we track unix day ordinal for each data point to check for empty days later\n      const dayOrdinal = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      return [dayOrdinal, dayData]\n    }),\n  )\n\n  console.warn(formattedDayDatas)\n\n  const availableDays = Object.keys(formattedDayDatas).map((dayOrdinal) => parseInt(dayOrdinal, 10))\n\n  const firstAvailableDayData = formattedDayDatas[availableDays[0]]\n  // fill in empty days ( there will be no day datas if no trades made that day )\n  let timestamp = firstAvailableDayData?.date ?? multiChainStartTime[chainName]\n  let latestLiquidityUSD = firstAvailableDayData?.liquidityUSD ?? 0\n  const endTimestamp = getUnixTime(new Date())\n  while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n    timestamp += ONE_DAY_UNIX\n    const dayOrdinal = parseInt((timestamp / ONE_DAY_UNIX).toFixed(0), 10)\n    if (!Object.keys(formattedDayDatas).includes(dayOrdinal.toString())) {\n      formattedDayDatas[dayOrdinal] = {\n        date: timestamp,\n        volumeUSD: 0,\n        liquidityUSD: latestLiquidityUSD,\n      }\n    } else {\n      latestLiquidityUSD = formattedDayDatas[dayOrdinal].liquidityUSD\n    }\n  }\n\n  return {\n    data: Object.values(formattedDayDatas),\n    error: false,\n  }\n}\n\nexport const fetchChartDataWithAddress = async (\n  chainName: MultiChainName,\n  getEntityDayDatas: PoolOrTokenFetchFn,\n  address: string,\n): Promise<{ data?: ChartEntry[]; error: boolean }> => {\n  let chartEntries: ChartEntry[] = []\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  while (!allFound) {\n    // eslint-disable-next-line no-await-in-loop\n    const { data, error: fetchError } = await getEntityDayDatas(chainName, skip, address)\n    skip += 1000\n    allFound = data?.length < 1000\n    error = fetchError\n    if (data) {\n      chartEntries = chartEntries.concat(data)\n    }\n  }\n\n  if (error || chartEntries.length === 0) {\n    return {\n      error: true,\n    }\n  }\n\n  const formattedDayDatas = fromPairs(\n    chartEntries.map((dayData) => {\n      // At this stage we track unix day ordinal for each data point to check for empty days later\n      const dayOrdinal = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      return [dayOrdinal, dayData]\n    }),\n  )\n  console.warn(formattedDayDatas)\n\n  const availableDays = Object.keys(formattedDayDatas).map((dayOrdinal) => parseInt(dayOrdinal, 10))\n\n  const firstAvailableDayData = formattedDayDatas[availableDays[0]]\n  // fill in empty days ( there will be no day datas if no trades made that day )\n  let timestamp = firstAvailableDayData?.date ?? multiChainStartTime[chainName]\n  let latestLiquidityUSD = firstAvailableDayData?.liquidityUSD ?? 0\n  const endTimestamp = getUnixTime(new Date())\n  while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n    timestamp += ONE_DAY_UNIX\n    const dayOrdinal = parseInt((timestamp / ONE_DAY_UNIX).toFixed(0), 10)\n    if (!Object.keys(formattedDayDatas).includes(dayOrdinal.toString())) {\n      formattedDayDatas[dayOrdinal] = {\n        date: timestamp,\n        volumeUSD: 0,\n        liquidityUSD: latestLiquidityUSD,\n      }\n    } else {\n      latestLiquidityUSD = formattedDayDatas[dayOrdinal].liquidityUSD\n    }\n  }\n\n  return {\n    data: Object.values(formattedDayDatas),\n    error: false,\n  }\n}\n","import { gql } from 'graphql-request'\nimport { ChartEntry } from 'state/info/types'\nimport { PairDayDatasResponse } from '../types'\nimport { mapPairDayData, fetchChartDataWithAddress } from '../helpers'\nimport { getMultiChainQueryEndPointWithStableSwap, MultiChainName, multiChainStartTime } from '../../constant'\n\nconst getPoolChartData = async (\n  chainName: MultiChainName,\n  skip: number,\n  address: string,\n): Promise<{ data?: ChartEntry[]; error: boolean }> => {\n  try {\n    const query = gql`\n      query pairDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n        pairDayDatas(\n          first: 1000\n          skip: $skip\n          where: { pairAddress: $address, date_gt: $startTime }\n          orderBy: date\n          orderDirection: asc\n        ) {\n          date\n          dailyVolumeUSD\n          reserveUSD\n        }\n      }\n    `\n    const { pairDayDatas } = await getMultiChainQueryEndPointWithStableSwap(chainName).request<PairDayDatasResponse>(\n      query,\n      {\n        startTime: multiChainStartTime[chainName],\n        skip,\n        address,\n      },\n    )\n    const data = pairDayDatas.map(mapPairDayData)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch pool chart data', error)\n    return { error: true }\n  }\n}\n\nconst fetchPoolChartData = async (\n  chainName: MultiChainName,\n  address: string,\n): Promise<{ data?: ChartEntry[]; error: boolean }> => {\n  return fetchChartDataWithAddress(chainName, getPoolChartData, address)\n}\n\nexport default fetchPoolChartData\n","/* eslint-disable no-param-reassign */\nimport { gql } from 'graphql-request'\nimport { useEffect, useState } from 'react'\nimport { PoolData, Block } from 'state/info/types'\nimport { getChangeForPeriod } from 'utils/getChangeForPeriod'\nimport { getLpFeesAndApr } from 'utils/getLpFeesAndApr'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { getPercentChange } from 'views/Info/utils/infoDataHelpers'\nimport { useGetChainName } from '../../hooks'\nimport { MultiChainName, multiChainQueryMainToken, getMultiChainQueryEndPointWithStableSwap } from '../../constant'\nimport { fetchTopPoolAddresses } from './topPools'\n\ninterface PoolFields {\n  id: string\n  reserve0: string\n  reserve1: string\n  reserveUSD: string\n  volumeUSD: string\n  token0Price: string\n  token1Price: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n  }\n}\n\nexport interface FormattedPoolFields\n  extends Omit<PoolFields, 'volumeUSD' | 'reserveUSD' | 'reserve0' | 'reserve1' | 'token0Price' | 'token1Price'> {\n  volumeUSD: number\n  reserveUSD: number\n  reserve0: number\n  reserve1: number\n  token0Price: number\n  token1Price: number\n}\n\ninterface PoolsQueryResponse {\n  now: PoolFields[]\n  oneDayAgo: PoolFields[]\n  twoDaysAgo: PoolFields[]\n  oneWeekAgo: PoolFields[]\n  twoWeeksAgo: PoolFields[]\n}\n\n/**\n * Data for displaying pool tables (on multiple pages, used throughout the site)\n * Note: Don't try to refactor it to use variables, server throws error if blocks passed as undefined variable\n * only works if its hard-coded into query string\n */\nconst POOL_AT_BLOCK = (chainName: MultiChainName, block: number | null, pools: string[]) => {\n  const blockString = block ? `block: {number: ${block}}` : ``\n  const addressesString = `[\"${pools.join('\",\"')}\"]`\n  return `pairs(\n    where: { id_in: ${addressesString} }\n    ${blockString}\n    orderBy: trackedReserve${multiChainQueryMainToken[chainName]}\n    orderDirection: desc\n  ) {\n    id\n    reserve0\n    reserve1\n    reserveUSD\n    volumeUSD\n    token0Price\n    token1Price\n    token0 {\n      id\n      symbol\n      name\n    }\n    token1 {\n      id\n      symbol\n      name\n    }\n  }`\n}\n\nexport const fetchPoolData = async (\n  block24h: number,\n  block48h: number,\n  block7d: number,\n  block14d: number,\n  poolAddresses: string[],\n  chainName: 'ETH' | 'BSC' = 'BSC',\n) => {\n  const weeksQuery = chainName === 'BSC' ? `twoWeeksAgo: ${POOL_AT_BLOCK(chainName, block14d, poolAddresses)}` : ''\n  try {\n    const query = gql`\n      query pools {\n        now: ${POOL_AT_BLOCK(chainName, null, poolAddresses)}\n        oneDayAgo: ${POOL_AT_BLOCK(chainName, block24h, poolAddresses)}\n        twoDaysAgo: ${POOL_AT_BLOCK(chainName, block48h, poolAddresses)}\n        oneWeekAgo: ${POOL_AT_BLOCK(chainName, block7d, poolAddresses)}\n        ${weeksQuery}\n      }\n    `\n\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<PoolsQueryResponse>(query)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch pool data', error)\n    return { error: true }\n  }\n}\n\n// Transforms pools into \"0xADDRESS: { ...PoolFields }\" format and cast strings to numbers\nexport const parsePoolData = (pairs?: PoolFields[]) => {\n  if (!pairs) {\n    return {}\n  }\n  return pairs.reduce((accum: { [address: string]: FormattedPoolFields }, poolData) => {\n    const { volumeUSD, reserveUSD, reserve0, reserve1, token0Price, token1Price } = poolData\n    accum[poolData.id] = {\n      ...poolData,\n      volumeUSD: parseFloat(volumeUSD),\n      reserveUSD: parseFloat(reserveUSD),\n      reserve0: parseFloat(reserve0),\n      reserve1: parseFloat(reserve1),\n      token0Price: parseFloat(token0Price),\n      token1Price: parseFloat(token1Price),\n    }\n    return accum\n  }, {})\n}\n\ninterface PoolDatas {\n  error: boolean\n  data?: {\n    [address: string]: PoolData\n  }\n}\n\n/**\n * Fetch top pools by liquidity\n */\nconst usePoolDatas = (poolAddresses: string[]): PoolDatas => {\n  const [fetchState, setFetchState] = useState<PoolDatas>({ error: false })\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24h, t48h, t7d, t14d])\n  const [block24h, block48h, block7d, block14d] = blocks ?? []\n  const chainName = useGetChainName()\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { error, data } = await fetchPoolData(\n        block24h.number,\n        block48h.number,\n        block7d.number,\n        block14d.number,\n        poolAddresses,\n        chainName,\n      )\n      if (error) {\n        setFetchState({ error: true })\n      } else {\n        const formattedPoolData = parsePoolData(data?.now)\n        const formattedPoolData24h = parsePoolData(data?.oneDayAgo)\n        const formattedPoolData48h = parsePoolData(data?.twoDaysAgo)\n        const formattedPoolData7d = parsePoolData(data?.oneWeekAgo)\n        const formattedPoolData14d = parsePoolData(data?.twoWeeksAgo)\n\n        // Calculate data and format\n        const formatted = poolAddresses.reduce((accum: { [address: string]: PoolData }, address) => {\n          // Undefined data is possible if pool is brand new and didn't exist one day ago or week ago.\n          const current: FormattedPoolFields | undefined = formattedPoolData[address]\n          const oneDay: FormattedPoolFields | undefined = formattedPoolData24h[address]\n          const twoDays: FormattedPoolFields | undefined = formattedPoolData48h[address]\n          const week: FormattedPoolFields | undefined = formattedPoolData7d[address]\n          const twoWeeks: FormattedPoolFields | undefined = formattedPoolData14d[address]\n\n          const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n            current?.volumeUSD,\n            oneDay?.volumeUSD,\n            twoDays?.volumeUSD,\n          )\n          const [volumeUSDWeek, volumeUSDChangeWeek] = getChangeForPeriod(\n            current?.volumeUSD,\n            week?.volumeUSD,\n            twoWeeks?.volumeUSD,\n          )\n\n          const liquidityUSD = current ? current.reserveUSD : 0\n\n          const liquidityUSDChange = getPercentChange(current?.reserveUSD, oneDay?.reserveUSD)\n\n          const liquidityToken0 = current ? current.reserve0 : 0\n          const liquidityToken1 = current ? current.reserve1 : 0\n\n          const { totalFees24h, totalFees7d, lpFees24h, lpFees7d, lpApr7d } = getLpFeesAndApr(\n            volumeUSD,\n            volumeUSDWeek,\n            liquidityUSD,\n          )\n\n          if (current) {\n            accum[address] = {\n              address,\n              token0: {\n                address: current.token0.id,\n                name: current.token0.name,\n                symbol: current.token0.symbol,\n              },\n              token1: {\n                address: current.token1.id,\n                name: current.token1.name,\n                symbol: current.token1.symbol,\n              },\n              token0Price: current.token0Price,\n              token1Price: current.token1Price,\n              volumeUSD,\n              volumeUSDChange,\n              volumeUSDWeek,\n              volumeUSDChangeWeek,\n              totalFees24h,\n              totalFees7d,\n              lpFees24h,\n              lpFees7d,\n              lpApr7d,\n              liquidityUSD,\n              liquidityUSDChange,\n              liquidityToken0,\n              liquidityToken1,\n            }\n          }\n\n          return accum\n        }, {})\n        setFetchState({ data: formatted, error: false })\n      }\n    }\n\n    const allBlocksAvailable = block24h?.number && block48h?.number && block7d?.number && block14d?.number\n    if (poolAddresses.length > 0 && allBlocksAvailable && !blockError) {\n      fetch()\n    }\n  }, [poolAddresses, block24h, block48h, block7d, block14d, blockError, chainName])\n\n  return fetchState\n}\n\nexport const fetchAllPoolDataWithAddress = async (\n  blocks: Block[],\n  chainName: MultiChainName,\n  poolAddresses: string[],\n) => {\n  const [block24h, block48h, block7d, block14d] = blocks ?? []\n\n  const { data } = await fetchPoolData(\n    block24h.number,\n    block48h.number,\n    block7d.number,\n    block14d.number,\n    poolAddresses,\n    chainName,\n  )\n\n  const formattedPoolData = parsePoolData(data?.now)\n  const formattedPoolData24h = parsePoolData(data?.oneDayAgo)\n  const formattedPoolData48h = parsePoolData(data?.twoDaysAgo)\n  const formattedPoolData7d = parsePoolData(data?.oneWeekAgo)\n  const formattedPoolData14d = parsePoolData(data?.twoWeeksAgo)\n\n  // Calculate data and format\n  const formatted = poolAddresses.reduce((accum: { [address: string]: { data: PoolData } }, address) => {\n    // Undefined data is possible if pool is brand new and didn't exist one day ago or week ago.\n    const current: FormattedPoolFields | undefined = formattedPoolData[address]\n    const oneDay: FormattedPoolFields | undefined = formattedPoolData24h[address]\n    const twoDays: FormattedPoolFields | undefined = formattedPoolData48h[address]\n    const week: FormattedPoolFields | undefined = formattedPoolData7d[address]\n    const twoWeeks: FormattedPoolFields | undefined = formattedPoolData14d[address]\n\n    const [volumeUSD, volumeUSDChange] = getChangeForPeriod(current?.volumeUSD, oneDay?.volumeUSD, twoDays?.volumeUSD)\n    const [volumeUSDWeek, volumeUSDChangeWeek] = getChangeForPeriod(\n      current?.volumeUSD,\n      week?.volumeUSD,\n      twoWeeks?.volumeUSD,\n    )\n\n    const liquidityUSD = current ? current.reserveUSD : 0\n\n    const liquidityUSDChange = getPercentChange(current?.reserveUSD, oneDay?.reserveUSD)\n\n    const liquidityToken0 = current ? current.reserve0 : 0\n    const liquidityToken1 = current ? current.reserve1 : 0\n\n    const { totalFees24h, totalFees7d, lpFees24h, lpFees7d, lpApr7d } = getLpFeesAndApr(\n      volumeUSD,\n      volumeUSDWeek,\n      liquidityUSD,\n    )\n\n    if (current) {\n      accum[address] = {\n        data: {\n          address,\n          token0: {\n            address: current.token0.id,\n            name: current.token0.name,\n            symbol: current.token0.symbol,\n          },\n          token1: {\n            address: current.token1.id,\n            name: current.token1.name,\n            symbol: current.token1.symbol,\n          },\n          token0Price: current.token0Price,\n          token1Price: current.token1Price,\n          volumeUSD,\n          volumeUSDChange,\n          volumeUSDWeek,\n          volumeUSDChangeWeek,\n          totalFees24h,\n          totalFees7d,\n          lpFees24h,\n          lpFees7d,\n          lpApr7d,\n          liquidityUSD,\n          liquidityUSDChange,\n          liquidityToken0,\n          liquidityToken1,\n        },\n      }\n    }\n\n    return accum\n  }, {})\n  return formatted\n}\n\nexport const fetchAllPoolData = async (blocks: Block[], chainName: MultiChainName) => {\n  const poolAddresses = await fetchTopPoolAddresses(chainName)\n  return fetchAllPoolDataWithAddress(blocks, chainName, poolAddresses)\n}\n\nexport default usePoolDatas\n","import { gql } from 'graphql-request'\nimport { useEffect, useState } from 'react'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport {\n  checkIsStableSwap,\n  getMultiChainQueryEndPointWithStableSwap,\n  MultiChainName,\n  multiChainTokenBlackList,\n} from '../../constant'\nimport { useGetChainName } from '../../hooks'\n\ninterface TopPoolsResponse {\n  pairDayDatas: {\n    id: string\n  }[]\n}\n\n/**\n * Initial pools to display on the home page\n */\nconst fetchTopPools = async (chainName: MultiChainName, timestamp24hAgo: number): Promise<string[]> => {\n  const isStableSwap = checkIsStableSwap()\n  let whereCondition =\n    chainName === 'BSC'\n      ? `where: { dailyTxns_gt: 300, token0_not_in: $blacklist, token1_not_in: $blacklist, date_gt: ${timestamp24hAgo} }`\n      : `where: { date_gt: ${timestamp24hAgo}, token0_not_in: $blacklist, token1_not_in: $blacklist, dailyVolumeUSD_gt: 2000 }`\n  if (isStableSwap) whereCondition = ''\n  try {\n    const query = gql`\n      query topPools($blacklist: [String!]) {\n        pairDayDatas(\n          first: 30\n          ${whereCondition}\n          orderBy: dailyVolumeUSD\n          orderDirection: desc\n        ) {\n          id\n        }\n      }\n    `\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<TopPoolsResponse>(query, {\n      blacklist: multiChainTokenBlackList[chainName],\n    })\n    // pairDayDatas id has compound id \"0xPOOLADDRESS-NUMBERS\", extracting pool address with .split('-')\n    return data.pairDayDatas.map((p) => p.id.split('-')[0])\n  } catch (error) {\n    console.error('Failed to fetch top pools', error)\n    return []\n  }\n}\n\n/**\n * Fetch top addresses by volume\n */\nconst useTopPoolAddresses = (): string[] => {\n  const [topPoolAddresses, setTopPoolAddresses] = useState([])\n  const [timestamp24hAgo] = getDeltaTimestamps()\n  const chainName = useGetChainName()\n\n  useEffect(() => {\n    const fetch = async () => {\n      const addresses = await fetchTopPools(chainName, timestamp24hAgo)\n      setTopPoolAddresses(addresses)\n    }\n    if (topPoolAddresses.length === 0) {\n      fetch()\n    }\n  }, [topPoolAddresses, timestamp24hAgo, chainName])\n\n  return topPoolAddresses\n}\n\nexport const fetchTopPoolAddresses = async (chainName: MultiChainName) => {\n  const [timestamp24hAgo] = getDeltaTimestamps()\n\n  const addresses = await fetchTopPools(chainName, timestamp24hAgo)\n  return addresses\n}\n\nexport default useTopPoolAddresses\n","import { gql } from 'graphql-request'\nimport { mapBurns, mapMints, mapSwaps } from 'state/info/queries/helpers'\nimport { BurnResponse, MintResponse, SwapResponse } from 'state/info/queries/types'\nimport { Transaction } from 'state/info/types'\nimport { MultiChainName, getMultiChainQueryEndPointWithStableSwap } from '../../constant'\n/**\n * Transactions of the given pool, used on Pool page\n */\nconst POOL_TRANSACTIONS = gql`\n  query poolTransactions($address: Bytes!) {\n    mints(first: 35, orderBy: timestamp, orderDirection: desc, where: { pair: $address }) {\n      id\n      timestamp\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 35, orderBy: timestamp, orderDirection: desc, where: { pair: $address }) {\n      id\n      timestamp\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      from\n      amount0In\n      amount1In\n      amount0Out\n      amount1Out\n      amountUSD\n    }\n    burns(first: 35, orderBy: timestamp, orderDirection: desc, where: { pair: $address }) {\n      id\n      timestamp\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\ninterface TransactionResults {\n  mints: MintResponse[]\n  swaps: SwapResponse[]\n  burns: BurnResponse[]\n}\n\nconst fetchPoolTransactions = async (\n  chainName: MultiChainName,\n  address: string,\n): Promise<{ data?: Transaction[]; error: boolean }> => {\n  try {\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<TransactionResults>(\n      POOL_TRANSACTIONS,\n      {\n        address,\n      },\n    )\n    const mints = data.mints.map(mapMints)\n    const burns = data.burns.map(mapBurns)\n    const swaps = data.swaps.map(mapSwaps)\n    return { data: [...mints, ...burns, ...swaps], error: false }\n  } catch (error) {\n    console.error(`Failed to fetch transactions for pool ${address}`, error)\n    return {\n      error: true,\n    }\n  }\n}\n\nexport default fetchPoolTransactions\n","/* eslint-disable no-await-in-loop */\nimport { gql } from 'graphql-request'\nimport { useEffect, useState } from 'react'\nimport { ChartEntry } from 'state/info/types'\nimport { fetchChartData, mapDayData } from '../helpers'\nimport { PancakeDayDatasResponse } from '../types'\nimport { MultiChainName, getMultiChainQueryEndPointWithStableSwap, multiChainStartTime } from '../../constant'\nimport { useGetChainName } from '../../hooks'\n\n/**\n * Data for displaying Liquidity and Volume charts on Overview page\n */\nconst PANCAKE_DAY_DATAS = gql`\n  query overviewCharts($startTime: Int!, $skip: Int!) {\n    pancakeDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      date\n      dailyVolumeUSD\n      totalLiquidityUSD\n    }\n  }\n`\n\nconst getOverviewChartData = async (\n  chainName: MultiChainName,\n  skip: number,\n): Promise<{ data?: ChartEntry[]; error: boolean }> => {\n  try {\n    const { pancakeDayDatas } = await getMultiChainQueryEndPointWithStableSwap(\n      chainName,\n    ).request<PancakeDayDatasResponse>(PANCAKE_DAY_DATAS, {\n      startTime: multiChainStartTime[chainName],\n      skip,\n    })\n    const data = pancakeDayDatas.map(mapDayData)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch overview chart data', error)\n    return { error: true }\n  }\n}\n\n/**\n * Fetch historic chart data\n */\nconst useFetchGlobalChartData = (): {\n  error: boolean\n  data: ChartEntry[] | undefined\n} => {\n  const [overviewChartData, setOverviewChartData] = useState<ChartEntry[] | undefined>()\n  const [error, setError] = useState(false)\n  const chainName = useGetChainName()\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await fetchChartData(chainName, getOverviewChartData)\n      if (data) {\n        setOverviewChartData(data)\n      } else {\n        setError(true)\n      }\n    }\n    if (!overviewChartData && !error) {\n      fetch()\n    }\n  }, [overviewChartData, error, chainName])\n\n  return {\n    error,\n    data: overviewChartData,\n  }\n}\n\nexport const fetchGlobalChartData = async (chainName: MultiChainName) => {\n  const { data } = await fetchChartData(chainName, getOverviewChartData)\n  return data\n}\n\nexport default useFetchGlobalChartData\n","import { gql } from 'graphql-request'\nimport { useEffect, useState } from 'react'\nimport { Block, ProtocolData } from 'state/info/types'\nimport { getChangeForPeriod } from 'utils/getChangeForPeriod'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { getPercentChange } from 'views/Info/utils/infoDataHelpers'\nimport { checkIsStableSwap, getMultiChainQueryEndPointWithStableSwap, MultiChainName } from '../../constant'\nimport { useGetChainName } from '../../hooks'\n\ninterface PancakeFactory {\n  totalTransactions: string\n  totalVolumeUSD: string\n  totalLiquidityUSD: string\n}\n\ninterface OverviewResponse {\n  pancakeFactories: PancakeFactory[]\n  factories?: PancakeFactory[]\n}\n/**\n * Latest Liquidity, Volume and Transaction count\n */\nconst getOverviewData = async (\n  chainName: MultiChainName,\n  block?: number,\n): Promise<{ data?: OverviewResponse; error: boolean }> => {\n  const factoryString = checkIsStableSwap() ? `factories` : `pancakeFactories`\n  try {\n    const query = gql`query overview {\n      ${factoryString}(\n        ${block ? `block: { number: ${block}}` : ``}\n        first: 1) {\n        totalTransactions\n        totalVolumeUSD\n        totalLiquidityUSD\n      }\n    }`\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<OverviewResponse>(query)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch info overview', error)\n    return { data: null, error: true }\n  }\n}\n\nconst formatPancakeFactoryResponse = (rawPancakeFactory?: PancakeFactory) => {\n  if (rawPancakeFactory) {\n    return {\n      totalTransactions: parseFloat(rawPancakeFactory.totalTransactions),\n      totalVolumeUSD: parseFloat(rawPancakeFactory.totalVolumeUSD),\n      totalLiquidityUSD: parseFloat(rawPancakeFactory.totalLiquidityUSD),\n    }\n  }\n  return null\n}\n\ninterface ProtocolFetchState {\n  error: boolean\n  data?: ProtocolData\n}\n\nconst useFetchProtocolData = (): ProtocolFetchState => {\n  const [fetchState, setFetchState] = useState<ProtocolFetchState>({\n    error: false,\n  })\n  const [t24, t48] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48])\n  const [block24, block48] = blocks ?? []\n  const chainName = useGetChainName()\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const [{ error, data }, { error: error24, data: data24 }, { error: error48, data: data48 }] = await Promise.all([\n        getOverviewData(chainName),\n        getOverviewData(chainName, block24?.number ?? undefined),\n        getOverviewData(chainName, block48?.number ?? undefined),\n      ])\n      const anyError = error || error24 || error48\n      const overviewData = formatPancakeFactoryResponse(data?.pancakeFactories?.[0])\n      const overviewData24 = formatPancakeFactoryResponse(data24?.pancakeFactories?.[0])\n      const overviewData48 = formatPancakeFactoryResponse(data48?.pancakeFactories?.[0])\n      const allDataAvailable = overviewData && overviewData24 && overviewData48\n      if (anyError || !allDataAvailable) {\n        setFetchState({\n          error: true,\n        })\n      } else {\n        const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n          overviewData.totalVolumeUSD,\n          overviewData24.totalVolumeUSD,\n          overviewData48.totalVolumeUSD,\n        )\n        const liquidityUSDChange = getPercentChange(overviewData.totalLiquidityUSD, overviewData24.totalLiquidityUSD)\n        // 24H transactions\n        const [txCount, txCountChange] = getChangeForPeriod(\n          overviewData.totalTransactions,\n          overviewData24.totalTransactions,\n          overviewData48.totalTransactions,\n        )\n        const protocolData: ProtocolData = {\n          volumeUSD,\n          volumeUSDChange: typeof volumeUSDChange === 'number' ? volumeUSDChange : 0,\n          liquidityUSD: overviewData.totalLiquidityUSD,\n          liquidityUSDChange,\n          txCount,\n          txCountChange,\n        }\n        setFetchState({\n          error: false,\n          data: protocolData,\n        })\n      }\n    }\n\n    const allBlocksAvailable = block24?.number && block48?.number\n    if (allBlocksAvailable && !blockError && !fetchState.data) {\n      fetchData()\n    }\n  }, [block24, block48, blockError, fetchState, chainName])\n\n  return fetchState\n}\n\nexport const fetchProtocolData = async (chainName: MultiChainName, block24: Block, block48: Block) => {\n  const [{ data }, { data: data24 }, { data: data48 }] = await Promise.all([\n    getOverviewData(chainName),\n    getOverviewData(chainName, block24?.number ?? undefined),\n    getOverviewData(chainName, block48?.number ?? undefined),\n  ])\n  if (data.factories && data.factories.length > 0) data.pancakeFactories = data.factories\n  if (data24.factories && data24.factories.length > 0) data24.pancakeFactories = data24.factories\n  if (data48.factories && data48.factories.length > 0) data48.pancakeFactories = data48.factories\n\n  // const anyError = error || error24 || error48\n  const overviewData = formatPancakeFactoryResponse(data?.pancakeFactories?.[0])\n  const overviewData24 = formatPancakeFactoryResponse(data24?.pancakeFactories?.[0])\n  const overviewData48 = formatPancakeFactoryResponse(data48?.pancakeFactories?.[0])\n  // const allDataAvailable = overviewData && overviewData24 && overviewData48\n\n  const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n    overviewData.totalVolumeUSD,\n    overviewData24.totalVolumeUSD,\n    overviewData48.totalVolumeUSD,\n  )\n  const liquidityUSDChange = getPercentChange(overviewData.totalLiquidityUSD, overviewData24.totalLiquidityUSD)\n  // 24H transactions\n  const [txCount, txCountChange] = getChangeForPeriod(\n    overviewData.totalTransactions,\n    overviewData24.totalTransactions,\n    overviewData48.totalTransactions,\n  )\n  const protocolData: ProtocolData = {\n    volumeUSD,\n    volumeUSDChange: typeof volumeUSDChange === 'number' ? volumeUSDChange : 0,\n    liquidityUSD: overviewData.totalLiquidityUSD,\n    liquidityUSDChange,\n    txCount,\n    txCountChange,\n  }\n  return protocolData\n}\n\nexport default useFetchProtocolData\n","import { gql } from 'graphql-request'\nimport { mapBurns, mapMints, mapSwaps } from 'state/info/queries/helpers'\nimport { BurnResponse, MintResponse, SwapResponse } from 'state/info/queries/types'\nimport { Transaction } from 'state/info/types'\nimport { getMultiChainQueryEndPointWithStableSwap, MultiChainName } from '../../constant'\n\n/**\n * Transactions for Transaction table on the Home page\n */\nconst GLOBAL_TRANSACTIONS = gql`\n  query overviewTransactions {\n    mints: mints(first: 33, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps: swaps(first: 33, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      from\n      amount0In\n      amount1In\n      amount0Out\n      amount1Out\n      amountUSD\n    }\n    burns: burns(first: 33, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\ninterface TransactionResults {\n  mints: MintResponse[]\n  swaps: SwapResponse[]\n  burns: BurnResponse[]\n}\n\nconst fetchTopTransactions = async (chainName: MultiChainName): Promise<Transaction[] | undefined> => {\n  try {\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<TransactionResults>(\n      GLOBAL_TRANSACTIONS,\n    )\n    if (!data) {\n      return undefined\n    }\n\n    const mints = data.mints.map(mapMints)\n    const burns = data.burns.map(mapBurns)\n    const swaps = data.swaps.map(mapSwaps)\n\n    return [...mints, ...burns, ...swaps].sort((a, b) => {\n      return parseInt(b.timestamp, 10) - parseInt(a.timestamp, 10)\n    })\n  } catch {\n    return undefined\n  }\n}\n\nexport default fetchTopTransactions\n","import { gql } from 'graphql-request'\nimport { ChartEntry } from 'state/info/types'\nimport { fetchChartDataWithAddress, mapDayData } from '../helpers'\nimport { TokenDayDatasResponse } from '../types'\nimport { getMultiChainQueryEndPointWithStableSwap, MultiChainName, multiChainStartTime } from '../../constant'\n\nconst getTokenChartData = async (\n  chainName: MultiChainName,\n  skip: number,\n  address: string,\n): Promise<{ data?: ChartEntry[]; error: boolean }> => {\n  try {\n    const query = gql`\n      query tokenDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n        tokenDayDatas(\n          first: 1000\n          skip: $skip\n          where: { token: $address, date_gt: $startTime }\n          orderBy: date\n          orderDirection: asc\n        ) {\n          date\n          dailyVolumeUSD\n          totalLiquidityUSD\n        }\n      }\n    `\n    const { tokenDayDatas } = await getMultiChainQueryEndPointWithStableSwap(chainName).request<TokenDayDatasResponse>(\n      query,\n      {\n        startTime: multiChainStartTime[chainName],\n        skip,\n        address,\n      },\n    )\n    const data = tokenDayDatas.map(mapDayData)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch token chart data', error)\n    return { error: true }\n  }\n}\n\nconst fetchTokenChartData = async (\n  chainName: MultiChainName,\n  address: string,\n): Promise<{ data?: ChartEntry[]; error: boolean }> => {\n  return fetchChartDataWithAddress(chainName, getTokenChartData, address)\n}\n\nexport default fetchTokenChartData\n","import { TOKEN_BLACKLIST } from 'config/constants/info'\nimport { gql } from 'graphql-request'\nimport { MultiChainName, multiChainQueryMainToken, getMultiChainQueryEndPointWithStableSwap } from '../../constant'\n\n/**\n * Data for showing Pools table on the Token page\n */\nconst POOLS_FOR_TOKEN = (chainName: MultiChainName) => {\n  const transactionGT = chainName === 'ETH' ? 1 : 100\n  return gql`\n  query poolsForToken($address: Bytes!, $blacklist: [String!]) {\n    asToken0: pairs(\n      first: 15\n      orderBy: trackedReserve${multiChainQueryMainToken[chainName]}\n      orderDirection: desc\n      where: { totalTransactions_gt: ${transactionGT}, token0: $address, token1_not_in: $blacklist }\n    ) {\n      id\n    }\n    asToken1: pairs(\n      first: 15\n      orderBy: trackedReserve${multiChainQueryMainToken[chainName]}\n      orderDirection: desc\n      where: { totalTransactions_gt: ${transactionGT}, token1: $address, token0_not_in: $blacklist }\n    ) {\n      id\n    }\n  }\n`\n}\n\nexport interface PoolsForTokenResponse {\n  asToken0: {\n    id: string\n  }[]\n  asToken1: {\n    id: string\n  }[]\n}\n\nconst fetchPoolsForToken = async (\n  chainName: MultiChainName,\n  address: string,\n): Promise<{\n  error: boolean\n  addresses?: string[]\n}> => {\n  try {\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<PoolsForTokenResponse>(\n      POOLS_FOR_TOKEN(chainName),\n      {\n        address,\n        blacklist: TOKEN_BLACKLIST,\n      },\n    )\n    return {\n      error: false,\n      addresses: data.asToken0.concat(data.asToken1).map((p) => p.id),\n    }\n  } catch (error) {\n    console.error(`Failed to fetch pools for token ${address}`, error)\n    return {\n      error: true,\n    }\n  }\n}\n\nexport default fetchPoolsForToken\n","import { getUnixTime } from 'date-fns'\nimport { gql } from 'graphql-request'\nimport { getBlocksFromTimestamps } from 'utils/getBlocksFromTimestamps'\nimport { multiQuery } from 'views/Info/utils/infoQueryHelpers'\nimport { PriceChartEntry } from 'state/info/types'\nimport orderBy from 'lodash/orderBy'\nimport { MultiChainName, multiChainQueryMainToken, multiChainQueryEndPoint } from '../../constant'\n\nconst getPriceSubqueries = (chainName: MultiChainName, tokenAddress: string, blocks: any) =>\n  blocks.map(\n    (block: any) => `\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derived${multiChainQueryMainToken[chainName]}\n      }\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ${multiChainQueryMainToken[chainName].toLowerCase()}Price\n      }\n    `,\n  )\n\n/**\n * Price data for token and bnb based on block number\n */\nconst priceQueryConstructor = (subqueries: string[]) => {\n  return gql`\n    query tokenPriceData {\n      ${subqueries}\n    }\n  `\n}\n\nconst fetchTokenPriceData = async (\n  chainName: MultiChainName,\n  address: string,\n  interval: number,\n  startTimestamp: number,\n): Promise<{\n  data?: PriceChartEntry[]\n  error: boolean\n}> => {\n  // Construct timestamps to query against\n  const endTimestamp = getUnixTime(new Date())\n  const timestamps = []\n  let time = startTimestamp\n  while (time <= endTimestamp) {\n    timestamps.push(time)\n    time += interval\n  }\n  try {\n    const blocks = await getBlocksFromTimestamps(timestamps, 'asc', 500, chainName)\n    if (!blocks || blocks.length === 0) {\n      console.error('Error fetching blocks for timestamps', timestamps)\n      return {\n        error: false,\n      }\n    }\n\n    const prices: any | undefined = await multiQuery(\n      priceQueryConstructor,\n      getPriceSubqueries(chainName, address, blocks),\n      multiChainQueryEndPoint[chainName],\n      200,\n    )\n\n    console.warn('fetchTokenPriceData', { chainName, prices })\n\n    if (!prices) {\n      console.error('Price data failed to load')\n      return {\n        error: false,\n      }\n    }\n\n    // format token BNB price results\n    const tokenPrices: {\n      timestamp: string\n      derivedBNB: number\n      priceUSD: number\n    }[] = []\n\n    const mainToken = multiChainQueryMainToken[chainName]\n\n    // Get Token prices in BNB\n    Object.keys(prices).forEach((priceKey) => {\n      const timestamp = priceKey.split('t')[1]\n      // if its BNB price e.g. `b123` split('t')[1] will be undefined and skip BNB price entry\n      if (timestamp) {\n        tokenPrices.push({\n          timestamp,\n          derivedBNB: prices[priceKey]?.[`derived${mainToken}`]\n            ? parseFloat(prices[priceKey][`derived${mainToken}`])\n            : 0,\n          priceUSD: 0,\n        })\n      }\n    })\n\n    console.warn('pricesPart1', tokenPrices)\n\n    // Go through BNB USD prices and calculate Token price based on it\n    Object.keys(prices).forEach((priceKey) => {\n      const timestamp = priceKey.split('b')[1]\n      // if its Token price e.g. `t123` split('b')[1] will be undefined and skip Token price entry\n      if (timestamp) {\n        const tokenPriceIndex = tokenPrices.findIndex((tokenPrice) => tokenPrice.timestamp === timestamp)\n        if (tokenPriceIndex >= 0) {\n          const { derivedBNB } = tokenPrices[tokenPriceIndex]\n          tokenPrices[tokenPriceIndex].priceUSD =\n            parseFloat(prices[priceKey]?.[`${mainToken.toLowerCase()}Price`] ?? 0) * derivedBNB\n        }\n      }\n    })\n\n    // graphql-request does not guarantee same ordering of batched requests subqueries, hence sorting by timestamp from oldest to newest\n    const sortedTokenPrices = orderBy(tokenPrices, (tokenPrice) => parseInt(tokenPrice.timestamp, 10))\n\n    const formattedHistory = []\n\n    // for each timestamp, construct the open and close price\n    for (let i = 0; i < sortedTokenPrices.length - 1; i++) {\n      formattedHistory.push({\n        time: parseFloat(sortedTokenPrices[i].timestamp),\n        open: sortedTokenPrices[i].priceUSD,\n        close: sortedTokenPrices[i + 1].priceUSD,\n        high: sortedTokenPrices[i + 1].priceUSD,\n        low: sortedTokenPrices[i].priceUSD,\n      })\n    }\n\n    return { data: formattedHistory, error: false }\n  } catch (error) {\n    console.error(`Failed to fetch price data for token ${address}`, error)\n    return {\n      error: true,\n    }\n  }\n}\n\nexport default fetchTokenPriceData\n","/* eslint-disable no-param-reassign */\nimport { gql } from 'graphql-request'\nimport { useEffect, useState } from 'react'\nimport { TokenData, Block } from 'state/info/types'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport { getChangeForPeriod } from 'utils/getChangeForPeriod'\nimport { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { getAmountChange, getPercentChange } from 'views/Info/utils/infoDataHelpers'\nimport { getMultiChainQueryEndPointWithStableSwap, MultiChainName, multiChainQueryMainToken } from '../../constant'\nimport { fetchTokenAddresses } from './topTokens'\n\ninterface TokenFields {\n  id: string\n  symbol: string\n  name: string\n  derivedBNB: string // Price in BNB per token\n  derivedETH: string // Price in ETH per token\n  derivedUSD: string // Price in USD per token\n  tradeVolumeUSD: string\n  totalTransactions: string\n  totalLiquidity: string\n}\n\ninterface FormattedTokenFields\n  extends Omit<\n    TokenFields,\n    'derivedETH' | 'derivedBNB' | 'derivedUSD' | 'tradeVolumeUSD' | 'totalTransactions' | 'totalLiquidity'\n  > {\n  derivedBNB: number\n  derivedETH: number\n  derivedUSD: number\n  tradeVolumeUSD: number\n  totalTransactions: number\n  totalLiquidity: number\n}\n\ninterface TokenQueryResponse {\n  now: TokenFields[]\n  oneDayAgo: TokenFields[]\n  twoDaysAgo: TokenFields[]\n  oneWeekAgo: TokenFields[]\n  twoWeeksAgo: TokenFields[]\n}\n\n/**\n * Main token data to display on Token page\n */\nconst TOKEN_AT_BLOCK = (chainName: MultiChainName, block: number | undefined, tokens: string[]) => {\n  const addressesString = `[\"${tokens.join('\",\"')}\"]`\n  const blockString = block ? `block: {number: ${block}}` : ``\n  return `tokens(\n      where: {id_in: ${addressesString}}\n      ${blockString}\n      orderBy: tradeVolumeUSD\n      orderDirection: desc\n    ) {\n      id\n      symbol\n      name\n      derived${multiChainQueryMainToken[chainName]}\n      derivedUSD\n      tradeVolumeUSD\n      totalTransactions\n      totalLiquidity\n    }\n  `\n}\n\nconst fetchTokenData = async (\n  chainName: MultiChainName,\n  block24h: number,\n  block48h: number,\n  block7d: number,\n  block14d: number,\n  tokenAddresses: string[],\n) => {\n  try {\n    const weeksQuery = chainName === 'BSC' ? `twoWeeksAgo: ${TOKEN_AT_BLOCK(chainName, block14d, tokenAddresses)}` : ''\n    const query = gql`\n      query tokens {\n        now: ${TOKEN_AT_BLOCK(chainName, null, tokenAddresses)}\n        oneDayAgo: ${TOKEN_AT_BLOCK(chainName, block24h, tokenAddresses)}\n        twoDaysAgo: ${TOKEN_AT_BLOCK(chainName, block48h, tokenAddresses)}\n        oneWeekAgo: ${TOKEN_AT_BLOCK(chainName, block7d, tokenAddresses)}\n        ${weeksQuery}\n      }\n    `\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<TokenQueryResponse>(query)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch token data', error)\n    return { error: true }\n  }\n}\n\n// Transforms tokens into \"0xADDRESS: { ...TokenFields }\" format and cast strings to numbers\nconst parseTokenData = (tokens?: TokenFields[]) => {\n  if (!tokens) {\n    return {}\n  }\n  return tokens.reduce((accum: { [address: string]: FormattedTokenFields }, tokenData) => {\n    const { derivedBNB, derivedUSD, tradeVolumeUSD, totalTransactions, totalLiquidity, derivedETH } = tokenData\n    accum[tokenData.id] = {\n      ...tokenData,\n      derivedBNB: derivedBNB ? 0 : parseFloat(derivedBNB),\n      derivedETH: derivedETH ? 0 : parseFloat(derivedETH),\n      derivedUSD: parseFloat(derivedUSD),\n      tradeVolumeUSD: parseFloat(tradeVolumeUSD),\n      totalTransactions: parseFloat(totalTransactions),\n      totalLiquidity: parseFloat(totalLiquidity),\n    }\n    return accum\n  }, {})\n}\n\ninterface TokenDatas {\n  error: boolean\n  data?: {\n    [address: string]: TokenData\n  }\n}\n\n/**\n * Fetch top addresses by volume\n */\nconst useFetchedTokenDatas = (chainName: MultiChainName, tokenAddresses: string[]): TokenDatas => {\n  const [fetchState, setFetchState] = useState<TokenDatas>({ error: false })\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24h, t48h, t7d, t14d])\n  const [block24h, block48h, block7d, block14d] = blocks ?? []\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { error, data } = await fetchTokenData(\n        chainName,\n        block24h.number,\n        block48h.number,\n        block7d.number,\n        block14d.number,\n        tokenAddresses,\n      )\n\n      if (error) {\n        setFetchState({ error: true })\n      } else {\n        const parsed = parseTokenData(data?.now)\n        const parsed24 = parseTokenData(data?.oneDayAgo)\n        const parsed48 = parseTokenData(data?.twoDaysAgo)\n        const parsed7d = parseTokenData(data?.oneWeekAgo)\n        const parsed14d = parseTokenData(data?.twoWeeksAgo)\n\n        // Calculate data and format\n        const formatted = tokenAddresses.reduce((accum: { [address: string]: TokenData }, address) => {\n          const current: FormattedTokenFields | undefined = parsed[address]\n          const oneDay: FormattedTokenFields | undefined = parsed24[address]\n          const twoDays: FormattedTokenFields | undefined = parsed48[address]\n          const week: FormattedTokenFields | undefined = parsed7d[address]\n          const twoWeeks: FormattedTokenFields | undefined = parsed14d[address]\n\n          const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n            current?.tradeVolumeUSD,\n            oneDay?.tradeVolumeUSD,\n            twoDays?.tradeVolumeUSD,\n          )\n          const [volumeUSDWeek] = getChangeForPeriod(\n            current?.tradeVolumeUSD,\n            week?.tradeVolumeUSD,\n            twoWeeks?.tradeVolumeUSD,\n          )\n          const liquidityUSD = current ? current.totalLiquidity * current.derivedUSD : 0\n          const liquidityUSDOneDayAgo = oneDay ? oneDay.totalLiquidity * oneDay.derivedUSD : 0\n          const liquidityUSDChange = getPercentChange(liquidityUSD, liquidityUSDOneDayAgo)\n          const liquidityToken = current ? current.totalLiquidity : 0\n          // Prices of tokens for now, 24h ago and 7d ago\n          const priceUSD = current ? current.derivedUSD : 0\n          const priceUSDOneDay = oneDay ? oneDay.derivedUSD : 0\n          const priceUSDWeek = week ? week.derivedUSD : 0\n          const priceUSDChange = getPercentChange(priceUSD, priceUSDOneDay)\n          const priceUSDChangeWeek = getPercentChange(priceUSD, priceUSDWeek)\n          const txCount = getAmountChange(current?.totalTransactions, oneDay?.totalTransactions)\n\n          accum[address] = {\n            exists: !!current,\n            address,\n            name: current ? current.name : '',\n            symbol: current ? current.symbol : '',\n            volumeUSD,\n            volumeUSDChange,\n            volumeUSDWeek,\n            txCount,\n            liquidityUSD,\n            liquidityUSDChange,\n            liquidityToken,\n            priceUSD,\n            priceUSDChange,\n            priceUSDChangeWeek,\n          }\n\n          return accum\n        }, {})\n        setFetchState({ data: formatted, error: false })\n      }\n    }\n    const allBlocksAvailable = block24h?.number && block48h?.number && block7d?.number && block14d?.number\n    if (tokenAddresses.length > 0 && allBlocksAvailable && !blockError) {\n      fetch()\n    }\n  }, [tokenAddresses, block24h, block48h, block7d, block14d, blockError, chainName])\n\n  return fetchState\n}\n\nexport const fetchAllTokenDataByAddresses = async (\n  chainName: MultiChainName,\n  blocks: Block[],\n  tokenAddresses: string[],\n) => {\n  const [block24h, block48h, block7d, block14d] = blocks ?? []\n\n  const { data } = await fetchTokenData(\n    chainName,\n    block24h.number,\n    block48h.number,\n    block7d.number,\n    block14d.number,\n    tokenAddresses,\n  )\n\n  const parsed = parseTokenData(data?.now)\n  const parsed24 = parseTokenData(data?.oneDayAgo)\n  const parsed48 = parseTokenData(data?.twoDaysAgo)\n  const parsed7d = parseTokenData(data?.oneWeekAgo)\n  const parsed14d = parseTokenData(data?.twoWeeksAgo)\n\n  // Calculate data and format\n  const formatted = tokenAddresses.reduce((accum: { [address: string]: { data: TokenData } }, address) => {\n    const current: FormattedTokenFields | undefined = parsed[address]\n    const oneDay: FormattedTokenFields | undefined = parsed24[address]\n    const twoDays: FormattedTokenFields | undefined = parsed48[address]\n    const week: FormattedTokenFields | undefined = parsed7d[address]\n    const twoWeeks: FormattedTokenFields | undefined = parsed14d[address]\n\n    const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n      current?.tradeVolumeUSD,\n      oneDay?.tradeVolumeUSD,\n      twoDays?.tradeVolumeUSD,\n    )\n    const [volumeUSDWeek] = getChangeForPeriod(current?.tradeVolumeUSD, week?.tradeVolumeUSD, twoWeeks?.tradeVolumeUSD)\n    const liquidityUSD = current ? current.totalLiquidity * current.derivedUSD : 0\n    const liquidityUSDOneDayAgo = oneDay ? oneDay.totalLiquidity * oneDay.derivedUSD : 0\n    const liquidityUSDChange = getPercentChange(liquidityUSD, liquidityUSDOneDayAgo)\n    const liquidityToken = current ? current.totalLiquidity : 0\n    // Prices of tokens for now, 24h ago and 7d ago\n    const priceUSD = current ? current.derivedUSD : 0\n    const priceUSDOneDay = oneDay ? oneDay.derivedUSD : 0\n    const priceUSDWeek = week ? week.derivedUSD : 0\n    const priceUSDChange = getPercentChange(priceUSD, priceUSDOneDay)\n    const priceUSDChangeWeek = getPercentChange(priceUSD, priceUSDWeek)\n    const txCount = getAmountChange(current?.totalTransactions, oneDay?.totalTransactions)\n\n    accum[address] = {\n      data: {\n        exists: !!current,\n        address,\n        name: current ? current.name : '',\n        symbol: current ? current.symbol : '',\n        volumeUSD,\n        volumeUSDChange,\n        volumeUSDWeek,\n        txCount,\n        liquidityUSD,\n        liquidityUSDChange,\n        liquidityToken,\n        priceUSD,\n        priceUSDChange,\n        priceUSDChangeWeek,\n      },\n    }\n\n    return accum\n  }, {})\n\n  return formatted\n}\n\nexport const fetchAllTokenData = async (chainName: MultiChainName, blocks: Block[]) => {\n  const tokenAddresses = await fetchTokenAddresses(chainName)\n  const data = await fetchAllTokenDataByAddresses(chainName, blocks, tokenAddresses)\n  return data\n}\n\nexport default useFetchedTokenDatas\n","import { gql } from 'graphql-request'\nimport { useCallback, useState, useEffect } from 'react'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport { useGetChainName } from '../../hooks'\nimport {\n  MultiChainName,\n  getMultiChainQueryEndPointWithStableSwap,\n  checkIsStableSwap,\n  multiChainTokenBlackList,\n} from '../../constant'\n\ninterface TopTokensResponse {\n  tokenDayDatas: {\n    id: string\n  }[]\n}\n\n/**\n * Tokens to display on Home page\n * The actual data is later requested in tokenData.ts\n * Note: dailyTxns_gt: 300 is there to prevent fetching incorrectly priced tokens with high dailyVolumeUSD\n */\nconst fetchTopTokens = async (chainName: MultiChainName, timestamp24hAgo: number): Promise<string[]> => {\n  const whereCondition =\n    chainName === 'ETH'\n      ? `where: { date_gt: ${timestamp24hAgo}, token_not_in: $blacklist, dailyVolumeUSD_gt:2000 }`\n      : checkIsStableSwap()\n      ? ''\n      : `where: { dailyTxns_gt: 300, id_not_in: $blacklist, date_gt: ${timestamp24hAgo}}`\n  const firstCount = 30\n  try {\n    const query = gql`\n      query topTokens($blacklist: [String!]) {\n        tokenDayDatas(\n          first: ${firstCount}\n          ${whereCondition}\n          orderBy: dailyVolumeUSD\n          orderDirection: desc\n        ) {\n          id\n        }\n      }\n    `\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<TopTokensResponse>(query, {\n      blacklist: multiChainTokenBlackList[chainName],\n    })\n    // tokenDayDatas id has compound id \"0xTOKENADDRESS-NUMBERS\", extracting token address with .split('-')\n    return data.tokenDayDatas.map((t) => t.id.split('-')[0])\n  } catch (error) {\n    console.warn('fetchTopTokens', { chainName, timestamp24hAgo })\n    console.error('Failed to fetch top tokens', error)\n    return []\n  }\n}\n\n/**\n * Fetch top addresses by volume\n */\nconst useTopTokenAddresses = (): string[] => {\n  const [topTokenAddresses, setTopTokenAddresses] = useState([])\n  const [timestamp24hAgo] = getDeltaTimestamps()\n  const chainName = useGetChainName()\n\n  const fetch = useCallback(async () => {\n    const addresses = await fetchTopTokens(chainName, timestamp24hAgo)\n    if (addresses.length > 0) setTopTokenAddresses(addresses)\n  }, [timestamp24hAgo, chainName])\n\n  useEffect(() => {\n    fetch()\n  }, [chainName, fetch])\n\n  return topTokenAddresses\n}\n\nexport const fetchTokenAddresses = async (chainName: MultiChainName) => {\n  const [timestamp24hAgo] = getDeltaTimestamps()\n\n  const addresses = await fetchTopTokens(chainName, timestamp24hAgo)\n\n  return addresses\n}\n\nexport default useTopTokenAddresses\n","import { gql } from 'graphql-request'\nimport { mapBurns, mapMints, mapSwaps } from 'state/info/queries/helpers'\nimport { BurnResponse, MintResponse, SwapResponse } from 'state/info/queries/types'\nimport { Transaction } from 'state/info/types'\nimport { MultiChainName, getMultiChainQueryEndPointWithStableSwap, checkIsStableSwap } from '../../constant'\n\n/**\n * Data to display transaction table on Token page\n */\nconst TOKEN_TRANSACTIONS = () => {\n  const isStableSwap = checkIsStableSwap()\n  const whereToken0 = isStableSwap ? 'pair_: {token0: $address}' : 'token0: $address'\n  const whereToken1 = isStableSwap ? 'pair_: {token1: $address}' : 'token1: $address'\n  return gql`\n    query tokenTransactions($address: Bytes!) {\n      mintsAs0: mints(first: 10, orderBy: timestamp, orderDirection: desc, where: { ${whereToken0} }) {\n        id\n        timestamp\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        amount0\n        amount1\n        amountUSD\n      }\n      mintsAs1: mints(first: 10, orderBy: timestamp, orderDirection: desc, where: { ${whereToken1} }) {\n        id\n        timestamp\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        amount0\n        amount1\n        amountUSD\n      }\n      swapsAs0: swaps(first: 10, orderBy: timestamp, orderDirection: desc, where: { ${whereToken0} }) {\n        id\n        timestamp\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        from\n        amount0In\n        amount1In\n        amount0Out\n        amount1Out\n        amountUSD\n      }\n      swapsAs1: swaps(first: 10, orderBy: timestamp, orderDirection: desc, where: { ${whereToken1} }) {\n        id\n        timestamp\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        from\n        amount0In\n        amount1In\n        amount0Out\n        amount1Out\n        amountUSD\n      }\n      burnsAs0: burns(first: 10, orderBy: timestamp, orderDirection: desc, where: { ${whereToken0} }) {\n        id\n        timestamp\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        amount0\n        amount1\n        amountUSD\n      }\n      burnsAs1: burns(first: 10, orderBy: timestamp, orderDirection: desc, where: { ${whereToken1} }) {\n        id\n        timestamp\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        amount0\n        amount1\n        amountUSD\n      }\n    }\n  `\n}\n\ninterface TransactionResults {\n  mintsAs0: MintResponse[]\n  mintsAs1: MintResponse[]\n  swapsAs0: SwapResponse[]\n  swapsAs1: SwapResponse[]\n  burnsAs0: BurnResponse[]\n  burnsAs1: BurnResponse[]\n}\n\nconst fetchTokenTransactions = async (\n  chainName: MultiChainName,\n  address: string,\n): Promise<{ data?: Transaction[]; error: boolean }> => {\n  try {\n    const data = await getMultiChainQueryEndPointWithStableSwap(chainName).request<TransactionResults>(\n      TOKEN_TRANSACTIONS(),\n      {\n        address,\n      },\n    )\n    const mints0 = data.mintsAs0.map(mapMints)\n    const mints1 = data.mintsAs1.map(mapMints)\n\n    const burns0 = data.burnsAs0.map(mapBurns)\n    const burns1 = data.burnsAs1.map(mapBurns)\n\n    const swaps0 = data.swapsAs0.map(mapSwaps)\n    const swaps1 = data.swapsAs1.map(mapSwaps)\n\n    return { data: [...mints0, ...mints1, ...burns0, ...burns1, ...swaps0, ...swaps1], error: false }\n  } catch (error) {\n    console.error(`Failed to fetch transactions for token ${address}`, error)\n    return {\n      error: true,\n    }\n  }\n}\n\nexport default fetchTokenTransactions\n","export interface Block {\n  number: number\n  timestamp: string\n}\n\nexport interface ChartEntry {\n  date: number\n  volumeUSD: number\n  liquidityUSD: number\n}\n\n/**\n * Formatted type for Candlestick charts\n */\nexport interface PriceChartEntry {\n  time: number\n  open: number\n  close: number\n  high: number\n  low: number\n}\n\nexport enum TransactionType {\n  SWAP,\n  MINT,\n  BURN,\n}\n\nexport type Transaction = {\n  type: TransactionType\n  hash: string\n  timestamp: string\n  sender: string\n  token0Symbol: string\n  token1Symbol: string\n  token0Address: string\n  token1Address: string\n  amountUSD: number\n  amountToken0: number\n  amountToken1: number\n}\n\nexport interface ProtocolData {\n  volumeUSD: number\n  volumeUSDChange: number // in 24h, as percentage\n\n  liquidityUSD: number\n  liquidityUSDChange: number // in 24h, as percentage\n\n  txCount: number\n  txCountChange: number\n}\n\nexport interface ProtocolState {\n  readonly overview?: ProtocolData\n\n  readonly chartData?: ChartEntry[]\n\n  readonly transactions?: Transaction[]\n}\n\n// POOLS\n\nexport interface PoolData {\n  address: string\n\n  token0: {\n    name: string\n    symbol: string\n    address: string\n  }\n\n  token1: {\n    name: string\n    symbol: string\n    address: string\n  }\n\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSDWeek: number\n  volumeUSDChangeWeek: number\n\n  totalFees24h: number\n  totalFees7d: number\n  lpFees24h: number\n  lpFees7d: number\n  lpApr7d: number\n\n  liquidityUSD: number\n  liquidityUSDChange: number\n\n  token0Price: number\n  token1Price: number\n\n  liquidityToken0: number\n  liquidityToken1: number\n}\n\nexport interface PoolsState {\n  byAddress: {\n    [address: string]: {\n      data?: PoolData\n      chartData?: ChartEntry[]\n      transactions?: Transaction[]\n    }\n  }\n}\n\n// TOKENS\n\nexport type TokenData = {\n  exists: boolean\n\n  name: string\n  symbol: string\n  address: string\n\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSDWeek: number\n  txCount: number\n\n  liquidityToken: number\n  liquidityUSD: number\n  liquidityUSDChange: number\n\n  priceUSD: number\n  priceUSDChange: number\n  priceUSDChangeWeek: number\n}\n\nexport interface TokensState {\n  byAddress: {\n    [address: string]: {\n      data?: TokenData\n      poolAddresses?: string[]\n      chartData?: ChartEntry[]\n      priceData: {\n        oldestFetchedTimestamp?: number\n        [secondsInterval: number]: PriceChartEntry[] | undefined\n      }\n      transactions?: Transaction[]\n    }\n  }\n}\n\n// Info redux state\nexport interface InfoState {\n  protocol: ProtocolState\n  pools: PoolsState\n  tokens: TokensState\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { TokenAddressMap as TTokenAddressMap, WrappedTokenInfo, ListsState } from '@pancakeswap/token-lists'\nimport { TokenList, TokenInfo } from '@uniswap/token-lists'\nimport { DEFAULT_LIST_OF_LISTS, OFFICIAL_LISTS, UNSUPPORTED_LIST_URLS, WARNING_LIST_URLS } from 'config/constants/lists'\nimport { atom, useAtomValue } from 'jotai'\nimport mapValues from 'lodash/mapValues'\nimport groupBy from 'lodash/groupBy'\nimport keyBy from 'lodash/keyBy'\nimport { EMPTY_LIST } from '@pancakeswap/tokens'\nimport uniqBy from 'lodash/uniqBy'\nimport { useMemo } from 'react'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\nimport WARNING_TOKEN_LIST from '../../config/constants/tokenLists/pancake-warning.tokenlist.json'\nimport { listsAtom } from './lists'\n\ntype TokenAddressMap = TTokenAddressMap<ChainId>\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\nfunction enumKeys<O extends object, K extends keyof O = keyof O>(obj: O): K[] {\n  return Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]\n}\n\n// -------------------------------------\n//   Selectors\n// -------------------------------------\nconst selectorActiveUrlsAtom = atom((get) => get(listsAtom)?.activeListUrls ?? [])\nexport const selectorByUrlsAtom = atom((get) => get(listsAtom)?.byUrl ?? {})\n\nconst activeListUrlsAtom = atom((get) => {\n  const urls = get(selectorActiveUrlsAtom)\n  return urls?.filter((url) => !UNSUPPORTED_LIST_URLS.includes(url))\n})\n\nconst combineTokenMapsWithDefault = (lists: ListsState['byUrl'], urls: string[]) => {\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  if (!urls) return defaultTokenMap\n  return combineMaps(combineTokenMaps(lists, urls), defaultTokenMap)\n}\n\nconst combineTokenMaps = (lists: ListsState['byUrl'], urls: string[]) => {\n  if (!urls) return EMPTY_LIST\n  return (\n    urls\n      .slice()\n      // sort by priority so top priority goes last\n      .sort(sortByListPriority)\n      .reduce((allTokens, currentUrl) => {\n        const current = lists[currentUrl]?.current\n        if (!current) return allTokens\n        try {\n          const newTokens = Object.assign(listToTokenMap(current))\n          return combineMaps(allTokens, newTokens)\n        } catch (error) {\n          console.error('Could not show token list due to error', error)\n          return allTokens\n        }\n      }, EMPTY_LIST)\n  )\n}\n\nexport const combinedTokenMapFromActiveUrlsAtom = atom((get) => {\n  const [selectorByUrls, selectorActiveUrls] = [get(selectorByUrlsAtom), get(selectorActiveUrlsAtom)]\n  return combineTokenMapsWithDefault(selectorByUrls, selectorActiveUrls)\n})\n\nconst inactiveUrlAtom = atom((get) => {\n  const [lists, urls] = [get(selectorByUrlsAtom), get(selectorActiveUrlsAtom)]\n  return Object.keys(lists).filter((url) => !urls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n})\n\nexport const combinedTokenMapFromInActiveUrlsAtom = atom((get) => {\n  const [lists, inactiveUrl] = [get(selectorByUrlsAtom), get(inactiveUrlAtom)]\n  return combineTokenMaps(lists, inactiveUrl)\n})\n\nexport const combinedTokenMapFromOfficialsUrlsAtom = atom((get) => {\n  const lists = get(selectorByUrlsAtom)\n  return combineTokenMapsWithDefault(lists, OFFICIAL_LISTS)\n})\n\nexport const tokenListFromOfficialsUrlsAtom = atom((get) => {\n  const lists: ListsState['byUrl'] = get(selectorByUrlsAtom)\n\n  const mergedTokenLists: TokenInfo[] = OFFICIAL_LISTS.reduce((acc, url) => {\n    if (lists?.[url]?.current?.tokens) {\n      acc.push(...lists?.[url]?.current.tokens)\n    }\n    return acc\n  }, [])\n\n  const mergedList =\n    mergedTokenLists.length > 0 ? [...DEFAULT_TOKEN_LIST.tokens, ...mergedTokenLists] : DEFAULT_TOKEN_LIST.tokens\n  return mapValues(\n    groupBy(\n      uniqBy(mergedList, (tokenInfo) => `${tokenInfo.chainId}#${tokenInfo.address}`),\n      'chainId',\n    ),\n    (tokenInfos) => keyBy(tokenInfos, 'address'),\n  )\n})\n\nexport const combinedTokenMapFromUnsupportedUrlsAtom = atom((get) => {\n  const lists = get(selectorByUrlsAtom)\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = combineTokenMaps(lists, UNSUPPORTED_LIST_URLS)\n\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n})\n\nexport const combinedTokenMapFromWarningUrlsAtom = atom((get) => {\n  const lists = get(selectorByUrlsAtom)\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(WARNING_TOKEN_LIST)\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = combineTokenMaps(lists, WARNING_LIST_URLS)\n\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n})\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const tokenMap: WrappedTokenInfo[] = uniqBy(\n    list.tokens,\n    (tokenInfo) => `${tokenInfo.chainId}#${tokenInfo.address}`,\n  ).map((tokenInfo) => new WrappedTokenInfo(tokenInfo))\n\n  const groupedTokenMap: { [chainId: string]: WrappedTokenInfo[] } = groupBy(tokenMap, 'chainId')\n\n  const tokenAddressMap = mapValues(groupedTokenMap, (tokenInfoList) =>\n    mapValues(keyBy(tokenInfoList, 'address'), (tokenInfo) => ({ token: tokenInfo, list })),\n  ) as TokenAddressMap\n\n  // add chain id item if not exist\n  enumKeys(ChainId).forEach((chainId) => {\n    if (!(ChainId[chainId] in tokenAddressMap)) {\n      Object.defineProperty(tokenAddressMap, ChainId[chainId], {\n        value: {},\n      })\n    }\n  })\n\n  listCache?.set(list, tokenAddressMap)\n  return tokenAddressMap\n}\n\n// -------------------------------------\n//   Hooks\n// -------------------------------------\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useAtomValue(selectorByUrlsAtom)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.ETHEREUM]: { ...map1[ChainId.ETHEREUM], ...map2[ChainId.ETHEREUM] },\n    [ChainId.RINKEBY]: { ...map1[ChainId.RINKEBY], ...map2[ChainId.RINKEBY] },\n    [ChainId.GOERLI]: { ...map1[ChainId.GOERLI], ...map2[ChainId.GOERLI] },\n    [ChainId.BSC]: { ...map1[ChainId.BSC], ...map2[ChainId.BSC] },\n    [ChainId.BSC_TESTNET]: { ...map1[ChainId.BSC_TESTNET], ...map2[ChainId.BSC_TESTNET] },\n  }\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useAtomValue(activeListUrlsAtom)\n}\n\nexport function useInactiveListUrls() {\n  return useAtomValue(inactiveUrlAtom)\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeTokens = useAtomValue(combinedTokenMapFromActiveUrlsAtom)\n  return activeTokens\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  return useAtomValue(combinedTokenMapFromInActiveUrlsAtom)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  return useAtomValue(combinedTokenMapFromUnsupportedUrlsAtom)\n}\n\n// list of warning tokens on interface, used to show warnings and prevent adds\nexport function useWarningTokenList(): TokenAddressMap {\n  return useAtomValue(combinedTokenMapFromWarningUrlsAtom)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return useMemo(() => Boolean(activeListUrls?.includes(url)), [activeListUrls, url])\n}\n","import { createListsAtom, createTokenListReducer, NEW_LIST_STATE } from '@pancakeswap/token-lists'\nimport { DEFAULT_ACTIVE_LIST_URLS, DEFAULT_LIST_OF_LISTS, UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\n\nconst initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nconst listReducer = createTokenListReducer(initialState, DEFAULT_LIST_OF_LISTS, DEFAULT_ACTIVE_LIST_URLS)\n\nexport const { listsAtom, useListState } = createListsAtom('listv2', listReducer, initialState)\n","import { ChainId, Pair, ERC20Token } from '@pancakeswap/sdk'\nimport { deserializeToken } from '@pancakeswap/token-lists'\nimport { differenceInDays } from 'date-fns'\nimport flatMap from 'lodash/flatMap'\nimport { getFarmConfig } from '@pancakeswap/farms/constants'\nimport { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/exchange'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useSWRImmutable from 'swr/immutable'\nimport { useFeeData } from 'wagmi'\nimport { useOfficialsAndUserAddedTokens } from 'hooks/Tokens'\nimport { useWeb3LibraryContext } from '@pancakeswap/wagmi'\nimport useSWR from 'swr'\nimport { AppState, useAppDispatch } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionChainlinkChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  hidePhishingWarningBanner,\n  setIsExchangeChartDisplayed,\n  ChartViewMode,\n  setChartViewMode,\n  setSubgraphHealthIndicatorDisplayed,\n  updateUserLimitOrderAcceptedWarning,\n  setZapDisabled,\n} from '../actions'\nimport { GAS_PRICE_GWEI } from '../../types'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function usePhishingBannerManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const hideTimestampPhishingWarningBanner = useSelector<\n    AppState,\n    AppState['user']['hideTimestampPhishingWarningBanner']\n  >((state) => state.user.hideTimestampPhishingWarningBanner)\n  const now = Date.now()\n  const showPhishingWarningBanner = hideTimestampPhishingWarningBanner\n    ? differenceInDays(now, hideTimestampPhishingWarningBanner) >= 1\n    : true\n  const hideBanner = useCallback(() => {\n    dispatch(hidePhishingWarningBanner())\n  }, [dispatch])\n\n  return [showPhishingWarningBanner, hideBanner]\n}\n\n// Get user preference for exchange price chart\n// For mobile layout chart is hidden by default\nexport function useExchangeChartManager(isMobile: boolean): [boolean, (isDisplayed: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const isChartDisplayed = useSelector<AppState, AppState['user']['isExchangeChartDisplayed']>(\n    (state) => state.user.isExchangeChartDisplayed,\n  )\n\n  const setUserChartPreference = useCallback(\n    (isDisplayed: boolean) => {\n      dispatch(setIsExchangeChartDisplayed(isDisplayed))\n    },\n    [dispatch],\n  )\n\n  return [isMobile ? false : isChartDisplayed, setUserChartPreference]\n}\n\nexport function useExchangeChartViewManager() {\n  const dispatch = useAppDispatch()\n  const chartViewMode = useSelector<AppState, AppState['user']['userChartViewMode']>(\n    (state) => state.user.userChartViewMode,\n  )\n\n  const setUserChartViewPreference = useCallback(\n    (view: ChartViewMode) => {\n      dispatch(setChartViewMode(view))\n    },\n    [dispatch],\n  )\n\n  return [chartViewMode, setUserChartViewPreference] as const\n}\n\nexport function useZapModeManager() {\n  const dispatch = useAppDispatch()\n  const zapEnabled = useSelector<AppState, AppState['user']['userZapDisabled']>((state) => !state.user.userZapDisabled)\n\n  const setZapEnable = useCallback(\n    (enable: boolean) => {\n      dispatch(setZapDisabled(!enable))\n    },\n    [dispatch],\n  )\n\n  return [zapEnabled, setZapEnable] as const\n}\n\nexport function useSubgraphHealthIndicatorManager() {\n  const dispatch = useAppDispatch()\n  const isSubgraphHealthIndicatorDisplayed = useSelector<\n    AppState,\n    AppState['user']['isSubgraphHealthIndicatorDisplayed']\n  >((state) => state.user.isSubgraphHealthIndicatorDisplayed)\n\n  const setSubgraphHealthIndicatorDisplayedPreference = useCallback(\n    (newIsDisplayed: boolean) => {\n      dispatch(setSubgraphHealthIndicatorDisplayed(newIsDisplayed))\n    },\n    [dispatch],\n  )\n\n  return [isSubgraphHealthIndicatorDisplayed, setSubgraphHealthIndicatorDisplayedPreference] as const\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useAppDispatch()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useAppDispatch()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useAppDispatch()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserLimitOrderAcceptedWarning(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userLimitOrderAcceptedWarning = useSelector<AppState, AppState['user']['userLimitOrderAcceptedWarning']>(\n    (state) => {\n      return state.user.userLimitOrderAcceptedWarning\n    },\n  )\n\n  const setUserLimitOrderAcceptedWarning = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserLimitOrderAcceptedWarning({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userLimitOrderAcceptedWarning, setUserLimitOrderAcceptedWarning]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserPredictionChainlinkChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPredictionChainlinkChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChainlinkChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChainlinkChartDisclaimerShow\n  })\n\n  const setPredictionUserChainlinkChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChainlinkChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChainlinkChartDisclaimerShow, setPredictionUserChainlinkChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useAppDispatch()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: ERC20Token) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (token: ERC20Token) => {\n      dispatch(addSerializedToken({ serializedToken: token.serialize }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(chainIdOverride?: number): string {\n  const { chainId: chainId_, chain } = useActiveWeb3React()\n  const library = useWeb3LibraryContext()\n  const chainId = chainIdOverride ?? chainId_\n  const { data: bscProviderGasPrice = GAS_PRICE_GWEI.default } = useSWR(\n    library && library.provider && chainId === ChainId.BSC && ['bscProviderGasPrice', library.provider],\n    async () => {\n      const gasPrice = await library.getGasPrice()\n      return gasPrice.toString()\n    },\n    {\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n    },\n  )\n  const { data } = useFeeData({\n    chainId,\n    enabled: chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET,\n    watch: true,\n  })\n  if (chainId === ChainId.BSC) {\n    return bscProviderGasPrice\n  }\n  if (chainId === ChainId.BSC_TESTNET) {\n    return GAS_PRICE_GWEI.testnet\n  }\n  if (chain?.testnet) {\n    return data?.formatted?.maxPriorityFeePerGas\n  }\n  return data?.formatted?.gasPrice\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: pair.token0.serialize,\n    token1: pair.token1.serialize,\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [ERC20Token, ERC20Token]): ERC20Token {\n  return new ERC20Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [ERC20Token, ERC20Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useOfficialsAndUserAddedTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  const { data: farmPairs = [] } = useSWRImmutable(chainId && ['track-farms-pairs', chainId], async () => {\n    const farms = await getFarmConfig(chainId)\n\n    const fPairs: [ERC20Token, ERC20Token][] = farms\n      .filter((farm) => farm.pid !== 0)\n      .map((farm) => [deserializeToken(farm.token), deserializeToken(farm.quoteToken)])\n\n    return fPairs\n  })\n\n  // pairs for every token against every base\n  const generatedPairs: [ERC20Token, ERC20Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop through all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [ERC20Token, ERC20Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [ERC20Token, ERC20Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs).concat(farmPairs),\n    [generatedPairs, pinnedPairs, userPairs, farmPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [ERC20Token, ERC20Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useAppDispatch()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useAppDispatch()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { createSelector } from '@reduxjs/toolkit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { deserializeToken } from '@pancakeswap/token-lists'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../../index'\n\nconst selectUserTokens = ({ user: { tokens } }: AppState) => tokens\n\nexport const userAddedTokenSelector = (chainId: number) =>\n  createSelector(selectUserTokens, (serializedTokensMap) =>\n    Object.values(serializedTokensMap?.[chainId] ?? {}).map(deserializeToken),\n  )\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  return useSelector(useMemo(() => userAddedTokenSelector(chainId), [chainId]))\n}\n","import numeral from 'numeral'\n\n// Returns first 2 digits after first non-zero decimal\n// i.e. 0.001286 -> 0.0012, 0.9845 -> 0.98, 0.0102 -> 0.010, etc\n// Intended to be used for tokens whose value is less than $1\n// https://stackoverflow.com/a/23887837\nexport const getFirstThreeNonZeroDecimals = (value: number) => {\n  return value.toFixed(9).match(/^-?\\d*\\.?0*\\d{0,2}/)[0]\n}\n\nexport type formatAmountNotation = 'compact' | 'standard'\n\n/**\n * This function is used to format token prices, liquidity, amount of tokens in TX, and in general any numbers on info section\n * @param amount - amount to be formatted\n * @param notation - whether to show 1M or 1,000,000\n * @param displayThreshold - threshold below which it will return simply <displayThreshold instead of actual value, e.g. if 0.001 -> returns <0.001 for 0.0005\n * @param tokenPrecision - set to true when you want precision to be 3 decimals for values < 1 and 2 decimals for values > 1\n * @param isInteger - if true the values will contain decimal part only if the amount is > 1000\n * @returns formatted string ready to be displayed\n */\nexport const formatAmount = (\n  amount: number | undefined,\n  options?: {\n    notation?: formatAmountNotation\n    displayThreshold?: number\n    tokenPrecision?: boolean\n    isInteger?: boolean\n  },\n) => {\n  const {\n    notation = amount >= 10000 ? 'compact' : 'standard',\n    displayThreshold,\n    tokenPrecision,\n    isInteger,\n  } = options || { notation: amount >= 10000 ? 'compact' : 'standard' }\n  if (amount === 0) {\n    if (isInteger) {\n      return '0'\n    }\n    return '0.00'\n  }\n  if (!amount) return '-'\n  if (displayThreshold && amount < displayThreshold) {\n    return `<${displayThreshold}`\n  }\n  if (amount < 1 && !tokenPrecision) {\n    return getFirstThreeNonZeroDecimals(amount)\n  }\n\n  let precision = 2\n  if (tokenPrecision) {\n    precision = amount < 1 ? 3 : 2\n  }\n\n  let format = `0.${'0'.repeat(precision)}a`\n\n  if (notation === 'standard') {\n    format = `0,0.${'0'.repeat(precision)}`\n  }\n\n  if (isInteger && amount < 1000) {\n    format = '0'\n  }\n\n  const amountWithPrecision = parseFloat(amount.toFixed(precision))\n\n  // toUpperCase is needed cause numeral doesn't have support for capital K M B out of the box\n  return numeral(amountWithPrecision).format(format).toUpperCase()\n}\n","import { gql } from 'graphql-request'\nimport orderBy from 'lodash/orderBy'\nimport { multiChainBlocksClient, MultiChainName } from 'state/info/constant'\nimport { Block } from '../state/info/types'\nimport { multiQuery } from '../views/Info/utils/infoQueryHelpers'\n\nconst getBlockSubqueries = (timestamps: number[]) =>\n  timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n\nconst blocksQueryConstructor = (subqueries: string[]) => {\n  return gql`query blocks {\n    ${subqueries}\n  }`\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @param {Array} timestamps\n */\nexport const getBlocksFromTimestamps = async (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' | undefined = 'desc',\n  skipCount: number | undefined = 500,\n  chainName: MultiChainName | undefined = 'BSC',\n): Promise<Block[]> => {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  const fetchedData: any = await multiQuery(\n    blocksQueryConstructor,\n    getBlockSubqueries(timestamps),\n    multiChainBlocksClient[chainName],\n    skipCount,\n  )\n\n  const blocks: Block[] = []\n  if (fetchedData) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of Object.keys(fetchedData)) {\n      if (fetchedData[key].length > 0) {\n        blocks.push({\n          timestamp: key.split('t')[1],\n          number: parseInt(fetchedData[key][0].number, 10),\n        })\n      }\n    }\n    // graphql-request does not guarantee same ordering of batched requests subqueries, hence manual sorting\n    return orderBy(blocks, (block) => block.number, sortDirection)\n  }\n  return blocks\n}\n","import { getAmountChange, getPercentChange } from '../views/Info/utils/infoDataHelpers'\n\n/**\n * Given current value and value 1 and 2 periods (e.g. 1day + 2days, 1week - 2weeks) returns the amount change for latest period\n * and percentage change compared to the previous period.\n * @param valueNow - current value\n * @param valueOnePeriodAgo - value 1 period ago (e.g. 1 day or 1 week ago), period unit must be same as valueTwoPeriodsAgo\n * @param valueTwoPeriodsAgo - value 2 periods ago (e.g. 2 days or 2 weeks ago), period unit must be same as valueOnePeriodAgo\n * @returns amount change for the latest period and percentage change compared to previous period\n */\nexport const getChangeForPeriod = (\n  valueNow?: number,\n  valueOnePeriodAgo?: number,\n  valueTwoPeriodsAgo?: number,\n): [number, number] => {\n  const currentPeriodAmount = getAmountChange(valueNow, valueOnePeriodAgo)\n  const previousPeriodAmount = getAmountChange(valueOnePeriodAgo, valueTwoPeriodsAgo)\n  const percentageChange = getPercentChange(currentPeriodAmount, previousPeriodAmount)\n  return [currentPeriodAmount, percentageChange]\n}\n","import { getUnixTime, startOfMinute, subDays, subWeeks } from 'date-fns'\n\n/**\n * Returns UTC timestamps for 24h ago, 48h ago, 7d ago and 14d ago relative to current date and time\n */\nexport const getDeltaTimestamps = (): [number, number, number, number] => {\n  const utcCurrentTime = getUnixTime(new Date()) * 1000\n  const t24h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 1)))\n  const t48h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 2)))\n  const t7d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 1)))\n  const t14d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 2)))\n  return [t24h, t48h, t7d, t14d]\n}\n","import { TOTAL_FEE, LP_HOLDERS_FEE, WEEKS_IN_YEAR } from '../config/constants/info'\n\nexport const getLpFeesAndApr = (volumeUSD: number, volumeUSDWeek: number, liquidityUSD: number) => {\n  const totalFees24h = volumeUSD * TOTAL_FEE\n  const totalFees7d = volumeUSDWeek * TOTAL_FEE\n  const lpFees24h = volumeUSD * LP_HOLDERS_FEE\n  const lpFees7d = volumeUSDWeek * LP_HOLDERS_FEE\n\n  const lpApr7d = liquidityUSD > 0 ? (volumeUSDWeek * LP_HOLDERS_FEE * WEEKS_IN_YEAR * 100) / liquidityUSD : 0\n  return {\n    totalFees24h,\n    totalFees7d,\n    lpFees24h,\n    lpFees7d,\n    lpApr7d: lpApr7d !== Infinity ? lpApr7d : 0,\n  }\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nconst mapping = {\n  [ChainId.BSC]: 'smartchain',\n  [ChainId.ETHEREUM]: 'ethereum',\n}\n\nconst getTokenLogoURL = (token?: Token) => {\n  if (token && mapping[token.chainId]) {\n    return `https://assets-cdn.trustwallet.com/blockchains/${mapping[token.chainId]}/assets/${token.address}/logo.png`\n  }\n  return null\n}\n\nexport default getTokenLogoURL\n","import { BIT_QUERY, INFO_CLIENT, STABLESWAP_SUBGRAPH_CLIENT, INFO_CLIENT_ETH } from 'config/constants/endpoints'\nimport { GraphQLClient } from 'graphql-request'\nimport { INFO_CLIENT_WITH_CHAIN } from '../config/constants/endpoints'\n\n// Extra headers\n// Mostly for dev environment\n// No production env check since production preview might also need them\nexport const getGQLHeaders = (endpoint: string) => {\n  if (endpoint === INFO_CLIENT) {\n    return {\n      'X-Sf':\n        process.env.NEXT_PUBLIC_SF_HEADER ||\n        // hack for inject CI secret on window\n        (typeof window !== 'undefined' &&\n          // @ts-ignore\n          window.sfHeader),\n    }\n  }\n  return undefined\n}\n\nexport const infoClient = new GraphQLClient(INFO_CLIENT, { headers: getGQLHeaders(INFO_CLIENT) })\n\nexport const infoClientWithChain = (chainId: number) => {\n  return new GraphQLClient(INFO_CLIENT_WITH_CHAIN[chainId], { headers: getGQLHeaders(INFO_CLIENT_WITH_CHAIN[chainId]) })\n}\n\nexport const infoClientETH = new GraphQLClient(INFO_CLIENT_ETH)\n\nexport const infoStableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT)\n\nexport const infoServerClient = new GraphQLClient(INFO_CLIENT, {\n  headers: {\n    'X-Sf': process.env.SF_HEADER,\n  },\n  timeout: 5000,\n})\n\nexport const stableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT, {\n  headers: getGQLHeaders(STABLESWAP_SUBGRAPH_CLIENT),\n})\n\nexport const bitQueryServerClient = new GraphQLClient(BIT_QUERY, {\n  headers: {\n    // only server, no `NEXT_PUBLIC` not going to expose in client\n    'X-API-KEY': process.env.BIT_QUERY_HEADER,\n  },\n  timeout: 5000,\n})\n","import { GraphQLClient } from 'graphql-request'\n\nconst requestWithTimeout = <T>(\n  graphQLClient: GraphQLClient,\n  request: string,\n  variables?: any,\n  timeout = 30000,\n): Promise<T> => {\n  return Promise.race([\n    variables ? graphQLClient.request<T>(request, variables) : graphQLClient.request<T>(request),\n    new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(`Request timed out after ${timeout} milliseconds`))\n      }, timeout)\n    }),\n  ]) as Promise<T>\n}\n\nexport default requestWithTimeout\n","import { useEffect, useState } from 'react'\nimport { useGetChainName } from 'state/info/hooks'\nimport { Block } from 'state/info/types'\nimport useSWRImmutable from 'swr/immutable'\nimport { getBlocksFromTimestamps } from 'utils/getBlocksFromTimestamps'\n\n/**\n * for a given array of timestamps, returns block entities\n * @param timestamps\n * @param sortDirection\n * @param skipCount\n */\nexport const useBlocksFromTimestamps = (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' = 'desc',\n  skipCount = 1000,\n): {\n  blocks?: Block[]\n  error: boolean\n} => {\n  const [blocks, setBlocks] = useState<Block[]>()\n  const [error, setError] = useState(false)\n\n  const timestampsString = JSON.stringify(timestamps)\n  const blocksString = blocks ? JSON.stringify(blocks) : undefined\n  const chainName = useGetChainName()\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const timestampsArray = JSON.parse(timestampsString)\n      const result = await getBlocksFromTimestamps(timestampsArray, sortDirection, skipCount, chainName)\n      if (result.length === 0) {\n        setError(true)\n      } else {\n        setBlocks(result)\n      }\n    }\n    const blocksArray = blocksString ? JSON.parse(blocksString) : undefined\n    if (!blocksArray && !error && chainName) {\n      fetchData()\n    }\n  }, [blocksString, error, skipCount, sortDirection, timestampsString, chainName])\n\n  return {\n    blocks,\n    error,\n  }\n}\n\nexport const useBlockFromTimeStampSWR = (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' | undefined = 'desc',\n  skipCount: number | undefined = 1000,\n) => {\n  const chainName = useGetChainName()\n  const timestampsString = JSON.stringify(timestamps)\n  const timestampsArray = JSON.parse(timestampsString)\n  const { data } = useSWRImmutable([`info/blocks/${timestampsString}`, chainName], () =>\n    getBlocksFromTimestamps(timestampsArray, sortDirection, skipCount, chainName),\n  )\n  return { blocks: data }\n}\n","/**\n * Get increase/decrease of value compared to the previous value (e.g. 24h volume compared to 24h volume the day before )\n * @param valueNow - more recent value\n * @param valueBefore - value to compare with\n */\nexport const getAmountChange = (valueNow?: number, valueBefore?: number) => {\n  if (valueNow && valueBefore) {\n    return valueNow - valueBefore\n  }\n  if (valueNow) {\n    return valueNow\n  }\n  return 0\n}\n\n/**\n * Get increase/decrease of value compared to the previous value as a percentage\n * @param valueNow - more recent value\n * @param valueBefore - value to compare with\n */\nexport const getPercentChange = (valueNow?: number, valueBefore?: number): number => {\n  if (valueNow && valueBefore) {\n    return ((valueNow - valueBefore) / valueBefore) * 100\n  }\n  return 0\n}\n","import { GraphQLClient } from 'graphql-request'\nimport { getGQLHeaders } from 'utils/graphql'\nimport requestWithTimeout from 'utils/requestWithTimeout'\n\n/**\n * Helper function to get large amount GraphQL subqueries\n * @param queryConstructor constructor function that combines subqueries\n * @param subqueries individual queries\n * @param endpoint GraphQL endpoint\n * @param skipCount how many subqueries to fire at a time\n * @returns\n */\nexport const multiQuery = async (\n  queryConstructor: (subqueries: string[]) => string,\n  subqueries: string[],\n  endpoint: string,\n  skipCount = 1000,\n) => {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n  const client = new GraphQLClient(endpoint, { headers: getGQLHeaders(endpoint) })\n  try {\n    while (!allFound) {\n      let end = subqueries.length\n      if (skip + skipCount < subqueries.length) {\n        end = skip + skipCount\n      }\n      const subqueriesSlice = subqueries.slice(skip, end)\n      // eslint-disable-next-line no-await-in-loop\n      const result: any = await requestWithTimeout(client, queryConstructor(subqueriesSlice))\n      fetchedData = {\n        ...fetchedData,\n        ...result,\n      }\n      allFound = Object.keys(result).length < skipCount || skip + skipCount > subqueries.length\n      skip += skipCount\n    }\n    return fetchedData\n  } catch (error) {\n    console.error('Failed to fetch info data', error)\n    return null\n  }\n}\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 9.29006L12 13.1701L15.88 9.29006C16.27 8.90006 16.9 8.90006 17.29 9.29006C17.68 9.68006 17.68 10.3101 17.29 10.7001L12.7 15.2901C12.31 15.6801 11.68 15.6801 11.29 15.2901L6.69997 10.7001C6.30997 10.3101 6.30997 9.68006 6.69997 9.29006C7.08997 8.91006 7.72997 8.90006 8.11997 9.29006Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n"],"names":["MINIMUM_SEARCH_CHARACTERS","WEEKS_IN_YEAR","TOTAL_FEE","LP_HOLDERS_FEE","TREASURY_FEE","BUYBACK_FEE","PCS_V2_START","PCS_ETH_START","ONE_DAY_UNIX","ONE_HOUR_SECONDS","ITEMS_PER_INFO_TABLE_PAGE","TOKEN_BLACKLIST","ETH_TOKEN_BLACKLIST","PANCAKE_EXTENDED","COINGECKO","CMC","OFFICIAL_LISTS","UNSUPPORTED_LIST_URLS","WARNING_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","arrayify","parseBytes32String","ERC20Token","GELATO_NATIVE","useActiveWeb3React","useAtomValue","useMemo","combinedTokenMapFromActiveUrlsAtom","combinedTokenMapFromOfficialsUrlsAtom","useUnsupportedTokenList","useWarningTokenList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useBytes32TokenContract","useTokenContract","useNativeCurrency","mapWithoutUrls","tokenMap","chainId","Object","keys","reduce","newMap","address","token","useAllTokens","userAddedTokens","tokenMap_","useOfficialsAndUserAddedTokens","useUnsupportedTokens","unsupportedTokensMap","useWarningTokens","warningTokensMap","useIsTokenActive","activeTokens","useIsUserAddedToken","currency","find","equals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokens","tokenContract","undefined","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","useCurrency","currencyId","native","isNative","toUpperCase","toLowerCase","ChainId","Native","onChain","e","BSC","useContext","Cookie","ThemeContext","StyledThemeContext","useTheme","useNextTheme","COOKIE_THEME_KEY","THEME_DOMAIN","resolvedTheme","setTheme","theme","handleSwitchTheme","themeValue","set","domain","err","isDark","infoClient","infoClientETH","infoStableSwapClient","INFO_CLIENT","INFO_CLIENT_ETH","BLOCKS_CLIENT","BLOCKS_CLIENT_ETH","multiChainQueryMainToken","ETH","multiChainBlocksClient","multiChainStartTime","multiChainId","ETHEREUM","multiChainPaths","multiChainQueryClient","multiChainQueryEndPoint","multiChainScan","multiChainTokenBlackList","getMultiChainQueryEndPointWithStableSwap","chainName","isStableSwap","checkIsStableSwap","window","location","href","includes","getUnixTime","startOfHour","sub","useRouter","useCallback","useEffect","useState","fetchPoolChartData","fetchAllPoolData","fetchAllPoolDataWithAddress","fetchPoolTransactions","fetchGlobalChartData","fetchProtocolData","fetchTopTransactions","fetchTokenChartData","fetchPoolsForToken","fetchTokenPriceData","fetchAllTokenData","fetchAllTokenDataByAddresses","fetchTokenTransactions","useSWRImmutable","getDeltaTimestamps","useBlockFromTimeStampSWR","refreshIntervalForInfo","SWR_SETTINGS","refreshInterval","useProtocolDataSWR","useGetChainName","t24","t48","blocks","block24","block48","type","data","protocolData","useProtocolChartDataSWR","chartData","useProtocolTransactionsSWR","transactions","useAllPoolDataSWR","t24h","t48h","t7d","t14d","usePoolDatasSWR","poolAddresses","name","join","poolsWithData","map","filter","pool","usePoolChartDataSWR","usePoolTransactionsSWR","useAllTokenDataSWR","useTokenDatasSWR","addresses","tokensWithData","a","d","exists","useTokenDataSWR","allTokenData","usePoolsForTokenSWR","useTokenChartDataSWR","useTokenPriceDataSWR","interval","timeWindow","utcCurrentTime","Date","startTimestamp","useTokenTransactionsSWR","path","getChain","setName","useMultiChainPath","router","query","useStableSwapPath","fromPairs","TransactionType","mapMints","mint","MINT","hash","id","split","timestamp","sender","to","token0Symbol","pair","token0","token1Symbol","token1","token0Address","token1Address","amountUSD","parseFloat","amountToken0","amount0","amountToken1","amount1","mapBurns","burn","BURN","mapSwaps","swap","SWAP","from","amount0In","amount0Out","amount1In","amount1Out","mapDayData","tokenDayData","date","volumeUSD","dailyVolumeUSD","liquidityUSD","totalLiquidityUSD","mapPairDayData","pairDayData","reserveUSD","fetchChartData","getEntityDayDatas","chartEntries","error","skip","allFound","fetchError","concat","formattedDayDatas","dayData","dayOrdinal","parseInt","toFixed","console","warn","availableDays","firstAvailableDayData","latestLiquidityUSD","endTimestamp","toString","values","fetchChartDataWithAddress","gql","getPoolChartData","pairDayDatas","request","startTime","getChangeForPeriod","getLpFeesAndApr","useBlocksFromTimestamps","getPercentChange","fetchTopPoolAddresses","POOL_AT_BLOCK","block","pools","blockString","addressesString","fetchPoolData","block24h","block48h","block7d","block14d","weeksQuery","parsePoolData","pairs","accum","poolData","reserve0","reserve1","token0Price","token1Price","usePoolDatas","fetchState","setFetchState","blockError","fetch","number","formattedPoolData","now","formattedPoolData24h","oneDayAgo","formattedPoolData48h","twoDaysAgo","formattedPoolData7d","oneWeekAgo","formattedPoolData14d","twoWeeksAgo","formatted","current","oneDay","twoDays","week","twoWeeks","volumeUSDChange","volumeUSDWeek","volumeUSDChangeWeek","liquidityUSDChange","liquidityToken0","liquidityToken1","totalFees24h","totalFees7d","lpFees24h","lpFees7d","lpApr7d","allBlocksAvailable","fetchTopPools","timestamp24hAgo","whereCondition","blacklist","p","useTopPoolAddresses","topPoolAddresses","setTopPoolAddresses","POOL_TRANSACTIONS","mints","burns","swaps","PANCAKE_DAY_DATAS","getOverviewChartData","pancakeDayDatas","useFetchGlobalChartData","overviewChartData","setOverviewChartData","setError","getOverviewData","factoryString","formatPancakeFactoryResponse","rawPancakeFactory","totalTransactions","totalVolumeUSD","useFetchProtocolData","fetchData","error24","data24","error48","data48","Promise","all","anyError","overviewData","pancakeFactories","overviewData24","overviewData48","allDataAvailable","txCount","txCountChange","factories","GLOBAL_TRANSACTIONS","sort","b","getTokenChartData","tokenDayDatas","POOLS_FOR_TOKEN","transactionGT","asToken0","asToken1","getBlocksFromTimestamps","multiQuery","orderBy","getPriceSubqueries","priceQueryConstructor","subqueries","timestamps","time","push","prices","tokenPrices","mainToken","forEach","priceKey","derivedBNB","priceUSD","tokenPriceIndex","findIndex","tokenPrice","sortedTokenPrices","formattedHistory","i","open","close","high","low","getAmountChange","fetchTokenAddresses","TOKEN_AT_BLOCK","fetchTokenData","tokenAddresses","parseTokenData","tokenData","derivedUSD","tradeVolumeUSD","totalLiquidity","derivedETH","useFetchedTokenDatas","parsed","parsed24","parsed48","parsed7d","parsed14d","liquidityUSDOneDayAgo","liquidityToken","priceUSDOneDay","priceUSDWeek","priceUSDChange","priceUSDChangeWeek","fetchTopTokens","firstCount","t","useTopTokenAddresses","topTokenAddresses","setTopTokenAddresses","TOKEN_TRANSACTIONS","whereToken0","whereToken1","mints0","mintsAs0","mints1","mintsAs1","burns0","burnsAs0","burns1","burnsAs1","swaps0","swapsAs0","swaps1","swapsAs1","WrappedTokenInfo","atom","mapValues","groupBy","keyBy","EMPTY_LIST","uniqBy","DEFAULT_TOKEN_LIST","UNSUPPORTED_TOKEN_LIST","WARNING_TOKEN_LIST","listsAtom","sortByListPriority","urlA","urlB","first","indexOf","Number","MAX_SAFE_INTEGER","second","enumKeys","obj","k","isNaN","selectorActiveUrlsAtom","get","activeListUrls","selectorByUrlsAtom","byUrl","activeListUrlsAtom","urls","url","combineTokenMapsWithDefault","lists","defaultTokenMap","listToTokenMap","combineMaps","combineTokenMaps","slice","allTokens","currentUrl","newTokens","assign","selectorByUrls","selectorActiveUrls","inactiveUrlAtom","combinedTokenMapFromInActiveUrlsAtom","inactiveUrl","tokenListFromOfficialsUrlsAtom","mergedTokenLists","acc","mergedList","tokenInfo","tokenInfos","combinedTokenMapFromUnsupportedUrlsAtom","localUnsupportedListMap","loadedUnsupportedListMap","combinedTokenMapFromWarningUrlsAtom","listCache","WeakMap","list","groupedTokenMap","tokenAddressMap","tokenInfoList","defineProperty","value","useAllLists","map1","map2","RINKEBY","GOERLI","BSC_TESTNET","useActiveListUrls","useInactiveListUrls","useCombinedActiveList","useCombinedInactiveList","useIsListActive","Boolean","createListsAtom","createTokenListReducer","NEW_LIST_STATE","initialState","lastInitializedDefaultListOfLists","memo","listUrl","listReducer","useListState","Pair","deserializeToken","differenceInDays","flatMap","getFarmConfig","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useFeeData","useWeb3LibraryContext","useSWR","useAppDispatch","addSerializedPair","addSerializedToken","FarmStakedOnly","muteAudio","removeSerializedToken","unmuteAudio","updateUserDeadline","updateUserExpertMode","updateUserFarmStakedOnly","updateUserSingleHopOnly","updateUserSlippageTolerance","addWatchlistToken","addWatchlistPool","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionChartDisclaimerShow","updateUserPredictionChainlinkChartDisclaimerShow","updateUserPredictionAcceptedRisk","updateUserUsernameVisibility","updateUserExpertModeAcknowledgementShow","hidePhishingWarningBanner","setIsExchangeChartDisplayed","setChartViewMode","setSubgraphHealthIndicatorDisplayed","updateUserLimitOrderAcceptedWarning","setZapDisabled","GAS_PRICE_GWEI","useAudioModeManager","dispatch","audioPlay","state","user","toggleSetAudioMode","usePhishingBannerManager","hideTimestampPhishingWarningBanner","showPhishingWarningBanner","hideBanner","useExchangeChartManager","isMobile","isChartDisplayed","isExchangeChartDisplayed","setUserChartPreference","isDisplayed","useExchangeChartViewManager","chartViewMode","userChartViewMode","setUserChartViewPreference","view","useZapModeManager","zapEnabled","userZapDisabled","setZapEnable","enable","useSubgraphHealthIndicatorManager","isSubgraphHealthIndicatorDisplayed","setSubgraphHealthIndicatorDisplayedPreference","newIsDisplayed","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","slippage","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","setUserPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","setUserPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","setUserFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","setUserPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserLimitOrderAcceptedWarning","userLimitOrderAcceptedWarning","setUserLimitOrderAcceptedWarning","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","setPredictionUserChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserPredictionChainlinkChartDisclaimerShow","userPredictionChainlinkChartDisclaimerShow","setPredictionUserChainlinkChartDisclaimerShow","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","setUserExpertModeAcknowledgementShow","showAcknowledgement","useUserUsernameVisibility","userUsernameVisibility","setUserUsernameVisibility","usernameVisibility","useUserTransactionTTL","userDeadline","setUserDeadline","deadline","useAddUserToken","serializedToken","serialize","useRemoveUserAddedToken","useGasPrice","chainIdOverride","chainId_","chain","library","bscProviderGasPrice","default","provider","gasPrice","getGasPrice","revalidateOnFocus","revalidateOnReconnect","enabled","watch","testnet","maxPriorityFeePerGas","serializePair","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","pinnedPairs","farmPairs","farms","fPairs","farm","pid","quoteToken","generatedPairs","base","savedSerializedPairs","userPairs","forChain","pairId","combinedList","keyed","sorted","sortsBefore","key","useWatchlistTokens","savedTokens","watchlistTokens","updatedSavedTokens","useWatchlistPools","savedPools","watchlistPools","updateSavedPools","createSelector","selectUserTokens","userAddedTokenSelector","serializedTokensMap","numeral","getFirstThreeNonZeroDecimals","match","formatAmount","amount","options","notation","displayThreshold","tokenPrecision","isInteger","precision","format","repeat","amountWithPrecision","getBlockSubqueries","blocksQueryConstructor","sortDirection","skipCount","fetchedData","valueNow","valueOnePeriodAgo","valueTwoPeriodsAgo","currentPeriodAmount","previousPeriodAmount","percentageChange","startOfMinute","subDays","subWeeks","Infinity","mapping","getTokenLogoURL","BIT_QUERY","STABLESWAP_SUBGRAPH_CLIENT","GraphQLClient","INFO_CLIENT_WITH_CHAIN","getGQLHeaders","endpoint","process","env","NEXT_PUBLIC_SF_HEADER","sfHeader","headers","infoClientWithChain","infoServerClient","SF_HEADER","timeout","stableSwapClient","bitQueryServerClient","BIT_QUERY_HEADER","requestWithTimeout","graphQLClient","variables","race","_","reject","setTimeout","Error","setBlocks","timestampsString","JSON","stringify","blocksString","timestampsArray","parse","blocksArray","valueBefore","queryConstructor","client","end","subqueriesSlice","React","Svg","Icon","props","viewBox"],"sourceRoot":""}