{"version":3,"file":"7134.js","mappings":"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","sources":["webpack://web/./src/components/Toast/DescriptionWithTx.tsx","webpack://web/./src/components/Toast/index.tsx","webpack://web/./src/hooks/useCatchTxError.tsx","webpack://web/./src/utils/getTimePeriods.ts","webpack://web/./src/utils/sentry.ts","webpack://web/../../packages/uikit/src/components/Card/CardBody.tsx"],"sourcesContent":["import { Link, Text } from '@pancakeswap/uikit'\nimport { getBlockExploreLink, getBlockExploreName } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n  txChainId?: number\n}\n\nconst DescriptionWithTx: React.FC<React.PropsWithChildren<DescriptionWithTxProps>> = ({\n  txHash,\n  txChainId,\n  children,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBlockExploreLink(txHash, 'transaction', txChainId || chainId)}>\n          {t('View on %site%', { site: getBlockExploreName(txChainId || chainId) })}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export { default as ToastDescriptionWithTx } from './DescriptionWithTx'\n","import { useCallback, useState } from 'react'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useToast } from '@pancakeswap/uikit'\nimport { TransactionReceipt, TransactionResponse } from '@ethersproject/providers'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nimport { logError, isUserRejected } from 'utils/sentry'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nexport type TxResponse = TransactionResponse | null\n\nexport type CatchTxErrorReturn = {\n  fetchWithCatchTxError: (fn: () => Promise<TxResponse>) => Promise<TransactionReceipt>\n  fetchTxResponse: (fn: () => Promise<TxResponse>) => Promise<TxResponse>\n  loading: boolean\n  txResponseLoading: boolean\n}\n\ntype ErrorData = {\n  code: number\n  message: string\n}\n\ntype TxError = {\n  data: ErrorData\n  error: string\n}\n\n// -32000 is insufficient funds for gas * price + value\nconst isGasEstimationError = (err: TxError): boolean => err?.data?.code === -32000\n\nexport default function useCatchTxError(): CatchTxErrorReturn {\n  const { provider } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { toastError, toastSuccess } = useToast()\n  const [loading, setLoading] = useState(false)\n  const [txResponseLoading, setTxResponseLoading] = useState(false)\n\n  const handleNormalError = useCallback(\n    (error, tx?: TxResponse) => {\n      logError(error)\n\n      if (tx) {\n        toastError(\n          t('Error'),\n          <ToastDescriptionWithTx txHash={tx.hash}>\n            {t('Please try again. Confirm the transaction and make sure you are paying enough gas!')}\n          </ToastDescriptionWithTx>,\n        )\n      } else {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    [t, toastError],\n  )\n\n  const fetchWithCatchTxError = useCallback(\n    async (callTx: () => Promise<TxResponse>): Promise<TransactionReceipt | null> => {\n      let tx: TxResponse = null\n\n      try {\n        setLoading(true)\n\n        /**\n         * https://github.com/vercel/swr/pull/1450\n         *\n         * wait for useSWRMutation finished, so we could apply SWR in case manually trigger tx call\n         */\n        tx = await callTx()\n\n        toastSuccess(`${t('Transaction Submitted')}!`, <ToastDescriptionWithTx txHash={tx.hash} />)\n\n        const receipt = await tx.wait()\n\n        return receipt\n      } catch (error: any) {\n        if (!isUserRejected(error)) {\n          if (!tx) {\n            handleNormalError(error)\n          } else {\n            provider\n              .call(tx, tx.blockNumber)\n              .then(() => {\n                handleNormalError(error, tx)\n              })\n              .catch((err: any) => {\n                if (isGasEstimationError(err)) {\n                  handleNormalError(error, tx)\n                } else {\n                  logError(err)\n\n                  let recursiveErr = err\n\n                  let reason: string | undefined\n\n                  // for MetaMask\n                  if (recursiveErr?.data?.message) {\n                    reason = recursiveErr?.data?.message\n                  } else {\n                    // for other wallets\n                    // Reference\n                    // https://github.com/Uniswap/interface/blob/ac962fb00d457bc2c4f59432d7d6d7741443dfea/src/hooks/useSwapCallback.tsx#L216-L222\n                    while (recursiveErr) {\n                      reason = recursiveErr.reason ?? recursiveErr.message ?? reason\n                      recursiveErr = recursiveErr.error ?? recursiveErr.data?.originalError\n                    }\n                  }\n\n                  const REVERT_STR = 'execution reverted: '\n                  const indexInfo = reason?.indexOf(REVERT_STR)\n                  const isRevertedError = indexInfo >= 0\n\n                  if (isRevertedError) reason = reason.substring(indexInfo + REVERT_STR.length)\n\n                  toastError(\n                    t('Failed'),\n                    <ToastDescriptionWithTx txHash={tx.hash}>\n                      {isRevertedError\n                        ? t('Transaction failed with error: %reason%', { reason })\n                        : t('Transaction failed. For detailed error message:')}\n                    </ToastDescriptionWithTx>,\n                  )\n                }\n              })\n          }\n        }\n      } finally {\n        setLoading(false)\n      }\n\n      return null\n    },\n    [handleNormalError, toastError, provider, toastSuccess, t],\n  )\n\n  const fetchTxResponse = useCallback(\n    async (callTx: () => Promise<TxResponse>): Promise<TxResponse> => {\n      let tx: TxResponse = null\n\n      try {\n        setTxResponseLoading(true)\n\n        /**\n         * https://github.com/vercel/swr/pull/1450\n         *\n         * wait for useSWRMutation finished, so we could apply SWR in case manually trigger tx call\n         */\n        tx = await callTx()\n\n        toastSuccess(`${t('Transaction Submitted')}!`, <ToastDescriptionWithTx txHash={tx.hash} />)\n\n        return tx\n      } catch (error: any) {\n        if (!isUserRejected(error)) {\n          if (!tx) {\n            handleNormalError(error)\n          } else {\n            provider\n              .call(tx, tx.blockNumber)\n              .then(() => {\n                handleNormalError(error, tx)\n              })\n              .catch((err: any) => {\n                if (isGasEstimationError(err)) {\n                  handleNormalError(error, tx)\n                } else {\n                  logError(err)\n\n                  let recursiveErr = err\n\n                  let reason: string | undefined\n\n                  // for MetaMask\n                  if (recursiveErr?.data?.message) {\n                    reason = recursiveErr?.data?.message\n                  } else {\n                    // for other wallets\n                    // Reference\n                    // https://github.com/Uniswap/interface/blob/ac962fb00d457bc2c4f59432d7d6d7741443dfea/src/hooks/useSwapCallback.tsx#L216-L222\n                    while (recursiveErr) {\n                      reason = recursiveErr.reason ?? recursiveErr.message ?? reason\n                      recursiveErr = recursiveErr.error ?? recursiveErr.data?.originalError\n                    }\n                  }\n\n                  const REVERT_STR = 'execution reverted: '\n                  const indexInfo = reason?.indexOf(REVERT_STR)\n                  const isRevertedError = indexInfo >= 0\n\n                  if (isRevertedError) reason = reason.substring(indexInfo + REVERT_STR.length)\n\n                  toastError(\n                    t('Failed'),\n                    <ToastDescriptionWithTx txHash={tx.hash}>\n                      {isRevertedError\n                        ? t('Transaction failed with error: %reason%', { reason })\n                        : t('Transaction failed. For detailed error message:')}\n                    </ToastDescriptionWithTx>,\n                  )\n                }\n              })\n          }\n        }\n      } finally {\n        setTxResponseLoading(false)\n      }\n\n      return null\n    },\n    [handleNormalError, toastError, provider, toastSuccess, t],\n  )\n\n  return {\n    fetchWithCatchTxError,\n    fetchTxResponse,\n    loading,\n    txResponseLoading,\n  }\n}\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nexport const DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { captureException } from '@sentry/nextjs'\n\nconst assignError = (maybeError: any) => {\n  if (typeof maybeError === 'string') {\n    return new Error(maybeError)\n  }\n  if (typeof maybeError === 'object') {\n    const error = new Error(maybeError?.message ?? String(maybeError))\n    if (maybeError?.stack) {\n      error.stack = maybeError.stack\n    }\n    if (maybeError?.code) {\n      error.name = maybeError.code\n    }\n    return error\n  }\n  return maybeError\n}\n\nexport const isUserRejected = (err) => {\n  // provider user rejected error code\n  return typeof err === 'object' && 'code' in err && err.code === 4001\n}\n\nconst ENABLED_LOG = false\n\nexport const logError = (error: Error | unknown) => {\n  if (ENABLED_LOG) {\n    if (error instanceof Error) {\n      captureException(error)\n    } else {\n      captureException(assignError(error), error)\n    }\n  }\n  console.error(error)\n}\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n"],"names":["Link","Text","getBlockExploreLink","getBlockExploreName","useActiveWeb3React","useTranslation","truncateHash","DescriptionWithTx","txHash","txChainId","children","chainId","t","as","external","href","site","default","ToastDescriptionWithTx","useCallback","useState","useToast","logError","isUserRejected","isGasEstimationError","err","data","code","useCatchTxError","provider","toastError","toastSuccess","loading","setLoading","txResponseLoading","setTxResponseLoading","handleNormalError","error","tx","hash","fetchWithCatchTxError","callTx","receipt","wait","call","blockNumber","then","catch","recursiveErr","reason","message","originalError","REVERT_STR","indexInfo","indexOf","isRevertedError","substring","length","fetchTxResponse","MINUTE_IN_SECONDS","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","captureException","assignError","maybeError","Error","String","stack","name","ENABLED_LOG","console","styled","space","CardBody","div","defaultProps","p"],"sourceRoot":""}