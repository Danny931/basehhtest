{"version":3,"file":"5186.js","mappings":";;;;;;;;;;;;;AAAuC;AAEvC,MAAMC,WAAW,GAAGD,uEAAU;;EAAA,CAAC;;;;;;AAM/B,CAAC;AAED,iEAAeC,WAAW,EAAC;;;;;;;;;;;;;;;;;;;ACV3B;AAA0C;AACH;AACD;AAGtC,MAAMK,aAAa,GAAGN,uEAAU;;EAAqC,CAAC;cACxD,EAAE,CAAC,EAAEO,OAAO,GAAE,GAAKA,OAAO,CAAC;aAC5B,EAAE,CAAC,EAAEC,MAAM,GAAE,GAAKA,MAAM,CAAC;;;;;;;iBAOrB,EAAE,CAAC,EAAEA,MAAM,GAAED,OAAO,GAAE,GAAK,OAAQ,GAAGC,MAAM,GAAI,GAAG,CAAC;;;EAGnE,EAAEH,gDAAK,CAAC;AACV,CAAC;AAED,MAAMI,OAAO,iBAAGL,iDAAU,CAA+B,CAAC,EAAEM,KAAK,GAAEC,MAAM,GAAE,GAAGC,KAAK,EAAE,EAAEC,GAAG,GAAK;IAC7F,qBAAO,mDAACP,aAAa;QAACO,GAAG,EAAEA,GAAG;QAAEL,MAAM,EAAEE,KAAK;QAAEH,OAAO,EAAEI,MAAM;QAAG,GAAGC,KAAK;MAAI,CAAC;AAChF,CAAC,CAAC;AAEF,iEAAeH,OAAO,EAAC;;;;;;;;;;;ACxBvB,iEAAe;IACbK,IAAI,EAAE,IAAI;IACVC,UAAU,EAAE,OAAO;IACnBC,SAAS,EAAE,CAAC;CACb,EAAC;;;;;;;;;;;;;;;;;ACH4C;AAEvC,MAAME,eAAe,GAAGD,wDAAS,CAAC;;;AAGzC,CAAC,CAAC;AAEK,MAAME,kBAAkB,GAAGF,wDAAS,CAAC;;;AAG5C,CAAC,CAAC;AAEK,MAAMG,gBAAgB,GAAG,CAACC,OAA2B,GAAK;IAC/D,IAAI,CAACA,OAAO,EAAE,OAAO;IACrB,IAAIA,OAAO,CAACC,SAAS,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACxCF,OAAO,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC,CAAC;QACnCH,OAAO,CAACC,SAAS,CAACG,GAAG,CAAC,WAAW,CAAC,CAAC;IACrC,OAAO;QACLJ,OAAO,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAAC;QACtCH,OAAO,CAACC,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;AACH,CAAC,CAAC;AAEK,MAAMC,iBAAiB,GAAa;IACzCC,OAAO,EAAE;QAAEC,SAAS,EAAE,iBAAiB;KAAE;IACzCC,OAAO,EAAE;QAAED,SAAS,EAAE,iBAAiB;KAAE;IACzCE,IAAI,EAAE;QAAEF,SAAS,EAAE,iBAAiB;KAAE;CACvC,CAAC;AAEK,MAAMG,YAAY,GAAG;IAC1BJ,OAAO,EAAE,SAAS;IAClBE,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE,MAAM;CACb,CAAC","sources":["webpack://web/../../packages/uikit/src/components/Image/Placeholder.tsx","webpack://web/../../packages/uikit/src/components/Image/Wrapper.tsx","webpack://web/../../packages/uikit/src/components/Image/options.ts","webpack://web/../../packages/uikit/src/util/animationToolkit.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Placeholder = styled.div`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n\nexport default Placeholder;\n","import React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { WrapperProps } from \"./types\";\n\nconst StyledWrapper = styled.div<{ $width: number; $height: number }>`\n  max-height: ${({ $height }) => $height}px;\n  max-width: ${({ $width }) => $width}px;\n  position: relative;\n  width: 100%;\n\n  &:after {\n    content: \"\";\n    display: block;\n    padding-top: ${({ $width, $height }) => ($height / $width) * 100}%;\n  }\n\n  ${space}\n`;\n\nconst Wrapper = forwardRef<HTMLDivElement, WrapperProps>(({ width, height, ...props }, ref) => {\n  return <StyledWrapper ref={ref} $width={width} $height={height} {...props} />;\n});\n\nexport default Wrapper;\n","export default {\n  root: null,\n  rootMargin: \"200px\",\n  threshold: 0,\n};\n","import { Variants } from \"framer-motion\";\nimport { keyframes } from \"styled-components\";\n\nexport const appearAnimation = keyframes`\n  from { opacity:0 }\n  to { opacity:1 }\n`;\n\nexport const disappearAnimation = keyframes`\n  from { opacity:1 }\n  to { opacity:0 }\n`;\n\nexport const animationHandler = (element: HTMLElement | null) => {\n  if (!element) return;\n  if (element.classList.contains(\"appear\")) {\n    element.classList.remove(\"appear\");\n    element.classList.add(\"disappear\");\n  } else {\n    element.classList.remove(\"disappear\");\n    element.classList.add(\"appear\");\n  }\n};\n\nexport const animationVariants: Variants = {\n  initial: { transform: \"translateX(0px)\" },\n  animate: { transform: \"translateX(0px)\" },\n  exit: { transform: \"translateX(0px)\" },\n};\n\nexport const animationMap = {\n  initial: \"initial\",\n  animate: \"animate\",\n  exit: \"exit\",\n};\n"],"names":["styled","Placeholder","div","React","forwardRef","space","StyledWrapper","$height","$width","Wrapper","width","height","props","ref","root","rootMargin","threshold","keyframes","appearAnimation","disappearAnimation","animationHandler","element","classList","contains","remove","add","animationVariants","initial","transform","animate","exit","animationMap"],"sourceRoot":""}