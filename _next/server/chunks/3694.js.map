{"version":3,"file":"3694.js","mappings":"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","sources":["webpack://web/./src/components/Toast/DescriptionWithTx.tsx","webpack://web/./src/components/Toast/index.tsx","webpack://web/./src/config/constants/lists.ts","webpack://web/./src/hooks/Tokens.ts","webpack://web/./src/hooks/useCallWithMarketGasPrice.ts","webpack://web/./src/hooks/useCatchTxError.tsx","webpack://web/./src/hooks/useNativeCurrency.ts","webpack://web/./src/state/lists/hooks.ts","webpack://web/./src/state/lists/lists.ts","webpack://web/./src/state/user/hooks/index.tsx","webpack://web/./src/state/user/hooks/useUserAddedTokens.ts","webpack://web/./src/utils/sentry.ts","webpack://web/../../packages/uikit/src/components/Card/CardBody.tsx","webpack://web/../../packages/uikit/src/components/Loading/Loading.tsx"],"sourcesContent":["import { Link, Text } from '@pancakeswap/uikit'\nimport { getBlockExploreLink, getBlockExploreName } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n  txChainId?: number\n}\n\nconst DescriptionWithTx: React.FC<React.PropsWithChildren<DescriptionWithTxProps>> = ({\n  txHash,\n  txChainId,\n  children,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBlockExploreLink(txHash, 'transaction', txChainId || chainId)}>\n          {t('View on %site%', { site: getBlockExploreName(txChainId || chainId) })}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export { default as ToastDescriptionWithTx } from './DescriptionWithTx'\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst COINGECKO = 'https://tokens.pancakeswap.finance/coingecko.json'\nconst CMC = 'https://tokens.pancakeswap.finance/cmc.json'\n\n// List of official tokens list\nexport const OFFICIAL_LISTS = [PANCAKE_EXTENDED]\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\nexport const WARNING_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_EXTENDED,\n  CMC,\n  COINGECKO,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n  ...WARNING_LIST_URLS,\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","/* eslint-disable no-param-reassign */\nimport { arrayify } from '@ethersproject/bytes'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ERC20Token, ChainId } from '@pancakeswap/sdk'\nimport { TokenAddressMap } from '@pancakeswap/token-lists'\nimport { GELATO_NATIVE } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAtomValue } from 'jotai'\nimport { useMemo } from 'react'\nimport {\n  combinedTokenMapFromActiveUrlsAtom,\n  combinedTokenMapFromOfficialsUrlsAtom,\n  useUnsupportedTokenList,\n  useWarningTokenList,\n} from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport useNativeCurrency from './useNativeCurrency'\n\nconst mapWithoutUrls = (tokenMap: TokenAddressMap<ChainId>, chainId: number) =>\n  Object.keys(tokenMap[chainId] || {}).reduce<{ [address: string]: ERC20Token }>((newMap, address) => {\n    newMap[address] = tokenMap[chainId][address].token\n    return newMap\n  }, {})\n\n/**\n * Returns all tokens that are from active urls and user added tokens\n */\nexport function useAllTokens(): { [address: string]: ERC20Token } {\n  const { chainId } = useActiveWeb3React()\n  const tokenMap = useAtomValue(combinedTokenMapFromActiveUrlsAtom)\n  const userAddedTokens = useUserAddedTokens()\n  return useMemo(() => {\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: ERC20Token }>(\n          (tokenMap_, token) => {\n            tokenMap_[token.address] = token\n            return tokenMap_\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          mapWithoutUrls(tokenMap, chainId),\n        )\n    )\n  }, [userAddedTokens, tokenMap, chainId])\n}\n\n/**\n * Returns all tokens that are from officials token list and user added tokens\n */\nexport function useOfficialsAndUserAddedTokens(): { [address: string]: ERC20Token } {\n  const { chainId } = useActiveWeb3React()\n  const tokenMap = useAtomValue(combinedTokenMapFromOfficialsUrlsAtom)\n  const userAddedTokens = useUserAddedTokens()\n  return useMemo(() => {\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: ERC20Token }>(\n          (tokenMap_, token) => {\n            tokenMap_[token.address] = token\n            return tokenMap_\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          mapWithoutUrls(tokenMap, chainId),\n        )\n    )\n  }, [userAddedTokens, tokenMap, chainId])\n}\n\nexport function useUnsupportedTokens(): { [address: string]: ERC20Token } {\n  const { chainId } = useActiveWeb3React()\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useMemo(() => mapWithoutUrls(unsupportedTokensMap, chainId), [unsupportedTokensMap, chainId])\n}\n\nexport function useWarningTokens(): { [address: string]: ERC20Token } {\n  const warningTokensMap = useWarningTokenList()\n  const { chainId } = useActiveWeb3React()\n  return useMemo(() => mapWithoutUrls(warningTokensMap, chainId), [warningTokensMap, chainId])\n}\n\nexport function useIsTokenActive(token: ERC20Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currency?.equals(token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): ERC20Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: ERC20Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new ERC20Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | ERC20Token | null | undefined {\n  const native = useNativeCurrency()\n  const isNative =\n    currencyId?.toUpperCase() === native.symbol?.toUpperCase() || currencyId?.toLowerCase() === GELATO_NATIVE\n  const token = useToken(isNative ? undefined : currencyId)\n  return isNative ? native : token\n}\n","import { useCallback } from 'react'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Contract, CallOverrides } from '@ethersproject/contracts'\nimport get from 'lodash/get'\nimport { addBreadcrumb } from '@sentry/nextjs'\n\nexport function useCallWithMarketGasPrice() {\n  /**\n   * Perform a contract call with a gas price returned from useGasPrice\n   * @param contract Used to perform the call\n   * @param methodName The name of the method called\n   * @param methodArgs An array of arguments to pass to the method\n   * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n   * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n   */\n  const callWithMarketGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<TransactionResponse> => {\n      addBreadcrumb({\n        type: 'Transaction',\n        message: `Call with market gas price`,\n        data: {\n          contractAddress: contract.address,\n          methodName,\n          methodArgs,\n          overrides,\n        },\n      })\n\n      const contractMethod = get(contract, methodName)\n      const tx = await contractMethod(...methodArgs, { ...overrides })\n\n      if (tx) {\n        addBreadcrumb({\n          type: 'Transaction',\n          message: `Transaction sent: ${tx.hash}`,\n          data: {\n            hash: tx.hash,\n            from: tx.from,\n            gasLimit: tx.gasLimit?.toString(),\n            nonce: tx.nonce,\n          },\n        })\n      }\n\n      return tx\n    },\n    [],\n  )\n\n  return { callWithMarketGasPrice }\n}\n","import { useCallback, useState } from 'react'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useToast } from '@pancakeswap/uikit'\nimport { TransactionReceipt, TransactionResponse } from '@ethersproject/providers'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nimport { logError, isUserRejected } from 'utils/sentry'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nexport type TxResponse = TransactionResponse | null\n\nexport type CatchTxErrorReturn = {\n  fetchWithCatchTxError: (fn: () => Promise<TxResponse>) => Promise<TransactionReceipt>\n  fetchTxResponse: (fn: () => Promise<TxResponse>) => Promise<TxResponse>\n  loading: boolean\n  txResponseLoading: boolean\n}\n\ntype ErrorData = {\n  code: number\n  message: string\n}\n\ntype TxError = {\n  data: ErrorData\n  error: string\n}\n\n// -32000 is insufficient funds for gas * price + value\nconst isGasEstimationError = (err: TxError): boolean => err?.data?.code === -32000\n\nexport default function useCatchTxError(): CatchTxErrorReturn {\n  const { provider } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { toastError, toastSuccess } = useToast()\n  const [loading, setLoading] = useState(false)\n  const [txResponseLoading, setTxResponseLoading] = useState(false)\n\n  const handleNormalError = useCallback(\n    (error, tx?: TxResponse) => {\n      logError(error)\n\n      if (tx) {\n        toastError(\n          t('Error'),\n          <ToastDescriptionWithTx txHash={tx.hash}>\n            {t('Please try again. Confirm the transaction and make sure you are paying enough gas!')}\n          </ToastDescriptionWithTx>,\n        )\n      } else {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    [t, toastError],\n  )\n\n  const fetchWithCatchTxError = useCallback(\n    async (callTx: () => Promise<TxResponse>): Promise<TransactionReceipt | null> => {\n      let tx: TxResponse = null\n\n      try {\n        setLoading(true)\n\n        /**\n         * https://github.com/vercel/swr/pull/1450\n         *\n         * wait for useSWRMutation finished, so we could apply SWR in case manually trigger tx call\n         */\n        tx = await callTx()\n\n        toastSuccess(`${t('Transaction Submitted')}!`, <ToastDescriptionWithTx txHash={tx.hash} />)\n\n        const receipt = await tx.wait()\n\n        return receipt\n      } catch (error: any) {\n        if (!isUserRejected(error)) {\n          if (!tx) {\n            handleNormalError(error)\n          } else {\n            provider\n              .call(tx, tx.blockNumber)\n              .then(() => {\n                handleNormalError(error, tx)\n              })\n              .catch((err: any) => {\n                if (isGasEstimationError(err)) {\n                  handleNormalError(error, tx)\n                } else {\n                  logError(err)\n\n                  let recursiveErr = err\n\n                  let reason: string | undefined\n\n                  // for MetaMask\n                  if (recursiveErr?.data?.message) {\n                    reason = recursiveErr?.data?.message\n                  } else {\n                    // for other wallets\n                    // Reference\n                    // https://github.com/Uniswap/interface/blob/ac962fb00d457bc2c4f59432d7d6d7741443dfea/src/hooks/useSwapCallback.tsx#L216-L222\n                    while (recursiveErr) {\n                      reason = recursiveErr.reason ?? recursiveErr.message ?? reason\n                      recursiveErr = recursiveErr.error ?? recursiveErr.data?.originalError\n                    }\n                  }\n\n                  const REVERT_STR = 'execution reverted: '\n                  const indexInfo = reason?.indexOf(REVERT_STR)\n                  const isRevertedError = indexInfo >= 0\n\n                  if (isRevertedError) reason = reason.substring(indexInfo + REVERT_STR.length)\n\n                  toastError(\n                    t('Failed'),\n                    <ToastDescriptionWithTx txHash={tx.hash}>\n                      {isRevertedError\n                        ? t('Transaction failed with error: %reason%', { reason })\n                        : t('Transaction failed. For detailed error message:')}\n                    </ToastDescriptionWithTx>,\n                  )\n                }\n              })\n          }\n        }\n      } finally {\n        setLoading(false)\n      }\n\n      return null\n    },\n    [handleNormalError, toastError, provider, toastSuccess, t],\n  )\n\n  const fetchTxResponse = useCallback(\n    async (callTx: () => Promise<TxResponse>): Promise<TxResponse> => {\n      let tx: TxResponse = null\n\n      try {\n        setTxResponseLoading(true)\n\n        /**\n         * https://github.com/vercel/swr/pull/1450\n         *\n         * wait for useSWRMutation finished, so we could apply SWR in case manually trigger tx call\n         */\n        tx = await callTx()\n\n        toastSuccess(`${t('Transaction Submitted')}!`, <ToastDescriptionWithTx txHash={tx.hash} />)\n\n        return tx\n      } catch (error: any) {\n        if (!isUserRejected(error)) {\n          if (!tx) {\n            handleNormalError(error)\n          } else {\n            provider\n              .call(tx, tx.blockNumber)\n              .then(() => {\n                handleNormalError(error, tx)\n              })\n              .catch((err: any) => {\n                if (isGasEstimationError(err)) {\n                  handleNormalError(error, tx)\n                } else {\n                  logError(err)\n\n                  let recursiveErr = err\n\n                  let reason: string | undefined\n\n                  // for MetaMask\n                  if (recursiveErr?.data?.message) {\n                    reason = recursiveErr?.data?.message\n                  } else {\n                    // for other wallets\n                    // Reference\n                    // https://github.com/Uniswap/interface/blob/ac962fb00d457bc2c4f59432d7d6d7741443dfea/src/hooks/useSwapCallback.tsx#L216-L222\n                    while (recursiveErr) {\n                      reason = recursiveErr.reason ?? recursiveErr.message ?? reason\n                      recursiveErr = recursiveErr.error ?? recursiveErr.data?.originalError\n                    }\n                  }\n\n                  const REVERT_STR = 'execution reverted: '\n                  const indexInfo = reason?.indexOf(REVERT_STR)\n                  const isRevertedError = indexInfo >= 0\n\n                  if (isRevertedError) reason = reason.substring(indexInfo + REVERT_STR.length)\n\n                  toastError(\n                    t('Failed'),\n                    <ToastDescriptionWithTx txHash={tx.hash}>\n                      {isRevertedError\n                        ? t('Transaction failed with error: %reason%', { reason })\n                        : t('Transaction failed. For detailed error message:')}\n                    </ToastDescriptionWithTx>,\n                  )\n                }\n              })\n          }\n        }\n      } finally {\n        setTxResponseLoading(false)\n      }\n\n      return null\n    },\n    [handleNormalError, toastError, provider, toastSuccess, t],\n  )\n\n  return {\n    fetchWithCatchTxError,\n    fetchTxResponse,\n    loading,\n    txResponseLoading,\n  }\n}\n","import { ChainId, Native, NativeCurrency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nexport default function useNativeCurrency(): NativeCurrency {\n  const { chainId } = useActiveWeb3React()\n  return useMemo(() => {\n    try {\n      return Native.onChain(chainId)\n    } catch (e) {\n      return Native.onChain(ChainId.BSC)\n    }\n  }, [chainId])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { TokenAddressMap as TTokenAddressMap, WrappedTokenInfo, ListsState } from '@pancakeswap/token-lists'\nimport { TokenList, TokenInfo } from '@uniswap/token-lists'\nimport { DEFAULT_LIST_OF_LISTS, OFFICIAL_LISTS, UNSUPPORTED_LIST_URLS, WARNING_LIST_URLS } from 'config/constants/lists'\nimport { atom, useAtomValue } from 'jotai'\nimport mapValues from 'lodash/mapValues'\nimport groupBy from 'lodash/groupBy'\nimport keyBy from 'lodash/keyBy'\nimport { EMPTY_LIST } from '@pancakeswap/tokens'\nimport uniqBy from 'lodash/uniqBy'\nimport { useMemo } from 'react'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\nimport WARNING_TOKEN_LIST from '../../config/constants/tokenLists/pancake-warning.tokenlist.json'\nimport { listsAtom } from './lists'\n\ntype TokenAddressMap = TTokenAddressMap<ChainId>\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\nfunction enumKeys<O extends object, K extends keyof O = keyof O>(obj: O): K[] {\n  return Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]\n}\n\n// -------------------------------------\n//   Selectors\n// -------------------------------------\nconst selectorActiveUrlsAtom = atom((get) => get(listsAtom)?.activeListUrls ?? [])\nexport const selectorByUrlsAtom = atom((get) => get(listsAtom)?.byUrl ?? {})\n\nconst activeListUrlsAtom = atom((get) => {\n  const urls = get(selectorActiveUrlsAtom)\n  return urls?.filter((url) => !UNSUPPORTED_LIST_URLS.includes(url))\n})\n\nconst combineTokenMapsWithDefault = (lists: ListsState['byUrl'], urls: string[]) => {\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  if (!urls) return defaultTokenMap\n  return combineMaps(combineTokenMaps(lists, urls), defaultTokenMap)\n}\n\nconst combineTokenMaps = (lists: ListsState['byUrl'], urls: string[]) => {\n  if (!urls) return EMPTY_LIST\n  return (\n    urls\n      .slice()\n      // sort by priority so top priority goes last\n      .sort(sortByListPriority)\n      .reduce((allTokens, currentUrl) => {\n        const current = lists[currentUrl]?.current\n        if (!current) return allTokens\n        try {\n          const newTokens = Object.assign(listToTokenMap(current))\n          return combineMaps(allTokens, newTokens)\n        } catch (error) {\n          console.error('Could not show token list due to error', error)\n          return allTokens\n        }\n      }, EMPTY_LIST)\n  )\n}\n\nexport const combinedTokenMapFromActiveUrlsAtom = atom((get) => {\n  const [selectorByUrls, selectorActiveUrls] = [get(selectorByUrlsAtom), get(selectorActiveUrlsAtom)]\n  return combineTokenMapsWithDefault(selectorByUrls, selectorActiveUrls)\n})\n\nconst inactiveUrlAtom = atom((get) => {\n  const [lists, urls] = [get(selectorByUrlsAtom), get(selectorActiveUrlsAtom)]\n  return Object.keys(lists).filter((url) => !urls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n})\n\nexport const combinedTokenMapFromInActiveUrlsAtom = atom((get) => {\n  const [lists, inactiveUrl] = [get(selectorByUrlsAtom), get(inactiveUrlAtom)]\n  return combineTokenMaps(lists, inactiveUrl)\n})\n\nexport const combinedTokenMapFromOfficialsUrlsAtom = atom((get) => {\n  const lists = get(selectorByUrlsAtom)\n  return combineTokenMapsWithDefault(lists, OFFICIAL_LISTS)\n})\n\nexport const tokenListFromOfficialsUrlsAtom = atom((get) => {\n  const lists: ListsState['byUrl'] = get(selectorByUrlsAtom)\n\n  const mergedTokenLists: TokenInfo[] = OFFICIAL_LISTS.reduce((acc, url) => {\n    if (lists?.[url]?.current?.tokens) {\n      acc.push(...lists?.[url]?.current.tokens)\n    }\n    return acc\n  }, [])\n\n  const mergedList =\n    mergedTokenLists.length > 0 ? [...DEFAULT_TOKEN_LIST.tokens, ...mergedTokenLists] : DEFAULT_TOKEN_LIST.tokens\n  return mapValues(\n    groupBy(\n      uniqBy(mergedList, (tokenInfo) => `${tokenInfo.chainId}#${tokenInfo.address}`),\n      'chainId',\n    ),\n    (tokenInfos) => keyBy(tokenInfos, 'address'),\n  )\n})\n\nexport const combinedTokenMapFromUnsupportedUrlsAtom = atom((get) => {\n  const lists = get(selectorByUrlsAtom)\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = combineTokenMaps(lists, UNSUPPORTED_LIST_URLS)\n\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n})\n\nexport const combinedTokenMapFromWarningUrlsAtom = atom((get) => {\n  const lists = get(selectorByUrlsAtom)\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(WARNING_TOKEN_LIST)\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = combineTokenMaps(lists, WARNING_LIST_URLS)\n\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n})\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const tokenMap: WrappedTokenInfo[] = uniqBy(\n    list.tokens,\n    (tokenInfo) => `${tokenInfo.chainId}#${tokenInfo.address}`,\n  ).map((tokenInfo) => new WrappedTokenInfo(tokenInfo))\n\n  const groupedTokenMap: { [chainId: string]: WrappedTokenInfo[] } = groupBy(tokenMap, 'chainId')\n\n  const tokenAddressMap = mapValues(groupedTokenMap, (tokenInfoList) =>\n    mapValues(keyBy(tokenInfoList, 'address'), (tokenInfo) => ({ token: tokenInfo, list })),\n  ) as TokenAddressMap\n\n  // add chain id item if not exist\n  enumKeys(ChainId).forEach((chainId) => {\n    if (!(ChainId[chainId] in tokenAddressMap)) {\n      Object.defineProperty(tokenAddressMap, ChainId[chainId], {\n        value: {},\n      })\n    }\n  })\n\n  listCache?.set(list, tokenAddressMap)\n  return tokenAddressMap\n}\n\n// -------------------------------------\n//   Hooks\n// -------------------------------------\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useAtomValue(selectorByUrlsAtom)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.ETHEREUM]: { ...map1[ChainId.ETHEREUM], ...map2[ChainId.ETHEREUM] },\n    [ChainId.RINKEBY]: { ...map1[ChainId.RINKEBY], ...map2[ChainId.RINKEBY] },\n    [ChainId.GOERLI]: { ...map1[ChainId.GOERLI], ...map2[ChainId.GOERLI] },\n    [ChainId.BSC]: { ...map1[ChainId.BSC], ...map2[ChainId.BSC] },\n    [ChainId.BSC_TESTNET]: { ...map1[ChainId.BSC_TESTNET], ...map2[ChainId.BSC_TESTNET] },\n  }\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useAtomValue(activeListUrlsAtom)\n}\n\nexport function useInactiveListUrls() {\n  return useAtomValue(inactiveUrlAtom)\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeTokens = useAtomValue(combinedTokenMapFromActiveUrlsAtom)\n  return activeTokens\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  return useAtomValue(combinedTokenMapFromInActiveUrlsAtom)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  return useAtomValue(combinedTokenMapFromUnsupportedUrlsAtom)\n}\n\n// list of warning tokens on interface, used to show warnings and prevent adds\nexport function useWarningTokenList(): TokenAddressMap {\n  return useAtomValue(combinedTokenMapFromWarningUrlsAtom)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return useMemo(() => Boolean(activeListUrls?.includes(url)), [activeListUrls, url])\n}\n","import { createListsAtom, createTokenListReducer, NEW_LIST_STATE } from '@pancakeswap/token-lists'\nimport { DEFAULT_ACTIVE_LIST_URLS, DEFAULT_LIST_OF_LISTS, UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\n\nconst initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nconst listReducer = createTokenListReducer(initialState, DEFAULT_LIST_OF_LISTS, DEFAULT_ACTIVE_LIST_URLS)\n\nexport const { listsAtom, useListState } = createListsAtom('listv2', listReducer, initialState)\n","import { ChainId, Pair, ERC20Token } from '@pancakeswap/sdk'\nimport { deserializeToken } from '@pancakeswap/token-lists'\nimport { differenceInDays } from 'date-fns'\nimport flatMap from 'lodash/flatMap'\nimport { getFarmConfig } from '@pancakeswap/farms/constants'\nimport { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/exchange'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useSWRImmutable from 'swr/immutable'\nimport { useFeeData } from 'wagmi'\nimport { useOfficialsAndUserAddedTokens } from 'hooks/Tokens'\nimport { useWeb3LibraryContext } from '@pancakeswap/wagmi'\nimport useSWR from 'swr'\nimport { AppState, useAppDispatch } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionChainlinkChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  hidePhishingWarningBanner,\n  setIsExchangeChartDisplayed,\n  ChartViewMode,\n  setChartViewMode,\n  setSubgraphHealthIndicatorDisplayed,\n  updateUserLimitOrderAcceptedWarning,\n  setZapDisabled,\n} from '../actions'\nimport { GAS_PRICE_GWEI } from '../../types'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function usePhishingBannerManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const hideTimestampPhishingWarningBanner = useSelector<\n    AppState,\n    AppState['user']['hideTimestampPhishingWarningBanner']\n  >((state) => state.user.hideTimestampPhishingWarningBanner)\n  const now = Date.now()\n  const showPhishingWarningBanner = hideTimestampPhishingWarningBanner\n    ? differenceInDays(now, hideTimestampPhishingWarningBanner) >= 1\n    : true\n  const hideBanner = useCallback(() => {\n    dispatch(hidePhishingWarningBanner())\n  }, [dispatch])\n\n  return [showPhishingWarningBanner, hideBanner]\n}\n\n// Get user preference for exchange price chart\n// For mobile layout chart is hidden by default\nexport function useExchangeChartManager(isMobile: boolean): [boolean, (isDisplayed: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const isChartDisplayed = useSelector<AppState, AppState['user']['isExchangeChartDisplayed']>(\n    (state) => state.user.isExchangeChartDisplayed,\n  )\n\n  const setUserChartPreference = useCallback(\n    (isDisplayed: boolean) => {\n      dispatch(setIsExchangeChartDisplayed(isDisplayed))\n    },\n    [dispatch],\n  )\n\n  return [isMobile ? false : isChartDisplayed, setUserChartPreference]\n}\n\nexport function useExchangeChartViewManager() {\n  const dispatch = useAppDispatch()\n  const chartViewMode = useSelector<AppState, AppState['user']['userChartViewMode']>(\n    (state) => state.user.userChartViewMode,\n  )\n\n  const setUserChartViewPreference = useCallback(\n    (view: ChartViewMode) => {\n      dispatch(setChartViewMode(view))\n    },\n    [dispatch],\n  )\n\n  return [chartViewMode, setUserChartViewPreference] as const\n}\n\nexport function useZapModeManager() {\n  const dispatch = useAppDispatch()\n  const zapEnabled = useSelector<AppState, AppState['user']['userZapDisabled']>((state) => !state.user.userZapDisabled)\n\n  const setZapEnable = useCallback(\n    (enable: boolean) => {\n      dispatch(setZapDisabled(!enable))\n    },\n    [dispatch],\n  )\n\n  return [zapEnabled, setZapEnable] as const\n}\n\nexport function useSubgraphHealthIndicatorManager() {\n  const dispatch = useAppDispatch()\n  const isSubgraphHealthIndicatorDisplayed = useSelector<\n    AppState,\n    AppState['user']['isSubgraphHealthIndicatorDisplayed']\n  >((state) => state.user.isSubgraphHealthIndicatorDisplayed)\n\n  const setSubgraphHealthIndicatorDisplayedPreference = useCallback(\n    (newIsDisplayed: boolean) => {\n      dispatch(setSubgraphHealthIndicatorDisplayed(newIsDisplayed))\n    },\n    [dispatch],\n  )\n\n  return [isSubgraphHealthIndicatorDisplayed, setSubgraphHealthIndicatorDisplayedPreference] as const\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useAppDispatch()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useAppDispatch()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useAppDispatch()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserLimitOrderAcceptedWarning(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userLimitOrderAcceptedWarning = useSelector<AppState, AppState['user']['userLimitOrderAcceptedWarning']>(\n    (state) => {\n      return state.user.userLimitOrderAcceptedWarning\n    },\n  )\n\n  const setUserLimitOrderAcceptedWarning = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserLimitOrderAcceptedWarning({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userLimitOrderAcceptedWarning, setUserLimitOrderAcceptedWarning]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserPredictionChainlinkChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userPredictionChainlinkChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChainlinkChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChainlinkChartDisclaimerShow\n  })\n\n  const setPredictionUserChainlinkChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChainlinkChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChainlinkChartDisclaimerShow, setPredictionUserChainlinkChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useAppDispatch()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: ERC20Token) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (token: ERC20Token) => {\n      dispatch(addSerializedToken({ serializedToken: token.serialize }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(chainIdOverride?: number): string {\n  const { chainId: chainId_, chain } = useActiveWeb3React()\n  const library = useWeb3LibraryContext()\n  const chainId = chainIdOverride ?? chainId_\n  const { data: bscProviderGasPrice = GAS_PRICE_GWEI.default } = useSWR(\n    library && library.provider && chainId === ChainId.BSC && ['bscProviderGasPrice', library.provider],\n    async () => {\n      const gasPrice = await library.getGasPrice()\n      return gasPrice.toString()\n    },\n    {\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n    },\n  )\n  const { data } = useFeeData({\n    chainId,\n    enabled: chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET,\n    watch: true,\n  })\n  if (chainId === ChainId.BSC) {\n    return bscProviderGasPrice\n  }\n  if (chainId === ChainId.BSC_TESTNET) {\n    return GAS_PRICE_GWEI.testnet\n  }\n  if (chain?.testnet) {\n    return data?.formatted?.maxPriorityFeePerGas\n  }\n  return data?.formatted?.gasPrice\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: pair.token0.serialize,\n    token1: pair.token1.serialize,\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [ERC20Token, ERC20Token]): ERC20Token {\n  return new ERC20Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [ERC20Token, ERC20Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useOfficialsAndUserAddedTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  const { data: farmPairs = [] } = useSWRImmutable(chainId && ['track-farms-pairs', chainId], async () => {\n    const farms = await getFarmConfig(chainId)\n\n    const fPairs: [ERC20Token, ERC20Token][] = farms\n      .filter((farm) => farm.pid !== 0)\n      .map((farm) => [deserializeToken(farm.token), deserializeToken(farm.quoteToken)])\n\n    return fPairs\n  })\n\n  // pairs for every token against every base\n  const generatedPairs: [ERC20Token, ERC20Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop through all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [ERC20Token, ERC20Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [ERC20Token, ERC20Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs).concat(farmPairs),\n    [generatedPairs, pinnedPairs, userPairs, farmPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [ERC20Token, ERC20Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useAppDispatch()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useAppDispatch()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { createSelector } from '@reduxjs/toolkit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { deserializeToken } from '@pancakeswap/token-lists'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../../index'\n\nconst selectUserTokens = ({ user: { tokens } }: AppState) => tokens\n\nexport const userAddedTokenSelector = (chainId: number) =>\n  createSelector(selectUserTokens, (serializedTokensMap) =>\n    Object.values(serializedTokensMap?.[chainId] ?? {}).map(deserializeToken),\n  )\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  return useSelector(useMemo(() => userAddedTokenSelector(chainId), [chainId]))\n}\n","import { captureException } from '@sentry/nextjs'\n\nconst assignError = (maybeError: any) => {\n  if (typeof maybeError === 'string') {\n    return new Error(maybeError)\n  }\n  if (typeof maybeError === 'object') {\n    const error = new Error(maybeError?.message ?? String(maybeError))\n    if (maybeError?.stack) {\n      error.stack = maybeError.stack\n    }\n    if (maybeError?.code) {\n      error.name = maybeError.code\n    }\n    return error\n  }\n  return maybeError\n}\n\nexport const isUserRejected = (err) => {\n  // provider user rejected error code\n  return typeof err === 'object' && 'code' in err && err.code === 4001\n}\n\nconst ENABLED_LOG = false\n\nexport const logError = (error: Error | unknown) => {\n  if (ENABLED_LOG) {\n    if (error instanceof Error) {\n      captureException(error)\n    } else {\n      captureException(assignError(error), error)\n    }\n  }\n  console.error(error)\n}\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n","import styled from \"styled-components\";\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default Loading;\n"],"names":["Link","Text","getBlockExploreLink","getBlockExploreName","useActiveWeb3React","useTranslation","truncateHash","DescriptionWithTx","txHash","txChainId","children","chainId","t","as","external","href","site","default","ToastDescriptionWithTx","PANCAKE_EXTENDED","COINGECKO","CMC","OFFICIAL_LISTS","UNSUPPORTED_LIST_URLS","WARNING_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","arrayify","parseBytes32String","ERC20Token","GELATO_NATIVE","useAtomValue","useMemo","combinedTokenMapFromActiveUrlsAtom","combinedTokenMapFromOfficialsUrlsAtom","useUnsupportedTokenList","useWarningTokenList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useBytes32TokenContract","useTokenContract","useNativeCurrency","mapWithoutUrls","tokenMap","Object","keys","reduce","newMap","address","token","useAllTokens","userAddedTokens","tokenMap_","useOfficialsAndUserAddedTokens","useUnsupportedTokens","unsupportedTokensMap","useWarningTokens","warningTokensMap","useIsTokenActive","activeTokens","useIsUserAddedToken","currency","find","equals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokens","tokenContract","undefined","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","useCurrency","currencyId","native","isNative","toUpperCase","toLowerCase","useCallback","get","addBreadcrumb","useCallWithMarketGasPrice","callWithMarketGasPrice","contract","methodName","methodArgs","overrides","type","message","data","contractAddress","contractMethod","tx","hash","from","gasLimit","toString","nonce","useState","useToast","logError","isUserRejected","isGasEstimationError","err","code","useCatchTxError","provider","toastError","toastSuccess","setLoading","txResponseLoading","setTxResponseLoading","handleNormalError","error","fetchWithCatchTxError","callTx","receipt","wait","call","blockNumber","then","catch","recursiveErr","reason","originalError","REVERT_STR","indexInfo","indexOf","isRevertedError","substring","fetchTxResponse","ChainId","Native","onChain","e","BSC","WrappedTokenInfo","atom","mapValues","groupBy","keyBy","EMPTY_LIST","uniqBy","DEFAULT_TOKEN_LIST","UNSUPPORTED_TOKEN_LIST","WARNING_TOKEN_LIST","listsAtom","sortByListPriority","urlA","urlB","first","includes","Number","MAX_SAFE_INTEGER","second","enumKeys","obj","filter","k","isNaN","selectorActiveUrlsAtom","activeListUrls","selectorByUrlsAtom","byUrl","activeListUrlsAtom","urls","url","combineTokenMapsWithDefault","lists","defaultTokenMap","listToTokenMap","combineMaps","combineTokenMaps","slice","sort","allTokens","currentUrl","current","newTokens","assign","console","selectorByUrls","selectorActiveUrls","inactiveUrlAtom","combinedTokenMapFromInActiveUrlsAtom","inactiveUrl","tokenListFromOfficialsUrlsAtom","mergedTokenLists","acc","push","mergedList","tokenInfo","tokenInfos","combinedTokenMapFromUnsupportedUrlsAtom","localUnsupportedListMap","loadedUnsupportedListMap","combinedTokenMapFromWarningUrlsAtom","listCache","WeakMap","list","map","groupedTokenMap","tokenAddressMap","tokenInfoList","forEach","defineProperty","value","set","useAllLists","map1","map2","ETHEREUM","RINKEBY","GOERLI","BSC_TESTNET","useActiveListUrls","useInactiveListUrls","useCombinedActiveList","useCombinedInactiveList","useIsListActive","Boolean","createListsAtom","createTokenListReducer","NEW_LIST_STATE","initialState","lastInitializedDefaultListOfLists","concat","memo","listUrl","listReducer","useListState","Pair","deserializeToken","differenceInDays","flatMap","getFarmConfig","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useSWRImmutable","useFeeData","useWeb3LibraryContext","useSWR","useAppDispatch","addSerializedPair","addSerializedToken","FarmStakedOnly","muteAudio","removeSerializedToken","unmuteAudio","updateUserDeadline","updateUserExpertMode","updateUserFarmStakedOnly","updateUserSingleHopOnly","updateUserSlippageTolerance","addWatchlistToken","addWatchlistPool","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionChartDisclaimerShow","updateUserPredictionChainlinkChartDisclaimerShow","updateUserPredictionAcceptedRisk","updateUserUsernameVisibility","updateUserExpertModeAcknowledgementShow","hidePhishingWarningBanner","setIsExchangeChartDisplayed","setChartViewMode","setSubgraphHealthIndicatorDisplayed","updateUserLimitOrderAcceptedWarning","setZapDisabled","GAS_PRICE_GWEI","useAudioModeManager","dispatch","audioPlay","state","user","toggleSetAudioMode","usePhishingBannerManager","hideTimestampPhishingWarningBanner","now","Date","showPhishingWarningBanner","hideBanner","useExchangeChartManager","isMobile","isChartDisplayed","isExchangeChartDisplayed","setUserChartPreference","isDisplayed","useExchangeChartViewManager","chartViewMode","userChartViewMode","setUserChartViewPreference","view","useZapModeManager","zapEnabled","userZapDisabled","setZapEnable","enable","useSubgraphHealthIndicatorManager","isSubgraphHealthIndicatorDisplayed","setSubgraphHealthIndicatorDisplayedPreference","newIsDisplayed","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","slippage","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","setUserPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","setUserPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","setUserFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","setUserPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserLimitOrderAcceptedWarning","userLimitOrderAcceptedWarning","setUserLimitOrderAcceptedWarning","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","setPredictionUserChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserPredictionChainlinkChartDisclaimerShow","userPredictionChainlinkChartDisclaimerShow","setPredictionUserChainlinkChartDisclaimerShow","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","setUserExpertModeAcknowledgementShow","showAcknowledgement","useUserUsernameVisibility","userUsernameVisibility","setUserUsernameVisibility","usernameVisibility","useUserTransactionTTL","userDeadline","setUserDeadline","deadline","useAddUserToken","serializedToken","serialize","useRemoveUserAddedToken","useGasPrice","chainIdOverride","chainId_","chain","library","bscProviderGasPrice","gasPrice","getGasPrice","revalidateOnFocus","revalidateOnReconnect","enabled","watch","testnet","formatted","maxPriorityFeePerGas","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","pinnedPairs","farmPairs","farms","fPairs","farm","pid","quoteToken","generatedPairs","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","keyed","sorted","sortsBefore","key","useWatchlistTokens","savedTokens","watchlistTokens","updatedSavedTokens","useWatchlistPools","savedPools","watchlistPools","updateSavedPools","createSelector","selectUserTokens","userAddedTokenSelector","serializedTokensMap","values","captureException","assignError","maybeError","Error","String","stack","name","ENABLED_LOG","styled","space","CardBody","div","defaultProps","Loading"],"sourceRoot":""}