{"version":3,"file":"9994.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAA2C;AACL;AACqC;AACjB;AAM1D,MAAMM,OAAO,GAAGL,wDAAM,CAACE,mEAAI,CAAC;;EAAA,CAAC;;AAE7B,CAAC;AAED,MAAMI,4BAA4B,GAAGN,wDAAM,CAACE,mEAAI,CAAC;;EAAA,CAAC;;;;;AAKlD,CAAC;AAED,MAAMK,kBAAkB,GAAGP,wDAAM,CAACE,mEAAI,CAAC;;EAA0B,CAAC;;UAExD,EAAE,CAAC,EAAEM,UAAU,GAAE,GAAMA,UAAU,GAAG,MAAM,GAAG,KAAK,CAAE;kBAC5C,EAAE,CAAC,EAAEA,UAAU,GAAE,GAAMA,UAAU,GAAG,MAAM,GAAG,KAAK,CAAE;2BAC3C,EAAE,CAAC,EAAEC,KAAK,GAAE,GAAKA,KAAK,CAACC,MAAM,CAACC,cAAc,CAAC;AACxE,CAAC;AAED,MAAMC,YAAY,GAAyD,CAAC,EAAEC,KAAK,GAAEC,QAAQ,GAAE,GAAGC,KAAK,EAAE,GAAK;IAC5G,MAAM,EAAEC,CAAC,GAAE,GAAGZ,mFAAc,EAAE;IAC9B,MAAM,KAACI,UAAU,MAAES,aAAa,MAAIlB,+CAAQ,CAAC,KAAK,CAAC;IAEnD,qBACE,wDAACG,mEAAI;QAAE,GAAGa,KAAK;QAAEG,aAAa,EAAC,QAAQ;;0BACrC,wDAACb,OAAO;gBAACc,cAAc,EAAC,eAAe;gBAACC,UAAU,EAAC,QAAQ;gBAACC,EAAE,EAAC,MAAM;gBAACC,OAAO,EAAE,IAAML,aAAa,CAAC,CAACM,CAAC,GAAK,CAACA,CAAC,CAAC;;kCAC3G,mDAACpB,mEAAI;wBAACqB,UAAU,EAAC,MAAM;kCAAEX,KAAK;sBAAQ;kCACtC,mDAACP,4BAA4B;kCAC3B,iEAACL,wEAAe;4BAACwB,QAAQ,EAAEjB,UAAU;sCAAGA,UAAU,GAAGQ,CAAC,CAAC,MAAM,CAAC,GAAGA,CAAC,CAAC,SAAS,CAAC;0BAAmB;sBACnE;;cACvB;0BACV,mDAACT,kBAAkB;gBAACC,UAAU,EAAEA,UAAU;gBAAEU,aAAa,EAAC,QAAQ;0BAC/DJ,QAAQ;cACU;;MAChB,CACR;AACH,CAAC;AAED,iEAAeF,YAAY;;;;;;;;;;;;;;;;;AC9CY;AACW;AAOlD,MAAMe,UAAU,GAAG3B,uEAAU;;EAAiB,CAAC;cACjC,EAAE,CAAC,EAAES,KAAK,GAAEoB,OAAO,EAAG,SAAS,GAAE,GAAKpB,KAAK,CAACqB,IAAI,CAACC,oBAAoB,CAACF,OAAO,CAAC,CAAC;iBAC5E,EAAE,CAAC,EAAEpB,KAAK,GAAE,GAAK,CAAC,EAAEA,KAAK,CAACuB,KAAK,CAACF,IAAI,CAAC,CAAC,EAAErB,KAAK,CAACuB,KAAK,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9E,EAAEJ,gDAAK,CAAC;AACV,CAAC;AAEDC,UAAU,CAACM,YAAY,GAAG;IACxBC,CAAC,EAAE,MAAM;CACV,CAAC;AAEF,iEAAeP,UAAU,EAAC","sources":["webpack://web/./src/components/FoldableSection/FoldableText.tsx","webpack://web/../../packages/uikit/src/components/Card/CardHeader.tsx"],"sourcesContent":["import { useState, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface FoldableTextProps extends Omit<FlexProps, 'title'> {\n  title?: ReactNode\n}\n\nconst Wrapper = styled(Flex)`\n  cursor: pointer;\n`\n\nconst StyledExpandableLabelWrapper = styled(Flex)`\n  button {\n    align-items: center;\n    justify-content: flex-start;\n  }\n`\n\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\n  overflow: hidden;\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n`\n\nconst FoldableText: React.FC<React.PropsWithChildren<FoldableTextProps>> = ({ title, children, ...props }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <Flex {...props} flexDirection=\"column\">\n      <Wrapper justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\" onClick={() => setIsExpanded((s) => !s)}>\n        <Text fontWeight=\"bold\">{title}</Text>\n        <StyledExpandableLabelWrapper>\n          <ExpandableLabel expanded={isExpanded}>{isExpanded ? t('Hide') : t('Details')}</ExpandableLabel>\n        </StyledExpandableLabelWrapper>\n      </Wrapper>\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\n        {children}\n      </StyledChildrenFlex>\n    </Flex>\n  )\n}\n\nexport default FoldableText\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\nimport { CardTheme } from \"./types\";\n\nexport interface CardHeaderProps extends SpaceProps {\n  variant?: keyof CardTheme[\"cardHeaderBackground\"];\n}\n\nconst CardHeader = styled.div<CardHeaderProps>`\n  background: ${({ theme, variant = \"default\" }) => theme.card.cardHeaderBackground[variant]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  ${space}\n`;\n\nCardHeader.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardHeader;\n"],"names":["useState","styled","ExpandableLabel","Flex","Text","useTranslation","Wrapper","StyledExpandableLabelWrapper","StyledChildrenFlex","isExpanded","theme","colors","inputSecondary","FoldableText","title","children","props","t","setIsExpanded","flexDirection","justifyContent","alignItems","pb","onClick","s","fontWeight","expanded","space","CardHeader","div","variant","card","cardHeaderBackground","radii","defaultProps","p"],"sourceRoot":""}