{"version":3,"file":"7131.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAA2D;AACpB;AACC;AACR;AAEQ;AAExC,MAAMQ,WAAW,GAAGJ,uEAAU;;EAAA,CAAC;;;;;;AAM/B,CAAC;AAED,MAAMM,KAAK,GAAkD,CAAC,EAAEC,GAAG,GAAEC,GAAG,GAAEC,KAAK,GAAEC,MAAM,GAAEC,WAAW,GAAE,GAAGC,KAAK,EAAE,GAAK;IACnH,MAAMC,MAAM,GAAGf,6CAAM,CAAiB,IAAI,CAAC;IAC3C,MAAM,KAACgB,QAAQ,MAAEC,WAAW,MAAIhB,+CAAQ,CAAC,KAAK,CAAC;IAC/C,MAAM,KAACiB,KAAK,MAAEC,QAAQ,MAAIlB,+CAAQ,CAAC,KAAK,CAAC;IAEzCF,gDAAS,CAAC,IAAM;QACd,IAAIqB,QAAQ;QACZ,MAAMC,WAAW,GAAG,MAA0B,IAAIC,CAA2B;QAE7E,IAAIP,MAAM,CAACS,OAAO,IAAIH,WAAW,EAAE;YACjCD,QAAQ,GAAG,IAAIE,MAAM,CAACC,oBAAoB,CAAC,CAACE,OAAO,GAAK;gBACtDA,OAAO,CAACC,OAAO,CAAC,CAACC,KAAK,GAAK;oBACzB,MAAM,EAAEC,cAAc,GAAE,GAAGD,KAAK;oBAChC,IAAIC,cAAc,EAAE;wBAClBX,WAAW,CAAC,IAAI,CAAC,CAAC;wBAClB,IAAI,OAAOG,QAAQ,EAAES,UAAU,KAAK,UAAU,EAAE;4BAC9CT,QAAQ,CAACS,UAAU,EAAE,CAAC;wBACxB,CAAC;oBACH,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,EAAE1B,yDAAe,CAAC,CAAC;YACpBiB,QAAQ,CAACU,OAAO,CAACf,MAAM,CAACS,OAAO,CAAC,CAAC;QACnC,CAAC;QAED,OAAO,IAAM;YACX,IAAI,OAAOJ,QAAQ,EAAES,UAAU,KAAK,UAAU,EAAE;gBAC9CT,QAAQ,CAACS,UAAU,EAAE,CAAC;YACxB,CAAC;QACH,CAAC,CAAC;IACJ,CAAC,EAAE;QAACpB,GAAG;KAAC,CAAC,CAAC;IAEV,qBACE,mDAACL,yDAAO;QAAW2B,GAAG,EAAEhB,MAAM;QAAEH,MAAM,EAAEA,MAAM;QAAED,KAAK,EAAEA,KAAK;QAAG,GAAGG,KAAK;kBACpEE,QAAQ,iBACP,mDAACV,WAAW;YAACG,GAAG,EAAES,KAAK,IAAIL,WAAW,GAAGA,WAAW,GAAGJ,GAAG;YAAEC,GAAG,EAAEA,GAAG;YAAEsB,OAAO,EAAE,IAAMb,QAAQ,CAAC,IAAI,CAAC;UAAI,iBAEvG,mDAACd,6DAAW,KAAG;OAJLI,GAAG,CAMP,CACV;AACJ,CAAC;AAED,iEAAeD,KAAK,EAAC","sources":["webpack://web/../../packages/uikit/src/components/Image/Image.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport observerOptions from \"./options\";\nimport Wrapper from \"./Wrapper\";\nimport { ImageProps } from \"./types\";\nimport Placeholder from \"./Placeholder\";\n\nconst StyledImage = styled.img`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n\nconst Image: React.FC<React.PropsWithChildren<ImageProps>> = ({ src, alt, width, height, fallbackSrc, ...props }) => {\n  const imgRef = useRef<HTMLDivElement>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    let observer: IntersectionObserver;\n    const isSupported = typeof window === \"object\" && window.IntersectionObserver;\n\n    if (imgRef.current && isSupported) {\n      observer = new window.IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n          const { isIntersecting } = entry;\n          if (isIntersecting) {\n            setIsLoaded(true);\n            if (typeof observer?.disconnect === \"function\") {\n              observer.disconnect();\n            }\n          }\n        });\n      }, observerOptions);\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      if (typeof observer?.disconnect === \"function\") {\n        observer.disconnect();\n      }\n    };\n  }, [src]);\n\n  return (\n    <Wrapper key={src} ref={imgRef} height={height} width={width} {...props}>\n      {isLoaded ? (\n        <StyledImage src={error && fallbackSrc ? fallbackSrc : src} alt={alt} onError={() => setError(true)} />\n      ) : (\n        <Placeholder />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Image;\n"],"names":["React","useEffect","useRef","useState","styled","observerOptions","Wrapper","Placeholder","StyledImage","img","Image","src","alt","width","height","fallbackSrc","props","imgRef","isLoaded","setIsLoaded","error","setError","observer","isSupported","window","IntersectionObserver","current","entries","forEach","entry","isIntersecting","disconnect","observe","ref","onError"],"sourceRoot":""}