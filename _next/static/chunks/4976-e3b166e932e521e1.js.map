{"version":3,"file":"static/chunks/4976-e3b166e932e521e1.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/lodash/partition.js","webpack://_N_E/./src/components/ToggleView/ToggleView.tsx","webpack://_N_E/./src/hooks/useIntersectionObserver.ts","webpack://_N_E/./src/utils/latinise.ts","webpack://_N_E/./src/views/Pools/components/PoolCard/AprRow.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolTabButtons.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/StakedCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/ExpandRow.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/PoolRow.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/PoolsTable.tsx","webpack://_N_E/./src/views/Pools/index.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/CardRibbon.tsx","webpack://_N_E/<anon>"],"sourcesContent":["var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","import { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  idPrefix: string\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<React.PropsWithChildren<ToggleViewProps>> = ({\n  idPrefix,\n  viewMode,\n  onToggle,\n}) => {\n  const handleToggleCard = useCallback(() => {\n    if (viewMode !== ViewMode.CARD) {\n      onToggle(ViewMode.CARD)\n    }\n  }, [onToggle, viewMode])\n\n  const handleToggleTable = useCallback(() => {\n    if (viewMode !== ViewMode.TABLE) {\n      onToggle(ViewMode.TABLE)\n    }\n  }, [onToggle, viewMode])\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}CardView`} onClick={handleToggleCard}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}TableView`} onClick={handleToggleTable}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useIsomorphicEffect } from '@pancakeswap/uikit'\nimport { useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const [observerRefElement, setObserverRefElement] = useState(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useIsomorphicEffect(() => {\n    const isSupported = typeof window === 'object' && window.IntersectionObserver\n\n    if (isSupported) {\n      if (!intersectionObserverRef.current && observerRefElement) {\n        const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n          setIsIntersecting(entry.isIntersecting)\n        }\n\n        intersectionObserverRef.current = new window.IntersectionObserver(checkObserverIsIntersecting, {\n          rootMargin: '0px',\n          threshold: 1,\n        })\n        intersectionObserverRef.current.observe(observerRefElement)\n      }\n\n      if (intersectionObserverRef.current && !observerRefElement) {\n        intersectionObserverRef.current.disconnect()\n        setIsIntersecting(false)\n      }\n    } else {\n      // If client doesnt support IntersectionObserver, set Intersecting to be true\n      setIsIntersecting(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerRefElement])\n\n  return { observerRef: setObserverRefElement, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Flex, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport Apr from 'views/Pools/components/Apr'\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n  showIcon?: boolean\n}\n\nconst AprRow: React.FC<React.PropsWithChildren<AprRowProps>> = ({\n  pool,\n  stakedBalance,\n  performanceFee = 0,\n  showIcon = true,\n}) => {\n  const { t } = useTranslation()\n  const { vaultKey } = pool\n\n  const tooltipContent = vaultKey\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{vaultKey ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      <Apr pool={pool} stakedBalance={stakedBalance} performanceFee={performanceFee} showIcon={showIcon} />\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<React.PropsWithChildren<ApprovalActionProps>> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, pendingTx } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={pendingTx}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n  Balance,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../Modals/NotEnoughTokensModal'\nimport StakeModal from '../../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<React.PropsWithChildren<StakeActionsProps>> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { Flex, Text, Button, Heading, useModal, Skeleton, Balance } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from '@pancakeswap/utils/formatBalance'\nimport CollectModal from '../../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<React.PropsWithChildren<HarvestActionsProps>> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\n\nimport styled from 'styled-components'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { useProfileRequirement } from 'views/Pools/hooks/useProfileRequirement'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\nimport { ProfileRequirementWarning } from '../../ProfileRequirementWarning'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<React.PropsWithChildren<CardActionsProps>> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, poolCategory, userData, earningTokenPrice, profileRequirement } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  const { notMeetRequired, notMeetThreshold } = useProfileRequirement(profileRequirement)\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <>\n          <Box display=\"inline\">\n            <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n              {`${earningToken.symbol} `}\n            </InlineText>\n            <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n              {t('Earned')}\n            </InlineText>\n          </Box>\n          <HarvestActions\n            earnings={earnings}\n            earningToken={earningToken}\n            sousId={sousId}\n            earningTokenPrice={earningTokenPrice}\n            isBnbPool={isBnbPool}\n            isLoading={isLoading}\n          />\n        </>\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {notMeetRequired || notMeetThreshold ? (\n          <ProfileRequirementWarning profileRequirement={profileRequirement} />\n        ) : needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\n\nimport { CardBody, Flex, Text, CardRibbon, Skeleton } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport PoolCardHeader, { PoolCardHeaderTitle } from './PoolCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<React.PropsWithChildren<{ pool: DeserializedPool; account: string }>> = ({\n  pool,\n  account,\n}) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData, totalStaked } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <PoolCardHeader isStaking={accountHasStakedBalance} isFinished={isFinished && sousId !== 0}>\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <PoolCardHeaderTitle\n              title={isCakePool ? t('Manual') : t('Earn %asset%', { asset: earningToken.symbol })}\n              subTitle={isCakePool ? t('Earn CAKE, stake CAKE') : t('Stake %symbol%', { symbol: stakingToken.symbol })}\n            />\n            <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n          </>\n        ) : (\n          <Flex width=\"100%\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\">\n              <Skeleton width={100} height={26} mb=\"4px\" />\n              <Skeleton width={65} height={20} />\n            </Flex>\n            <Skeleton width={58} height={58} variant=\"circle\" />\n          </Flex>\n        )}\n      </PoolCardHeader>\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import ToggleView from 'components/ToggleView/ToggleView'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot, NextLinkFromReactRouter } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const router = useRouter()\n\n  const { t } = useTranslation()\n\n  const isExact = router.pathname === '/pools' || router.pathname === '/_mp/pools'\n\n  const viewModeToggle = <ToggleView idPrefix=\"clickPool\" viewMode={viewMode} onToggle={setViewMode} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={NextLinkFromReactRouter} to=\"/pools\" replace>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={NextLinkFromReactRouter} to=\"/pools/history\" replace>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints, Balance } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport { useTranslation } from '@pancakeswap/localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<React.PropsWithChildren<EarningsCellProps>> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!pool.userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import { useMemo } from 'react'\nimport { Flex, Skeleton, Text, Balance } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { DeserializedPool } from 'state/types'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<React.PropsWithChildren<TotalStakedCellProps>> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { stakingToken, totalStaked, vaultKey } = pool\n  const { totalCakeInVault } = useVaultPoolByKey(vaultKey)\n\n  const totalStakedBalance = useMemo(() => {\n    if (vaultKey) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [vaultKey, totalCakeInVault, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon, Balance } from '@pancakeswap/uikit'\nimport { getBlockExploreLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useCurrentBlock } from 'state/block/hooks'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<React.PropsWithChildren<FinishCellProps>> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const currentBlock = useCurrentBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBlockExploreLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingBlockData = !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const isLoadingPublicData = hasPoolStarted ? !totalStaked.gt(0) || isLoadingBlockData : isLoadingBlockData\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import { Box, Flex, Skeleton, Text, useMatchBreakpoints, Balance } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from '@pancakeswap/localization'\n\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { DeserializedPool, VaultKey, DeserializedPoolLockedVault } from 'state/types'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface StakedCellProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst StyledCell = styled(BaseCell)``\n\nconst StakedCell: React.FC<React.PropsWithChildren<StakedCellProps>> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  // vault\n  const vaultData = useVaultPoolByKey(pool.vaultKey)\n  const {\n    userData: {\n      userShares,\n      balance: { cakeAsBigNumber, cakeAsNumberBalance },\n      isLoading,\n    },\n  } = vaultData\n  const hasSharesStaked = userShares.gt(0)\n  const isVaultWithShares = pool.vaultKey && hasSharesStaked\n\n  // pool\n  const { stakingTokenPrice, stakingToken, userData } = pool\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const labelText = `${pool.stakingToken.symbol} ${\n    pool.vaultKey === VaultKey.CakeVault && (vaultData as DeserializedPoolLockedVault).userData.locked\n      ? t('Locked')\n      : t('Staked')\n  }`\n\n  const hasStaked = account && (stakedBalance.gt(0) || isVaultWithShares)\n\n  const userDataLoading = pool.vaultKey ? isLoading : !pool.userDataLoaded\n\n  return (\n    <StyledCell\n      role=\"cell\"\n      flex={\n        pool.vaultKey === VaultKey.CakeFlexibleSideVault\n          ? '1 0 162px'\n          : pool.vaultKey === VaultKey.CakeVault && !hasStaked\n          ? '1 0 120px'\n          : '2 0 100px'\n      }\n    >\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {userDataLoading && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasStaked ? 'primary' : 'textDisabled'}\n                  decimals={hasStaked ? 5 : 1}\n                  value={\n                    hasStaked\n                      ? pool.vaultKey\n                        ? Number.isNaN(cakeAsNumberBalance)\n                          ? 0\n                          : cakeAsNumberBalance\n                        : stakedTokenBalance\n                      : 0\n                  }\n                />\n                {hasStaked ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={pool.vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default StakedCell\n","import { useState, memo, ReactNode, useCallback, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\n\nimport ExpandActionCell from './Cells/ExpandActionCell'\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst ExpandRow: React.FC<\n  React.PropsWithChildren<{ children: ReactNode; panel: ReactNode; initialActivity?: boolean }>\n> = ({ children, panel, initialActivity }) => {\n  const hasSetInitialValue = useRef(false)\n  const { isTablet, isDesktop } = useMatchBreakpoints()\n\n  const [expanded, setExpanded] = useState(initialActivity)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = useCallback(() => {\n    setExpanded((prev) => !prev)\n  }, [])\n  useEffect(() => {\n    if (initialActivity && hasSetInitialValue.current === false) {\n      setExpanded(initialActivity)\n      hasSetInitialValue.current = true\n    }\n  }, [initialActivity])\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        {children}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && panel}\n    </>\n  )\n}\n\nexport default memo(ExpandRow)\n","import { memo } from 'react'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { usePool, useDeserializedPoolByVaultKey } from 'state/pools/hooks'\nimport { VaultKey } from 'state/types'\n\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\nimport StakedCell from './Cells/StakedCell'\nimport ExpandRow from './ExpandRow'\n\nexport const VaultPoolRow: React.FC<\n  React.PropsWithChildren<{ vaultKey: VaultKey; account: string; initialActivity?: boolean }>\n> = memo(({ vaultKey, account, initialActivity }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const isXLargerScreen = isXl || isXxl\n  const pool = useDeserializedPoolByVaultKey(vaultKey)\n\n  return (\n    <ExpandRow\n      initialActivity={initialActivity}\n      panel={\n        <ActionPanel account={account} pool={pool} expanded breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }} />\n      }\n    >\n      <NameCell pool={pool} />\n      {isXLargerScreen && <AutoEarningsCell pool={pool} account={account} />}\n      {isXLargerScreen ? <StakedCell pool={pool} account={account} /> : null}\n      <AutoAprCell pool={pool} />\n      {isLargerScreen && <TotalStakedCell pool={pool} />}\n    </ExpandRow>\n  )\n})\n\nconst PoolRow: React.FC<React.PropsWithChildren<{ sousId: number; account: string; initialActivity?: boolean }>> = ({\n  sousId,\n  account,\n  initialActivity,\n}) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const { pool } = usePool(sousId)\n\n  return (\n    <ExpandRow\n      initialActivity={initialActivity}\n      panel={\n        <ActionPanel account={account} pool={pool} expanded breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }} />\n      }\n    >\n      <NameCell pool={pool} />\n      <EarningsCell pool={pool} account={account} />\n      {isLargerScreen && <TotalStakedCell pool={pool} />}\n      <AprCell pool={pool} />\n      {isDesktop && <EndsInCell pool={pool} />}\n    </ExpandRow>\n  )\n}\n\nexport default memo(PoolRow)\n","import { useRef } from 'react'\nimport styled from 'styled-components'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow, { VaultPoolRow } from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  account: string\n  urlSearch?: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  scroll-margin-top: 64px;\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst PoolsTable: React.FC<React.PropsWithChildren<PoolsTableProps>> = ({ pools, account, urlSearch }) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) =>\n          pool.vaultKey ? (\n            <VaultPoolRow\n              initialActivity={urlSearch.toLowerCase() === pool.earningToken.symbol?.toLowerCase()}\n              key={pool.vaultKey}\n              vaultKey={pool.vaultKey}\n              account={account}\n            />\n          ) : (\n            <PoolRow\n              initialActivity={urlSearch.toLowerCase() === pool.earningToken.symbol?.toLowerCase()}\n              key={pool.sousId}\n              sousId={pool.sousId}\n              account={account}\n            />\n          ),\n        )}\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport styled from 'styled-components'\nimport { BigNumber as EthersBigNumber } from '@ethersproject/bignumber'\nimport { formatUnits } from '@ethersproject/units'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport {\n  Heading,\n  Flex,\n  Image,\n  Text,\n  Link,\n  FlexLayout,\n  PageHeader,\n  SearchInput,\n  Select,\n  OptionProps,\n  Loading,\n  ScrollToTopButtonV2,\n} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from '@pancakeswap/localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { usePoolsPageFetch, usePoolsWithVault } from 'state/pools/hooks'\nimport { latinise } from 'utils/latinise'\nimport Page from 'components/Layout/Page'\nimport { DeserializedPool, DeserializedPoolVault, VaultKey, DeserializedPoolLockedVault } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport { useRouter } from 'next/router'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { BSC_BLOCK_TIME } from 'config'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst FinishedTextContainer = styled(Flex)`\n  padding-bottom: 32px;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst FinishedTextLink = styled(Link)`\n  font-weight: 400;\n  white-space: nowrap;\n  text-decoration: underline;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst sortPools = (account: string, sortOption: string, pools: DeserializedPool[], poolsToSort: DeserializedPool[]) => {\n  switch (sortOption) {\n    case 'apr':\n      // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n      return orderBy(poolsToSort, (pool: DeserializedPool) => (pool.apr ? pool.apr : 0), 'desc')\n    case 'earned':\n      return orderBy(\n        poolsToSort,\n        (pool: DeserializedPool) => {\n          if (!pool.userData || !pool.earningTokenPrice) {\n            return 0\n          }\n\n          if (pool.vaultKey) {\n            const { userData, pricePerFullShare } = pool as DeserializedPoolVault\n            if (!userData || !userData.userShares) {\n              return 0\n            }\n            return getCakeVaultEarnings(\n              account,\n              userData.cakeAtLastUserAction,\n              userData.userShares,\n              pricePerFullShare,\n              pool.earningTokenPrice,\n              pool.vaultKey === VaultKey.CakeVault\n                ? (pool as DeserializedPoolLockedVault).userData.currentPerformanceFee.plus(\n                    (pool as DeserializedPoolLockedVault).userData.currentOverdueFee,\n                  )\n                : null,\n            ).autoUsdToDisplay\n          }\n          return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n        },\n        'desc',\n      )\n    case 'totalStaked': {\n      return orderBy(\n        poolsToSort,\n        (pool: DeserializedPool) => {\n          let totalStaked = Number.NaN\n          if (pool.vaultKey) {\n            const vault = pool as DeserializedPoolVault\n            if (pool.stakingTokenPrice && vault.totalCakeInVault.isFinite()) {\n              totalStaked =\n                +formatUnits(EthersBigNumber.from(vault.totalCakeInVault.toString()), pool.stakingToken.decimals) *\n                pool.stakingTokenPrice\n            }\n          } else if (pool.totalStaked?.isFinite() && pool.stakingTokenPrice) {\n            totalStaked =\n              +formatUnits(EthersBigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals) *\n              pool.stakingTokenPrice\n          }\n          return Number.isFinite(totalStaked) ? totalStaked : 0\n        },\n        'desc',\n      )\n    }\n    case 'latest':\n      return orderBy(poolsToSort, (pool: DeserializedPool) => Number(pool.sousId), 'desc')\n    default:\n      return poolsToSort\n  }\n}\n\nconst POOL_START_BLOCK_THRESHOLD = (60 / BSC_BLOCK_TIME) * 4\n\nconst Pools: React.FC<React.PropsWithChildren> = () => {\n  const router = useRouter()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools, userDataLoaded } = usePoolsWithVault()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const normalizedUrlSearch = useMemo(\n    () => (typeof router?.query?.search === 'string' ? router.query.search : ''),\n    [router.query],\n  )\n  const [_searchQuery, setSearchQuery] = useState('')\n  const searchQuery = normalizedUrlSearch && !_searchQuery ? normalizedUrlSearch : _searchQuery\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const initialBlock = useInitialBlock()\n\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const openPoolsWithStartBlockFilter = useMemo(\n    () =>\n      openPools.filter((pool) =>\n        initialBlock > 0 && pool.startBlock\n          ? Number(pool.startBlock) < initialBlock + POOL_START_BLOCK_THRESHOLD\n          : true,\n      ),\n    [initialBlock, openPools],\n  )\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.vaultKey) {\n          const vault = pool as DeserializedPoolVault\n          return vault.userData.userShares.gt(0)\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useCallback(() => {\n    return openPoolsWithStartBlockFilter.filter((pool) => {\n      if (pool.vaultKey) {\n        const vault = pool as DeserializedPoolVault\n        return vault.userData.userShares.gt(0)\n      }\n      return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n    })\n  }, [openPoolsWithStartBlockFilter])\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePoolsPageFetch()\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n  const showFinishedPools = router.pathname.includes('history')\n\n  const handleChangeSearchQuery = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => setSearchQuery(event.target.value),\n    [],\n  )\n\n  const handleSortOptionChange = useCallback((option: OptionProps) => setSortOption(option.value), [])\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools() : openPoolsWithStartBlockFilter\n  }\n\n  chosenPools = useMemo(() => {\n    const sortedPools = sortPools(account, sortOption, pools, chosenPools).slice(0, numberOfPoolsVisible)\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      return sortedPools.filter((pool) => latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery))\n    }\n    return sortedPools\n  }, [account, sortOption, pools, chosenPools, numberOfPoolsVisible, searchQuery])\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.vaultKey ? (\n          <CakeVaultCard key={pool.vaultKey} pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable urlSearch={normalizedUrlSearch} pools={chosenPools} account={account} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                    {\n                      label: t('Latest'),\n                      value: 'latest',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput initialValue={searchQuery} onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <FinishedTextContainer>\n            <Text fontSize={['16px', null, '20px']} color=\"failure\" pr=\"4px\">\n              {t('Looking for v1 CAKE syrup pools?')}\n            </Text>\n            <FinishedTextLink href=\"/migration\" fontSize={['16px', null, '20px']} color=\"failure\">\n              {t('Go to migration page')}.\n            </FinishedTextLink>\n          </FinishedTextContainer>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n      {createPortal(<ScrollToTopButtonV2 />, document.body)}\n    </>\n  )\n}\n\nexport default Pools\n","import React from \"react\";\nimport styled, { DefaultTheme } from \"styled-components\";\nimport { CardRibbonProps } from \"./types\";\n\ninterface StyledCardRibbonProps extends CardRibbonProps {\n  theme: DefaultTheme;\n}\n\nconst StyledCardRibbon = styled.div<Partial<StyledCardRibbonProps>>`\n  z-index: ${({ theme }) => theme.zIndices.ribbon};\n  background-color: ${({ variantColor = \"secondary\", theme }) => theme.colors[variantColor]};\n  color: white;\n  margin: 0;\n  padding: 8px 0;\n  position: absolute;\n  right: ${({ ribbonPosition }) => (ribbonPosition === \"right\" ? 0 : \"auto\")};\n  top: 0;\n  text-align: center;\n  transform: ${({ ribbonPosition }) =>\n    ribbonPosition === \"right\"\n      ? \"translateX(30%) translateY(0%) rotate(45deg)\"\n      : \"translateX(0%) translateY(200%) rotate(-45deg)\"};\n  transform-origin: top left;\n  width: 96px;\n\n  &:before,\n  &:after {\n    background-color: ${({ variantColor = \"secondary\", theme }) => theme.colors[variantColor]};\n    content: \"\";\n    height: 100%;\n    margin: 0 -1px; /* Removes tiny gap */\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n\n  &:before {\n    right: 100%;\n  }\n\n  &:after {\n    left: 100%;\n  }\n\n  & > div {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    width: 96px;\n  }\n`;\n\nconst CardRibbon: React.FC<React.PropsWithChildren<CardRibbonProps>> = ({\n  variantColor,\n  text,\n  ribbonPosition,\n  ...props\n}) => {\n  return (\n    <StyledCardRibbon variantColor={variantColor} ribbonPosition={ribbonPosition} {...props}>\n      <div title={text}>{text}</div>\n    </StyledCardRibbon>\n  );\n};\n\nCardRibbon.defaultProps = {\n  // eslint-disable-next-line react/default-props-match-prop-types\n  ribbonPosition: \"right\",\n};\n\nexport default CardRibbon;\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[4976],{\n\n/***/ 96795:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar createAggregator = __webpack_require__(36740);\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n\n\n/***/ }),\n\n/***/ 74470:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2784);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3411);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(93058);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23766);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(3549);\n/* harmony import */ var state_user_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15444);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  margin-left: -8px;\\n\\n  \",\n        \" {\\n    margin-left: 0;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar Container = styled_components__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-ad63ee3f-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar ToggleView = function(param) {\n    var idPrefix = param.idPrefix, viewMode = param.viewMode, onToggle = param.onToggle;\n    var handleToggleCard = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(function() {\n        if (viewMode !== state_user_actions__WEBPACK_IMPORTED_MODULE_3__/* .ViewMode.CARD */ .wO.CARD) {\n            onToggle(state_user_actions__WEBPACK_IMPORTED_MODULE_3__/* .ViewMode.CARD */ .wO.CARD);\n        }\n    }, [\n        onToggle,\n        viewMode\n    ]);\n    var handleToggleTable = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(function() {\n        if (viewMode !== state_user_actions__WEBPACK_IMPORTED_MODULE_3__/* .ViewMode.TABLE */ .wO.TABLE) {\n            onToggle(state_user_actions__WEBPACK_IMPORTED_MODULE_3__/* .ViewMode.TABLE */ .wO.TABLE);\n        }\n    }, [\n        onToggle,\n        viewMode\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Container, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n                variant: \"text\",\n                scale: \"sm\",\n                id: \"\".concat(idPrefix, \"CardView\"),\n                onClick: handleToggleCard,\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z, {\n                    color: viewMode === state_user_actions__WEBPACK_IMPORTED_MODULE_3__/* .ViewMode.CARD */ .wO.CARD ? \"primary\" : \"textDisabled\"\n                })\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n                variant: \"text\",\n                scale: \"sm\",\n                id: \"\".concat(idPrefix, \"TableView\"),\n                onClick: handleToggleTable,\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                    color: viewMode === state_user_actions__WEBPACK_IMPORTED_MODULE_3__/* .ViewMode.TABLE */ .wO.TABLE ? \"primary\" : \"textDisabled\"\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (ToggleView);\n\n\n/***/ }),\n\n/***/ 52908:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87394);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21147);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2784);\n\n\n\nvar useIntersectionObserver = function() {\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), observerRefElement = ref[0], setObserverRefElement = ref[1];\n    var intersectionObserverRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), isIntersecting = ref1[0], setIsIntersecting = ref1[1];\n    (0,_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_1__/* .useIsomorphicEffect */ .Y)(function() {\n        var isSupported =  true && window.IntersectionObserver;\n        if (isSupported) {\n            if (!intersectionObserverRef.current && observerRefElement) {\n                var checkObserverIsIntersecting = function(param) {\n                    var _param = (0,_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(param, 1), entry = _param[0];\n                    setIsIntersecting(entry.isIntersecting);\n                };\n                intersectionObserverRef.current = new window.IntersectionObserver(checkObserverIsIntersecting, {\n                    rootMargin: \"0px\",\n                    threshold: 1\n                });\n                intersectionObserverRef.current.observe(observerRefElement);\n            }\n            if (intersectionObserverRef.current && !observerRefElement) {\n                intersectionObserverRef.current.disconnect();\n                setIsIntersecting(false);\n            }\n        } else {\n            // If client doesnt support IntersectionObserver, set Intersecting to be true\n            setIsIntersecting(true);\n        }\n        return function() {\n            if (intersectionObserverRef.current) {\n                intersectionObserverRef.current.disconnect();\n            }\n        };\n    }, [\n        observerRefElement\n    ]);\n    return {\n        observerRef: setObserverRefElement,\n        isIntersecting: isIntersecting\n    };\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (useIntersectionObserver);\n\n\n/***/ }),\n\n/***/ 93508:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"b\": function() { return /* binding */ latinise; }\n/* harmony export */ });\n/* unused harmony export Latinise */\nvar Latinise = {\n    latin_map: {\n        τ: \"t\",\n        Τ: \"T\"\n    }\n};\nvar latinise = function(input) {\n    return input.replace(/[^A-Za-z0-9[\\] ]/g, function(x) {\n        return Latinise.latin_map[x] || x;\n    });\n};\n\n\n/***/ }),\n\n/***/ 44976:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ views_Pools; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(92228);\n// EXTERNAL MODULE: ../../node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(52322);\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ../../node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(28316);\n// EXTERNAL MODULE: ../../node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(3411);\n// EXTERNAL MODULE: ../../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(10528);\n// EXTERNAL MODULE: ../../node_modules/@ethersproject/units/lib.esm/index.js + 1 modules\nvar lib_esm = __webpack_require__(59656);\n// EXTERNAL MODULE: ../../node_modules/bignumber.js/bignumber.js\nvar bignumber_js_bignumber = __webpack_require__(6391);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber_js_bignumber);\n// EXTERNAL MODULE: ../../packages/wagmi/dist/index.mjs\nvar dist = __webpack_require__(9270);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Layouts/Flex.tsx\nvar Flex = __webpack_require__(28543);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(89495);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Flex.tsx\nvar Box_Flex = __webpack_require__(76903);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Link/Link.tsx\nvar Link = __webpack_require__(73697);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/PageHeader/PageHeader.tsx\nvar PageHeader = __webpack_require__(45349);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Heading/Heading.tsx + 1 modules\nvar Heading = __webpack_require__(48497);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Select/Select.tsx\nvar Select = __webpack_require__(3433);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/SearchInput/SearchInput.tsx\nvar SearchInput = __webpack_require__(35890);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Loading/Loading.tsx\nvar Loading = __webpack_require__(8549);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Image/Image.tsx\nvar Image = __webpack_require__(96469);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/ScrollToTopButton/ScrollToTopButtonV2.tsx\nvar ScrollToTopButtonV2 = __webpack_require__(79569);\n// EXTERNAL MODULE: ../../node_modules/lodash/orderBy.js\nvar orderBy = __webpack_require__(34498);\nvar orderBy_default = /*#__PURE__*/__webpack_require__.n(orderBy);\n// EXTERNAL MODULE: ../../node_modules/lodash/partition.js\nvar partition = __webpack_require__(96795);\nvar partition_default = /*#__PURE__*/__webpack_require__.n(partition);\n// EXTERNAL MODULE: ../../packages/localization/src/index.tsx + 6 modules\nvar src = __webpack_require__(65957);\n// EXTERNAL MODULE: ./src/hooks/useIntersectionObserver.ts\nvar useIntersectionObserver = __webpack_require__(52908);\n// EXTERNAL MODULE: ./src/state/pools/hooks.ts + 1 modules\nvar hooks = __webpack_require__(99225);\n// EXTERNAL MODULE: ./src/utils/latinise.ts\nvar latinise = __webpack_require__(93508);\n// EXTERNAL MODULE: ./src/components/Layout/Page.tsx + 1 modules\nvar Page = __webpack_require__(98757);\n// EXTERNAL MODULE: ./src/state/types.ts\nvar types = __webpack_require__(93638);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar user_hooks = __webpack_require__(72135);\n// EXTERNAL MODULE: ./src/state/user/actions.ts\nvar actions = __webpack_require__(15444);\n// EXTERNAL MODULE: ../../node_modules/next/router.js\nvar next_router = __webpack_require__(5632);\n// EXTERNAL MODULE: ./src/state/block/hooks.ts\nvar block_hooks = __webpack_require__(26488);\n// EXTERNAL MODULE: ./src/config/index.ts\nvar config = __webpack_require__(7599);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Card/CardRibbon.tsx\nvar CardRibbon = __webpack_require__(12752);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Skeleton/Skeleton.tsx + 1 modules\nvar Skeleton = __webpack_require__(74009);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Card/CardBody.tsx\nvar CardBody = __webpack_require__(95134);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(39480);\n// EXTERNAL MODULE: ../../packages/utils/bigNumber.ts\nvar bigNumber = __webpack_require__(81834);\n// EXTERNAL MODULE: ./src/components/TokenImage/index.tsx\nvar TokenImage = __webpack_require__(46684);\n// EXTERNAL MODULE: ../../packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(98813);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/TooltipText.tsx\nvar TooltipText = __webpack_require__(83931);\n// EXTERNAL MODULE: ./src/views/Pools/components/Apr.tsx\nvar Apr = __webpack_require__(97421);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/AprRow.tsx\n\n\n\n\nvar AprRow = function(param) {\n    var pool = param.pool, stakedBalance = param.stakedBalance, _performanceFee = param.performanceFee, performanceFee = _performanceFee === void 0 ? 0 : _performanceFee, _showIcon = param.showIcon, showIcon = _showIcon === void 0 ? true : _showIcon;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var vaultKey = pool.vaultKey;\n    var tooltipContent = vaultKey ? t(\"APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.\") : t(\"This pool’s rewards aren’t compounded automatically, so we show APR\");\n    var ref = (0,useTooltip/* default */.Z)(tooltipContent, {\n        placement: \"bottom-start\"\n    }), targetRef = ref.targetRef, tooltip = ref.tooltip, tooltipVisible = ref.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                ref: targetRef,\n                children: vaultKey ? \"\".concat(t(\"APY\"), \":\") : \"\".concat(t(\"APR\"), \":\")\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Apr/* default */.Z, {\n                pool: pool,\n                stakedBalance: stakedBalance,\n                performanceFee: performanceFee,\n                showIcon: showIcon\n            })\n        ]\n    });\n};\n/* harmony default export */ var PoolCard_AprRow = (AprRow);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/StyledCard.tsx\nvar StyledCard = __webpack_require__(43912);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/CardFooter/index.tsx\nvar CardFooter = __webpack_require__(45249);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/PoolCardHeader.tsx\nvar PoolCardHeader = __webpack_require__(36728);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(13670);\n// EXTERNAL MODULE: ./src/config/constants/types.ts\nvar constants_types = __webpack_require__(6429);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useProfileRequirement.ts\nvar useProfileRequirement = __webpack_require__(7818);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(48608);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/AutoRenew.tsx\nvar AutoRenew = __webpack_require__(73685);\n// EXTERNAL MODULE: ./src/hooks/useContract.ts + 1 modules\nvar useContract = __webpack_require__(76269);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useApprove.tsx + 1 modules\nvar useApprove = __webpack_require__(33431);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx\n\n\n\n\n\nvar ApprovalAction = function(param) {\n    var pool = param.pool, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var stakingTokenContract = (0,useContract/* useERC20 */.X_)(stakingToken.address || \"\");\n    var ref = (0,useApprove/* useApprovePool */.iB)(stakingTokenContract, sousId, earningToken.symbol), handleApprove = ref.handleApprove, pendingTx = ref.pendingTx;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n        children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            isLoading: pendingTx,\n            endIcon: pendingTx ? /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoRenew/* default */.Z, {\n                spin: true,\n                color: \"currentColor\"\n            }) : null,\n            disabled: pendingTx,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: t(\"Enable\")\n        })\n    });\n};\n/* harmony default export */ var CardActions_ApprovalAction = (ApprovalAction);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(11298);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Balance/Balance.tsx\nvar Balance = __webpack_require__(64343);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Button/IconButton.tsx\nvar IconButton = __webpack_require__(93058);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Minus.tsx\nvar Minus = __webpack_require__(99269);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Add.tsx\nvar Add = __webpack_require__(29420);\n// EXTERNAL MODULE: ../../packages/utils/formatBalance.ts\nvar formatBalance = __webpack_require__(18426);\n// EXTERNAL MODULE: ./src/views/Pools/components/Modals/NotEnoughTokensModal.tsx\nvar NotEnoughTokensModal = __webpack_require__(69688);\n// EXTERNAL MODULE: ./src/views/Pools/components/Modals/StakeModal.tsx + 3 modules\nvar StakeModal = __webpack_require__(32610);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx\n\n\n\n\n\n\n\nvar StakeAction = function(param) {\n    var pool = param.pool, stakingTokenBalance = param.stakingTokenBalance, stakedBalance = param.stakedBalance, isBnbPool = param.isBnbPool, isStaked = param.isStaked, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading;\n    var stakingToken = pool.stakingToken, stakingTokenPrice = pool.stakingTokenPrice, stakingLimit = pool.stakingLimit, isFinished = pool.isFinished, userData = pool.userData;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var stakedTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance, stakingToken.decimals);\n    var stakedTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(NotEnoughTokensModal/* default */.Z, {\n        tokenSymbol: stakingToken.symbol\n    })), 1), onPresentTokenRequired = ref[0];\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(StakeModal/* default */.Z, {\n        isBnbPool: isBnbPool,\n        pool: pool,\n        stakingTokenBalance: stakingTokenBalance,\n        stakingTokenPrice: stakingTokenPrice\n    })), 1), onPresentStake = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(StakeModal/* default */.Z, {\n        stakingTokenBalance: stakingTokenBalance,\n        isBnbPool: isBnbPool,\n        pool: pool,\n        stakingTokenPrice: stakingTokenPrice,\n        isRemovingStake: true\n    })), 1), onPresentUnstake = ref2[0];\n    var ref3 = (0,useTooltip/* default */.Z)(t(\"You’ve already staked the maximum amount you can stake in this pool!\"), {\n        placement: \"bottom\"\n    }), targetRef = ref3.targetRef, tooltip = ref3.tooltip, tooltipVisible = ref3.tooltipVisible;\n    var reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit);\n    var renderStakeAction = function() {\n        return isStaked ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                    flexDirection: \"column\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                bold: true,\n                                fontSize: \"20px\",\n                                decimals: 3,\n                                value: stakedTokenBalance\n                            }),\n                            stakingTokenPrice !== 0 && /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    decimals: 2,\n                                    value: stakedTokenDollarBalance,\n                                    prefix: \"~\",\n                                    unit: \" USD\"\n                                })\n                            })\n                        ]\n                    })\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                            variant: \"secondary\",\n                            onClick: onPresentUnstake,\n                            mr: \"6px\",\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Minus/* default */.Z, {\n                                color: \"primary\",\n                                width: \"24px\"\n                            })\n                        }),\n                        reachStakingLimit ? /*#__PURE__*/ (0,jsx_runtime.jsx)(\"span\", {\n                            ref: targetRef,\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                                variant: \"secondary\",\n                                disabled: true,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                    color: \"textDisabled\",\n                                    width: \"24px\",\n                                    height: \"24px\"\n                                })\n                            })\n                        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                            variant: \"secondary\",\n                            onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n                            disabled: isFinished,\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                color: \"primary\",\n                                width: \"24px\",\n                                height: \"24px\"\n                            })\n                        })\n                    ]\n                }),\n                tooltipVisible && tooltip\n            ]\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            disabled: isFinished,\n            onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n            children: t(\"Stake\")\n        });\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        }) : renderStakeAction()\n    });\n};\n/* harmony default export */ var StakeActions = (StakeAction);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/Modals/CollectModal.tsx + 1 modules\nvar CollectModal = __webpack_require__(42279);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx\n\n\n\n\n\n\nvar HarvestActions = function(param) {\n    var earnings = param.earnings, earningToken = param.earningToken, sousId = param.sousId, isBnbPool = param.isBnbPool, earningTokenPrice = param.earningTokenPrice, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var earningTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings, earningToken.decimals);\n    var formattedBalance = (0,formatBalance/* formatNumber */.uf)(earningTokenBalance, 3, 3);\n    var earningTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n    var fullBalance = (0,formatBalance/* getFullDisplayBalance */.NJ)(earnings, earningToken.decimals);\n    var hasEarnings = earnings.toNumber() > 0;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(CollectModal/* default */.Z, {\n        formattedBalance: formattedBalance,\n        fullBalance: fullBalance,\n        earningToken: earningToken,\n        earningsDollarValue: earningTokenDollarBalance,\n        sousId: sousId,\n        isBnbPool: isBnbPool\n    })), 1), onPresentCollect = ref[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: \"16px\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                flexDirection: \"column\",\n                children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"48px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: hasEarnings ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                bold: true,\n                                fontSize: \"20px\",\n                                decimals: 5,\n                                value: earningTokenBalance\n                            }),\n                            earningTokenPrice > 0 && /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                display: \"inline\",\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                decimals: 2,\n                                prefix: \"~\",\n                                value: earningTokenDollarBalance,\n                                unit: \" USD\"\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                color: \"textDisabled\",\n                                children: \"0\"\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                color: \"textDisabled\",\n                                children: \"0 USD\"\n                            })\n                        ]\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                disabled: !hasEarnings,\n                onClick: onPresentCollect,\n                children: t(\"Harvest\")\n            })\n        ]\n    });\n};\n/* harmony default export */ var CardActions_HarvestActions = (HarvestActions);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/ProfileRequirementWarning.tsx\nvar ProfileRequirementWarning = __webpack_require__(28425);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/index.tsx\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: inline;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nvar InlineText = (0,styled_components_browser_esm/* default */.ZP)(Text/* default */.Z).withConfig({\n    componentId: \"sc-93bade5c-0\"\n})(_templateObject());\nvar CardActions = function(param) {\n    var pool = param.pool, stakedBalance = param.stakedBalance;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken, poolCategory = pool.poolCategory, userData = pool.userData, earningTokenPrice = pool.earningTokenPrice, profileRequirement = pool.profileRequirement;\n    // Pools using native BNB behave differently than pools using a token\n    var isBnbPool = poolCategory === constants_types/* PoolCategory.BINANCE */.jh.BINANCE;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var allowance = (userData === null || userData === void 0 ? void 0 : userData.allowance) ? new (bignumber_default())(userData.allowance) : bigNumber/* BIG_ZERO */.HW;\n    var stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new (bignumber_default())(userData.stakingTokenBalance) : bigNumber/* BIG_ZERO */.HW;\n    var earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new (bignumber_default())(userData.pendingReward) : bigNumber/* BIG_ZERO */.HW;\n    var needsApproval = !allowance.gt(0) && !isBnbPool;\n    var isStaked = stakedBalance.gt(0);\n    var isLoading = !userData;\n    var ref = (0,useProfileRequirement/* useProfileRequirement */.f)(profileRequirement), notMeetRequired = ref.notMeetRequired, notMeetThreshold = ref.notMeetThreshold;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n            flexDirection: \"column\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            display: \"inline\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                                    color: \"secondary\",\n                                    textTransform: \"uppercase\",\n                                    bold: true,\n                                    fontSize: \"12px\",\n                                    children: \"\".concat(earningToken.symbol, \" \")\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                                    color: \"textSubtle\",\n                                    textTransform: \"uppercase\",\n                                    bold: true,\n                                    fontSize: \"12px\",\n                                    children: t(\"Earned\")\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(CardActions_HarvestActions, {\n                            earnings: earnings,\n                            earningToken: earningToken,\n                            sousId: sousId,\n                            earningTokenPrice: earningTokenPrice,\n                            isBnbPool: isBnbPool,\n                            isLoading: isLoading\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                    display: \"inline\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(InlineText, {\n                            color: isStaked ? \"secondary\" : \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: [\n                                isStaked ? stakingToken.symbol : t(\"Stake\"),\n                                \" \"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                            color: isStaked ? \"textSubtle\" : \"secondary\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: isStaked ? t(\"Staked\") : \"\".concat(stakingToken.symbol)\n                        })\n                    ]\n                }),\n                notMeetRequired || notMeetThreshold ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ProfileRequirementWarning/* ProfileRequirementWarning */.Q, {\n                    profileRequirement: profileRequirement\n                }) : needsApproval ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CardActions_ApprovalAction, {\n                    pool: pool,\n                    isLoading: isLoading\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(StakeActions, {\n                    isLoading: isLoading,\n                    pool: pool,\n                    stakingTokenBalance: stakingTokenBalance,\n                    stakedBalance: stakedBalance,\n                    isBnbPool: isBnbPool,\n                    isStaked: isStaked\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var PoolCard_CardActions = (CardActions);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\nvar PoolCard = function(param) {\n    var pool = param.pool, account = param.account;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken, isFinished = pool.isFinished, userData = pool.userData, totalStaked = pool.totalStaked;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new (bignumber_default())(userData.stakedBalance) : bigNumber/* BIG_ZERO */.HW;\n    var accountHasStakedBalance = stakedBalance.gt(0);\n    var isCakePool = earningToken.symbol === \"CAKE\" && stakingToken.symbol === \"CAKE\";\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledCard/* StyledCard */.r, {\n        isFinished: isFinished && sousId !== 0,\n        ribbon: isFinished && /*#__PURE__*/ (0,jsx_runtime.jsx)(CardRibbon/* default */.Z, {\n            variantColor: \"textDisabled\",\n            text: t(\"Finished\")\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCardHeader/* default */.Z, {\n                isStaking: accountHasStakedBalance,\n                isFinished: isFinished && sousId !== 0,\n                children: totalStaked && totalStaked.gte(0) ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCardHeader/* PoolCardHeaderTitle */.e, {\n                            title: isCakePool ? t(\"Manual\") : t(\"Earn %asset%\", {\n                                asset: earningToken.symbol\n                            }),\n                            subTitle: isCakePool ? t(\"Earn CAKE, stake CAKE\") : t(\"Stake %symbol%\", {\n                                symbol: stakingToken.symbol\n                            })\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(TokenImage/* TokenPairImage */.q, {\n                            primaryToken: earningToken,\n                            secondaryToken: stakingToken,\n                            width: 64,\n                            height: 64\n                        })\n                    ]\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n                    width: \"100%\",\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n                            flexDirection: \"column\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                                    width: 100,\n                                    height: 26,\n                                    mb: \"4px\"\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                                    width: 65,\n                                    height: 20\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                            width: 58,\n                            height: 58,\n                            variant: \"circle\"\n                        })\n                    ]\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(CardBody/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCard_AprRow, {\n                        pool: pool,\n                        stakedBalance: stakedBalance\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                        mt: \"24px\",\n                        flexDirection: \"column\",\n                        children: account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCard_CardActions, {\n                            pool: pool,\n                            stakedBalance: stakedBalance\n                        }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mb: \"10px\",\n                                    textTransform: \"uppercase\",\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    bold: true,\n                                    children: t(\"Start earning\")\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {})\n                            ]\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardFooter/* default */.Z, {\n                pool: pool,\n                account: account\n            })\n        ]\n    });\n};\n/* harmony default export */ var components_PoolCard = (PoolCard);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/CakeVaultCard/index.tsx + 10 modules\nvar CakeVaultCard = __webpack_require__(5312);\n// EXTERNAL MODULE: ./src/components/ToggleView/ToggleView.tsx\nvar ToggleView = __webpack_require__(74470);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/ButtonMenu/ButtonMenu.tsx\nvar ButtonMenu = __webpack_require__(2448);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/ButtonMenu/ButtonMenuItem.tsx\nvar ButtonMenuItem = __webpack_require__(97984);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/NextLink/NextLink.tsx\nvar NextLink = __webpack_require__(47265);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/NotificationDot/NotificationDot.tsx\nvar NotificationDot = __webpack_require__(49714);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Toggle/Toggle.tsx + 2 modules\nvar Toggle = __webpack_require__(46098);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolTabButtons.tsx\n\nfunction PoolTabButtons_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  align-items: center;\\n  margin-left: 10px;\\n\\n  \",\n        \" {\\n    margin-left: 8px;\\n  }\\n\"\n    ]);\n    PoolTabButtons_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n\\n  > div {\\n    padding: 8px 0px;\\n  }\\n\\n  \",\n        \" {\\n    justify-content: flex-start;\\n    width: auto;\\n\\n    > div {\\n      padding: 0;\\n    }\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\\n  a {\\n    padding-left: 12px;\\n    padding-right: 12px;\\n  }\\n\\n  \",\n        \" {\\n    margin-left: 16px;\\n  }\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\nvar ToggleWrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-ca4d4ac7-0\"\n})(PoolTabButtons_templateObject(), Text/* default */.Z);\nvar ViewControls = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-ca4d4ac7-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar Wrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-ca4d4ac7-2\"\n})(_templateObject2(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar PoolTabButtons = function(param) {\n    var stakedOnly = param.stakedOnly, setStakedOnly = param.setStakedOnly, hasStakeInFinishedPools = param.hasStakeInFinishedPools, viewMode = param.viewMode, setViewMode = param.setViewMode;\n    var router = (0,next_router.useRouter)();\n    var t = (0,src/* useTranslation */.$G)().t;\n    var isExact = router.pathname === \"/pools\" || router.pathname === \"/_mp/pools\";\n    var viewModeToggle = /*#__PURE__*/ (0,jsx_runtime.jsx)(ToggleView/* default */.Z, {\n        idPrefix: \"clickPool\",\n        viewMode: viewMode,\n        onToggle: setViewMode\n    });\n    var liveOrFinishedSwitch = /*#__PURE__*/ (0,jsx_runtime.jsx)(Wrapper, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(ButtonMenu/* default */.Z, {\n            activeIndex: isExact ? 0 : 1,\n            scale: \"sm\",\n            variant: \"subtle\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(ButtonMenuItem/* default */.Z, {\n                    as: NextLink/* default */.Z,\n                    to: \"/pools\",\n                    replace: true,\n                    children: t(\"Live\")\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(NotificationDot/* default */.Z, {\n                    show: hasStakeInFinishedPools,\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ButtonMenuItem/* default */.Z, {\n                        id: \"finished-pools-button\",\n                        as: NextLink/* default */.Z,\n                        to: \"/pools/history\",\n                        replace: true,\n                        children: t(\"Finished\")\n                    })\n                })\n            ]\n        })\n    });\n    var stakedOnlySwitch = /*#__PURE__*/ (0,jsx_runtime.jsxs)(ToggleWrapper, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Toggle/* default */.Z, {\n                checked: stakedOnly,\n                onChange: function() {\n                    return setStakedOnly(!stakedOnly);\n                },\n                scale: \"sm\"\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    \" \",\n                    t(\"Staked only\")\n                ]\n            })\n        ]\n    });\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(ViewControls, {\n        children: [\n            viewModeToggle,\n            stakedOnlySwitch,\n            liveOrFinishedSwitch\n        ]\n    });\n};\n/* harmony default export */ var components_PoolTabButtons = (PoolTabButtons);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/contexts/MatchBreakpoints/useMatchBreakpoints.ts\nvar useMatchBreakpoints = __webpack_require__(62392);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/NameCell.tsx\nvar NameCell = __webpack_require__(5251);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/BaseCell.tsx\nvar BaseCell = __webpack_require__(39708);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx\n\n\nfunction EarningsCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 4.5;\\n  \",\n        \" {\\n    flex: 1 0 120px;\\n  }\\n\"\n    ]);\n    EarningsCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\nvar StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-902eea7d-0\"\n})(EarningsCell_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar EarningsCell = function(param) {\n    var pool = param.pool, account = param.account;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var isMobile = (0,useMatchBreakpoints/* default */.Z)().isMobile;\n    var sousId = pool.sousId, earningToken = pool.earningToken, poolCategory = pool.poolCategory, userData = pool.userData, earningTokenPrice = pool.earningTokenPrice;\n    var earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new (bignumber_default())(userData.pendingReward) : bigNumber/* BIG_ZERO */.HW;\n    var earningTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings, earningToken.decimals);\n    var earningTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n    var hasEarnings = account && earnings.gt(0);\n    var fullBalance = (0,formatBalance/* getFullDisplayBalance */.NJ)(earnings, earningToken.decimals);\n    var formattedBalance = (0,formatBalance/* formatNumber */.uf)(earningTokenBalance, 3, 3);\n    var isBnbPool = poolCategory === constants_types/* PoolCategory.BINANCE */.jh.BINANCE;\n    var labelText = t(\"%asset% Earned\", {\n        asset: earningToken.symbol\n    });\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(CollectModal/* default */.Z, {\n        formattedBalance: formattedBalance,\n        fullBalance: fullBalance,\n        earningToken: earningToken,\n        earningsDollarValue: earningTokenDollarBalance,\n        sousId: sousId,\n        isBnbPool: isBnbPool\n    })), 1), onPresentCollect = ref[0];\n    var handleEarningsClick = function(event) {\n        event.stopPropagation();\n        onPresentCollect();\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: labelText\n                }),\n                !pool.userDataLoaded && account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            mr: \"8px\",\n                            height: \"32px\",\n                            onClick: hasEarnings ? handleEarningsClick : undefined,\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    mt: \"4px\",\n                                    bold: !isMobile,\n                                    fontSize: isMobile ? \"14px\" : \"16px\",\n                                    color: hasEarnings ? \"primary\" : \"textDisabled\",\n                                    decimals: hasEarnings ? 5 : 1,\n                                    value: hasEarnings ? earningTokenBalance : 0\n                                }),\n                                hasEarnings ? /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                    children: earningTokenPrice > 0 && /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                        display: \"inline\",\n                                        fontSize: \"12px\",\n                                        color: \"textSubtle\",\n                                        decimals: 2,\n                                        prefix: \"~\",\n                                        value: earningTokenDollarBalance,\n                                        unit: \" USD\"\n                                    })\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mt: \"4px\",\n                                    fontSize: \"12px\",\n                                    color: \"textDisabled\",\n                                    children: \"0 USD\"\n                                })\n                            ]\n                        })\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_EarningsCell = (EarningsCell);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AprCell.tsx\nvar AprCell = __webpack_require__(51110);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx\n\nfunction TotalStakedCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 2 0 100px;\\n\"\n    ]);\n    TotalStakedCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\nvar TotalStakedCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-375678ec-0\"\n})(TotalStakedCell_templateObject());\nvar TotalStakedCell = function(param) {\n    var pool = param.pool;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var stakingToken = pool.stakingToken, totalStaked = pool.totalStaked, vaultKey = pool.vaultKey;\n    var totalCakeInVault = (0,hooks/* useVaultPoolByKey */.eB)(vaultKey).totalCakeInVault;\n    var totalStakedBalance = (0,react.useMemo)(function() {\n        if (vaultKey) {\n            return (0,formatBalance/* getBalanceNumber */.mW)(totalCakeInVault, stakingToken.decimals);\n        }\n        return (0,formatBalance/* getBalanceNumber */.mW)(totalStaked, stakingToken.decimals);\n    }, [\n        vaultKey,\n        totalCakeInVault,\n        totalStaked,\n        stakingToken.decimals\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(TotalStakedCell_StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: t(\"Total staked\")\n                }),\n                totalStaked && totalStaked.gte(0) ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                    height: \"20px\",\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                        fontSize: \"16px\",\n                        value: totalStakedBalance,\n                        decimals: 0,\n                        unit: \" \".concat(stakingToken.symbol)\n                    })\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_TotalStakedCell = (TotalStakedCell);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Timer.tsx\nvar Timer = __webpack_require__(70581);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(5305);\n// EXTERNAL MODULE: ./src/views/Pools/helpers.tsx\nvar helpers = __webpack_require__(9681);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/EndsInCell.tsx\n\nfunction EndsInCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 2 0 100px;\\n\"\n    ]);\n    EndsInCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\nvar EndsInCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-48e2b69d-0\"\n})(EndsInCell_templateObject());\nvar EndsInCell = function(param) {\n    var pool = param.pool;\n    var sousId = pool.sousId, totalStaked = pool.totalStaked, startBlock = pool.startBlock, endBlock = pool.endBlock, isFinished = pool.isFinished;\n    var currentBlock = (0,block_hooks/* useCurrentBlock */.je)();\n    var t = (0,src/* useTranslation */.$G)().t;\n    var ref = (0,helpers/* getPoolBlockInfo */.zy)(pool, currentBlock), shouldShowBlockCountdown = ref.shouldShowBlockCountdown, blocksUntilStart = ref.blocksUntilStart, blocksRemaining = ref.blocksRemaining, hasPoolStarted = ref.hasPoolStarted, blocksToDisplay = ref.blocksToDisplay;\n    var isCakePool = sousId === 0;\n    var renderBlocks = shouldShowBlockCountdown ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n        alignItems: \"center\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n                flex: \"1.3\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                        fontSize: \"16px\",\n                        value: blocksToDisplay,\n                        decimals: 0\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        ml: \"4px\",\n                        textTransform: \"lowercase\",\n                        children: t(\"Blocks\")\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                flex: \"1\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Link/* default */.Z, {\n                    external: true,\n                    href: (0,utils/* getBlockExploreLink */.C)(hasPoolStarted ? endBlock : startBlock, \"countdown\"),\n                    onClick: function(e) {\n                        return e.stopPropagation();\n                    },\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Timer/* default */.Z, {\n                        ml: \"4px\"\n                    })\n                })\n            })\n        ]\n    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n        children: \"-\"\n    });\n    // A bit hacky way to determine if public data is loading relying on totalStaked\n    // Opted to go for this since we don't really need a separate publicDataLoaded flag\n    // anywhere else\n    var isLoadingBlockData = !currentBlock || !blocksRemaining && !blocksUntilStart;\n    var isLoadingPublicData = hasPoolStarted ? !totalStaked.gt(0) || isLoadingBlockData : isLoadingBlockData;\n    var showLoading = isLoadingPublicData && !isCakePool && !isFinished;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(EndsInCell_StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: hasPoolStarted || !shouldShowBlockCountdown ? t(\"Ends in\") : t(\"Starts in\")\n                }),\n                showLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : renderBlocks\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_EndsInCell = (EndsInCell);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx + 4 modules\nvar ActionPanel = __webpack_require__(1108);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx\nvar AutoEarningsCell = __webpack_require__(42863);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx\nvar AutoAprCell = __webpack_require__(14085);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/StakedCell.tsx\n\nfunction StakedCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\"\n    ]);\n    StakedCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\nvar StakedCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* default */.Z).withConfig({\n    componentId: \"sc-ff85cccd-0\"\n})(StakedCell_templateObject());\nvar StakedCell = function(param) {\n    var pool = param.pool, account = param.account;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var isMobile = (0,useMatchBreakpoints/* default */.Z)().isMobile;\n    // vault\n    var vaultData = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey);\n    var _userData = vaultData.userData, userShares = _userData.userShares, _balance = _userData.balance, cakeAsBigNumber = _balance.cakeAsBigNumber, cakeAsNumberBalance = _balance.cakeAsNumberBalance, isLoading = _userData.isLoading;\n    var hasSharesStaked = userShares.gt(0);\n    var isVaultWithShares = pool.vaultKey && hasSharesStaked;\n    // pool\n    var stakingTokenPrice = pool.stakingTokenPrice, stakingToken = pool.stakingToken, userData = pool.userData;\n    var stakedAutoDollarValue = (0,formatBalance/* getBalanceNumber */.mW)(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new (bignumber_default())(userData.stakedBalance) : bigNumber/* BIG_ZERO */.HW;\n    var stakedTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance, stakingToken.decimals);\n    var stakedTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var labelText = \"\".concat(pool.stakingToken.symbol, \" \").concat(pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && vaultData.userData.locked ? t(\"Locked\") : t(\"Staked\"));\n    var hasStaked = account && (stakedBalance.gt(0) || isVaultWithShares);\n    var userDataLoading = pool.vaultKey ? isLoading : !pool.userDataLoaded;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StakedCell_StyledCell, {\n        role: \"cell\",\n        flex: pool.vaultKey === types/* VaultKey.CakeFlexibleSideVault */.om.CakeFlexibleSideVault ? \"1 0 162px\" : pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && !hasStaked ? \"1 0 120px\" : \"2 0 100px\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: labelText\n                }),\n                userDataLoading && account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            mr: \"8px\",\n                            height: \"32px\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    mt: \"4px\",\n                                    bold: !isMobile,\n                                    fontSize: isMobile ? \"14px\" : \"16px\",\n                                    color: hasStaked ? \"primary\" : \"textDisabled\",\n                                    decimals: hasStaked ? 5 : 1,\n                                    value: hasStaked ? pool.vaultKey ? Number.isNaN(cakeAsNumberBalance) ? 0 : cakeAsNumberBalance : stakedTokenBalance : 0\n                                }),\n                                hasStaked ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    display: \"inline\",\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    decimals: 2,\n                                    prefix: \"~\",\n                                    value: pool.vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance,\n                                    unit: \" USD\"\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mt: \"4px\",\n                                    fontSize: \"12px\",\n                                    color: \"textDisabled\",\n                                    children: \"0 USD\"\n                                })\n                            ]\n                        })\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_StakedCell = (StakedCell);\n\n// EXTERNAL MODULE: ./src/hooks/useDelayedUnmount.ts\nvar useDelayedUnmount = __webpack_require__(99381);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx\nvar ExpandActionCell = __webpack_require__(27594);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/ExpandRow.tsx\n\nfunction ExpandRow_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  background-color: transparent;\\n  display: flex;\\n  cursor: pointer;\\n\"\n    ]);\n    ExpandRow_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\nvar StyledRow = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-dd7146e0-0\"\n})(ExpandRow_templateObject());\nvar ExpandRow = function(param) {\n    var children = param.children, panel = param.panel, initialActivity = param.initialActivity;\n    var hasSetInitialValue = (0,react.useRef)(false);\n    var ref = (0,useMatchBreakpoints/* default */.Z)(), isTablet = ref.isTablet, isDesktop = ref.isDesktop;\n    var ref1 = (0,react.useState)(initialActivity), expanded = ref1[0], setExpanded = ref1[1];\n    var shouldRenderActionPanel = (0,useDelayedUnmount/* default */.Z)(expanded, 300);\n    var toggleExpanded = (0,react.useCallback)(function() {\n        setExpanded(function(prev) {\n            return !prev;\n        });\n    }, []);\n    (0,react.useEffect)(function() {\n        if (initialActivity && hasSetInitialValue.current === false) {\n            setExpanded(initialActivity);\n            hasSetInitialValue.current = true;\n        }\n    }, [\n        initialActivity\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledRow, {\n                role: \"row\",\n                onClick: toggleExpanded,\n                children: [\n                    children,\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ExpandActionCell/* default */.Z, {\n                        expanded: expanded,\n                        isFullLayout: isTablet || isDesktop\n                    })\n                ]\n            }),\n            shouldRenderActionPanel && panel\n        ]\n    });\n};\n/* harmony default export */ var PoolsTable_ExpandRow = (/*#__PURE__*/(0,react.memo)(ExpandRow));\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/PoolRow.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar VaultPoolRow = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var vaultKey = param.vaultKey, account = param.account, initialActivity = param.initialActivity;\n    var ref = (0,useMatchBreakpoints/* default */.Z)(), isXs = ref.isXs, isSm = ref.isSm, isMd = ref.isMd, isLg = ref.isLg, isXl = ref.isXl, isXxl = ref.isXxl;\n    var isLargerScreen = isLg || isXl || isXxl;\n    var isXLargerScreen = isXl || isXxl;\n    var pool = (0,hooks/* useDeserializedPoolByVaultKey */.YX)(vaultKey);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolsTable_ExpandRow, {\n        initialActivity: initialActivity,\n        panel: /*#__PURE__*/ (0,jsx_runtime.jsx)(ActionPanel/* default */.Z, {\n            account: account,\n            pool: pool,\n            expanded: true,\n            breakpoints: {\n                isXs: isXs,\n                isSm: isSm,\n                isMd: isMd,\n                isLg: isLg,\n                isXl: isXl,\n                isXxl: isXxl\n            }\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(NameCell/* default */.Z, {\n                pool: pool\n            }),\n            isXLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoEarningsCell/* default */.Z, {\n                pool: pool,\n                account: account\n            }),\n            isXLargerScreen ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_StakedCell, {\n                pool: pool,\n                account: account\n            }) : null,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoAprCell/* default */.Z, {\n                pool: pool\n            }),\n            isLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_TotalStakedCell, {\n                pool: pool\n            })\n        ]\n    });\n});\nvar PoolRow = function(param) {\n    var sousId = param.sousId, account = param.account, initialActivity = param.initialActivity;\n    var ref = (0,useMatchBreakpoints/* default */.Z)(), isXs = ref.isXs, isSm = ref.isSm, isMd = ref.isMd, isLg = ref.isLg, isXl = ref.isXl, isXxl = ref.isXxl, isDesktop = ref.isDesktop;\n    var isLargerScreen = isLg || isXl || isXxl;\n    var pool = (0,hooks/* usePool */.AI)(sousId).pool;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolsTable_ExpandRow, {\n        initialActivity: initialActivity,\n        panel: /*#__PURE__*/ (0,jsx_runtime.jsx)(ActionPanel/* default */.Z, {\n            account: account,\n            pool: pool,\n            expanded: true,\n            breakpoints: {\n                isXs: isXs,\n                isSm: isSm,\n                isMd: isMd,\n                isLg: isLg,\n                isXl: isXl,\n                isXxl: isXxl\n            }\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(NameCell/* default */.Z, {\n                pool: pool\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_EarningsCell, {\n                pool: pool,\n                account: account\n            }),\n            isLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_TotalStakedCell, {\n                pool: pool\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(AprCell/* default */.Z, {\n                pool: pool\n            }),\n            isDesktop && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_EndsInCell, {\n                pool: pool\n            })\n        ]\n    });\n};\n/* harmony default export */ var PoolsTable_PoolRow = (/*#__PURE__*/(0,react.memo)(PoolRow));\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/PoolsTable.tsx\n\nfunction PoolsTable_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: \",\n        \";\\n  scroll-margin-top: 64px;\\n\\n  background-color: \",\n        \";\\n  > div:not(:last-child) {\\n    border-bottom: 2px solid \",\n        \";\\n  }\\n\"\n    ]);\n    PoolsTable_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction PoolsTable_templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: \",\n        \";\\n  background-color: \",\n        \";\\n  padding: 1px 1px 3px 1px;\\n  background-size: 400% 400%;\\n\"\n    ]);\n    PoolsTable_templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\nvar StyledTable = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-a3ab40d2-0\"\n})(PoolsTable_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n}, function(param) {\n    var theme = param.theme;\n    return theme.card.background;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.disabled;\n});\nvar StyledTableBorder = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-a3ab40d2-1\"\n})(PoolsTable_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n});\nvar PoolsTable = function(param) {\n    var pools = param.pools, account = param.account, urlSearch = param.urlSearch;\n    var tableWrapperEl = (0,react.useRef)(null);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledTableBorder, {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledTable, {\n            id: \"pools-table\",\n            role: \"table\",\n            ref: tableWrapperEl,\n            children: pools.map(function(pool) {\n                var ref, ref1;\n                return pool.vaultKey ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultPoolRow, {\n                    initialActivity: urlSearch.toLowerCase() === ((ref = pool.earningToken.symbol) === null || ref === void 0 ? void 0 : ref.toLowerCase()),\n                    vaultKey: pool.vaultKey,\n                    account: account\n                }, pool.vaultKey) : /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolsTable_PoolRow, {\n                    initialActivity: urlSearch.toLowerCase() === ((ref1 = pool.earningToken.symbol) === null || ref1 === void 0 ? void 0 : ref1.toLowerCase()),\n                    sousId: pool.sousId,\n                    account: account\n                }, pool.sousId);\n            })\n        })\n    });\n};\n/* harmony default export */ var PoolsTable_PoolsTable = (PoolsTable);\n\n;// CONCATENATED MODULE: ./src/views/Pools/index.tsx\n\n\nfunction Pools_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  justify-content: center;\\n\"\n    ]);\n    Pools_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction Pools_templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  position: relative;\\n\\n  justify-content: space-between;\\n  flex-direction: column;\\n  margin-bottom: 32px;\\n\\n  \",\n        \" {\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 16px 32px;\\n    margin-bottom: 0;\\n  }\\n\"\n    ]);\n    Pools_templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction Pools_templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 8px 0px;\\n\\n  \",\n        \" {\\n    width: auto;\\n    padding: 0;\\n  }\\n\"\n    ]);\n    Pools_templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  > \",\n        \" {\\n    font-size: 12px;\\n  }\\n\"\n    ]);\n    _templateObject3 = function _templateObject3() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject4() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  > div {\\n    flex: 1;\\n  }\\n\"\n    ]);\n    _templateObject4 = function _templateObject4() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject5() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  padding-bottom: 32px;\\n  flex-direction: column;\\n  \",\n        \" {\\n    flex-direction: row;\\n  }\\n\"\n    ]);\n    _templateObject5 = function _templateObject5() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject6() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  font-weight: 400;\\n  white-space: nowrap;\\n  text-decoration: underline;\\n\"\n    ]);\n    _templateObject6 = function _templateObject6() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CardLayout = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-2906d9ef-0\"\n})(Pools_templateObject());\nvar PoolControls = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-2906d9ef-1\"\n})(Pools_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar FilterContainer = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-2906d9ef-2\"\n})(Pools_templateObject2(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar LabelWrapper = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-2906d9ef-3\"\n})(_templateObject3(), Text/* default */.Z);\nvar ControlStretch = (0,styled_components_browser_esm/* default */.ZP)(Box_Flex/* default */.Z).withConfig({\n    componentId: \"sc-2906d9ef-4\"\n})(_templateObject4());\nvar FinishedTextContainer = (0,styled_components_browser_esm/* default */.ZP)(Box_Flex/* default */.Z).withConfig({\n    componentId: \"sc-2906d9ef-5\"\n})(_templateObject5(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.md;\n});\nvar FinishedTextLink = (0,styled_components_browser_esm/* default */.ZP)(Link/* default */.Z).withConfig({\n    componentId: \"sc-2906d9ef-6\"\n})(_templateObject6());\nvar NUMBER_OF_POOLS_VISIBLE = 12;\nvar sortPools = function(account, sortOption, pools, poolsToSort) {\n    switch(sortOption){\n        case \"apr\":\n            // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n            return orderBy_default()(poolsToSort, function(pool) {\n                return pool.apr ? pool.apr : 0;\n            }, \"desc\");\n        case \"earned\":\n            return orderBy_default()(poolsToSort, function(pool) {\n                if (!pool.userData || !pool.earningTokenPrice) {\n                    return 0;\n                }\n                if (pool.vaultKey) {\n                    var userData = pool.userData, pricePerFullShare = pool.pricePerFullShare;\n                    if (!userData || !userData.userShares) {\n                        return 0;\n                    }\n                    return (0,helpers/* getCakeVaultEarnings */.UN)(account, userData.cakeAtLastUserAction, userData.userShares, pricePerFullShare, pool.earningTokenPrice, pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault ? pool.userData.currentPerformanceFee.plus(pool.userData.currentOverdueFee) : null).autoUsdToDisplay;\n                }\n                return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber();\n            }, \"desc\");\n        case \"totalStaked\":\n            {\n                return orderBy_default()(poolsToSort, function(pool) {\n                    var ref;\n                    var totalStaked = Number.NaN;\n                    if (pool.vaultKey) {\n                        var vault = pool;\n                        if (pool.stakingTokenPrice && vault.totalCakeInVault.isFinite()) {\n                            totalStaked = +(0,lib_esm.formatUnits)(bignumber/* BigNumber.from */.O$.from(vault.totalCakeInVault.toString()), pool.stakingToken.decimals) * pool.stakingTokenPrice;\n                        }\n                    } else if (((ref = pool.totalStaked) === null || ref === void 0 ? void 0 : ref.isFinite()) && pool.stakingTokenPrice) {\n                        totalStaked = +(0,lib_esm.formatUnits)(bignumber/* BigNumber.from */.O$.from(pool.totalStaked.toString()), pool.stakingToken.decimals) * pool.stakingTokenPrice;\n                    }\n                    return Number.isFinite(totalStaked) ? totalStaked : 0;\n                }, \"desc\");\n            }\n        case \"latest\":\n            return orderBy_default()(poolsToSort, function(pool) {\n                return Number(pool.sousId);\n            }, \"desc\");\n        default:\n            return poolsToSort;\n    }\n};\nvar POOL_START_BLOCK_THRESHOLD = 60 / config/* BSC_BLOCK_TIME */.hJ * 4;\nvar Pools = function() {\n    var router = (0,next_router.useRouter)();\n    var t = (0,src/* useTranslation */.$G)().t;\n    var account = (0,dist/* useWeb3React */.Ge)().account;\n    var ref = (0,hooks/* usePoolsWithVault */.f6)(), pools = ref.pools, userDataLoaded = ref.userDataLoaded;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserPoolStakedOnly */.tw)(), 2), stakedOnly = ref1[0], setStakedOnly = ref1[1];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserPoolsViewMode */.Yi)(), 2), viewMode = ref2[0], setViewMode = ref2[1];\n    var ref3 = (0,react.useState)(NUMBER_OF_POOLS_VISIBLE), numberOfPoolsVisible = ref3[0], setNumberOfPoolsVisible = ref3[1];\n    var ref4 = (0,useIntersectionObserver/* default */.Z)(), observerRef = ref4.observerRef, isIntersecting = ref4.isIntersecting;\n    var normalizedUrlSearch = (0,react.useMemo)(function() {\n        var ref;\n        return typeof (router === null || router === void 0 ? void 0 : (ref = router.query) === null || ref === void 0 ? void 0 : ref.search) === \"string\" ? router.query.search : \"\";\n    }, [\n        router.query\n    ]);\n    var ref5 = (0,react.useState)(\"\"), _searchQuery = ref5[0], setSearchQuery = ref5[1];\n    var searchQuery = normalizedUrlSearch && !_searchQuery ? normalizedUrlSearch : _searchQuery;\n    var ref6 = (0,react.useState)(\"hot\"), sortOption = ref6[0], setSortOption = ref6[1];\n    var chosenPoolsLength = (0,react.useRef)(0);\n    var initialBlock = (0,block_hooks/* useInitialBlock */.Xh)();\n    var ref7 = (0,react.useMemo)(function() {\n        return partition_default()(pools, function(pool) {\n            return pool.isFinished;\n        });\n    }, [\n        pools\n    ]), finishedPools = ref7[0], openPools = ref7[1];\n    var openPoolsWithStartBlockFilter = (0,react.useMemo)(function() {\n        return openPools.filter(function(pool) {\n            return initialBlock > 0 && pool.startBlock ? Number(pool.startBlock) < initialBlock + POOL_START_BLOCK_THRESHOLD : true;\n        });\n    }, [\n        initialBlock,\n        openPools\n    ]);\n    var stakedOnlyFinishedPools = (0,react.useMemo)(function() {\n        return finishedPools.filter(function(pool) {\n            if (pool.vaultKey) {\n                var vault = pool;\n                return vault.userData.userShares.gt(0);\n            }\n            return pool.userData && new (bignumber_default())(pool.userData.stakedBalance).isGreaterThan(0);\n        });\n    }, [\n        finishedPools\n    ]);\n    var stakedOnlyOpenPools = (0,react.useCallback)(function() {\n        return openPoolsWithStartBlockFilter.filter(function(pool) {\n            if (pool.vaultKey) {\n                var vault = pool;\n                return vault.userData.userShares.gt(0);\n            }\n            return pool.userData && new (bignumber_default())(pool.userData.stakedBalance).isGreaterThan(0);\n        });\n    }, [\n        openPoolsWithStartBlockFilter\n    ]);\n    var hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0;\n    (0,hooks/* usePoolsPageFetch */.l7)();\n    (0,react.useEffect)(function() {\n        if (isIntersecting) {\n            setNumberOfPoolsVisible(function(poolsCurrentlyVisible) {\n                if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n                    return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE;\n                }\n                return poolsCurrentlyVisible;\n            });\n        }\n    }, [\n        isIntersecting\n    ]);\n    var showFinishedPools = router.pathname.includes(\"history\");\n    var handleChangeSearchQuery = (0,react.useCallback)(function(event) {\n        return setSearchQuery(event.target.value);\n    }, []);\n    var handleSortOptionChange = (0,react.useCallback)(function(option) {\n        return setSortOption(option.value);\n    }, []);\n    var chosenPools;\n    if (showFinishedPools) {\n        chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools;\n    } else {\n        chosenPools = stakedOnly ? stakedOnlyOpenPools() : openPoolsWithStartBlockFilter;\n    }\n    chosenPools = (0,react.useMemo)(function() {\n        var sortedPools = sortPools(account, sortOption, pools, chosenPools).slice(0, numberOfPoolsVisible);\n        if (searchQuery) {\n            var lowercaseQuery = (0,latinise/* latinise */.b)(searchQuery.toLowerCase());\n            return sortedPools.filter(function(pool) {\n                return (0,latinise/* latinise */.b)(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery);\n            });\n        }\n        return sortedPools;\n    }, [\n        account,\n        sortOption,\n        pools,\n        chosenPools,\n        numberOfPoolsVisible,\n        searchQuery\n    ]);\n    chosenPoolsLength.current = chosenPools.length;\n    var cardLayout = /*#__PURE__*/ (0,jsx_runtime.jsx)(CardLayout, {\n        children: chosenPools.map(function(pool) {\n            return pool.vaultKey ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CakeVaultCard/* default */.Z, {\n                pool: pool,\n                showStakedOnly: stakedOnly\n            }, pool.vaultKey) : /*#__PURE__*/ (0,jsx_runtime.jsx)(components_PoolCard, {\n                pool: pool,\n                account: account\n            }, pool.sousId);\n        })\n    });\n    var tableLayout = /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolsTable_PoolsTable, {\n        urlSearch: normalizedUrlSearch,\n        pools: chosenPools,\n        account: account\n    });\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(PageHeader/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                    justifyContent: \"space-between\",\n                    flexDirection: [\n                        \"column\",\n                        null,\n                        null,\n                        \"row\"\n                    ],\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n                        flex: \"1\",\n                        flexDirection: \"column\",\n                        mr: [\n                            \"8px\",\n                            0\n                        ],\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                as: \"h1\",\n                                scale: \"xxl\",\n                                color: \"secondary\",\n                                mb: \"24px\",\n                                children: t(\"Syrup Pools\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                scale: \"md\",\n                                color: \"text\",\n                                children: t(\"Just stake some tokens to earn.\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                scale: \"md\",\n                                color: \"text\",\n                                children: t(\"High APR, low risk.\")\n                            })\n                        ]\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Page/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolControls, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(components_PoolTabButtons, {\n                                stakedOnly: stakedOnly,\n                                setStakedOnly: setStakedOnly,\n                                hasStakeInFinishedPools: hasStakeInFinishedPools,\n                                viewMode: viewMode,\n                                setViewMode: setViewMode\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(FilterContainer, {\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(LabelWrapper, {\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                fontSize: \"12px\",\n                                                bold: true,\n                                                color: \"textSubtle\",\n                                                textTransform: \"uppercase\",\n                                                children: t(\"Sort by\")\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(ControlStretch, {\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Select/* default */.Z, {\n                                                    options: [\n                                                        {\n                                                            label: t(\"Hot\"),\n                                                            value: \"hot\"\n                                                        },\n                                                        {\n                                                            label: t(\"APR\"),\n                                                            value: \"apr\"\n                                                        },\n                                                        {\n                                                            label: t(\"Earned\"),\n                                                            value: \"earned\"\n                                                        },\n                                                        {\n                                                            label: t(\"Total staked\"),\n                                                            value: \"totalStaked\"\n                                                        },\n                                                        {\n                                                            label: t(\"Latest\"),\n                                                            value: \"latest\"\n                                                        }, \n                                                    ],\n                                                    onOptionChange: handleSortOptionChange\n                                                })\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(LabelWrapper, {\n                                        style: {\n                                            marginLeft: 16\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                fontSize: \"12px\",\n                                                bold: true,\n                                                color: \"textSubtle\",\n                                                textTransform: \"uppercase\",\n                                                children: t(\"Search\")\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(SearchInput/* default */.Z, {\n                                                initialValue: searchQuery,\n                                                onChange: handleChangeSearchQuery,\n                                                placeholder: \"Search Pools\"\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    showFinishedPools && /*#__PURE__*/ (0,jsx_runtime.jsxs)(FinishedTextContainer, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: [\n                                    \"16px\",\n                                    null,\n                                    \"20px\"\n                                ],\n                                color: \"failure\",\n                                pr: \"4px\",\n                                children: t(\"Looking for v1 CAKE syrup pools?\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(FinishedTextLink, {\n                                href: \"/migration\",\n                                fontSize: [\n                                    \"16px\",\n                                    null,\n                                    \"20px\"\n                                ],\n                                color: \"failure\",\n                                children: [\n                                    t(\"Go to migration page\"),\n                                    \".\"\n                                ]\n                            })\n                        ]\n                    }),\n                    account && !userDataLoaded && stakedOnly && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                        justifyContent: \"center\",\n                        mb: \"4px\",\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Loading/* default */.Z, {})\n                    }),\n                    viewMode === actions/* ViewMode.CARD */.wO.CARD ? cardLayout : tableLayout,\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {\n                        ref: observerRef\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Image/* default */.Z, {\n                        mx: \"auto\",\n                        mt: \"12px\",\n                        src: \"/images/decorations/3d-syrup-bunnies.png\",\n                        alt: \"Pancake illustration\",\n                        width: 192,\n                        height: 184.5\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,react_dom.createPortal)(/*#__PURE__*/ (0,jsx_runtime.jsx)(ScrollToTopButtonV2/* default */.Z, {}), document.body)\n        ]\n    });\n};\n/* harmony default export */ var views_Pools = (Pools);\n\n\n/***/ }),\n\n/***/ 12752:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(96670);\n/* harmony import */ var _swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26297);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2784);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3411);\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  z-index: \",\n        \";\\n  background-color: \",\n        \";\\n  color: white;\\n  margin: 0;\\n  padding: 8px 0;\\n  position: absolute;\\n  right: \",\n        \";\\n  top: 0;\\n  text-align: center;\\n  transform: \",\n        \";\\n  transform-origin: top left;\\n  width: 96px;\\n\\n  &:before,\\n  &:after {\\n    background-color: \",\n        ';\\n    content: \"\";\\n    height: 100%;\\n    margin: 0 -1px; /* Removes tiny gap */\\n    position: absolute;\\n    top: 0;\\n    width: 100%;\\n  }\\n\\n  &:before {\\n    right: 100%;\\n  }\\n\\n  &:after {\\n    left: 100%;\\n  }\\n\\n  & > div {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    width: 96px;\\n  }\\n'\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\nvar StyledCardRibbon = styled_components__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-e1bdbf71-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.zIndices.ribbon;\n}, function(param) {\n    var _variantColor = param.variantColor, variantColor = _variantColor === void 0 ? \"secondary\" : _variantColor, theme = param.theme;\n    return theme.colors[variantColor];\n}, function(param) {\n    var ribbonPosition = param.ribbonPosition;\n    return ribbonPosition === \"right\" ? 0 : \"auto\";\n}, function(param) {\n    var ribbonPosition = param.ribbonPosition;\n    return ribbonPosition === \"right\" ? \"translateX(30%) translateY(0%) rotate(45deg)\" : \"translateX(0%) translateY(200%) rotate(-45deg)\";\n}, function(param) {\n    var _variantColor = param.variantColor, variantColor = _variantColor === void 0 ? \"secondary\" : _variantColor, theme = param.theme;\n    return theme.colors[variantColor];\n});\nvar CardRibbon = function(_param) {\n    var variantColor = _param.variantColor, text = _param.text, ribbonPosition = _param.ribbonPosition, props = (0,_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(_param, [\n        \"variantColor\",\n        \"text\",\n        \"ribbonPosition\"\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledCardRibbon, (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z)({\n        variantColor: variantColor,\n        ribbonPosition: ribbonPosition\n    }, props), {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            title: text,\n            children: text\n        })\n    }));\n};\nCardRibbon.defaultProps = {\n    // eslint-disable-next-line react/default-props-match-prop-types\n    ribbonPosition: \"right\"\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CardRibbon);\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","__unused_webpack_exports","__webpack_require__","partition","createAggregator","result","value","key","exports","__unused_webpack_module","__webpack_exports__","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_4__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__","state_user_actions__WEBPACK_IMPORTED_MODULE_3__","_templateObject","data","Z","Container","ZP","div","withConfig","componentId","param","theme","mediaQueries","sm","ToggleView","idPrefix","viewMode","onToggle","handleToggleCard","useCallback","wO","CARD","handleToggleTable","TABLE","jsxs","children","jsx","variant","scale","id","concat","onClick","color","_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_2__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","useIntersectionObserver","ref","useState","observerRefElement","setObserverRefElement","intersectionObserverRef","useRef","ref1","isIntersecting","setIsIntersecting","Y","window","IntersectionObserver","current","checkObserverIsIntersecting","entry","rootMargin","threshold","observe","disconnect","observerRef","d","latinise","Latinise","latin_map","τ","Τ","input","replace","x","views_Pools","_sliced_to_array","_tagged_template_literal","jsx_runtime","react","react_dom","styled_components_browser_esm","bignumber","lib_esm","bignumber_js_bignumber","bignumber_default","n","dist","Flex","Text","Box_Flex","Link","PageHeader","Heading","Select","SearchInput","Loading","Image","ScrollToTopButtonV2","orderBy","orderBy_default","partition_default","src","hooks","Page","types","user_hooks","actions","next_router","block_hooks","config","CardRibbon","Skeleton","CardBody","ConnectWalletButton","bigNumber","TokenImage","useTooltip","TooltipText","Apr","AprRow","pool","stakedBalance","_performanceFee","performanceFee","_showIcon","showIcon","t","$G","vaultKey","tooltipContent","placement","targetRef","tooltip","tooltipVisible","alignItems","justifyContent","StyledCard","CardFooter","PoolCardHeader","Box","constants_types","useProfileRequirement","Button","AutoRenew","useContract","useApprove","ApprovalAction","_isLoading","isLoading","sousId","stakingToken","earningToken","stakingTokenContract","X_","address","iB","symbol","handleApprove","pendingTx","Fragment","width","height","endIcon","spin","disabled","useModal","Balance","IconButton","Minus","Add","formatBalance","NotEnoughTokensModal","StakeModal","StakeAction","stakingTokenBalance","isBnbPool","isStaked","stakingTokenPrice","stakingLimit","isFinished","userData","stakedTokenBalance","mW","decimals","stakedTokenDollarBalance","multipliedBy","onPresentTokenRequired","tokenSymbol","onPresentStake","onPresentUnstake","ref2","isRemovingStake","ref3","reachStakingLimit","gt","gte","flexDirection","bold","fontSize","prefix","unit","mr","CollectModal","HarvestActions","earnings","earningTokenPrice","earningTokenBalance","formattedBalance","uf","earningTokenDollarBalance","fullBalance","NJ","hasEarnings","toNumber","onPresentCollect","earningsDollarValue","mb","display","ProfileRequirementWarning","InlineText","CardActions","poolCategory","profileRequirement","jh","BINANCE","allowance","HW","pendingReward","needsApproval","f","notMeetRequired","notMeetThreshold","textTransform","Q","PoolCard","account","totalStaked","accountHasStakedBalance","isCakePool","r","ribbon","variantColor","text","isStaking","e","title","asset","subTitle","q","primaryToken","secondaryToken","mt","CakeVaultCard","ButtonMenu","ButtonMenuItem","NextLink","NotificationDot","Toggle","PoolTabButtons_templateObject","_templateObject1","_templateObject2","ToggleWrapper","ViewControls","Wrapper","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","router","useRouter","isExact","pathname","viewModeToggle","liveOrFinishedSwitch","activeIndex","as","to","show","stakedOnlySwitch","checked","onChange","useMatchBreakpoints","NameCell","BaseCell","EarningsCell_templateObject","StyledCell","EarningsCell","isMobile","labelText","handleEarningsClick","event","stopPropagation","role","J","textAlign","userDataLoaded","undefined","AprCell","TotalStakedCell_templateObject","TotalStakedCell_StyledCell","TotalStakedCell","totalCakeInVault","eB","totalStakedBalance","useMemo","Timer","utils","helpers","EndsInCell_templateObject","EndsInCell_StyledCell","EndsInCell","startBlock","endBlock","currentBlock","je","zy","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","renderBlocks","flex","ml","external","href","C","isLoadingPublicData","showLoading","ActionPanel","AutoEarningsCell","AutoAprCell","StakedCell_templateObject","StakedCell_StyledCell","StakedCell","vaultData","_userData","userShares","_balance","balance","cakeAsBigNumber","cakeAsNumberBalance","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","om","CakeVault","locked","hasStaked","userDataLoading","CakeFlexibleSideVault","Number","isNaN","useDelayedUnmount","ExpandActionCell","ExpandRow_templateObject","StyledRow","ExpandRow","panel","initialActivity","hasSetInitialValue","isTablet","isDesktop","expanded","setExpanded","shouldRenderActionPanel","toggleExpanded","prev","useEffect","isFullLayout","PoolsTable_ExpandRow","memo","VaultPoolRow","isXs","isSm","isMd","isLg","isXl","isXxl","isXLargerScreen","YX","breakpoints","isLargerScreen","PoolRow","AI","PoolsTable_PoolRow","PoolsTable_templateObject","PoolsTable_templateObject1","StyledTable","radii","card","background","colors","StyledTableBorder","cardBorder","PoolsTable","pools","urlSearch","tableWrapperEl","map","toLowerCase","Pools_templateObject","Pools_templateObject1","Pools_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","FinishedTextContainer","md","FinishedTextLink","sortPools","sortOption","poolsToSort","apr","pricePerFullShare","UN","cakeAtLastUserAction","currentPerformanceFee","plus","currentOverdueFee","autoUsdToDisplay","times","NaN","vault","isFinite","formatUnits","O$","from","toString","POOL_START_BLOCK_THRESHOLD","hJ","chosenPools","Ge","f6","tw","Yi","numberOfPoolsVisible","setNumberOfPoolsVisible","ref4","normalizedUrlSearch","query","search","ref5","_searchQuery","setSearchQuery","searchQuery","ref6","setSortOption","chosenPoolsLength","initialBlock","Xh","ref7","finishedPools","openPools","openPoolsWithStartBlockFilter","filter","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","length","l7","poolsCurrentlyVisible","showFinishedPools","includes","handleChangeSearchQuery","target","handleSortOptionChange","option","sortedPools","slice","lowercaseQuery","b","cardLayout","showStakedOnly","tableLayout","options","label","onOptionChange","style","marginLeft","initialValue","placeholder","pr","mx","alt","createPortal","document","body","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__","_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_4__","styled_components__WEBPACK_IMPORTED_MODULE_3__","StyledCardRibbon","zIndices","_variantColor","ribbonPosition","_param","props","defaultProps"],"sourceRoot":""}