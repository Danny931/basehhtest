{"version":3,"file":"static/chunks/7553-35f0eaeda3743519.js","mappings":"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","sources":["webpack://_N_E/./src/utils/trades.ts","webpack://_N_E/./src/hooks/Trades.ts","webpack://_N_E/./src/utils/exchange.ts","webpack://_N_E/../../packages/utils/tryParseAmount.ts","webpack://_N_E/<anon>"],"sourcesContent":["import { Trade, Percent, Currency, TradeType } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from 'config/constants/exchange'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade<Currency, Currency, TradeType> | undefined | null,\n  tradeB: Trade<Currency, Currency, TradeType> | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.asFraction\n    .multiply(minimumDelta.add(ONE_HUNDRED_PERCENT))\n    .lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade, TradeType } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from 'config/constants/exchange'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens, useWarningTokens } from './Tokens'\n\nexport function useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(\n  currencyAmountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency,\n): Trade<Currency, Currency, TradeType> | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType> | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade<Currency, Currency, TradeType> | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(\n  currencyIn?: Currency,\n  currencyAmountOut?: CurrencyAmount<Currency>,\n): Trade<Currency, Currency, TradeType> | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType> | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function useIsTransactionWarning(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useWarningTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { Currency, CurrencyAmount, Fraction, JSBI, Percent, Trade, TradeType } from '@pancakeswap/sdk'\nimport IPancakeRouter02ABI from 'config/abi/IPancakeRouter02.json'\nimport { IPancakeRouter02 } from 'config/abi/types/IPancakeRouter02'\nimport {\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  BIPS_BASE,\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  INPUT_FRACTION_AFTER_FEE,\n  ONE_HUNDRED_PERCENT,\n  ROUTER_ADDRESS,\n} from 'config/constants/exchange'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { useContract } from 'hooks/useContract'\nimport { StableTrade } from 'views/Swap/StableSwap/hooks/useStableTradeExactIn'\nimport { Field } from '../state/swap/actions'\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), BIPS_BASE)\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 - slippage)), BIPS_BASE),\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 + slippage)), BIPS_BASE),\n  ]\n}\n\nexport function useRouterContract() {\n  const { chainId } = useActiveChainId()\n  return useContract<IPancakeRouter02>(ROUTER_ADDRESS[chainId], IPancakeRouter02ABI, true)\n}\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade<Currency, Currency, TradeType> | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount<Currency> | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    CurrencyAmount.fromRawAmount(\n      trade.inputAmount.currency,\n      realizedLPFee.multiply(trade.inputAmount.quotient).quotient,\n    )\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade<Currency, Currency, TradeType> | StableTrade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount<Currency> } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade<Currency, Currency, TradeType>, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, JSBI } from '@pancakeswap/swap-sdk-core'\n\n// try to parse a user entered amount for a given token\nfunction tryParseAmount<T extends Currency>(value?: string, currency?: T): CurrencyAmount<T> | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n\n    if (typedValueParsed !== '0') {\n      return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nexport default tryParseAmount\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[7553],{\n\n/***/ 19061:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"mP\": function() { return /* binding */ useIsTransactionUnsupported; },\n  \"uK\": function() { return /* binding */ useIsTransactionWarning; },\n  \"AU\": function() { return /* binding */ useTradeExactIn; },\n  \"in\": function() { return /* binding */ useTradeExactOut; }\n});\n\n// UNUSED EXPORTS: useAllCommonPairs\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_to_consumable_array.mjs + 2 modules\nvar _to_consumable_array = __webpack_require__(50930);\n// EXTERNAL MODULE: ./src/config/constants/exchange.ts\nvar exchange = __webpack_require__(92794);\n;// CONCATENATED MODULE: ./src/utils/trades.ts\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nfunction isTradeBetter(tradeA, tradeB) {\n    var minimumDelta = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : exchange/* ZERO_PERCENT */.fI;\n    if (tradeA && !tradeB) return false;\n    if (tradeB && !tradeA) return true;\n    if (!tradeA || !tradeB) return undefined;\n    if (tradeA.tradeType !== tradeB.tradeType || !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) || !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency)) {\n        throw new Error(\"Trades are not comparable\");\n    }\n    if (minimumDelta.equalTo(exchange/* ZERO_PERCENT */.fI)) {\n        return tradeA.executionPrice.lessThan(tradeB.executionPrice);\n    }\n    return tradeA.executionPrice.asFraction.multiply(minimumDelta.add(exchange/* ONE_HUNDRED_PERCENT */.yC)).lessThan(tradeB.executionPrice);\n}\n/* harmony default export */ var trades = ((/* unused pure expression or super */ null && (isTradeBetter)));\n\n// EXTERNAL MODULE: ../../packages/swap-sdk/dist/index.mjs + 1 modules\nvar dist = __webpack_require__(90902);\n// EXTERNAL MODULE: ../../node_modules/lodash/flatMap.js\nvar flatMap = __webpack_require__(35838);\nvar flatMap_default = /*#__PURE__*/__webpack_require__.n(flatMap);\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ./src/hooks/useActiveWeb3React.ts\nvar useActiveWeb3React = __webpack_require__(65342);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar hooks = __webpack_require__(72135);\n// EXTERNAL MODULE: ./src/hooks/usePairs.ts\nvar usePairs = __webpack_require__(82055);\n// EXTERNAL MODULE: ./src/utils/wrappedCurrency.ts\nvar wrappedCurrency = __webpack_require__(94250);\n// EXTERNAL MODULE: ./src/hooks/Tokens.ts\nvar Tokens = __webpack_require__(31196);\n;// CONCATENATED MODULE: ./src/hooks/Trades.ts\n/* eslint-disable no-param-reassign */ \n\n\n\n\n\n\n\n\n\n\n\nfunction useAllCommonPairs(currencyA, currencyB) {\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var ref = (0,_sliced_to_array/* default */.Z)(chainId ? [\n        (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyA, chainId),\n        (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyB, chainId)\n    ] : [\n        undefined,\n        undefined\n    ], 2), tokenA = ref[0], tokenB = ref[1];\n    var bases = (0,react.useMemo)(function() {\n        var ref, ref1;\n        if (!chainId) return [];\n        var _chainId;\n        var common = (_chainId = exchange/* BASES_TO_CHECK_TRADES_AGAINST */.lM[chainId]) !== null && _chainId !== void 0 ? _chainId : [];\n        var ref2;\n        var additionalA = tokenA ? (ref2 = (ref = exchange/* ADDITIONAL_BASES */.ck[chainId]) === null || ref === void 0 ? void 0 : ref[tokenA.address]) !== null && ref2 !== void 0 ? ref2 : [] : [];\n        var ref3;\n        var additionalB = tokenB ? (ref3 = (ref1 = exchange/* ADDITIONAL_BASES */.ck[chainId]) === null || ref1 === void 0 ? void 0 : ref1[tokenB.address]) !== null && ref3 !== void 0 ? ref3 : [] : [];\n        return (0,_to_consumable_array/* default */.Z)(common).concat((0,_to_consumable_array/* default */.Z)(additionalA), (0,_to_consumable_array/* default */.Z)(additionalB));\n    }, [\n        chainId,\n        tokenA,\n        tokenB\n    ]);\n    var basePairs = (0,react.useMemo)(function() {\n        return flatMap_default()(bases, function(base) {\n            return bases.map(function(otherBase) {\n                return [\n                    base,\n                    otherBase\n                ];\n            });\n        });\n    }, [\n        bases\n    ]);\n    var allPairCombinations = (0,react.useMemo)(function() {\n        return tokenA && tokenB ? [\n            // the direct pair\n            [\n                tokenA,\n                tokenB\n            ], \n        ].concat(// token A against all bases\n        (0,_to_consumable_array/* default */.Z)(bases.map(function(base) {\n            return [\n                tokenA,\n                base\n            ];\n        })), // token B against all bases\n        (0,_to_consumable_array/* default */.Z)(bases.map(function(base) {\n            return [\n                tokenB,\n                base\n            ];\n        })), // each base against all bases\n        (0,_to_consumable_array/* default */.Z)(basePairs)).filter(function(tokens) {\n            return Boolean(tokens[0] && tokens[1]);\n        }).filter(function(param) {\n            var _param = (0,_sliced_to_array/* default */.Z)(param, 2), t0 = _param[0], t1 = _param[1];\n            return t0.address !== t1.address;\n        }).filter(function(param) {\n            var _param = (0,_sliced_to_array/* default */.Z)(param, 2), tokenA_ = _param[0], tokenB_ = _param[1];\n            if (!chainId) return true;\n            var customBases = exchange/* CUSTOM_BASES */.IP[chainId];\n            var customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA_.address];\n            var customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB_.address];\n            if (!customBasesA && !customBasesB) return true;\n            if (customBasesA && !customBasesA.find(function(base) {\n                return tokenB_.equals(base);\n            })) return false;\n            if (customBasesB && !customBasesB.find(function(base) {\n                return tokenA_.equals(base);\n            })) return false;\n            return true;\n        }) : [];\n    }, [\n        tokenA,\n        tokenB,\n        bases,\n        basePairs,\n        chainId\n    ]);\n    var allPairs = (0,usePairs/* usePairs */.z$)(allPairCombinations);\n    // only pass along valid pairs, non-duplicated pairs\n    return (0,react.useMemo)(function() {\n        return Object.values(allPairs// filter out invalid pairs\n        .filter(function(result) {\n            return Boolean(result[0] === usePairs/* PairState.EXISTS */._G.EXISTS && result[1]);\n        })// filter out duplicated pairs\n        .reduce(function(memo, param) {\n            var _param = (0,_sliced_to_array/* default */.Z)(param, 2), curr = _param[1];\n            var _address;\n            memo[curr.liquidityToken.address] = (_address = memo[curr.liquidityToken.address]) !== null && _address !== void 0 ? _address : curr;\n            return memo;\n        }, {}));\n    }, [\n        allPairs\n    ]);\n}\nvar MAX_HOPS = 3;\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */ function useTradeExactIn(currencyAmountIn, currencyOut) {\n    var allowedPairs = useAllCommonPairs(currencyAmountIn === null || currencyAmountIn === void 0 ? void 0 : currencyAmountIn.currency, currencyOut);\n    var ref = (0,_sliced_to_array/* default */.Z)((0,hooks/* useUserSingleHopOnly */.RO)(), 1), singleHopOnly = ref[0];\n    return (0,react.useMemo)(function() {\n        if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n            if (singleHopOnly) {\n                var ref;\n                return (ref = dist/* Trade.bestTradeExactIn */.ho.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n                    maxHops: 1,\n                    maxNumResults: 1\n                })[0]) !== null && ref !== void 0 ? ref : null;\n            }\n            // search through trades with varying hops, find best trade out of them\n            var bestTradeSoFar = null;\n            for(var i = 1; i <= MAX_HOPS; i++){\n                var ref1;\n                var currentTrade = (ref1 = dist/* Trade.bestTradeExactIn */.ho.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n                    maxHops: i,\n                    maxNumResults: 1\n                })[0]) !== null && ref1 !== void 0 ? ref1 : null;\n                // if current trade is best yet, save it\n                if (isTradeBetter(bestTradeSoFar, currentTrade, exchange/* BETTER_TRADE_LESS_HOPS_THRESHOLD */.Ru)) {\n                    bestTradeSoFar = currentTrade;\n                }\n            }\n            return bestTradeSoFar;\n        }\n        return null;\n    }, [\n        allowedPairs,\n        currencyAmountIn,\n        currencyOut,\n        singleHopOnly\n    ]);\n}\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */ function useTradeExactOut(currencyIn, currencyAmountOut) {\n    var allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut === null || currencyAmountOut === void 0 ? void 0 : currencyAmountOut.currency);\n    var ref = (0,_sliced_to_array/* default */.Z)((0,hooks/* useUserSingleHopOnly */.RO)(), 1), singleHopOnly = ref[0];\n    return (0,react.useMemo)(function() {\n        if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n            if (singleHopOnly) {\n                var ref;\n                return (ref = dist/* Trade.bestTradeExactOut */.ho.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n                    maxHops: 1,\n                    maxNumResults: 1\n                })[0]) !== null && ref !== void 0 ? ref : null;\n            }\n            // search through trades with varying hops, find best trade out of them\n            var bestTradeSoFar = null;\n            for(var i = 1; i <= MAX_HOPS; i++){\n                var ref1;\n                var currentTrade = (ref1 = dist/* Trade.bestTradeExactOut */.ho.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n                    maxHops: i,\n                    maxNumResults: 1\n                })[0]) !== null && ref1 !== void 0 ? ref1 : null;\n                if (isTradeBetter(bestTradeSoFar, currentTrade, exchange/* BETTER_TRADE_LESS_HOPS_THRESHOLD */.Ru)) {\n                    bestTradeSoFar = currentTrade;\n                }\n            }\n            return bestTradeSoFar;\n        }\n        return null;\n    }, [\n        currencyIn,\n        currencyAmountOut,\n        allowedPairs,\n        singleHopOnly\n    ]);\n}\nfunction useIsTransactionUnsupported(currencyIn, currencyOut) {\n    var unsupportedTokens = (0,Tokens/* useUnsupportedTokens */.l6)();\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var tokenIn = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyIn, chainId);\n    var tokenOut = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyOut, chainId);\n    // if unsupported list loaded & either token on list, mark as unsupported\n    if (unsupportedTokens) {\n        if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n            return true;\n        }\n        if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction useIsTransactionWarning(currencyIn, currencyOut) {\n    var unsupportedTokens = (0,Tokens/* useWarningTokens */.zd)();\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var tokenIn = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyIn, chainId);\n    var tokenOut = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyOut, chainId);\n    // if unsupported list loaded & either token on list, mark as unsupported\n    if (unsupportedTokens) {\n        if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n            return true;\n        }\n        if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n/***/ }),\n\n/***/ 95707:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"P4\": function() { return /* binding */ basisPointsToPercent; },\n  \"uc\": function() { return /* binding */ calculateSlippageAmount; },\n  \"b5\": function() { return /* binding */ computeSlippageAdjustedAmounts; },\n  \"U7\": function() { return /* binding */ computeTradePriceBreakdown; },\n  \"Kh\": function() { return /* binding */ formatExecutionPrice; },\n  \"Ti\": function() { return /* binding */ useRouterContract; },\n  \"oX\": function() { return /* binding */ warningSeverity; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_define_property.mjs\nvar _define_property = __webpack_require__(47842);\n// EXTERNAL MODULE: ../../packages/swap-sdk/dist/index.mjs + 1 modules\nvar dist = __webpack_require__(90902);\n;// CONCATENATED MODULE: ./src/config/abi/IPancakeRouter02.json\nvar IPancakeRouter02_namespaceObject = JSON.parse('[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]');\n// EXTERNAL MODULE: ./src/config/constants/exchange.ts\nvar exchange = __webpack_require__(92794);\n// EXTERNAL MODULE: ./src/hooks/useActiveChainId.ts\nvar useActiveChainId = __webpack_require__(76166);\n// EXTERNAL MODULE: ./src/hooks/useContract.ts + 1 modules\nvar useContract = __webpack_require__(76269);\n// EXTERNAL MODULE: ./src/state/swap/actions.ts\nvar actions = __webpack_require__(57246);\n;// CONCATENATED MODULE: ./src/utils/exchange.ts\n\n\n\n\n\n\n\n// converts a basis points value to a sdk percent\nfunction basisPointsToPercent(num) {\n    return new dist/* Percent */.gG(dist/* JSBI.BigInt */.QA.BigInt(num), exchange/* BIPS_BASE */.PM);\n}\nfunction calculateSlippageAmount(value, slippage) {\n    if (slippage < 0 || slippage > 10000) {\n        throw Error(\"Unexpected slippage value: \".concat(slippage));\n    }\n    return [\n        dist/* JSBI.divide */.QA.divide(dist/* JSBI.multiply */.QA.multiply(value.quotient, dist/* JSBI.BigInt */.QA.BigInt(10000 - slippage)), exchange/* BIPS_BASE */.PM),\n        dist/* JSBI.divide */.QA.divide(dist/* JSBI.multiply */.QA.multiply(value.quotient, dist/* JSBI.BigInt */.QA.BigInt(10000 + slippage)), exchange/* BIPS_BASE */.PM), \n    ];\n}\nfunction useRouterContract() {\n    var chainId = (0,useActiveChainId/* useActiveChainId */.g)().chainId;\n    return (0,useContract/* useContract */.cq)(exchange/* ROUTER_ADDRESS */.bR[chainId], IPancakeRouter02_namespaceObject, true);\n}\n// computes price breakdown for the trade\nfunction computeTradePriceBreakdown(trade) {\n    // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n    // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n    var realizedLPFee = !trade ? undefined : exchange/* ONE_HUNDRED_PERCENT.subtract */.yC.subtract(trade.route.pairs.reduce(function(currentFee) {\n        return currentFee.multiply(exchange/* INPUT_FRACTION_AFTER_FEE */.Zw);\n    }, exchange/* ONE_HUNDRED_PERCENT */.yC));\n    // remove lp fees from price impact\n    var priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined;\n    // the x*y=k impact\n    var priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction ? new dist/* Percent */.gG(priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.numerator, priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.denominator) : undefined;\n    // the amount of the input that accrues to LPs\n    var realizedLPFeeAmount = realizedLPFee && trade && dist/* CurrencyAmount.fromRawAmount */.ih.fromRawAmount(trade.inputAmount.currency, realizedLPFee.multiply(trade.inputAmount.quotient).quotient);\n    return {\n        priceImpactWithoutFee: priceImpactWithoutFeePercent,\n        realizedLPFee: realizedLPFeeAmount\n    };\n}\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nfunction computeSlippageAdjustedAmounts(trade, allowedSlippage) {\n    var pct = basisPointsToPercent(allowedSlippage);\n    var _obj;\n    return _obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.INPUT */.gN.INPUT, trade === null || trade === void 0 ? void 0 : trade.maximumAmountIn(pct)), (0,_define_property/* default */.Z)(_obj, actions/* Field.OUTPUT */.gN.OUTPUT, trade === null || trade === void 0 ? void 0 : trade.minimumAmountOut(pct)), _obj;\n}\nfunction warningSeverity(priceImpact) {\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* BLOCKED_PRICE_IMPACT_NON_EXPERT */.lN))) return 4;\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* ALLOWED_PRICE_IMPACT_HIGH */.Uf))) return 3;\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* ALLOWED_PRICE_IMPACT_MEDIUM */.p9))) return 2;\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* ALLOWED_PRICE_IMPACT_LOW */.Bz))) return 1;\n    return 0;\n}\nfunction formatExecutionPrice(trade, inverted) {\n    if (!trade) {\n        return \"\";\n    }\n    return inverted ? \"\".concat(trade.executionPrice.invert().toSignificant(6), \" \").concat(trade.inputAmount.currency.symbol, \" / \").concat(trade.outputAmount.currency.symbol) : \"\".concat(trade.executionPrice.toSignificant(6), \" \").concat(trade.outputAmount.currency.symbol, \" / \").concat(trade.inputAmount.currency.symbol);\n}\n\n\n/***/ }),\n\n/***/ 27757:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _ethersproject_units__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59656);\n/* harmony import */ var _pancakeswap_swap_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13320);\n\n\n// try to parse a user entered amount for a given token\nfunction tryParseAmount(value, currency) {\n    if (!value || !currency) {\n        return undefined;\n    }\n    try {\n        var typedValueParsed = (0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_1__.parseUnits)(value, currency.decimals).toString();\n        if (typedValueParsed !== \"0\") {\n            return _pancakeswap_swap_sdk_core__WEBPACK_IMPORTED_MODULE_0__/* .CurrencyAmount.fromRawAmount */ .ih.fromRawAmount(currency, _pancakeswap_swap_sdk_core__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(typedValueParsed));\n        }\n    } catch (error) {\n        // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n        console.debug('Failed to parse input amount: \"'.concat(value, '\"'), error);\n    }\n    // necessary for all paths to return a value\n    return undefined;\n}\n/* harmony default export */ __webpack_exports__[\"Z\"] = (tryParseAmount);\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","useIsTransactionUnsupported","useIsTransactionWarning","useTradeExactIn","useTradeExactOut","_sliced_to_array","_to_consumable_array","exchange","isTradeBetter","tradeA","tradeB","minimumDelta","arguments","length","fI","tradeType","inputAmount","currency","equals","outputAmount","equalTo","executionPrice","lessThan","asFraction","multiply","add","yC","dist","flatMap","flatMap_default","n","react","useActiveWeb3React","hooks","usePairs","wrappedCurrency","Tokens","useAllCommonPairs","currencyA","currencyB","chainId","Z","ref","pu","undefined","tokenA","tokenB","bases","useMemo","ref1","_chainId","ref2","ref3","common","lM","additionalA","ck","address","additionalB","concat","basePairs","base","map","otherBase","allPairCombinations","filter","tokens","Boolean","param","_param","t0","t1","tokenA_","tokenB_","customBases","IP","customBasesA","customBasesB","find","allPairs","z$","Object","values","result","_G","EXISTS","reduce","memo","_address","curr","liquidityToken","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","RO","ho","bestTradeExactIn","maxHops","maxNumResults","bestTradeSoFar","i","currentTrade","Ru","currencyIn","currencyAmountOut","bestTradeExactOut","unsupportedTokens","l6","tokenIn","tokenOut","keys","includes","zd","basisPointsToPercent","calculateSlippageAmount","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","useRouterContract","warningSeverity","_define_property","IPancakeRouter02_namespaceObject","JSON","parse","useActiveChainId","useContract","actions","num","gG","QA","BigInt","PM","value","slippage","Error","divide","quotient","g","cq","bR","trade","realizedLPFeeAmount","realizedLPFee","subtract","route","pairs","currentFee","Zw","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFeePercent","numerator","denominator","priceImpactWithoutFee","ih","fromRawAmount","allowedSlippage","_obj","pct","gN","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","lN","Uf","p9","Bz","inverted","invert","toSignificant","symbol","_ethersproject_units__WEBPACK_IMPORTED_MODULE_1__","_pancakeswap_swap_sdk_core__WEBPACK_IMPORTED_MODULE_0__","typedValueParsed","parseUnits","decimals","toString","error","console","debug"],"sourceRoot":""}