{"version":3,"file":"static/chunks/pages/add/[[...currency]]-ccd98b2b948c8431.js","mappings":"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","sources":["webpack://_N_E/?1f45","webpack://_N_E/./src/components/UnsupportedCurrencyFooter.tsx","webpack://_N_E/./src/views/AddLiquidity/PoolPriceBar.tsx","webpack://_N_E/./src/views/AddLiquidity/components/common.tsx","webpack://_N_E/./src/views/AddLiquidity/components/ConfirmAddLiquidityModal.tsx","webpack://_N_E/./src/views/AddLiquidity/components/ConfirmZapInModal.tsx","webpack://_N_E/./src/components/CurrencySelect/index.tsx","webpack://_N_E/./src/views/AddLiquidity/useCurrencySelectRoute.ts","webpack://_N_E/./src/views/AddLiquidity/ChoosePair.tsx","webpack://_N_E/./src/views/AddLiquidity/index.tsx","webpack://_N_E/./src/views/AddLiquidity/AddStableLiquidity/index.tsx","webpack://_N_E/./src/pages/add/[[...currency]].tsx","webpack://_N_E/./src/utils/maxAmountSpend.ts","webpack://_N_E/../../packages/uikit/src/components/Card/CardFooter.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ArrowDropDown.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/add/[[...currency]]\",\n      function () {\n        return require(\"private-next-pages/add/[[...currency]].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/add/[[...currency]]\"])\n      });\n    }\n  ","import { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBlockExploreLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<React.PropsWithChildren<Props>> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title={t('Unsupported Assets')} onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link\n                    external\n                    small\n                    color=\"primaryDark\"\n                    href={getBlockExploreLink(token.address, 'address', chainId)}\n                  >\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            {t(\n              'Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.',\n            )}\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const { t } = useTranslation()\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        {t('Read more about unsupported assets')}\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { ONE_BIPS } from 'config/constants/exchange'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price<Currency, Currency>\n}) {\n  const { t } = useTranslation()\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React from 'react'\nimport { Currency, Fraction, Percent, CurrencyAmount, Token } from '@pancakeswap/sdk'\nimport { Text, useTooltip, TooltipText, Box, Flex, Svg, SvgProps } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport { Field } from 'state/burn/actions'\nimport { DoubleCurrencyLogo, CurrencyLogo } from 'components/Logo'\nimport { GreyCard } from 'components/Card'\nimport { getLPSymbol } from 'utils/getLpSymbol'\n\nconst Dot = styled(Box)<{ scale?: 'sm' | 'md' }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n`\n\nconst CircleSvg = ({ percent = 1, ...props }: SvgProps & { percent?: number }) => (\n  <Svg width=\"60px\" height=\"60px\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <g filter=\"url(#filter0_i_1147_113741)\">\n      <circle r=\"10\" cx=\"10\" cy=\"10\" fill=\"#7645D9\" />\n      <circle\n        r=\"5\"\n        cx=\"10\"\n        cy=\"10\"\n        fill=\"transparent\"\n        stroke=\"#1FC7D4\"\n        strokeWidth=\"10\"\n        strokeDasharray={`calc(${percent * 100}px * 31.4 / 100) 31.4`}\n        transform=\"rotate(-90) translate(-20)\"\n      />\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_i_1147_113741\"\n        x={0}\n        y={0}\n        width={60}\n        height={60}\n        filterUnits=\"userSpaceOnUse\"\n        colorInterpolationFilters=\"sRGB\"\n      >\n        <feFlood floodOpacity={0} result=\"BackgroundImageFix\" />\n        <feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\n        <feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\n        <feOffset dy={-2} />\n        <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2={-1} k3={1} />\n        <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\" />\n        <feBlend in2=\"shape\" result=\"effect1_innerShadow_1147_113741\" />\n      </filter>\n    </defs>\n  </Svg>\n)\n\nconst Subtitle: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return (\n    <Text fontSize=\"12px\" textTransform=\"uppercase\" bold color=\"secondary\">\n      {children}\n    </Text>\n  )\n}\n\nexport const PairDistribution = ({\n  title,\n  percent,\n  currencyA,\n  currencyB,\n  currencyAValue,\n  currencyBValue,\n  tooltipTargetRef,\n}: {\n  title: React.ReactNode\n  percent?: number\n  currencyA?: Currency\n  currencyB?: Currency\n  currencyAValue?: string\n  currencyBValue?: string\n  tooltipTargetRef?: any\n}) => {\n  return (\n    <AutoColumn gap=\"8px\">\n      <Subtitle>{title}</Subtitle>\n      <Flex>\n        {typeof percent !== 'undefined' && (\n          <div ref={tooltipTargetRef}>\n            <CircleSvg percent={percent} mr=\"34px\" />\n          </div>\n        )}\n        <AutoColumn style={{ width: '100%' }}>\n          {currencyA && (\n            <RowBetween>\n              <AutoRow gap=\"4px\">\n                <Dot bg=\"primary\" />\n                <CurrencyLogo currency={currencyA} />\n                <Text>{currencyA?.symbol}</Text>\n              </AutoRow>\n              <Text>{currencyAValue}</Text>\n            </RowBetween>\n          )}\n\n          {currencyB && (\n            <RowBetween>\n              <AutoRow gap=\"4px\">\n                <Dot bg=\"secondary\" />\n                <CurrencyLogo currency={currencyB} />\n                <Text>{currencyB?.symbol}</Text>\n              </AutoRow>\n              <Text>{currencyBValue}</Text>\n            </RowBetween>\n          )}\n        </AutoColumn>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\ninterface AddLiquidityModalHeaderProps {\n  currencies: { [field in Field]?: Currency }\n  poolTokenPercentage?: Percent\n  liquidityMinted: CurrencyAmount<Token>\n  price: Fraction\n  allowedSlippage: number\n  children: React.ReactNode\n  noLiquidity?: boolean\n}\n\nexport const AddLiquidityModalHeader = ({\n  currencies,\n  poolTokenPercentage,\n  liquidityMinted,\n  price,\n  allowedSlippage,\n  noLiquidity,\n  children,\n}: AddLiquidityModalHeaderProps) => {\n  const { t } = useTranslation()\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\n    t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n      slippage: allowedSlippage / 100,\n    }),\n    { placement: 'auto' },\n  )\n\n  return (\n    <AutoColumn gap=\"24px\">\n      <AutoColumn gap=\"8px\">\n        <Subtitle>{t('You will receive')}</Subtitle>\n        <GreyCard>\n          <RowBetween>\n            <AutoRow gap=\"4px\">\n              <DoubleCurrencyLogo\n                currency0={currencies[Field.CURRENCY_A]}\n                currency1={currencies[Field.CURRENCY_B]}\n                size={24}\n              />\n              <Text color=\"textSubtle\">\n                {currencies[Field.CURRENCY_A]?.symbol &&\n                  currencies[Field.CURRENCY_B]?.symbol &&\n                  getLPSymbol(\n                    currencies[Field.CURRENCY_A]?.symbol,\n                    currencies[Field.CURRENCY_B]?.symbol,\n                    currencies[Field.CURRENCY_A]?.chainId,\n                  )}\n              </Text>\n            </AutoRow>\n            <Text ml=\"8px\">{liquidityMinted?.toSignificant(6)}</Text>\n          </RowBetween>\n        </GreyCard>\n      </AutoColumn>\n      <RowBetween>\n        <Subtitle>{t('Your pool share')}</Subtitle>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <AutoColumn gap=\"8px\">{children}</AutoColumn>\n      <AutoColumn>\n        <RowBetween>\n          <Subtitle>{t('Rates')}</Subtitle>\n          <Text>\n            {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n              currencies[Field.CURRENCY_B]?.symbol\n            }`}\n          </Text>\n        </RowBetween>\n        <RowBetween style={{ justifyContent: 'flex-end' }}>\n          <Text>\n            {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            }`}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n      {!noLiquidity && (\n        <RowBetween>\n          <Subtitle>{t('Slippage Tolerance')}</Subtitle>\n          <TooltipText ref={targetRef}>{allowedSlippage / 100}%</TooltipText>\n          {tooltipVisible && tooltip}\n        </RowBetween>\n      )}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Currency, CurrencyAmount, Fraction, Percent, Token } from '@pancakeswap/sdk'\nimport { InjectedModalProps, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport { Field } from 'state/burn/actions'\nimport _toNumber from 'lodash/toNumber'\nimport { AddLiquidityModalHeader, PairDistribution } from './common'\n\ninterface ConfirmAddLiquidityModalProps {\n  title: string\n  customOnDismiss: () => void\n  attemptingTxn: boolean\n  hash: string\n  pendingText: string\n  currencies: { [field in Field]?: Currency }\n  noLiquidity: boolean\n  allowedSlippage: number\n  liquidityErrorMessage: string\n  price: Fraction\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  onAdd: () => void\n  poolTokenPercentage: Percent\n  liquidityMinted: CurrencyAmount<Token>\n  currencyToAdd: Token\n  isStable?: boolean\n}\n\nconst ConfirmAddLiquidityModal: React.FC<\n  React.PropsWithChildren<InjectedModalProps & ConfirmAddLiquidityModalProps>\n> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  price,\n  currencies,\n  noLiquidity,\n  allowedSlippage,\n  parsedAmounts,\n  liquidityErrorMessage,\n  onAdd,\n  poolTokenPercentage,\n  liquidityMinted,\n  currencyToAdd,\n  isStable,\n}) => {\n  const { t } = useTranslation()\n\n  let percent = 0.5\n\n  // Calculate distribution percentage for display\n  if (isStable && parsedAmounts[Field.CURRENCY_A] && parsedAmounts[Field.CURRENCY_B]) {\n    const amountCurrencyA = _toNumber(parsedAmounts[Field.CURRENCY_A].toSignificant(6))\n    const amountCurrencyB = _toNumber(parsedAmounts[Field.CURRENCY_B].toSignificant(6))\n\n    percent = amountCurrencyA / (amountCurrencyA + amountCurrencyB)\n  }\n\n  const modalHeader = useCallback(() => {\n    return (\n      <AddLiquidityModalHeader\n        allowedSlippage={allowedSlippage}\n        currencies={currencies}\n        liquidityMinted={liquidityMinted}\n        poolTokenPercentage={poolTokenPercentage}\n        price={price}\n        noLiquidity={noLiquidity}\n      >\n        <PairDistribution\n          title={t('Input')}\n          percent={percent}\n          currencyA={currencies[Field.CURRENCY_A]}\n          currencyAValue={parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n          currencyB={currencies[Field.CURRENCY_B]}\n          currencyBValue={parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n        />\n      </AddLiquidityModalHeader>\n    )\n  }, [allowedSlippage, percent, currencies, liquidityMinted, noLiquidity, parsedAmounts, poolTokenPercentage, price, t])\n\n  const modalBottom = useCallback(() => {\n    return (\n      <Button width=\"100%\" onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    )\n  }, [noLiquidity, onAdd, t])\n\n  const confirmationContent = useCallback(\n    () =>\n      liquidityErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={liquidityErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, liquidityErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      minWidth={['100%', , '420px']}\n      title={title}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      currencyToAdd={currencyToAdd}\n      hash={hash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n\nexport default ConfirmAddLiquidityModal\n","import React, { useCallback, useMemo } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Currency, CurrencyAmount, Fraction, JSBI, Pair, Percent, Token } from '@pancakeswap/sdk'\nimport { InjectedModalProps, Text, ArrowDownIcon, Button, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { Field } from 'state/burn/actions'\nimport { CurrencyLogo } from 'components/Logo'\nimport useTotalSupply from 'hooks/useTotalSupply'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairDistribution, AddLiquidityModalHeader } from './common'\nimport { ZapErrorMessages } from './ZapErrorMessage'\n\ninterface ConfirmZapInModalProps {\n  title: string\n  customOnDismiss: () => void\n  attemptingTxn: boolean\n  hash: string\n  pendingText: string\n  currencies: { [field in Field]?: Currency }\n  allowedSlippage: number\n  liquidityErrorMessage: string\n  price: Fraction\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  onAdd: () => void\n  poolTokenPercentage: Percent\n  liquidityMinted: CurrencyAmount<Token>\n  pair: Pair\n  rebalancing?: boolean\n  zapSwapTokenField: Field\n  zapSwapOutTokenField: Field\n  zapInEstimated: {\n    swapAmountIn: BigNumber\n    swapAmountOut: BigNumber\n    isToken0Sold: boolean\n  }\n  zapMode: boolean\n  toggleZapMode: (value: boolean) => void\n}\n\nconst clamp = (num: number, min: number, max: number) => Math.min(Math.max(num, min), max)\n\nconst ConfirmZapInModal: React.FC<React.PropsWithChildren<InjectedModalProps & ConfirmZapInModalProps>> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  price,\n  currencies,\n  zapSwapTokenField,\n  zapSwapOutTokenField,\n  allowedSlippage,\n  parsedAmounts,\n  liquidityErrorMessage,\n  onAdd,\n  poolTokenPercentage,\n  liquidityMinted,\n  pair,\n  zapInEstimated,\n  rebalancing,\n  zapMode,\n  toggleZapMode,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n  const swapInCurrencyAmount = parsedAmounts[zapSwapTokenField]\n  const swapOutCurrencyAmount = parsedAmounts[zapSwapOutTokenField]\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    swapInCurrencyAmount && !swapOutCurrencyAmount\n      ? t('There is no %token1% input. Half of %token0% input is converted into %token1% to add liquidity.', {\n          token0: currencies[zapSwapTokenField]?.symbol,\n          token1: currencies[zapSwapOutTokenField]?.symbol,\n        })\n      : t('There is not enough %token1% input to match 50/50. Some of %token0% will be converted to %token1%', {\n          token0: currencies[zapSwapTokenField]?.symbol,\n          token1: currencies[zapSwapOutTokenField]?.symbol,\n        }),\n    {\n      placement: 'auto-start',\n    },\n  )\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!liquidityMinted &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, liquidityMinted.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, liquidityMinted, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, liquidityMinted, false),\n        ]\n      : [undefined, undefined]\n\n  const swapInTokenAmount = useMemo(\n    () =>\n      zapInEstimated &&\n      CurrencyAmount.fromRawAmount(\n        wrappedCurrency(currencies[zapSwapTokenField], chainId),\n        zapInEstimated.swapAmountIn.toString(),\n      ),\n    [chainId, currencies, zapInEstimated, zapSwapTokenField],\n  )\n\n  const swapOutTokenAmount = useMemo(\n    () =>\n      zapInEstimated?.swapAmountOut &&\n      CurrencyAmount.fromRawAmount(\n        wrappedCurrency(currencies[zapSwapOutTokenField], chainId),\n        zapInEstimated.swapAmountOut.toString(),\n      ),\n    [chainId, currencies, zapInEstimated?.swapAmountOut, zapSwapOutTokenField],\n  )\n\n  const inputPercent = useMemo(() => {\n    return swapInCurrencyAmount && swapOutCurrencyAmount\n      ? clamp(\n          // TODO: avoid use number\n          +swapInCurrencyAmount.toExact() /\n            +swapOutCurrencyAmount.toExact() /\n            (+pair.priceOf(swapOutCurrencyAmount.currency.wrapped).toSignificant() +\n              +swapInCurrencyAmount.toExact() / +swapOutCurrencyAmount.toExact()),\n          0.05,\n          0.95,\n        )\n      : swapInCurrencyAmount && !swapOutCurrencyAmount\n      ? 1\n      : undefined\n  }, [pair, swapInCurrencyAmount, swapOutCurrencyAmount])\n\n  const tokenDeposited = useMemo(\n    () => ({\n      [zapSwapTokenField]:\n        swapInTokenAmount?.currency && pair?.token0\n          ? pair.token0.equals(swapInTokenAmount.currency)\n            ? token0Deposited\n            : token1Deposited\n          : undefined,\n      [zapSwapOutTokenField]:\n        swapOutTokenAmount?.currency && pair?.token1\n          ? pair.token1.equals(swapOutTokenAmount.currency)\n            ? token1Deposited\n            : token0Deposited\n          : undefined,\n    }),\n    [\n      pair.token0,\n      pair.token1,\n      swapInTokenAmount?.currency,\n      swapOutTokenAmount?.currency,\n      token0Deposited,\n      token1Deposited,\n      zapSwapOutTokenField,\n      zapSwapTokenField,\n    ],\n  )\n\n  const modalHeader = useCallback(() => {\n    return (\n      <AddLiquidityModalHeader\n        allowedSlippage={allowedSlippage}\n        currencies={currencies}\n        liquidityMinted={liquidityMinted}\n        poolTokenPercentage={poolTokenPercentage}\n        price={price}\n      >\n        <PairDistribution\n          title={t('Input')}\n          percent={inputPercent}\n          currencyA={swapInCurrencyAmount ? currencies[zapSwapTokenField] : undefined}\n          currencyAValue={swapInCurrencyAmount?.toSignificant(6)}\n          currencyB={swapOutCurrencyAmount ? currencies[zapSwapOutTokenField] : undefined}\n          currencyBValue={swapOutCurrencyAmount?.toSignificant(6)}\n        />\n        {swapOutTokenAmount && swapInTokenAmount && currencies[zapSwapTokenField] && currencies[zapSwapOutTokenField] && (\n          <AutoColumn justify=\"center\" gap=\"16px\">\n            <ArrowDownIcon color=\"textSubtle\" />\n            <AutoRow gap=\"6px\" justify=\"center\">\n              <RowFixed gap=\"2px\">\n                <Text>{swapInTokenAmount?.toSignificant(6)}</Text>\n                <CurrencyLogo currency={currencies[zapSwapTokenField]} />\n                <Text>{currencies[zapSwapTokenField].symbol}</Text>\n              </RowFixed>\n              <Text>{t('to')}</Text>\n              <RowFixed gap=\"2px\">\n                <Text>{swapOutTokenAmount?.toSignificant(6)}</Text>\n                <CurrencyLogo currency={currencies[zapSwapOutTokenField]} />\n                <Text>{currencies[zapSwapOutTokenField].symbol}</Text>\n              </RowFixed>\n            </AutoRow>\n            <ArrowDownIcon color=\"textSubtle\" />\n          </AutoColumn>\n        )}\n        <AutoColumn gap=\"4px\">\n          {tooltipVisible && tooltip}\n          <PairDistribution\n            tooltipTargetRef={targetRef}\n            title={t('Pooled')}\n            percent={0.5}\n            currencyA={currencies[zapSwapTokenField]}\n            currencyAValue={tokenDeposited?.[zapSwapTokenField]?.toSignificant(6)}\n            currencyB={currencies[zapSwapOutTokenField]}\n            currencyBValue={tokenDeposited?.[zapSwapOutTokenField]?.toSignificant(6)}\n          />\n        </AutoColumn>\n      </AddLiquidityModalHeader>\n    )\n  }, [\n    allowedSlippage,\n    currencies,\n    liquidityMinted,\n    poolTokenPercentage,\n    price,\n    t,\n    inputPercent,\n    swapInCurrencyAmount,\n    zapSwapTokenField,\n    swapOutCurrencyAmount,\n    zapSwapOutTokenField,\n    swapOutTokenAmount,\n    swapInTokenAmount,\n    tooltip,\n    tooltipVisible,\n    targetRef,\n    tokenDeposited,\n  ])\n\n  const modalBottom = useCallback(() => {\n    return (\n      <Button width=\"100%\" onClick={onAdd} mt=\"20px\">\n        {t('Confirm Supply')}\n      </Button>\n    )\n  }, [onAdd, t])\n\n  const confirmationContent = useCallback(\n    () =>\n      liquidityErrorMessage ? (\n        <>\n          <ZapErrorMessages\n            isSingleToken={!rebalancing}\n            zapMode={zapMode}\n            toggleZapMode={toggleZapMode}\n            onModalDismiss={onDismiss}\n          />\n          <TransactionErrorContent onDismiss={onDismiss} message={liquidityErrorMessage} />\n        </>\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [liquidityErrorMessage, rebalancing, zapMode, toggleZapMode, onDismiss, modalHeader, modalBottom],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      minWidth={['100%', , '420px']}\n      title={title}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      currencyToAdd={pair?.liquidityToken}\n      hash={hash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n\nexport default ConfirmZapInModal\n","import styled from 'styled-components'\nimport { ArrowDropDownIcon, Box, Button, Text, useModal, Flex, BoxProps } from '@pancakeswap/uikit'\nimport CurrencySearchModal, { CurrencySearchModalProps } from 'components/SearchModal/CurrencySearchModal'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport useBUSDPrice from 'hooks/useBUSDPrice'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { CurrencyLogo } from '../Logo'\nimport { RowBetween, AutoRow } from '../Layout/Row'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownContainer = styled(Button)`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  .down-icon {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\ninterface CurrencySelectProps extends CurrencySearchModalProps, BoxProps {\n  hideBalance?: boolean\n}\n\nexport const CurrencySelect = ({\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases,\n  commonBasesType,\n  hideBalance,\n  ...props\n}: CurrencySelectProps) => {\n  const { account } = useWeb3React()\n\n  const selectedCurrencyBalance = useCurrencyBalance(\n    account ?? undefined,\n    !hideBalance && selectedCurrency ? selectedCurrency : undefined,\n  )\n\n  const { t } = useTranslation()\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={selectedCurrency}\n      otherSelectedCurrency={otherSelectedCurrency}\n      showCommonBases={showCommonBases}\n      commonBasesType={commonBasesType}\n    />,\n  )\n\n  const price = useBUSDPrice(selectedCurrencyBalance && selectedCurrency ? selectedCurrency : undefined)\n  const quoted = selectedCurrencyBalance && price?.quote(selectedCurrencyBalance)\n\n  return (\n    <Box width=\"100%\" {...props}>\n      <DropDownContainer p={0} onClick={onPresentCurrencyModal}>\n        <DropDownHeader>\n          <Text id=\"pair\" color={!selectedCurrency ? 'text' : undefined}>\n            {!selectedCurrency ? (\n              <>{t('Select')}</>\n            ) : (\n              <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                <CurrencyLogo currency={selectedCurrency} size=\"24px\" style={{ marginRight: '8px' }} />\n                <Text id=\"pair\" bold>\n                  {selectedCurrency && selectedCurrency.symbol && selectedCurrency.symbol.length > 20\n                    ? `${selectedCurrency.symbol.slice(0, 4)}...${selectedCurrency.symbol.slice(\n                        selectedCurrency.symbol.length - 5,\n                        selectedCurrency.symbol.length,\n                      )}`\n                    : selectedCurrency?.symbol}\n                </Text>\n              </Flex>\n            )}\n          </Text>\n        </DropDownHeader>\n        <ArrowDropDownIcon color=\"text\" className=\"down-icon\" />\n      </DropDownContainer>\n      {account && !!selectedCurrency && !hideBalance && (\n        <Box>\n          <AutoRow justify=\"space-between\" gap=\"2px\">\n            <Text color=\"textSubtle\" fontSize=\"12px\">\n              {t('Balance')}:\n            </Text>\n            <Text fontSize=\"12px\">{selectedCurrencyBalance?.toSignificant(6) ?? t('Loading')}</Text>\n          </AutoRow>\n          <RowBetween>\n            <div />\n            {Number.isFinite(+quoted?.toExact()) && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                ~${formatNumber(+quoted.toExact())}\n              </Text>\n            )}\n          </RowBetween>\n        </Box>\n      )}\n    </Box>\n  )\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { useRouter } from 'next/router'\nimport { useCallback } from 'react'\nimport currencyId from 'utils/currencyId'\n\nexport const useCurrencySelectRoute = () => {\n  const native = useNativeCurrency()\n  const router = useRouter()\n  const [currencyIdA, currencyIdB] = router.query.currency || []\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        router.replace(`/add/${currencyIdB}/${currencyIdA}`, undefined, { shallow: true })\n      } else if (currencyIdB) {\n        router.replace(`/add/${newCurrencyIdA}/${currencyIdB}`, undefined, { shallow: true })\n      } else {\n        router.replace(`/add/${newCurrencyIdA}`, undefined, { shallow: true })\n      }\n    },\n    [currencyIdB, router, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          router.replace(`/add/${currencyIdB}/${newCurrencyIdB}`, undefined, { shallow: true })\n        } else {\n          router.replace(`/add/${newCurrencyIdB}`, undefined, { shallow: true })\n        }\n      } else {\n        router.replace(`/add/${currencyIdA || native.symbol}/${newCurrencyIdB}`, undefined, { shallow: true })\n      }\n    },\n    [currencyIdA, router, currencyIdB, native],\n  )\n\n  return {\n    handleCurrencyASelect,\n    handleCurrencyBSelect,\n  }\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Currency } from '@pancakeswap/sdk'\nimport { AddIcon, Box, CardBody, CardFooter, Text, TooltipText, useTooltip, FlexGap } from '@pancakeswap/uikit'\nimport { CommitButton } from 'components/CommitButton'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { CurrencySelect } from 'components/CurrencySelect'\nimport { RowBetween } from 'components/Layout/Row'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { usePair } from 'hooks/usePairs'\nimport { useLPApr } from 'state/swap/hooks'\nimport { formatAmount } from 'utils/formatInfoNumbers'\nimport { AppHeader } from '../../components/App'\nimport { CommonBasesType } from '../../components/SearchModal/types'\nimport { useCurrencySelectRoute } from './useCurrencySelectRoute'\n\nexport function ChoosePair({\n  currencyA,\n  currencyB,\n  error,\n  onNext,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  error?: string\n  onNext?: () => void\n}) {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const isValid = !error\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\n  const [, pair] = usePair(currencyA, currencyB)\n  const poolData = useLPApr(pair)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {\n      placement: 'bottom',\n    },\n  )\n\n  return (\n    <>\n      <AppHeader\n        title={t('Add Liquidity')}\n        subtitle={t('Receive LP tokens and earn 0.17% trading fees')}\n        helper={t(\n          'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n        )}\n        backTo=\"/liquidity\"\n      />\n      <CardBody>\n        <Box>\n          <Text textTransform=\"uppercase\" color=\"secondary\" bold small pb=\"24px\">\n            {t('Choose a valid pair')}\n          </Text>\n          <FlexGap gap=\"4px\">\n            <CurrencySelect\n              id=\"add-liquidity-select-tokena\"\n              selectedCurrency={currencyA}\n              onCurrencySelect={handleCurrencyASelect}\n              showCommonBases\n              commonBasesType={CommonBasesType.LIQUIDITY}\n            />\n            <AddIcon color=\"textSubtle\" />\n            <CurrencySelect\n              id=\"add-liquidity-select-tokenb\"\n              selectedCurrency={currencyB}\n              onCurrencySelect={handleCurrencyBSelect}\n              showCommonBases\n              commonBasesType={CommonBasesType.LIQUIDITY}\n            />\n          </FlexGap>\n          {pair && poolData && (\n            <RowBetween mt=\"24px\">\n              <TooltipText ref={targetRef} bold fontSize=\"12px\" color=\"secondary\">\n                {t('LP reward APR')}\n              </TooltipText>\n              {tooltipVisible && tooltip}\n              <Text bold color=\"primary\">\n                {formatAmount(poolData.lpApr7d)}%\n              </Text>\n            </RowBetween>\n          )}\n        </Box>\n      </CardBody>\n      <CardFooter>\n        {!account ? (\n          <ConnectWalletButton width=\"100%\" />\n        ) : (\n          <CommitButton\n            data-test=\"choose-pair-next\"\n            width=\"100%\"\n            variant={!isValid ? 'danger' : 'primary'}\n            onClick={onNext}\n            disabled={!isValid}\n          >\n            {error ?? t('Add Liquidity')}\n          </CommitButton>\n        )}\n      </CardFooter>\n    </>\n  )\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { JSBI, CurrencyAmount, Token, WNATIVE, MINIMUM_LIQUIDITY, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  AddIcon,\n  CardBody,\n  Message,\n  useModal,\n  TooltipText,\n  useTooltip,\n  MessageText,\n} from '@pancakeswap/uikit'\nimport { logError } from 'utils/sentry'\nimport { useIsTransactionUnsupported, useIsTransactionWarning } from 'hooks/Trades'\nimport { useTranslation } from '@pancakeswap/localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useZapContract } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getZapAddress } from 'utils/addressHelpers'\nimport { CommitButton } from 'components/CommitButton'\nimport { getLPSymbol } from 'utils/getLpSymbol'\nimport { useRouter } from 'next/router'\nimport { callWithEstimateGas } from 'utils/calls'\nimport { SUPPORT_ZAP } from 'config/constants/supportChains'\nimport { ContractMethodName } from 'utils/types'\nimport { transactionErrorToUserReadableMessage } from 'utils/transactionErrorToUserReadableMessage'\nimport { useLPApr } from 'state/swap/hooks'\nimport { ROUTER_ADDRESS } from 'config/constants/exchange'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { PairState } from '../../hooks/usePairs'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState, useZapIn } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, usePairAdder, useUserSlippageTolerance, useZapModeManager } from '../../state/user/hooks'\nimport { calculateGasMargin } from '../../utils'\nimport { calculateSlippageAmount, useRouterContract } from '../../utils/exchange'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\nimport ConfirmAddLiquidityModal from './components/ConfirmAddLiquidityModal'\nimport ConfirmZapInModal from './components/ConfirmZapInModal'\nimport { ChoosePair } from './ChoosePair'\nimport { ZapCheckbox } from '../../components/CurrencyInputPanel/ZapCheckbox'\nimport { formatAmount } from '../../utils/formatInfoNumbers'\nimport { useCurrencySelectRoute } from './useCurrencySelectRoute'\nimport { CommonBasesType } from '../../components/SearchModal/types'\n\nenum Steps {\n  Choose,\n  Add,\n}\n\nconst zapAddress = getZapAddress()\n\nexport default function AddLiquidity({ currencyA, currencyB }) {\n  const router = useRouter()\n  const { account, chainId, isWrongNetwork } = useActiveWeb3React()\n\n  const addPair = usePairAdder()\n  const [zapMode] = useZapModeManager()\n  const expertMode = useIsExpertMode()\n\n  const [temporarilyZapMode, setTemporarilyZapMode] = useState(true)\n\n  const [steps, setSteps] = useState(Steps.Choose)\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (router.query.step === '1') {\n      setSteps(Steps.Add)\n    }\n  }, [router.query])\n\n  const zapModeStatus = useMemo(() => !!zapMode && temporarilyZapMode, [zapMode, temporarilyZapMode])\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts: mintParsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    addError,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const poolData = useLPApr(pair)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {\n      placement: 'bottom',\n    },\n  )\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  // modal and loading\n  const [{ attemptingTxn, liquidityErrorMessage, txHash }, setLiquidityState] = useState<{\n    attemptingTxn: boolean\n    liquidityErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    attemptingTxn: false,\n    liquidityErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // Zap state\n  const [zapTokenToggleA, setZapTokenToggleA] = useState(true)\n  const [zapTokenToggleB, setZapTokenToggleB] = useState(true)\n  const zapTokenCheckedA = zapTokenToggleA && currencyBalances?.[Field.CURRENCY_A]?.greaterThan(0)\n  const zapTokenCheckedB = zapTokenToggleB && currencyBalances?.[Field.CURRENCY_B]?.greaterThan(0)\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const canZap = useMemo(\n    () =>\n      !!zapModeStatus &&\n      !noLiquidity &&\n      SUPPORT_ZAP.includes(chainId) &&\n      !(\n        (pair && JSBI.lessThan(pair.reserve0.quotient, MINIMUM_LIQUIDITY)) ||\n        (pair && JSBI.lessThan(pair.reserve1.quotient, MINIMUM_LIQUIDITY))\n      ),\n    [chainId, noLiquidity, pair, zapModeStatus],\n  )\n\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\n\n  const { zapInEstimating, rebalancing, ...zapIn } = useZapIn({\n    pair,\n    canZap,\n    currencyA,\n    currencyB,\n    currencyBalances,\n    zapTokenCheckedA,\n    zapTokenCheckedB,\n    maxAmounts,\n  })\n\n  const parsedAmounts = canZap ? zapIn.parsedAmounts : mintParsedAmounts\n\n  const preferZapInstead = canZap && !zapIn.noNeedZap\n\n  // get formatted amounts\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]:\n        canZap &&\n        ((independentField === Field.CURRENCY_A && !zapTokenCheckedA) ||\n          (independentField === Field.CURRENCY_B && !zapTokenCheckedB))\n          ? ''\n          : typedValue,\n      [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n    }),\n    [\n      canZap,\n      dependentField,\n      independentField,\n      noLiquidity,\n      otherTypedValue,\n      parsedAmounts,\n      typedValue,\n      zapTokenCheckedA,\n      zapTokenCheckedB,\n    ],\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_A],\n    preferZapInstead ? zapAddress : ROUTER_ADDRESS[chainId],\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_B],\n    preferZapInstead ? zapAddress : ROUTER_ADDRESS[chainId],\n  )\n\n  const addTransaction = useTransactionAdder()\n\n  const routerContract = useRouterContract()\n\n  async function onAdd() {\n    if (!chainId || !account || !routerContract) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = mintParsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA?.isNative || currencyB?.isNative) {\n      const tokenBIsNative = currencyB?.isNative\n      estimate = routerContract.estimateGas.addLiquidityETH\n      method = routerContract.addLiquidityETH\n      args = [\n        (tokenBIsNative ? currencyA : currencyB)?.wrapped?.address ?? '', // token\n        (tokenBIsNative ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n        amountsMin[tokenBIsNative ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsNative ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsNative ? parsedAmountB : parsedAmountA).quotient.toString())\n    } else {\n      estimate = routerContract.estimateGas.addLiquidity\n      method = routerContract.addLiquidity\n      args = [\n        currencyA?.wrapped?.address ?? '',\n        currencyB?.wrapped?.address ?? '',\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n          const symbolA = currencies[Field.CURRENCY_A]?.symbol\n          const amountA = parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)\n          const symbolB = currencies[Field.CURRENCY_B]?.symbol\n          const amountB = parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)\n          addTransaction(response, {\n            summary: `Add ${amountA} ${symbolA} and ${amountB} ${symbolB}`,\n            translatableSummary: {\n              text: 'Add %amountA% %symbolA% and %amountB% %symbolB%',\n              data: { amountA, symbolA, amountB, symbolB },\n            },\n            type: 'add-liquidity',\n          })\n\n          if (pair) {\n            addPair(pair)\n          }\n        }),\n      )\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage:\n            err && err.code !== 4001\n              ? t('Add liquidity failed: %message%', { message: transactionErrorToUserReadableMessage(err, t) })\n              : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const pendingText = preferZapInstead\n    ? t('Zapping %amountA% %symbolA% and %amountB% %symbolB%', {\n        amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '0',\n        symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n        amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '0',\n        symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n      })\n    : t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n        amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n        symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n        amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n        symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n      })\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n  const addIsWarning = useIsTransactionWarning(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const zapContract = useZapContract(true)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <ConfirmAddLiquidityModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n      allowedSlippage={allowedSlippage}\n      onAdd={onAdd}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      noLiquidity={noLiquidity}\n      poolTokenPercentage={poolTokenPercentage}\n      liquidityMinted={liquidityMinted}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  async function onZapIn() {\n    if (!canZap || !parsedAmounts || !zapIn.zapInEstimated || !chainId || !zapContract) {\n      return\n    }\n\n    let method: ContractMethodName<typeof zapContract>\n    let args\n    let value: BigNumberish | null\n    let summary: string\n    let translatableSummary: { text: string; data?: Record<string, string | number> }\n    const minAmountOut = zapIn.zapInEstimated.swapAmountOut.mul(10000 - allowedSlippage).div(10000)\n    if (rebalancing) {\n      const maxAmountIn = zapIn.zapInEstimated.swapAmountIn.mul(10000 + allowedSlippage).div(10000)\n      const amountA = parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)\n      const symbolA = currencies[Field.CURRENCY_A]?.symbol\n      const amountB = parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)\n      const symbolB = currencies[Field.CURRENCY_B]?.symbol\n      summary = `Zap ${amountA} ${symbolA} and ${amountB} ${symbolB}`\n      translatableSummary = {\n        text: 'Zap %amountA% %symbolA% and %amountB% %symbolB%',\n        data: { amountA, symbolA, amountB, symbolB },\n      }\n      if (currencyA?.isNative || currencyB?.isNative) {\n        const tokenBIsBNB = currencyB?.isNative\n        method = 'zapInBNBRebalancing'\n        args = [\n          wrappedCurrency(currencies[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B], chainId).address, // token1\n          parsedAmounts[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].quotient.toString(), // token1AmountIn\n          pair.liquidityToken.address, // lp\n          maxAmountIn, // tokenAmountInMax\n          minAmountOut, // tokenAmountOutMin\n          zapIn.zapInEstimated.isToken0Sold && !tokenBIsBNB, // isToken0Sold\n        ]\n        value = parsedAmounts[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].quotient.toString()\n      } else {\n        method = 'zapInTokenRebalancing'\n        args = [\n          wrappedCurrency(currencies[Field.CURRENCY_A], chainId).address, // token0\n          wrappedCurrency(currencies[Field.CURRENCY_B], chainId).address, // token1\n          parsedAmounts[Field.CURRENCY_A].quotient.toString(), // token0AmountIn\n          parsedAmounts[Field.CURRENCY_B].quotient.toString(), // token1AmountIn\n          pair.liquidityToken.address, // lp\n          maxAmountIn, // tokenAmountInMax\n          minAmountOut, // tokenAmountOutMin\n          zapIn.zapInEstimated.isToken0Sold, // isToken0Sold\n        ]\n      }\n    } else if (currencies[zapIn.swapTokenField]?.isNative) {\n      method = 'zapInBNB'\n      args = [pair.liquidityToken.address, minAmountOut]\n      const amount = parsedAmounts[zapIn.swapTokenField]?.toSignificant(3)\n      const symbol = getLPSymbol(pair.token0.symbol, pair.token1.symbol, chainId)\n      summary = `Zap in ${amount} BNB for ${symbol}`\n      translatableSummary = {\n        text: 'Zap in %amount% BNB for %symbol%',\n        data: { amount, symbol },\n      }\n      value = parsedAmounts[zapIn.swapTokenField].quotient.toString()\n    } else {\n      method = 'zapInToken'\n      args = [\n        wrappedCurrency(currencies[zapIn.swapTokenField], chainId).address,\n        parsedAmounts[zapIn.swapTokenField].quotient.toString(),\n        pair.liquidityToken.address,\n        minAmountOut,\n      ]\n      const amount = parsedAmounts[zapIn.swapTokenField]?.toSignificant(3)\n      const { symbol } = currencies[zapIn.swapTokenField]\n      const lpSymbol = getLPSymbol(pair.token0.symbol, pair.token1.symbol, chainId)\n      summary = `Zap in ${amount} ${symbol} for ${lpSymbol}`\n      translatableSummary = {\n        text: 'Zap in %amount% %symbol% for %lpSymbol%',\n        data: { amount, symbol, lpSymbol },\n      }\n    }\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n\n    callWithEstimateGas(zapContract, method, args, value ? { value } : {})\n      .then((response) => {\n        setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n        addTransaction(response, {\n          summary,\n          translatableSummary,\n          type: 'add-liquidity',\n        })\n\n        if (pair) {\n          addPair(pair)\n        }\n      })\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage:\n            err && err.code !== 4001\n              ? t('Add liquidity failed: %message%', { message: transactionErrorToUserReadableMessage(err, t) })\n              : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const [onPresentZapInModal] = useModal(\n    <ConfirmZapInModal\n      title={t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      pair={pair}\n      allowedSlippage={allowedSlippage}\n      onAdd={onZapIn}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      poolTokenPercentage={zapIn.poolTokenPercentage}\n      liquidityMinted={zapIn.liquidityMinted}\n      zapSwapTokenField={zapIn.swapTokenField}\n      zapSwapOutTokenField={zapIn.swapOutTokenField}\n      zapInEstimated={zapIn.zapInEstimated}\n      rebalancing={rebalancing}\n      zapMode={zapModeStatus}\n      toggleZapMode={setTemporarilyZapMode}\n    />,\n    true,\n    true,\n    'zapInModal',\n  )\n\n  const handleEnableZap = () => {\n    if (!zapMode) {\n      setTemporarilyZapMode(!zapMode)\n    }\n  }\n\n  let isValid = !error\n  let errorText = error\n\n  if (preferZapInstead) {\n    isValid = !error && !zapIn.error\n    errorText = error ?? zapIn.error\n  } else {\n    isValid = !error && !addError\n    errorText = error ?? addError\n  }\n\n  const buttonDisabled =\n    !isValid ||\n    ((zapIn.parsedAmounts[Field.CURRENCY_A] || (!preferZapInstead && zapTokenCheckedA)) &&\n      approvalA !== ApprovalState.APPROVED) ||\n    ((zapIn.parsedAmounts[Field.CURRENCY_B] || (!preferZapInstead && zapTokenCheckedB)) &&\n      approvalB !== ApprovalState.APPROVED) ||\n    (zapIn.priceSeverity > 3 && preferZapInstead)\n\n  const showFieldAApproval =\n    (zapTokenCheckedA || !preferZapInstead) &&\n    (approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING)\n  const showFieldBApproval =\n    (zapTokenCheckedB || !preferZapInstead) &&\n    (approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING)\n\n  const shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid\n\n  const oneCurrencyIsWNATIVE = Boolean(\n    chainId && ((currencyA && currencyA.equals(WNATIVE[chainId])) || (currencyB && currencyB.equals(WNATIVE[chainId]))),\n  )\n\n  const noAnyInputAmount = !parsedAmounts[Field.CURRENCY_A] && !parsedAmounts[Field.CURRENCY_B]\n\n  const showAddLiquidity =\n    (!!currencies[Field.CURRENCY_A] && !!currencies[Field.CURRENCY_B] && steps === Steps.Add) || !canZap\n\n  const showZapWarning =\n    preferZapInstead &&\n    !noAnyInputAmount &&\n    ((!rebalancing && !(!zapTokenCheckedA && !zapTokenCheckedB)) || (rebalancing && zapIn.priceSeverity > 3))\n\n  const showReduceZapTokenButton =\n    preferZapInstead && (zapIn.priceSeverity > 3 || zapIn.zapInEstimatedError) && maxAmounts[zapIn.swapTokenField]\n\n  const showRebalancingConvert =\n    !showZapWarning &&\n    !noAnyInputAmount &&\n    !showReduceZapTokenButton &&\n    preferZapInstead &&\n    zapIn.isDependentAmountGreaterThanMaxAmount &&\n    rebalancing\n\n  const showZapIsAvailable =\n    !zapMode &&\n    !showZapWarning &&\n    !noAnyInputAmount &&\n    (!zapTokenCheckedA || !zapTokenCheckedB) &&\n    !noLiquidity &&\n    !(\n      (pair && JSBI.lessThan(pair.reserve0.quotient, MINIMUM_LIQUIDITY)) ||\n      (pair && JSBI.lessThan(pair.reserve1.quotient, MINIMUM_LIQUIDITY))\n    )\n\n  return (\n    <Page>\n      <AppBody>\n        {!showAddLiquidity && (\n          <ChoosePair\n            error={error}\n            currencyA={currencies[Field.CURRENCY_A]}\n            currencyB={currencies[Field.CURRENCY_B]}\n            onNext={() => setSteps(Steps.Add)}\n          />\n        )}\n        {showAddLiquidity && (\n          <>\n            <AppHeader\n              title={\n                currencies[Field.CURRENCY_A]?.symbol && currencies[Field.CURRENCY_B]?.symbol\n                  ? `${getLPSymbol(currencies[Field.CURRENCY_A].symbol, currencies[Field.CURRENCY_B].symbol, chainId)}`\n                  : t('Add Liquidity')\n              }\n              subtitle={t('Receive LP tokens and earn 0.17% trading fees')}\n              helper={t(\n                'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n              )}\n              backTo={canZap ? () => setSteps(Steps.Choose) : '/liquidity'}\n            />\n            <CardBody>\n              <AutoColumn gap=\"20px\">\n                {noLiquidity && (\n                  <ColumnCenter>\n                    <Message variant=\"warning\">\n                      <div>\n                        <Text bold mb=\"8px\">\n                          {t('You are the first liquidity provider.')}\n                        </Text>\n                        <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                        <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                      </div>\n                    </Message>\n                  </ColumnCenter>\n                )}\n                <CurrencyInputPanel\n                  disableCurrencySelect={canZap}\n                  showBUSD\n                  onInputBlur={canZap ? zapIn.onInputBlurOnce : undefined}\n                  error={zapIn.priceSeverity > 3 && zapIn.swapTokenField === Field.CURRENCY_A}\n                  disabled={canZap && !zapTokenCheckedA}\n                  beforeButton={\n                    canZap && (\n                      <ZapCheckbox\n                        disabled={currencyBalances?.[Field.CURRENCY_A]?.equalTo(0)}\n                        checked={zapTokenCheckedA}\n                        onChange={(e) => {\n                          setZapTokenToggleA(e.target.checked)\n                        }}\n                      />\n                    )\n                  }\n                  onCurrencySelect={handleCurrencyASelect}\n                  zapStyle={canZap ? 'zap' : 'noZap'}\n                  value={formattedAmounts[Field.CURRENCY_A]}\n                  onUserInput={onFieldAInput}\n                  onPercentInput={(percent) => {\n                    if (maxAmounts[Field.CURRENCY_A]) {\n                      onFieldAInput(maxAmounts[Field.CURRENCY_A]?.multiply(new Percent(percent, 100)).toExact() ?? '')\n                    }\n                  }}\n                  onMax={() => {\n                    onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                  }}\n                  showQuickInputButton\n                  showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                  currency={currencies[Field.CURRENCY_A]}\n                  id=\"add-liquidity-input-tokena\"\n                  showCommonBases\n                  commonBasesType={CommonBasesType.LIQUIDITY}\n                />\n                <ColumnCenter>\n                  <AddIcon width=\"16px\" />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  showBUSD\n                  onInputBlur={canZap ? zapIn.onInputBlurOnce : undefined}\n                  disabled={canZap && !zapTokenCheckedB}\n                  error={zapIn.priceSeverity > 3 && zapIn.swapTokenField === Field.CURRENCY_B}\n                  beforeButton={\n                    canZap && (\n                      <ZapCheckbox\n                        disabled={currencyBalances?.[Field.CURRENCY_B]?.equalTo(0)}\n                        checked={zapTokenCheckedB}\n                        onChange={(e) => {\n                          setZapTokenToggleB(e.target.checked)\n                        }}\n                      />\n                    )\n                  }\n                  onCurrencySelect={handleCurrencyBSelect}\n                  disableCurrencySelect={canZap}\n                  zapStyle={canZap ? 'zap' : 'noZap'}\n                  value={formattedAmounts[Field.CURRENCY_B]}\n                  onUserInput={onFieldBInput}\n                  onPercentInput={(percent) => {\n                    if (maxAmounts[Field.CURRENCY_B]) {\n                      onFieldBInput(maxAmounts[Field.CURRENCY_B]?.multiply(new Percent(percent, 100)).toExact() ?? '')\n                    }\n                  }}\n                  onMax={() => {\n                    onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                  }}\n                  showQuickInputButton\n                  showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                  currency={currencies[Field.CURRENCY_B]}\n                  id=\"add-liquidity-input-tokenb\"\n                  showCommonBases\n                  commonBasesType={CommonBasesType.LIQUIDITY}\n                />\n\n                {showZapWarning && (\n                  <Message variant={zapIn.priceSeverity > 3 ? 'danger' : 'warning'}>\n                    {zapIn.priceSeverity > 3 ? (\n                      <MessageText>\n                        {t('Price Impact Too High.')}{' '}\n                        <strong>\n                          {t('Reduce amount of %token% to maximum limit', {\n                            token: currencies[zapIn.swapTokenField]?.symbol,\n                          })}\n                        </strong>\n                      </MessageText>\n                    ) : (\n                      <MessageText>\n                        <strong>\n                          {t('No %token% input.', { token: currencies[zapIn.swapOutTokenField]?.symbol })}\n                        </strong>{' '}\n                        {t('Some of your %token0% will be converted to %token1%.', {\n                          token0: currencies[zapIn.swapTokenField]?.symbol,\n                          token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                        })}\n                      </MessageText>\n                    )}\n                  </Message>\n                )}\n\n                {showReduceZapTokenButton && (\n                  <RowFixed style={{ margin: 'auto' }} onClick={() => zapIn.convertToMaxZappable()}>\n                    <Button variant=\"secondary\" scale=\"sm\">\n                      {t('Reduce %token%', { token: currencies[zapIn.swapTokenField]?.symbol })}\n                    </Button>\n                  </RowFixed>\n                )}\n\n                {showZapIsAvailable && (\n                  <Message variant=\"warning\">\n                    <MessageText>\n                      {t('Zap allows you to add liquidity with only 1 single token. Click')}\n                      <Button p=\"0 4px\" scale=\"sm\" variant=\"text\" height=\"auto\" onClick={handleEnableZap}>\n                        {t('here')}\n                      </Button>\n                      {t('to try.')}\n                    </MessageText>\n                  </Message>\n                )}\n\n                {showRebalancingConvert && (\n                  <Message variant=\"warning\">\n                    <AutoColumn>\n                      <MessageText>\n                        <strong>\n                          {t('Not enough %token%.', { token: currencies[zapIn.swapOutTokenField]?.symbol })}\n                        </strong>{' '}\n                        {zapIn.gasOverhead\n                          ? t(\n                              'Some of your %token0% will be converted to %token1% before adding liquidity, but this may cause higher gas fees.',\n                              {\n                                token0: currencies[zapIn.swapTokenField]?.symbol,\n                                token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                              },\n                            )\n                          : t('Some of your %token0% will be converted to %token1%.', {\n                              token0: currencies[zapIn.swapTokenField]?.symbol,\n                              token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                            })}\n                      </MessageText>\n                    </AutoColumn>\n                  </Message>\n                )}\n\n                {showRebalancingConvert && (\n                  <RowFixed\n                    style={{ margin: 'auto' }}\n                    onClick={() => {\n                      if (dependentField === Field.CURRENCY_A) {\n                        onFieldAInput(maxAmounts[dependentField]?.toExact() ?? '')\n                      } else {\n                        onFieldBInput(maxAmounts[dependentField]?.toExact() ?? '')\n                      }\n                    }}\n                  >\n                    <Button variant=\"secondary\" scale=\"sm\">\n                      {t('Don’t convert')}\n                    </Button>\n                  </RowFixed>\n                )}\n\n                {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                  <>\n                    <LightCard padding=\"0px\" borderRadius=\"20px\">\n                      <RowBetween padding=\"1rem\">\n                        <Text fontSize=\"14px\">\n                          {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                        </Text>\n                      </RowBetween>{' '}\n                      <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                        <PoolPriceBar\n                          currencies={currencies}\n                          poolTokenPercentage={preferZapInstead ? zapIn.poolTokenPercentage : poolTokenPercentage}\n                          noLiquidity={noLiquidity}\n                          price={price}\n                        />\n                      </LightCard>\n                    </LightCard>\n                  </>\n                )}\n\n                <RowBetween>\n                  <Text bold fontSize=\"12px\" color=\"secondary\">\n                    {t('Slippage Tolerance')}\n                  </Text>\n                  <Text bold color=\"primary\">\n                    {allowedSlippage / 100}%\n                  </Text>\n                </RowBetween>\n\n                {pair && poolData && (\n                  <RowBetween>\n                    <TooltipText ref={targetRef} bold fontSize=\"12px\" color=\"secondary\">\n                      {t('LP reward APR')}\n                    </TooltipText>\n                    {tooltipVisible && tooltip}\n                    <Text bold color=\"primary\">\n                      {formatAmount(poolData.lpApr7d)}%\n                    </Text>\n                  </RowBetween>\n                )}\n\n                {addIsUnsupported || addIsWarning ? (\n                  <Button disabled mb=\"4px\">\n                    {t('Unsupported Asset')}\n                  </Button>\n                ) : !account ? (\n                  <ConnectWalletButton />\n                ) : isWrongNetwork ? (\n                  <CommitButton />\n                ) : (\n                  <AutoColumn gap=\"md\">\n                    {shouldShowApprovalGroup && (\n                      <RowBetween style={{ gap: '8px' }}>\n                        {showFieldAApproval && (\n                          <Button\n                            onClick={approveACallback}\n                            disabled={approvalA === ApprovalState.PENDING}\n                            width=\"100%\"\n                          >\n                            {approvalA === ApprovalState.PENDING ? (\n                              <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                            ) : (\n                              t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                            )}\n                          </Button>\n                        )}\n                        {showFieldBApproval && (\n                          <Button\n                            onClick={approveBCallback}\n                            disabled={approvalB === ApprovalState.PENDING}\n                            width=\"100%\"\n                          >\n                            {approvalB === ApprovalState.PENDING ? (\n                              <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                            ) : (\n                              t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                            )}\n                          </Button>\n                        )}\n                      </RowBetween>\n                    )}\n                    <CommitButton\n                      isLoading={preferZapInstead && zapInEstimating}\n                      variant={!isValid || zapIn.priceSeverity > 2 ? 'danger' : 'primary'}\n                      onClick={() => {\n                        if (preferZapInstead) {\n                          setLiquidityState({\n                            attemptingTxn: false,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined,\n                          })\n                          onPresentZapInModal()\n                          return\n                        }\n                        if (expertMode) {\n                          onAdd()\n                        } else {\n                          setLiquidityState({\n                            attemptingTxn: false,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined,\n                          })\n                          onPresentAddLiquidityModal()\n                        }\n                      }}\n                      disabled={buttonDisabled}\n                    >\n                      {errorText || t('Supply')}\n                    </CommitButton>\n                  </AutoColumn>\n                )}\n              </AutoColumn>\n            </CardBody>\n          </>\n        )}\n      </AppBody>\n      {!(addIsUnsupported || addIsWarning) ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWNATIVE} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { useCallback, useContext, useMemo, useState } from 'react'\nimport { CurrencyAmount, Token, WNATIVE } from '@pancakeswap/sdk'\nimport { Button, Text, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { logError } from 'utils/sentry'\nimport { useTranslation } from '@pancakeswap/localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { CommitButton } from 'components/CommitButton'\nimport { transactionErrorToUserReadableMessage } from 'utils/transactionErrorToUserReadableMessage'\nimport { StableConfigContext } from 'views/Swap/StableSwap/hooks/useStableConfig'\nimport { LightCard } from 'components/Card'\n\nimport { AutoColumn, ColumnCenter } from '../../../components/Layout/Column'\nimport CurrencyInputPanel from '../../../components/CurrencyInputPanel'\nimport ConnectWalletButton from '../../../components/ConnectWalletButton'\n\nimport { PairState } from '../../../hooks/usePairs'\nimport { ApprovalState, useApproveCallback } from '../../../hooks/useApproveCallback'\nimport { Field } from '../../../state/mint/actions'\nimport { useMintActionHandlers, useMintState } from '../../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../../state/user/hooks'\nimport { calculateGasMargin } from '../../../utils'\nimport { calculateSlippageAmount } from '../../../utils/exchange'\nimport { maxAmountSpend } from '../../../utils/maxAmountSpend'\nimport Dots from '../../../components/Loader/Dots'\nimport PoolPriceBar from '../PoolPriceBar'\nimport Page from '../../Page'\nimport ConfirmAddLiquidityModal from '../components/ConfirmAddLiquidityModal'\nimport { useCurrencySelectRoute } from '../useCurrencySelectRoute'\nimport { CommonBasesType } from '../../../components/SearchModal/types'\nimport { AppHeader, AppBody } from '../../../components/App'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { MinimalPositionCard } from '../../../components/PositionCard'\nimport { useStableLPDerivedMintInfo } from './hooks/useStableLPDerivedMintInfo'\n\nexport default function AddStableLiquidity({ currencyA, currencyB }) {\n  const { account, chainId, isWrongNetwork } = useActiveWeb3React()\n\n  const expertMode = useIsExpertMode()\n\n  const { t } = useTranslation()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    addError,\n  } = useStableLPDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(true)\n\n  // modal and loading\n  const [{ attemptingTxn, liquidityErrorMessage, txHash }, setLiquidityState] = useState<{\n    attemptingTxn: boolean\n    liquidityErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    attemptingTxn: false,\n    liquidityErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // txn values\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\n\n  // get formatted amounts\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]: typedValue,\n      [dependentField]: otherTypedValue,\n    }),\n    [dependentField, independentField, otherTypedValue, typedValue],\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  const { stableSwapContract, stableSwapConfig } = useContext(StableConfigContext)\n\n  // check whether the user has approved tokens for addling LPs\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], stableSwapContract?.address)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], stableSwapContract?.address)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !account || !stableSwapContract) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const lpMintedSlippage = calculateSlippageAmount(liquidityMinted, noLiquidity ? 0 : allowedSlippage)[0]\n\n    const estimate = stableSwapContract.estimateGas.add_liquidity\n    const method = stableSwapContract.add_liquidity\n\n    // Ensure the token order [token0, token1]\n    const tokenAmounts =\n      stableSwapConfig?.token0?.address === parsedAmountA?.currency?.wrapped?.address\n        ? [parsedAmountA?.quotient?.toString(), parsedAmountB?.quotient?.toString()]\n        : [parsedAmountB?.quotient?.toString(), parsedAmountA?.quotient?.toString()]\n\n    const args = [tokenAmounts, lpMintedSlippage?.toString()]\n\n    const value = null\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n          const symbolA = currencies[Field.CURRENCY_A]?.symbol\n          const amountA = parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)\n          const symbolB = currencies[Field.CURRENCY_B]?.symbol\n          const amountB = parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)\n          addTransaction(response, {\n            summary: `Add ${amountA} ${symbolA} and ${amountB} ${symbolB}`,\n            translatableSummary: {\n              text: 'Add %amountA% %symbolA% and %amountB% %symbolB%',\n              data: { amountA, symbolA, amountB, symbolB },\n            },\n            type: 'add-liquidity',\n          })\n        }),\n      )\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage:\n            err && err.code !== 4001\n              ? t('Add liquidity failed: %message%', { message: transactionErrorToUserReadableMessage(err, t) })\n              : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      onFieldBInput('')\n    }\n  }, [onFieldAInput, onFieldBInput, txHash])\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <ConfirmAddLiquidityModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n      allowedSlippage={allowedSlippage}\n      onAdd={onAdd}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      noLiquidity={noLiquidity}\n      poolTokenPercentage={poolTokenPercentage}\n      liquidityMinted={liquidityMinted}\n      isStable\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  let isValid = !error\n  let errorText = error\n\n  isValid = !error && !addError\n  errorText = error ?? addError\n\n  const buttonDisabled = !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED\n\n  const showFieldAApproval = approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING\n  const showFieldBApproval = approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING\n\n  const shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid\n\n  const oneCurrencyIsWNATIVE = Boolean(\n    chainId && ((currencyA && currencyA.equals(WNATIVE[chainId])) || (currencyB && currencyB.equals(WNATIVE[chainId]))),\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <>\n          <AppHeader\n            title={\n              currencies[Field.CURRENCY_A]?.symbol && currencies[Field.CURRENCY_B]?.symbol\n                ? `${currencies[Field.CURRENCY_A].symbol}-${currencies[Field.CURRENCY_B].symbol} Stable LP`\n                : t('Add Stable Liquidity')\n            }\n            backTo=\"/liquidity\"\n          />\n          <CardBody>\n            <AutoColumn gap=\"20px\">\n              {noLiquidity && (\n                <ColumnCenter>\n                  <Message variant=\"warning\">\n                    <div>\n                      <Text bold mb=\"8px\">\n                        {t('You are the first liquidity provider.')}\n                      </Text>\n                      <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                      <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                    </div>\n                  </Message>\n                </ColumnCenter>\n              )}\n              <CurrencyInputPanel\n                showBUSD\n                onCurrencySelect={handleCurrencyASelect}\n                zapStyle=\"noZap\"\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onFieldAInput}\n                onMax={() => {\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                currency={currencies[Field.CURRENCY_A]}\n                id=\"add-liquidity-input-tokena\"\n                showCommonBases\n                commonBasesType={CommonBasesType.LIQUIDITY}\n              />\n              <ColumnCenter>\n                <AddIcon width=\"16px\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                showBUSD\n                onCurrencySelect={handleCurrencyBSelect}\n                zapStyle=\"noZap\"\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onFieldBInput}\n                onMax={() => {\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                currency={currencies[Field.CURRENCY_B]}\n                id=\"add-liquidity-input-tokenb\"\n                showCommonBases\n                commonBasesType={CommonBasesType.LIQUIDITY}\n              />\n\n              {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                <>\n                  <LightCard padding=\"0px\" borderRadius=\"20px\">\n                    <RowBetween padding=\"1rem\">\n                      <Text fontSize=\"14px\">\n                        {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                      </Text>\n                    </RowBetween>{' '}\n                    <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                      <PoolPriceBar\n                        currencies={currencies}\n                        poolTokenPercentage={poolTokenPercentage}\n                        noLiquidity={noLiquidity}\n                        price={price}\n                      />\n                    </LightCard>\n                  </LightCard>\n                </>\n              )}\n\n              <RowBetween>\n                <Text bold fontSize=\"12px\" color=\"secondary\">\n                  {t('Slippage Tolerance')}\n                </Text>\n                <Text bold color=\"primary\">\n                  {allowedSlippage / 100}%\n                </Text>\n              </RowBetween>\n\n              {!account ? (\n                <ConnectWalletButton />\n              ) : isWrongNetwork ? (\n                <CommitButton />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  {shouldShowApprovalGroup && (\n                    <RowBetween style={{ gap: '8px' }}>\n                      {showFieldAApproval && (\n                        <Button onClick={approveACallback} disabled={approvalA === ApprovalState.PENDING} width=\"100%\">\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {showFieldBApproval && (\n                        <Button onClick={approveBCallback} disabled={approvalB === ApprovalState.PENDING} width=\"100%\">\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                  <CommitButton\n                    variant={!isValid ? 'danger' : 'primary'}\n                    onClick={() => {\n                      if (expertMode) {\n                        onAdd()\n                      } else {\n                        setLiquidityState({\n                          attemptingTxn: false,\n                          liquidityErrorMessage: undefined,\n                          txHash: undefined,\n                        })\n                        onPresentAddLiquidityModal()\n                      }\n                    }}\n                    disabled={buttonDisabled}\n                  >\n                    {errorText || t('Supply')}\n                  </CommitButton>\n                </AutoColumn>\n              )}\n            </AutoColumn>\n          </CardBody>\n        </>\n      </AppBody>\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWNATIVE} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Page>\n  )\n}\n","import { CAKE, USDC } from '@pancakeswap/tokens'\nimport { useCurrency } from 'hooks/Tokens'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport { useAppDispatch } from 'state'\nimport { resetMintState } from 'state/mint/actions'\nimport { CHAIN_IDS } from 'utils/wagmi'\nimport AddLiquidity from 'views/AddLiquidity'\nimport AddStableLiquidity from 'views/AddLiquidity/AddStableLiquidity/index'\nimport useStableConfig, { StableConfigContext } from 'views/Swap/StableSwap/hooks/useStableConfig'\n\nconst AddLiquidityPage = () => {\n  const router = useRouter()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n\n  const native = useNativeCurrency()\n\n  const [currencyIdA, currencyIdB] = router.query.currency || [\n    native.symbol,\n    CAKE[chainId]?.address ?? USDC[chainId]?.address,\n  ]\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const { stableSwapConfig, ...stableConfig } = useStableConfig({\n    tokenA: currencyA,\n    tokenB: currencyB,\n  })\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  return stableSwapConfig ? (\n    <StableConfigContext.Provider value={{ stableSwapConfig, ...stableConfig }}>\n      <AddStableLiquidity currencyA={currencyA} currencyB={currencyB} />\n    </StableConfigContext.Provider>\n  ) : (\n    <AddLiquidity currencyA={currencyA} currencyB={currencyB} />\n  )\n}\n\nAddLiquidityPage.chains = CHAIN_IDS\n\nexport default AddLiquidityPage\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\n\nexport const getStaticPaths: GetStaticPaths = () => {\n  return {\n    paths: [{ params: { currency: [] } }],\n    fallback: true,\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const { currency = [] } = params\n  const [currencyIdA, currencyIdB] = currency\n  const match = currencyIdA?.match(OLD_PATH_STRUCTURE)\n\n  if (match?.length) {\n    return {\n      redirect: {\n        statusCode: 301,\n        destination: `/add/${match[1]}/${match[2]}`,\n      },\n    }\n  }\n\n  if (currencyIdA && currencyIdB && currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return {\n      redirect: {\n        statusCode: 303,\n        destination: `/add/${currencyIdA}`,\n      },\n    }\n  }\n\n  return {\n    props: {},\n  }\n}\n","import { Currency, CurrencyAmount, JSBI } from '@pancakeswap/sdk'\nimport { BIG_INT_ZERO, MIN_BNB } from 'config/constants/exchange'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount<Currency>): CurrencyAmount<Currency> | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency?.isNative) {\n    if (JSBI.greaterThan(currencyAmount.quotient, MIN_BNB)) {\n      return CurrencyAmount.fromRawAmount(currencyAmount.currency, JSBI.subtract(currencyAmount.quotient, MIN_BNB))\n    }\n    return CurrencyAmount.fromRawAmount(currencyAmount.currency, BIG_INT_ZERO)\n  }\n  return currencyAmount\n}\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardFooterProps = SpaceProps;\n\nconst CardFooter = styled.div<CardFooterProps>`\n  border-top: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  ${space}\n`;\n\nCardFooter.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardFooter;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[6619],{\n\n/***/ 9388:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/add/[[...currency]]\",\n      function () {\n        return __webpack_require__(80086);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 21834:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ UnsupportedCurrencyFooter; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(87394);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52322);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(62208);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(89495);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(73697);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(11298);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(48608);\n/* harmony import */ var _pancakeswap_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(65957);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(3411);\n/* harmony import */ var components_Layout_Row__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26830);\n/* harmony import */ var components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(77253);\n/* harmony import */ var components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91790);\n/* harmony import */ var hooks_useActiveWeb3React__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(65342);\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(5305);\n/* harmony import */ var utils_wrappedCurrency__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(94250);\n/* harmony import */ var _hooks_Tokens__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(31196);\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  padding: 8px 0;\\n  width: 100%;\\n  max-width: 400px;\\n  border-bottom-left-radius: 20px;\\n  border-bottom-right-radius: 20px;\\n  color: \",\n        \";\\n  background-color: \",\n        \";\\n  text-align: center;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar DetailsFooter = styled_components__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-99e78957-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.text;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.invertedContrast;\n});\nvar UnsupportedModal = function(param) {\n    var currencies = param.currencies, onDismiss = param.onDismiss;\n    var chainId = (0,hooks_useActiveWeb3React__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z)().chainId;\n    var t = (0,_pancakeswap_localization__WEBPACK_IMPORTED_MODULE_2__/* .useTranslation */ .$G)().t;\n    var tokens = chainId && currencies ? currencies.map(function(currency) {\n        return (0,utils_wrappedCurrency__WEBPACK_IMPORTED_MODULE_8__/* .wrappedCurrency */ .pu)(currency, chainId);\n    }) : [];\n    var unsupportedTokens = (0,_hooks_Tokens__WEBPACK_IMPORTED_MODULE_9__/* .useUnsupportedTokens */ .l6)();\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__/* [\"default\"] */ .ZP, {\n        title: t(\"Unsupported Assets\"),\n        onDismiss: onDismiss,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__/* .AutoColumn */ .Tz, {\n            gap: \"lg\",\n            children: [\n                tokens.map(function(token) {\n                    var ref;\n                    return token && unsupportedTokens && Object.keys(unsupportedTokens).includes(token.address) && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__/* .AutoColumn */ .Tz, {\n                        gap: \"10px\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components_Layout_Row__WEBPACK_IMPORTED_MODULE_3__/* .AutoRow */ .BA, {\n                                gap: \"5px\",\n                                align: \"center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components_Logo__WEBPACK_IMPORTED_MODULE_5__/* .CurrencyLogo */ .Xw, {\n                                        currency: token,\n                                        size: \"24px\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z, {\n                                        children: token.symbol\n                                    })\n                                ]\n                            }),\n                            chainId && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z, {\n                                external: true,\n                                small: true,\n                                color: \"primaryDark\",\n                                href: (0,utils__WEBPACK_IMPORTED_MODULE_7__/* .getBlockExploreLink */ .C)(token.address, \"address\", chainId),\n                                children: token.address\n                            })\n                        ]\n                    }, (ref = token.address) === null || ref === void 0 ? void 0 : ref.concat(\"not-supported\"));\n                }),\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__/* .AutoColumn */ .Tz, {\n                    gap: \"lg\",\n                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z, {\n                        children: t(\"Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.\")\n                    })\n                })\n            ]\n        })\n    });\n};\nfunction UnsupportedCurrencyFooter(param) {\n    var currencies = param.currencies;\n    var t = (0,_pancakeswap_localization__WEBPACK_IMPORTED_MODULE_2__/* .useTranslation */ .$G)().t;\n    var ref = (0,_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)((0,_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_15__/* [\"default\"] */ .Z)(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(UnsupportedModal, {\n        currencies: currencies\n    })), 1), onPresentModal = ref[0];\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DetailsFooter, {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_16__/* [\"default\"] */ .Z, {\n            variant: \"text\",\n            onClick: onPresentModal,\n            children: t(\"Read more about unsupported assets\")\n        })\n    });\n}\n\n\n/***/ }),\n\n/***/ 80086:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"__N_SSG\": function() { return /* binding */ __N_SSG; },\n  \"default\": function() { return /* binding */ _currency_; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(70865);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_without_properties.mjs + 1 modules\nvar _object_without_properties = __webpack_require__(26297);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(52322);\n// EXTERNAL MODULE: ../../packages/tokens/src/index.ts + 6 modules\nvar src = __webpack_require__(23905);\n// EXTERNAL MODULE: ./src/hooks/Tokens.ts\nvar Tokens = __webpack_require__(31196);\n// EXTERNAL MODULE: ./src/hooks/useActiveWeb3React.ts\nvar useActiveWeb3React = __webpack_require__(65342);\n// EXTERNAL MODULE: ./src/hooks/useNativeCurrency.ts\nvar useNativeCurrency = __webpack_require__(5369);\n// EXTERNAL MODULE: ../../node_modules/next/router.js\nvar next_router = __webpack_require__(5632);\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ./src/state/index.ts + 18 modules\nvar state = __webpack_require__(88700);\n// EXTERNAL MODULE: ./src/state/mint/actions.ts\nvar actions = __webpack_require__(84709);\n// EXTERNAL MODULE: ./src/utils/wagmi.ts + 8 modules\nvar wagmi = __webpack_require__(47945);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(98788);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_define_property.mjs\nvar _define_property = __webpack_require__(47842);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(96670);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_to_consumable_array.mjs + 2 modules\nvar _to_consumable_array = __webpack_require__(50930);\n// EXTERNAL MODULE: ../../node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(5163);\n// EXTERNAL MODULE: ../../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(10528);\n// EXTERNAL MODULE: ../../packages/swap-sdk/dist/index.mjs + 1 modules\nvar dist = __webpack_require__(90902);\n// EXTERNAL MODULE: ../../packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(98813);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(11298);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Card/CardBody.tsx\nvar CardBody = __webpack_require__(95134);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Message/Message.tsx + 1 modules\nvar Message = __webpack_require__(76660);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(89495);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Add.tsx\nvar Add = __webpack_require__(29420);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(48608);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/TooltipText.tsx\nvar TooltipText = __webpack_require__(83931);\n// EXTERNAL MODULE: ./src/utils/sentry.ts\nvar sentry = __webpack_require__(20233);\n// EXTERNAL MODULE: ./src/hooks/Trades.ts + 1 modules\nvar Trades = __webpack_require__(19061);\n// EXTERNAL MODULE: ../../packages/localization/src/index.tsx + 6 modules\nvar localization_src = __webpack_require__(65957);\n// EXTERNAL MODULE: ./src/components/UnsupportedCurrencyFooter.tsx\nvar UnsupportedCurrencyFooter = __webpack_require__(21834);\n// EXTERNAL MODULE: ./src/hooks/useContract.ts + 1 modules\nvar useContract = __webpack_require__(76269);\n// EXTERNAL MODULE: ./src/utils/addressHelpers.ts\nvar addressHelpers = __webpack_require__(70627);\n// EXTERNAL MODULE: ./src/components/CommitButton.tsx\nvar CommitButton = __webpack_require__(49384);\n// EXTERNAL MODULE: ./src/utils/getLpSymbol.ts\nvar getLpSymbol = __webpack_require__(50288);\n// EXTERNAL MODULE: ./src/utils/calls/index.ts + 2 modules\nvar calls = __webpack_require__(72179);\n// EXTERNAL MODULE: ./src/config/constants/supportChains.ts\nvar supportChains = __webpack_require__(20277);\n// EXTERNAL MODULE: ./src/utils/transactionErrorToUserReadableMessage.ts\nvar transactionErrorToUserReadableMessage = __webpack_require__(38662);\n// EXTERNAL MODULE: ./src/state/swap/hooks.ts + 13 modules\nvar hooks = __webpack_require__(23365);\n// EXTERNAL MODULE: ./src/config/constants/exchange.ts\nvar exchange = __webpack_require__(92794);\n// EXTERNAL MODULE: ./src/components/Card/index.tsx\nvar Card = __webpack_require__(27156);\n// EXTERNAL MODULE: ./src/components/Layout/Column.tsx\nvar Column = __webpack_require__(77253);\n// EXTERNAL MODULE: ./src/components/CurrencyInputPanel/index.tsx\nvar CurrencyInputPanel = __webpack_require__(46317);\n// EXTERNAL MODULE: ./src/components/App/index.tsx + 3 modules\nvar App = __webpack_require__(74939);\n// EXTERNAL MODULE: ./src/components/PositionCard/index.tsx\nvar PositionCard = __webpack_require__(45366);\n// EXTERNAL MODULE: ./src/components/Layout/Row.tsx\nvar Row = __webpack_require__(26830);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(39480);\n// EXTERNAL MODULE: ./src/hooks/usePairs.ts\nvar usePairs = __webpack_require__(82055);\n// EXTERNAL MODULE: ./src/hooks/useApproveCallback.ts + 1 modules\nvar useApproveCallback = __webpack_require__(55706);\n// EXTERNAL MODULE: ./src/hooks/useTransactionDeadline.ts\nvar useTransactionDeadline = __webpack_require__(61558);\n// EXTERNAL MODULE: ./src/state/mint/hooks.ts\nvar mint_hooks = __webpack_require__(39113);\n// EXTERNAL MODULE: ./src/state/transactions/hooks.tsx\nvar transactions_hooks = __webpack_require__(52284);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar user_hooks = __webpack_require__(72135);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(5305);\n// EXTERNAL MODULE: ./src/utils/exchange.ts + 1 modules\nvar utils_exchange = __webpack_require__(95707);\n// EXTERNAL MODULE: ./src/utils/maxAmountSpend.ts\nvar maxAmountSpend = __webpack_require__(6973);\n// EXTERNAL MODULE: ./src/utils/wrappedCurrency.ts\nvar wrappedCurrency = __webpack_require__(94250);\n// EXTERNAL MODULE: ./src/components/Loader/Dots.tsx\nvar Dots = __webpack_require__(51991);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/PoolPriceBar.tsx\n\n\n\n\n\n\n\nfunction PoolPriceBar(param) {\n    var currencies = param.currencies, noLiquidity = param.noLiquidity, poolTokenPercentage = param.poolTokenPercentage, price = param.price;\n    var ref, ref1, ref2, ref3, ref4;\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    var ref5, ref6, ref7, ref8, ref9, ref10, ref11;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n        gap: \"md\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n            justify: \"space-around\",\n            gap: \"4px\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: (ref5 = price === null || price === void 0 ? void 0 : price.toSignificant(6)) !== null && ref5 !== void 0 ? ref5 : \"-\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            pt: 1,\n                            children: t(\"%assetA% per %assetB%\", {\n                                assetA: (ref6 = (ref = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref === void 0 ? void 0 : ref.symbol) !== null && ref6 !== void 0 ? ref6 : \"\",\n                                assetB: (ref7 = (ref1 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.symbol) !== null && ref7 !== void 0 ? ref7 : \"\"\n                            })\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: (ref8 = (ref2 = price === null || price === void 0 ? void 0 : price.invert()) === null || ref2 === void 0 ? void 0 : ref2.toSignificant(6)) !== null && ref8 !== void 0 ? ref8 : \"-\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            pt: 1,\n                            children: t(\"%assetA% per %assetB%\", {\n                                assetA: (ref9 = (ref3 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref3 === void 0 ? void 0 : ref3.symbol) !== null && ref9 !== void 0 ? ref9 : \"\",\n                                assetB: (ref10 = (ref4 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref4 === void 0 ? void 0 : ref4.symbol) !== null && ref10 !== void 0 ? ref10 : \"\"\n                            })\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                            children: [\n                                noLiquidity && price ? \"100\" : (ref11 = (poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.lessThan(exchange/* ONE_BIPS */.IS)) ? \"<0.01\" : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toFixed(2)) !== null && ref11 !== void 0 ? ref11 : \"0\",\n                                \"%\"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            pt: 1,\n                            children: t(\"Share of Pool\")\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n}\n/* harmony default export */ var AddLiquidity_PoolPriceBar = (PoolPriceBar);\n\n// EXTERNAL MODULE: ./src/views/Page.tsx\nvar Page = __webpack_require__(27023);\n// EXTERNAL MODULE: ./src/components/TransactionConfirmationModal/index.tsx\nvar TransactionConfirmationModal = __webpack_require__(23475);\n// EXTERNAL MODULE: ./src/state/burn/actions.ts\nvar burn_actions = __webpack_require__(80194);\n// EXTERNAL MODULE: ../../node_modules/lodash/toNumber.js\nvar toNumber = __webpack_require__(7642);\nvar toNumber_default = /*#__PURE__*/__webpack_require__.n(toNumber);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(92228);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(13670);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Svg.tsx\nvar Svg = __webpack_require__(62923);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(76903);\n// EXTERNAL MODULE: ../../node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(3411);\n// EXTERNAL MODULE: ./src/components/Logo/index.ts + 2 modules\nvar Logo = __webpack_require__(91790);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/components/common.tsx\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar Dot = (0,styled_components_browser_esm/* default */.ZP)(Box/* default */.Z).withConfig({\n    componentId: \"sc-7c8deb2-0\"\n})(_templateObject());\nvar CircleSvg = function(_param) /*#__PURE__*/ {\n    var _percent = _param.percent, percent = _percent === void 0 ? 1 : _percent, props = (0,_object_without_properties/* default */.Z)(_param, [\n        \"percent\"\n    ]);\n    return (0,jsx_runtime.jsxs)(Svg/* default */.Z, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({\n        width: \"60px\",\n        height: \"60px\",\n        viewBox: \"0 0 20 20\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\"\n    }, props), {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"g\", {\n                filter: \"url(#filter0_i_1147_113741)\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"circle\", {\n                        r: \"10\",\n                        cx: \"10\",\n                        cy: \"10\",\n                        fill: \"#7645D9\"\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"circle\", {\n                        r: \"5\",\n                        cx: \"10\",\n                        cy: \"10\",\n                        fill: \"transparent\",\n                        stroke: \"#1FC7D4\",\n                        strokeWidth: \"10\",\n                        strokeDasharray: \"calc(\".concat(percent * 100, \"px * 31.4 / 100) 31.4\"),\n                        transform: \"rotate(-90) translate(-20)\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(\"defs\", {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"filter\", {\n                    id: \"filter0_i_1147_113741\",\n                    x: 0,\n                    y: 0,\n                    width: 60,\n                    height: 60,\n                    filterUnits: \"userSpaceOnUse\",\n                    colorInterpolationFilters: \"sRGB\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feFlood\", {\n                            floodOpacity: 0,\n                            result: \"BackgroundImageFix\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feBlend\", {\n                            in: \"SourceGraphic\",\n                            in2: \"BackgroundImageFix\",\n                            result: \"shape\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feColorMatrix\", {\n                            in: \"SourceAlpha\",\n                            values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n                            result: \"hardAlpha\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feOffset\", {\n                            dy: -2\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feComposite\", {\n                            in2: \"hardAlpha\",\n                            operator: \"arithmetic\",\n                            k2: -1,\n                            k3: 1\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feColorMatrix\", {\n                            values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feBlend\", {\n                            in2: \"shape\",\n                            result: \"effect1_innerShadow_1147_113741\"\n                        })\n                    ]\n                })\n            })\n        ]\n    }));\n};\nvar Subtitle = function(param) {\n    var children = param.children;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n        fontSize: \"12px\",\n        textTransform: \"uppercase\",\n        bold: true,\n        color: \"secondary\",\n        children: children\n    });\n};\nvar PairDistribution = function(param) {\n    var title = param.title, percent = param.percent, currencyA = param.currencyA, currencyB = param.currencyB, currencyAValue = param.currencyAValue, currencyBValue = param.currencyBValue, tooltipTargetRef = param.tooltipTargetRef;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n        gap: \"8px\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                children: title\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                children: [\n                    typeof percent !== \"undefined\" && /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {\n                        ref: tooltipTargetRef,\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(CircleSvg, {\n                            percent: percent,\n                            mr: \"34px\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                        style: {\n                            width: \"100%\"\n                        },\n                        children: [\n                            currencyA && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                                        gap: \"4px\",\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                                                bg: \"primary\"\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                                currency: currencyA\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        children: currencyAValue\n                                    })\n                                ]\n                            }),\n                            currencyB && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                                        gap: \"4px\",\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                                                bg: \"secondary\"\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                                currency: currencyB\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        children: currencyBValue\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n};\nvar AddLiquidityModalHeader = function(param) {\n    var currencies = param.currencies, poolTokenPercentage = param.poolTokenPercentage, liquidityMinted = param.liquidityMinted, price = param.price, allowedSlippage = param.allowedSlippage, noLiquidity = param.noLiquidity, children = param.children;\n    var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8;\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    var ref9 = (0,useTooltip/* default */.Z)(t(\"Output is estimated. If the price changes by more than %slippage%% your transaction will revert.\", {\n        slippage: allowedSlippage / 100\n    }), {\n        placement: \"auto\"\n    }), tooltip = ref9.tooltip, tooltipVisible = ref9.tooltipVisible, targetRef = ref9.targetRef;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n        gap: \"24px\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                gap: \"8px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                        children: t(\"You will receive\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Card/* GreyCard */.h2, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                                    gap: \"4px\",\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* DoubleCurrencyLogo */.ge, {\n                                            currency0: currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A],\n                                            currency1: currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B],\n                                            size: 24\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            color: \"textSubtle\",\n                                            children: ((ref = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.symbol) && ((ref1 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref1 === void 0 ? void 0 : ref1.symbol) && (0,getLpSymbol/* getLPSymbol */.z)((ref2 = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref2 === void 0 ? void 0 : ref2.symbol, (ref3 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.symbol, (ref4 = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref4 === void 0 ? void 0 : ref4.chainId)\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    ml: \"8px\",\n                                    children: liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)\n                                })\n                            ]\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                        children: t(\"Your pool share\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                        children: [\n                            noLiquidity ? \"100\" : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toSignificant(4),\n                            \"%\"\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n                gap: \"8px\",\n                children: children\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                                children: t(\"Rates\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                children: \"1 \".concat((ref5 = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref5 === void 0 ? void 0 : ref5.symbol, \" = \").concat(price === null || price === void 0 ? void 0 : price.toSignificant(4), \" \").concat((ref6 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref6 === void 0 ? void 0 : ref6.symbol)\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowBetween */.m0, {\n                        style: {\n                            justifyContent: \"flex-end\"\n                        },\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: \"1 \".concat((ref7 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref7 === void 0 ? void 0 : ref7.symbol, \" = \").concat(price === null || price === void 0 ? void 0 : price.invert().toSignificant(4), \" \").concat((ref8 = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref8 === void 0 ? void 0 : ref8.symbol)\n                        })\n                    })\n                ]\n            }),\n            !noLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                        children: t(\"Slippage Tolerance\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(TooltipText/* default */.Z, {\n                        ref: targetRef,\n                        children: [\n                            allowedSlippage / 100,\n                            \"%\"\n                        ]\n                    }),\n                    tooltipVisible && tooltip\n                ]\n            })\n        ]\n    });\n};\n\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/components/ConfirmAddLiquidityModal.tsx\n\n\n\n\n\n\n\n\nvar ConfirmAddLiquidityModal = function(param) {\n    var title = param.title, onDismiss = param.onDismiss, customOnDismiss = param.customOnDismiss, attemptingTxn = param.attemptingTxn, hash = param.hash, pendingText = param.pendingText, price = param.price, currencies = param.currencies, noLiquidity = param.noLiquidity, allowedSlippage = param.allowedSlippage, parsedAmounts = param.parsedAmounts, liquidityErrorMessage = param.liquidityErrorMessage, onAdd = param.onAdd, poolTokenPercentage = param.poolTokenPercentage, liquidityMinted = param.liquidityMinted, currencyToAdd = param.currencyToAdd, isStable = param.isStable;\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    var percent = 0.5;\n    // Calculate distribution percentage for display\n    if (isStable && parsedAmounts[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A] && parsedAmounts[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) {\n        var amountCurrencyA = toNumber_default()(parsedAmounts[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A].toSignificant(6));\n        var amountCurrencyB = toNumber_default()(parsedAmounts[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B].toSignificant(6));\n        percent = amountCurrencyA / (amountCurrencyA + amountCurrencyB);\n    }\n    var modalHeader = (0,react.useCallback)(function() {\n        var ref, ref1;\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(AddLiquidityModalHeader, {\n            allowedSlippage: allowedSlippage,\n            currencies: currencies,\n            liquidityMinted: liquidityMinted,\n            poolTokenPercentage: poolTokenPercentage,\n            price: price,\n            noLiquidity: noLiquidity,\n            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(PairDistribution, {\n                title: t(\"Input\"),\n                percent: percent,\n                currencyA: currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A],\n                currencyAValue: (ref = parsedAmounts[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toSignificant(6),\n                currencyB: currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B],\n                currencyBValue: (ref1 = parsedAmounts[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(6)\n            })\n        });\n    }, [\n        allowedSlippage,\n        percent,\n        currencies,\n        liquidityMinted,\n        noLiquidity,\n        parsedAmounts,\n        poolTokenPercentage,\n        price,\n        t\n    ]);\n    var modalBottom = (0,react.useCallback)(function() {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            width: \"100%\",\n            onClick: onAdd,\n            mt: \"20px\",\n            children: noLiquidity ? t(\"Create Pool & Supply\") : t(\"Confirm Supply\")\n        });\n    }, [\n        noLiquidity,\n        onAdd,\n        t\n    ]);\n    var confirmationContent = (0,react.useCallback)(function() {\n        return liquidityErrorMessage ? /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionErrorContent */.ht, {\n            onDismiss: onDismiss,\n            message: liquidityErrorMessage\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* ConfirmationModalContent */.pM, {\n            topContent: modalHeader,\n            bottomContent: modalBottom\n        });\n    }, [\n        onDismiss,\n        modalBottom,\n        modalHeader,\n        liquidityErrorMessage\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* default */.ZP, {\n        minWidth: [\n            \"100%\",\n            ,\n            \"420px\"\n        ],\n        title: title,\n        onDismiss: onDismiss,\n        customOnDismiss: customOnDismiss,\n        attemptingTxn: attemptingTxn,\n        currencyToAdd: currencyToAdd,\n        hash: hash,\n        content: confirmationContent,\n        pendingText: pendingText\n    });\n};\n/* harmony default export */ var components_ConfirmAddLiquidityModal = (ConfirmAddLiquidityModal);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/ArrowDown.tsx\nvar ArrowDown = __webpack_require__(52180);\n// EXTERNAL MODULE: ./src/hooks/useTotalSupply.ts\nvar useTotalSupply = __webpack_require__(34508);\n// EXTERNAL MODULE: ./src/views/AddLiquidity/components/ZapErrorMessage.tsx\nvar ZapErrorMessage = __webpack_require__(97794);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/components/ConfirmZapInModal.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar clamp = function(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n};\nvar ConfirmZapInModal = function(param) {\n    var title = param.title, onDismiss = param.onDismiss, customOnDismiss = param.customOnDismiss, attemptingTxn = param.attemptingTxn, hash = param.hash, pendingText = param.pendingText, price = param.price, currencies = param.currencies, zapSwapTokenField = param.zapSwapTokenField, zapSwapOutTokenField = param.zapSwapOutTokenField, allowedSlippage = param.allowedSlippage, parsedAmounts = param.parsedAmounts, liquidityErrorMessage = param.liquidityErrorMessage, onAdd = param.onAdd, poolTokenPercentage = param.poolTokenPercentage, liquidityMinted = param.liquidityMinted, pair = param.pair, zapInEstimated = param.zapInEstimated, rebalancing = param.rebalancing, zapMode = param.zapMode, toggleZapMode = param.toggleZapMode;\n    var ref, ref1, ref2, ref3;\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var totalPoolTokens = (0,useTotalSupply/* default */.Z)(pair.liquidityToken);\n    var swapInCurrencyAmount = parsedAmounts[zapSwapTokenField];\n    var swapOutCurrencyAmount = parsedAmounts[zapSwapOutTokenField];\n    var ref4 = (0,useTooltip/* default */.Z)(swapInCurrencyAmount && !swapOutCurrencyAmount ? t(\"There is no %token1% input. Half of %token0% input is converted into %token1% to add liquidity.\", {\n        token0: (ref = currencies[zapSwapTokenField]) === null || ref === void 0 ? void 0 : ref.symbol,\n        token1: (ref1 = currencies[zapSwapOutTokenField]) === null || ref1 === void 0 ? void 0 : ref1.symbol\n    }) : t(\"There is not enough %token1% input to match 50/50. Some of %token0% will be converted to %token1%\", {\n        token0: (ref2 = currencies[zapSwapTokenField]) === null || ref2 === void 0 ? void 0 : ref2.symbol,\n        token1: (ref3 = currencies[zapSwapOutTokenField]) === null || ref3 === void 0 ? void 0 : ref3.symbol\n    }), {\n        placement: \"auto-start\"\n    }), targetRef = ref4.targetRef, tooltip = ref4.tooltip, tooltipVisible = ref4.tooltipVisible;\n    var ref5 = (0,_sliced_to_array/* default */.Z)(!!pair && !!totalPoolTokens && !!liquidityMinted && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    dist/* JSBI.greaterThanOrEqual */.QA.greaterThanOrEqual(totalPoolTokens.quotient, liquidityMinted.quotient) ? [\n        pair.getLiquidityValue(pair.token0, totalPoolTokens, liquidityMinted, false),\n        pair.getLiquidityValue(pair.token1, totalPoolTokens, liquidityMinted, false), \n    ] : [\n        undefined,\n        undefined\n    ], 2), token0Deposited = ref5[0], token1Deposited = ref5[1];\n    var swapInTokenAmount = (0,react.useMemo)(function() {\n        return zapInEstimated && dist/* CurrencyAmount.fromRawAmount */.ih.fromRawAmount((0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[zapSwapTokenField], chainId), zapInEstimated.swapAmountIn.toString());\n    }, [\n        chainId,\n        currencies,\n        zapInEstimated,\n        zapSwapTokenField\n    ]);\n    var swapOutTokenAmount = (0,react.useMemo)(function() {\n        return (zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountOut) && dist/* CurrencyAmount.fromRawAmount */.ih.fromRawAmount((0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[zapSwapOutTokenField], chainId), zapInEstimated.swapAmountOut.toString());\n    }, [\n        chainId,\n        currencies,\n        zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountOut,\n        zapSwapOutTokenField\n    ]);\n    var inputPercent = (0,react.useMemo)(function() {\n        return swapInCurrencyAmount && swapOutCurrencyAmount ? clamp(// TODO: avoid use number\n        +swapInCurrencyAmount.toExact() / +swapOutCurrencyAmount.toExact() / (+pair.priceOf(swapOutCurrencyAmount.currency.wrapped).toSignificant() + +swapInCurrencyAmount.toExact() / +swapOutCurrencyAmount.toExact()), 0.05, 0.95) : swapInCurrencyAmount && !swapOutCurrencyAmount ? 1 : undefined;\n    }, [\n        pair,\n        swapInCurrencyAmount,\n        swapOutCurrencyAmount\n    ]);\n    var tokenDeposited = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, zapSwapTokenField, (swapInTokenAmount === null || swapInTokenAmount === void 0 ? void 0 : swapInTokenAmount.currency) && (pair === null || pair === void 0 ? void 0 : pair.token0) ? pair.token0.equals(swapInTokenAmount.currency) ? token0Deposited : token1Deposited : undefined), (0,_define_property/* default */.Z)(_obj, zapSwapOutTokenField, (swapOutTokenAmount === null || swapOutTokenAmount === void 0 ? void 0 : swapOutTokenAmount.currency) && (pair === null || pair === void 0 ? void 0 : pair.token1) ? pair.token1.equals(swapOutTokenAmount.currency) ? token1Deposited : token0Deposited : undefined), _obj;\n    }, [\n        pair.token0,\n        pair.token1,\n        swapInTokenAmount === null || swapInTokenAmount === void 0 ? void 0 : swapInTokenAmount.currency,\n        swapOutTokenAmount === null || swapOutTokenAmount === void 0 ? void 0 : swapOutTokenAmount.currency,\n        token0Deposited,\n        token1Deposited,\n        zapSwapOutTokenField,\n        zapSwapTokenField, \n    ]);\n    var modalHeader = (0,react.useCallback)(function() {\n        var ref, ref1;\n        return /*#__PURE__*/ (0,jsx_runtime.jsxs)(AddLiquidityModalHeader, {\n            allowedSlippage: allowedSlippage,\n            currencies: currencies,\n            liquidityMinted: liquidityMinted,\n            poolTokenPercentage: poolTokenPercentage,\n            price: price,\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(PairDistribution, {\n                    title: t(\"Input\"),\n                    percent: inputPercent,\n                    currencyA: swapInCurrencyAmount ? currencies[zapSwapTokenField] : undefined,\n                    currencyAValue: swapInCurrencyAmount === null || swapInCurrencyAmount === void 0 ? void 0 : swapInCurrencyAmount.toSignificant(6),\n                    currencyB: swapOutCurrencyAmount ? currencies[zapSwapOutTokenField] : undefined,\n                    currencyBValue: swapOutCurrencyAmount === null || swapOutCurrencyAmount === void 0 ? void 0 : swapOutCurrencyAmount.toSignificant(6)\n                }),\n                swapOutTokenAmount && swapInTokenAmount && currencies[zapSwapTokenField] && currencies[zapSwapOutTokenField] && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    gap: \"16px\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDown/* default */.Z, {\n                            color: \"textSubtle\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                            gap: \"6px\",\n                            justify: \"center\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowFixed */.DA, {\n                                    gap: \"2px\",\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: swapInTokenAmount === null || swapInTokenAmount === void 0 ? void 0 : swapInTokenAmount.toSignificant(6)\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                            currency: currencies[zapSwapTokenField]\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: currencies[zapSwapTokenField].symbol\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    children: t(\"to\")\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowFixed */.DA, {\n                                    gap: \"2px\",\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: swapOutTokenAmount === null || swapOutTokenAmount === void 0 ? void 0 : swapOutTokenAmount.toSignificant(6)\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                            currency: currencies[zapSwapOutTokenField]\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: currencies[zapSwapOutTokenField].symbol\n                                        })\n                                    ]\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDown/* default */.Z, {\n                            color: \"textSubtle\"\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    gap: \"4px\",\n                    children: [\n                        tooltipVisible && tooltip,\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(PairDistribution, {\n                            tooltipTargetRef: targetRef,\n                            title: t(\"Pooled\"),\n                            percent: 0.5,\n                            currencyA: currencies[zapSwapTokenField],\n                            currencyAValue: tokenDeposited === null || tokenDeposited === void 0 ? void 0 : (ref = tokenDeposited[zapSwapTokenField]) === null || ref === void 0 ? void 0 : ref.toSignificant(6),\n                            currencyB: currencies[zapSwapOutTokenField],\n                            currencyBValue: tokenDeposited === null || tokenDeposited === void 0 ? void 0 : (ref1 = tokenDeposited[zapSwapOutTokenField]) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(6)\n                        })\n                    ]\n                })\n            ]\n        });\n    }, [\n        allowedSlippage,\n        currencies,\n        liquidityMinted,\n        poolTokenPercentage,\n        price,\n        t,\n        inputPercent,\n        swapInCurrencyAmount,\n        zapSwapTokenField,\n        swapOutCurrencyAmount,\n        zapSwapOutTokenField,\n        swapOutTokenAmount,\n        swapInTokenAmount,\n        tooltip,\n        tooltipVisible,\n        targetRef,\n        tokenDeposited, \n    ]);\n    var modalBottom = (0,react.useCallback)(function() {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            width: \"100%\",\n            onClick: onAdd,\n            mt: \"20px\",\n            children: t(\"Confirm Supply\")\n        });\n    }, [\n        onAdd,\n        t\n    ]);\n    var confirmationContent = (0,react.useCallback)(function() {\n        return liquidityErrorMessage ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(ZapErrorMessage/* ZapErrorMessages */.p, {\n                    isSingleToken: !rebalancing,\n                    zapMode: zapMode,\n                    toggleZapMode: toggleZapMode,\n                    onModalDismiss: onDismiss\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionErrorContent */.ht, {\n                    onDismiss: onDismiss,\n                    message: liquidityErrorMessage\n                })\n            ]\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* ConfirmationModalContent */.pM, {\n            topContent: modalHeader,\n            bottomContent: modalBottom\n        });\n    }, [\n        liquidityErrorMessage,\n        rebalancing,\n        zapMode,\n        toggleZapMode,\n        onDismiss,\n        modalHeader,\n        modalBottom\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* default */.ZP, {\n        minWidth: [\n            \"100%\",\n            ,\n            \"420px\"\n        ],\n        title: title,\n        onDismiss: onDismiss,\n        customOnDismiss: customOnDismiss,\n        attemptingTxn: attemptingTxn,\n        currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n        hash: hash,\n        content: confirmationContent,\n        pendingText: pendingText\n    });\n};\n/* harmony default export */ var components_ConfirmZapInModal = (ConfirmZapInModal);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Layouts/FlexGap.tsx\nvar FlexGap = __webpack_require__(59482);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Card/CardFooter.tsx\nvar CardFooter = __webpack_require__(67252);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/ArrowDropDown.tsx\nvar ArrowDropDown = __webpack_require__(20345);\n// EXTERNAL MODULE: ./src/components/SearchModal/CurrencySearchModal.tsx + 11 modules\nvar CurrencySearchModal = __webpack_require__(79051);\n// EXTERNAL MODULE: ../../packages/utils/formatBalance.ts\nvar formatBalance = __webpack_require__(18426);\n// EXTERNAL MODULE: ./src/state/wallet/hooks.ts\nvar wallet_hooks = __webpack_require__(33472);\n// EXTERNAL MODULE: ./src/hooks/useBUSDPrice.ts\nvar useBUSDPrice = __webpack_require__(36695);\n// EXTERNAL MODULE: ../../packages/wagmi/dist/index.mjs\nvar wagmi_dist = __webpack_require__(9270);\n;// CONCATENATED MODULE: ./src/components/CurrencySelect/index.tsx\n\n\n\n\n\nfunction CurrencySelect_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 100%;\\n  height: 40px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0px 16px;\\n  box-shadow: \",\n        \";\\n  border: 1px solid \",\n        \";\\n  border-radius: 16px;\\n  background: \",\n        \";\\n  transition: border-radius 0.15s;\\n\"\n    ]);\n    CurrencySelect_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  cursor: pointer;\\n  width: 100%;\\n  position: relative;\\n  background: \",\n        \";\\n  border-radius: 16px;\\n  height: 40px;\\n  min-width: 136px;\\n  user-select: none;\\n  z-index: 20;\\n\\n  \",\n        \" {\\n    min-width: 168px;\\n  }\\n\\n  .down-icon {\\n    position: absolute;\\n    right: 16px;\\n    top: 50%;\\n    transform: translateY(-50%);\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar DropDownHeader = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-75fec827-0\"\n})(CurrencySelect_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.shadows.inset;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.inputSecondary;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.input;\n});\nvar DropDownContainer = (0,styled_components_browser_esm/* default */.ZP)(Button/* default */.Z).withConfig({\n    componentId: \"sc-75fec827-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.colors.input;\n}, function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar CurrencySelect = function(_param) {\n    var onCurrencySelect = _param.onCurrencySelect, selectedCurrency = _param.selectedCurrency, otherSelectedCurrency = _param.otherSelectedCurrency, showCommonBases = _param.showCommonBases, commonBasesType = _param.commonBasesType, hideBalance = _param.hideBalance, props = (0,_object_without_properties/* default */.Z)(_param, [\n        \"onCurrencySelect\",\n        \"selectedCurrency\",\n        \"otherSelectedCurrency\",\n        \"showCommonBases\",\n        \"commonBasesType\",\n        \"hideBalance\"\n    ]);\n    var account = (0,wagmi_dist/* useWeb3React */.Ge)().account;\n    var selectedCurrencyBalance = (0,wallet_hooks/* useCurrencyBalance */._h)(account !== null && account !== void 0 ? account : undefined, !hideBalance && selectedCurrency ? selectedCurrency : undefined);\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencySearchModal/* default */.Z, {\n        onCurrencySelect: onCurrencySelect,\n        selectedCurrency: selectedCurrency,\n        otherSelectedCurrency: otherSelectedCurrency,\n        showCommonBases: showCommonBases,\n        commonBasesType: commonBasesType\n    })), 1), onPresentCurrencyModal = ref[0];\n    var price = (0,useBUSDPrice/* default */.ZP)(selectedCurrencyBalance && selectedCurrency ? selectedCurrency : undefined);\n    var quoted = selectedCurrencyBalance && (price === null || price === void 0 ? void 0 : price.quote(selectedCurrencyBalance));\n    var ref1;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({\n        width: \"100%\"\n    }, props), {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(DropDownContainer, {\n                p: 0,\n                onClick: onPresentCurrencyModal,\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(DropDownHeader, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            id: \"pair\",\n                            color: !selectedCurrency ? \"text\" : undefined,\n                            children: !selectedCurrency ? /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                children: t(\"Select\")\n                            }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                                alignItems: \"center\",\n                                justifyContent: \"space-between\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                        currency: selectedCurrency,\n                                        size: \"24px\",\n                                        style: {\n                                            marginRight: \"8px\"\n                                        }\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        id: \"pair\",\n                                        bold: true,\n                                        children: selectedCurrency && selectedCurrency.symbol && selectedCurrency.symbol.length > 20 ? \"\".concat(selectedCurrency.symbol.slice(0, 4), \"...\").concat(selectedCurrency.symbol.slice(selectedCurrency.symbol.length - 5, selectedCurrency.symbol.length)) : selectedCurrency === null || selectedCurrency === void 0 ? void 0 : selectedCurrency.symbol\n                                    })\n                                ]\n                            })\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDropDown/* default */.Z, {\n                        color: \"text\",\n                        className: \"down-icon\"\n                    })\n                ]\n            }),\n            account && !!selectedCurrency && !hideBalance && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                        justify: \"space-between\",\n                        gap: \"2px\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                color: \"textSubtle\",\n                                fontSize: \"12px\",\n                                children: [\n                                    t(\"Balance\"),\n                                    \":\"\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                children: (ref1 = selectedCurrencyBalance === null || selectedCurrencyBalance === void 0 ? void 0 : selectedCurrencyBalance.toSignificant(6)) !== null && ref1 !== void 0 ? ref1 : t(\"Loading\")\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {}),\n                            Number.isFinite(+(quoted === null || quoted === void 0 ? void 0 : quoted.toExact())) && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                children: [\n                                    \"~$\",\n                                    (0,formatBalance/* formatNumber */.uf)(+quoted.toExact())\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    }));\n};\n\n// EXTERNAL MODULE: ./src/utils/formatInfoNumbers.ts\nvar formatInfoNumbers = __webpack_require__(84785);\n// EXTERNAL MODULE: ./src/components/SearchModal/types.ts\nvar types = __webpack_require__(34188);\n// EXTERNAL MODULE: ./src/utils/currencyId.ts\nvar currencyId = __webpack_require__(36099);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/useCurrencySelectRoute.ts\n\n\n\n\n\nvar useCurrencySelectRoute = function() {\n    var native = (0,useNativeCurrency/* default */.Z)();\n    var router = (0,next_router.useRouter)();\n    var ref = (0,_sliced_to_array/* default */.Z)(router.query.currency || [], 2), currencyIdA = ref[0], currencyIdB = ref[1];\n    var handleCurrencyASelect = (0,react.useCallback)(function(currencyA_) {\n        var newCurrencyIdA = (0,currencyId/* default */.Z)(currencyA_);\n        if (newCurrencyIdA === currencyIdB) {\n            router.replace(\"/add/\".concat(currencyIdB, \"/\").concat(currencyIdA), undefined, {\n                shallow: true\n            });\n        } else if (currencyIdB) {\n            router.replace(\"/add/\".concat(newCurrencyIdA, \"/\").concat(currencyIdB), undefined, {\n                shallow: true\n            });\n        } else {\n            router.replace(\"/add/\".concat(newCurrencyIdA), undefined, {\n                shallow: true\n            });\n        }\n    }, [\n        currencyIdB,\n        router,\n        currencyIdA\n    ]);\n    var handleCurrencyBSelect = (0,react.useCallback)(function(currencyB_) {\n        var newCurrencyIdB = (0,currencyId/* default */.Z)(currencyB_);\n        if (currencyIdA === newCurrencyIdB) {\n            if (currencyIdB) {\n                router.replace(\"/add/\".concat(currencyIdB, \"/\").concat(newCurrencyIdB), undefined, {\n                    shallow: true\n                });\n            } else {\n                router.replace(\"/add/\".concat(newCurrencyIdB), undefined, {\n                    shallow: true\n                });\n            }\n        } else {\n            router.replace(\"/add/\".concat(currencyIdA || native.symbol, \"/\").concat(newCurrencyIdB), undefined, {\n                shallow: true\n            });\n        }\n    }, [\n        currencyIdA,\n        router,\n        currencyIdB,\n        native\n    ]);\n    return {\n        handleCurrencyASelect: handleCurrencyASelect,\n        handleCurrencyBSelect: handleCurrencyBSelect\n    };\n};\n\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/ChoosePair.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ChoosePair(param) {\n    var currencyA = param.currencyA, currencyB = param.currencyB, error = param.error, onNext = param.onNext;\n    var account = (0,useActiveWeb3React/* default */.Z)().account;\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    var isValid = !error;\n    var ref = useCurrencySelectRoute(), handleCurrencyASelect = ref.handleCurrencyASelect, handleCurrencyBSelect = ref.handleCurrencyBSelect;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,usePairs/* usePair */.yX)(currencyA, currencyB), 2), pair = ref1[1];\n    var poolData = (0,hooks/* useLPApr */.aT)(pair);\n    var ref2 = (0,useTooltip/* default */.Z)(t(\"Based on last 7 days' performance. Does not account for impermanent loss\"), {\n        placement: \"bottom\"\n    }), targetRef = ref2.targetRef, tooltip = ref2.tooltip, tooltipVisible = ref2.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(App/* AppHeader */.t, {\n                title: t(\"Add Liquidity\"),\n                subtitle: t(\"Receive LP tokens and earn 0.17% trading fees\"),\n                helper: t(\"Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.\"),\n                backTo: \"/liquidity\"\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardBody/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            textTransform: \"uppercase\",\n                            color: \"secondary\",\n                            bold: true,\n                            small: true,\n                            pb: \"24px\",\n                            children: t(\"Choose a valid pair\")\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(FlexGap/* default */.Z, {\n                            gap: \"4px\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencySelect, {\n                                    id: \"add-liquidity-select-tokena\",\n                                    selectedCurrency: currencyA,\n                                    onCurrencySelect: handleCurrencyASelect,\n                                    showCommonBases: true,\n                                    commonBasesType: types/* CommonBasesType.LIQUIDITY */.L0.LIQUIDITY\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                    color: \"textSubtle\"\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencySelect, {\n                                    id: \"add-liquidity-select-tokenb\",\n                                    selectedCurrency: currencyB,\n                                    onCurrencySelect: handleCurrencyBSelect,\n                                    showCommonBases: true,\n                                    commonBasesType: types/* CommonBasesType.LIQUIDITY */.L0.LIQUIDITY\n                                })\n                            ]\n                        }),\n                        pair && poolData && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                            mt: \"24px\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                                    ref: targetRef,\n                                    bold: true,\n                                    fontSize: \"12px\",\n                                    color: \"secondary\",\n                                    children: t(\"LP reward APR\")\n                                }),\n                                tooltipVisible && tooltip,\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                    bold: true,\n                                    color: \"primary\",\n                                    children: [\n                                        (0,formatInfoNumbers/* formatAmount */.d)(poolData.lpApr7d),\n                                        \"%\"\n                                    ]\n                                })\n                            ]\n                        })\n                    ]\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardFooter/* default */.Z, {\n                children: !account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {\n                    width: \"100%\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(CommitButton/* CommitButton */.A, {\n                    \"data-test\": \"choose-pair-next\",\n                    width: \"100%\",\n                    variant: !isValid ? \"danger\" : \"primary\",\n                    onClick: onNext,\n                    disabled: !isValid,\n                    children: error !== null && error !== void 0 ? error : t(\"Add Liquidity\")\n                })\n            })\n        ]\n    });\n}\n\n// EXTERNAL MODULE: ./src/components/CurrencyInputPanel/ZapCheckbox.tsx\nvar ZapCheckbox = __webpack_require__(82708);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Steps;\n(function(Steps) {\n    Steps[Steps[\"Choose\"] = 0] = \"Choose\";\n    Steps[Steps[\"Add\"] = 1] = \"Add\";\n})(Steps || (Steps = {}));\nvar zapAddress = (0,addressHelpers/* getZapAddress */._M)();\nfunction AddLiquidity(param) {\n    var currencyA = param.currencyA, currencyB = param.currencyB;\n    var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11, ref12, ref13, ref14, ref15, ref16, ref17, ref18, ref19, ref20, ref21, ref22, ref23, ref24, ref25, ref26, ref27;\n    var router = (0,next_router.useRouter)();\n    var ref28 = (0,useActiveWeb3React/* default */.Z)(), account = ref28.account, chainId = ref28.chainId, isWrongNetwork = ref28.isWrongNetwork;\n    var addPair = (0,user_hooks/* usePairAdder */.uB)();\n    var ref29 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useZapModeManager */.$f)(), 1), zapMode = ref29[0];\n    var expertMode = (0,user_hooks/* useIsExpertMode */.LO)();\n    var ref30 = (0,react.useState)(true), temporarilyZapMode = ref30[0], setTemporarilyZapMode = ref30[1];\n    var ref31 = (0,react.useState)(Steps.Choose), steps = ref31[0], setSteps = ref31[1];\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    (0,react.useEffect)(function() {\n        if (router.query.step === \"1\") {\n            setSteps(Steps.Add);\n        }\n    }, [\n        router.query\n    ]);\n    var zapModeStatus = (0,react.useMemo)(function() {\n        return !!zapMode && temporarilyZapMode;\n    }, [\n        zapMode,\n        temporarilyZapMode\n    ]);\n    // mint state\n    var ref32 = (0,mint_hooks/* useMintState */.OY)(), independentField = ref32.independentField, typedValue = ref32.typedValue, otherTypedValue = ref32.otherTypedValue;\n    var ref33 = (0,mint_hooks/* useDerivedMintInfo */.Qw)(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined), dependentField = ref33.dependentField, currencies = ref33.currencies, pair = ref33.pair, pairState = ref33.pairState, currencyBalances = ref33.currencyBalances, mintParsedAmounts = ref33.parsedAmounts, price = ref33.price, noLiquidity = ref33.noLiquidity, liquidityMinted = ref33.liquidityMinted, poolTokenPercentage = ref33.poolTokenPercentage, error = ref33.error, addError = ref33.addError;\n    var poolData = (0,hooks/* useLPApr */.aT)(pair);\n    var ref34 = (0,useTooltip/* default */.Z)(t(\"Based on last 7 days' performance. Does not account for impermanent loss\"), {\n        placement: \"bottom\"\n    }), targetRef = ref34.targetRef, tooltip = ref34.tooltip, tooltipVisible = ref34.tooltipVisible;\n    var ref35 = (0,mint_hooks/* useMintActionHandlers */.OA)(noLiquidity), onFieldAInput = ref35.onFieldAInput, onFieldBInput = ref35.onFieldBInput;\n    // modal and loading\n    var ref36 = (0,react.useState)({\n        attemptingTxn: false,\n        liquidityErrorMessage: undefined,\n        txHash: undefined\n    }), ref37 = ref36[0], attemptingTxn = ref37.attemptingTxn, liquidityErrorMessage = ref37.liquidityErrorMessage, txHash = ref37.txHash, setLiquidityState = ref36[1];\n    // Zap state\n    var ref38 = (0,react.useState)(true), zapTokenToggleA = ref38[0], setZapTokenToggleA = ref38[1];\n    var ref39 = (0,react.useState)(true), zapTokenToggleB = ref39[0], setZapTokenToggleB = ref39[1];\n    var zapTokenCheckedA = zapTokenToggleA && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref = currencyBalances[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.greaterThan(0));\n    var zapTokenCheckedB = zapTokenToggleB && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref1 = currencyBalances[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref1 === void 0 ? void 0 : ref1.greaterThan(0));\n    // txn values\n    var deadline = (0,useTransactionDeadline/* default */.Z)() // custom from users settings\n    ;\n    var ref40 // custom from users\n     = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserSlippageTolerance */.$2)(), 1), allowedSlippage = ref40[0];\n    // get the max amounts user can add\n    var maxAmounts = [\n        actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n        actions/* Field.CURRENCY_B */.gN.CURRENCY_B\n    ].reduce(function(accumulator, field) {\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accumulator), (0,_define_property/* default */.Z)({}, field, (0,maxAmountSpend/* maxAmountSpend */.i)(currencyBalances[field])));\n    }, {});\n    var canZap = (0,react.useMemo)(function() {\n        return !!zapModeStatus && !noLiquidity && supportChains/* SUPPORT_ZAP.includes */.K.includes(chainId) && !(pair && dist/* JSBI.lessThan */.QA.lessThan(pair.reserve0.quotient, dist/* MINIMUM_LIQUIDITY */.Xh) || pair && dist/* JSBI.lessThan */.QA.lessThan(pair.reserve1.quotient, dist/* MINIMUM_LIQUIDITY */.Xh));\n    }, [\n        chainId,\n        noLiquidity,\n        pair,\n        zapModeStatus\n    ]);\n    var ref41 = useCurrencySelectRoute(), handleCurrencyASelect = ref41.handleCurrencyASelect, handleCurrencyBSelect = ref41.handleCurrencyBSelect;\n    var _ref = (0,mint_hooks/* useZapIn */.eM)({\n        pair: pair,\n        canZap: canZap,\n        currencyA: currencyA,\n        currencyB: currencyB,\n        currencyBalances: currencyBalances,\n        zapTokenCheckedA: zapTokenCheckedA,\n        zapTokenCheckedB: zapTokenCheckedB,\n        maxAmounts: maxAmounts\n    }), zapInEstimating = _ref.zapInEstimating, rebalancing = _ref.rebalancing, zapIn = (0,_object_without_properties/* default */.Z)(_ref, [\n        \"zapInEstimating\",\n        \"rebalancing\"\n    ]);\n    var parsedAmounts = canZap ? zapIn.parsedAmounts : mintParsedAmounts;\n    var preferZapInstead = canZap && !zapIn.noNeedZap;\n    var ref42;\n    // get formatted amounts\n    var formattedAmounts = (0,react.useMemo)(function() {\n        var ref;\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, independentField, canZap && (independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A && !zapTokenCheckedA || independentField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B && !zapTokenCheckedB) ? \"\" : typedValue), (0,_define_property/* default */.Z)(_obj, dependentField, noLiquidity ? otherTypedValue : (ref42 = (ref = parsedAmounts[dependentField]) === null || ref === void 0 ? void 0 : ref.toSignificant(6)) !== null && ref42 !== void 0 ? ref42 : \"\"), _obj;\n    }, [\n        canZap,\n        dependentField,\n        independentField,\n        noLiquidity,\n        otherTypedValue,\n        parsedAmounts,\n        typedValue,\n        zapTokenCheckedA,\n        zapTokenCheckedB, \n    ]);\n    var atMaxAmounts = [\n        actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n        actions/* Field.CURRENCY_B */.gN.CURRENCY_B\n    ].reduce(function(accumulator, field) {\n        var ref;\n        var _field;\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accumulator), (0,_define_property/* default */.Z)({}, field, (ref = maxAmounts[field]) === null || ref === void 0 ? void 0 : ref.equalTo((_field = parsedAmounts[field]) !== null && _field !== void 0 ? _field : \"0\")));\n    }, {});\n    // check whether the user has approved the router on the tokens\n    var ref43 = (0,_sliced_to_array/* default */.Z)((0,useApproveCallback/* useApproveCallback */.qL)(parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], preferZapInstead ? zapAddress : exchange/* ROUTER_ADDRESS */.bR[chainId]), 2), approvalA = ref43[0], approveACallback = ref43[1];\n    var ref44 = (0,_sliced_to_array/* default */.Z)((0,useApproveCallback/* useApproveCallback */.qL)(parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B], preferZapInstead ? zapAddress : exchange/* ROUTER_ADDRESS */.bR[chainId]), 2), approvalB = ref44[0], approveBCallback = ref44[1];\n    var addTransaction = (0,transactions_hooks/* useTransactionAdder */.h7)();\n    var routerContract = (0,utils_exchange/* useRouterContract */.Ti)();\n    function onAdd() {\n        return _onAdd.apply(this, arguments);\n    }\n    function _onAdd() {\n        _onAdd = (0,_async_to_generator/* default */.Z)(function() {\n            var parsedAmountA, parsedAmountB, _obj, amountsMin, estimate, method, args, value, ref, ref1, tokenBIsNative, ref2, ref3, ref4, ref5, ref6;\n            return (0,tslib_es6.__generator)(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        if (!chainId || !account || !routerContract) return [\n                            2\n                        ];\n                        parsedAmountA = mintParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], parsedAmountB = mintParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n                        if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n                            return [\n                                2\n                            ];\n                        }\n                        amountsMin = (_obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, (0,utils_exchange/* calculateSlippageAmount */.uc)(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0]), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, (0,utils_exchange/* calculateSlippageAmount */.uc)(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]), _obj);\n                        if ((currencyA === null || currencyA === void 0 ? void 0 : currencyA.isNative) || (currencyB === null || currencyB === void 0 ? void 0 : currencyB.isNative)) {\n                            ;\n                            tokenBIsNative = currencyB === null || currencyB === void 0 ? void 0 : currencyB.isNative;\n                            estimate = routerContract.estimateGas.addLiquidityETH;\n                            method = routerContract.addLiquidityETH;\n                            ;\n                            args = [\n                                (ref2 = (ref = tokenBIsNative ? currencyA : currencyB) === null || ref === void 0 ? void 0 : (ref1 = ref.wrapped) === null || ref1 === void 0 ? void 0 : ref1.address) !== null && ref2 !== void 0 ? ref2 : \"\",\n                                (tokenBIsNative ? parsedAmountA : parsedAmountB).quotient.toString(),\n                                amountsMin[tokenBIsNative ? actions/* Field.CURRENCY_A */.gN.CURRENCY_A : actions/* Field.CURRENCY_B */.gN.CURRENCY_B].toString(),\n                                amountsMin[tokenBIsNative ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A].toString(),\n                                account,\n                                deadline.toHexString(), \n                            ];\n                            value = bignumber/* BigNumber.from */.O$.from((tokenBIsNative ? parsedAmountB : parsedAmountA).quotient.toString());\n                        } else {\n                            ;\n                            estimate = routerContract.estimateGas.addLiquidity;\n                            method = routerContract.addLiquidity;\n                            ;\n                            args = [\n                                (ref5 = currencyA === null || currencyA === void 0 ? void 0 : (ref3 = currencyA.wrapped) === null || ref3 === void 0 ? void 0 : ref3.address) !== null && ref5 !== void 0 ? ref5 : \"\",\n                                (ref6 = currencyB === null || currencyB === void 0 ? void 0 : (ref4 = currencyB.wrapped) === null || ref4 === void 0 ? void 0 : ref4.address) !== null && ref6 !== void 0 ? ref6 : \"\",\n                                parsedAmountA.quotient.toString(),\n                                parsedAmountB.quotient.toString(),\n                                amountsMin[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].toString(),\n                                amountsMin[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].toString(),\n                                account,\n                                deadline.toHexString(), \n                            ];\n                            value = null;\n                        }\n                        setLiquidityState({\n                            attemptingTxn: true,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined\n                        });\n                        return [\n                            4,\n                            estimate.apply(void 0, (0,_to_consumable_array/* default */.Z)(args).concat([\n                                value ? {\n                                    value: value\n                                } : {}\n                            ])).then(function(estimatedGasLimit) {\n                                return method.apply(void 0, (0,_to_consumable_array/* default */.Z)(args).concat([\n                                    (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, value ? {\n                                        value: value\n                                    } : {}), {\n                                        gasLimit: (0,utils/* calculateGasMargin */.yC)(estimatedGasLimit)\n                                    })\n                                ])).then(function(response) {\n                                    var ref, ref1, ref2, ref3;\n                                    setLiquidityState({\n                                        attemptingTxn: false,\n                                        liquidityErrorMessage: undefined,\n                                        txHash: response.hash\n                                    });\n                                    var symbolA = (ref = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.symbol;\n                                    var amountA = (ref1 = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(3);\n                                    var symbolB = (ref2 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref2 === void 0 ? void 0 : ref2.symbol;\n                                    var amountB = (ref3 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.toSignificant(3);\n                                    addTransaction(response, {\n                                        summary: \"Add \".concat(amountA, \" \").concat(symbolA, \" and \").concat(amountB, \" \").concat(symbolB),\n                                        translatableSummary: {\n                                            text: \"Add %amountA% %symbolA% and %amountB% %symbolB%\",\n                                            data: {\n                                                amountA: amountA,\n                                                symbolA: symbolA,\n                                                amountB: amountB,\n                                                symbolB: symbolB\n                                            }\n                                        },\n                                        type: \"add-liquidity\"\n                                    });\n                                    if (pair) {\n                                        addPair(pair);\n                                    }\n                                });\n                            }).catch(function(err) {\n                                if (err && err.code !== 4001) {\n                                    (0,sentry/* logError */.H)(err);\n                                    console.error(\"Add Liquidity failed\", err, args, value);\n                                }\n                                setLiquidityState({\n                                    attemptingTxn: false,\n                                    liquidityErrorMessage: err && err.code !== 4001 ? t(\"Add liquidity failed: %message%\", {\n                                        message: (0,transactionErrorToUserReadableMessage/* transactionErrorToUserReadableMessage */.e)(err, t)\n                                    }) : undefined,\n                                    txHash: undefined\n                                });\n                            })\n                        ];\n                    case 1:\n                        _state.sent();\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n        return _onAdd.apply(this, arguments);\n    }\n    var ref45, ref46, ref47, ref48, ref49, ref50, ref51, ref52;\n    var pendingText = preferZapInstead ? t(\"Zapping %amountA% %symbolA% and %amountB% %symbolB%\", {\n        amountA: (ref45 = (ref2 = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref2 === void 0 ? void 0 : ref2.toSignificant(6)) !== null && ref45 !== void 0 ? ref45 : \"0\",\n        symbolA: (ref46 = (ref3 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref3 === void 0 ? void 0 : ref3.symbol) !== null && ref46 !== void 0 ? ref46 : \"\",\n        amountB: (ref47 = (ref4 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref4 === void 0 ? void 0 : ref4.toSignificant(6)) !== null && ref47 !== void 0 ? ref47 : \"0\",\n        symbolB: (ref48 = (ref5 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref5 === void 0 ? void 0 : ref5.symbol) !== null && ref48 !== void 0 ? ref48 : \"\"\n    }) : t(\"Supplying %amountA% %symbolA% and %amountB% %symbolB%\", {\n        amountA: (ref49 = (ref6 = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref6 === void 0 ? void 0 : ref6.toSignificant(6)) !== null && ref49 !== void 0 ? ref49 : \"\",\n        symbolA: (ref50 = (ref7 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref7 === void 0 ? void 0 : ref7.symbol) !== null && ref50 !== void 0 ? ref50 : \"\",\n        amountB: (ref51 = (ref8 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref8 === void 0 ? void 0 : ref8.toSignificant(6)) !== null && ref51 !== void 0 ? ref51 : \"\",\n        symbolB: (ref52 = (ref9 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref9 === void 0 ? void 0 : ref9.symbol) !== null && ref52 !== void 0 ? ref52 : \"\"\n    });\n    var handleDismissConfirmation = (0,react.useCallback)(function() {\n        // if there was a tx hash, we want to clear the input\n        if (txHash) {\n            onFieldAInput(\"\");\n        }\n    }, [\n        onFieldAInput,\n        txHash\n    ]);\n    var addIsUnsupported = (0,Trades/* useIsTransactionUnsupported */.mP)(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n    var addIsWarning = (0,Trades/* useIsTransactionWarning */.uK)(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n    var zapContract = (0,useContract/* useZapContract */.n9)(true);\n    var ref53 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(components_ConfirmAddLiquidityModal, {\n        title: noLiquidity ? t(\"You are creating a pool\") : t(\"You will receive\"),\n        customOnDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        hash: txHash,\n        pendingText: pendingText,\n        currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n        allowedSlippage: allowedSlippage,\n        onAdd: onAdd,\n        parsedAmounts: parsedAmounts,\n        currencies: currencies,\n        liquidityErrorMessage: liquidityErrorMessage,\n        price: price,\n        noLiquidity: noLiquidity,\n        poolTokenPercentage: poolTokenPercentage,\n        liquidityMinted: liquidityMinted\n    }), true, true, \"addLiquidityModal\"), 1), onPresentAddLiquidityModal = ref53[0];\n    function onZapIn() {\n        return _onZapIn.apply(this, arguments);\n    }\n    function _onZapIn() {\n        _onZapIn = (0,_async_to_generator/* default */.Z)(function() {\n            var ref, method, args, value, summary, translatableSummary, minAmountOut, ref1, ref2, ref3, ref4, maxAmountIn, amountA, symbolA, amountB, symbolB, tokenBIsBNB, ref5, amount, symbol, ref6, amount1, symbol1, lpSymbol;\n            return (0,tslib_es6.__generator)(this, function(_state) {\n                if (!canZap || !parsedAmounts || !zapIn.zapInEstimated || !chainId || !zapContract) {\n                    return [\n                        2\n                    ];\n                }\n                minAmountOut = zapIn.zapInEstimated.swapAmountOut.mul(10000 - allowedSlippage).div(10000);\n                if (rebalancing) {\n                    ;\n                    maxAmountIn = zapIn.zapInEstimated.swapAmountIn.mul(10000 + allowedSlippage).div(10000);\n                    amountA = (ref1 = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(3);\n                    symbolA = (ref2 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref2 === void 0 ? void 0 : ref2.symbol;\n                    amountB = (ref3 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.toSignificant(3);\n                    symbolB = (ref4 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref4 === void 0 ? void 0 : ref4.symbol;\n                    summary = \"Zap \".concat(amountA, \" \").concat(symbolA, \" and \").concat(amountB, \" \").concat(symbolB);\n                    translatableSummary = {\n                        text: \"Zap %amountA% %symbolA% and %amountB% %symbolB%\",\n                        data: {\n                            amountA: amountA,\n                            symbolA: symbolA,\n                            amountB: amountB,\n                            symbolB: symbolB\n                        }\n                    };\n                    if ((currencyA === null || currencyA === void 0 ? void 0 : currencyA.isNative) || (currencyB === null || currencyB === void 0 ? void 0 : currencyB.isNative)) {\n                        tokenBIsBNB = currencyB === null || currencyB === void 0 ? void 0 : currencyB.isNative;\n                        method = \"zapInBNBRebalancing\";\n                        args = [\n                            (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[tokenBIsBNB ? actions/* Field.CURRENCY_A */.gN.CURRENCY_A : actions/* Field.CURRENCY_B */.gN.CURRENCY_B], chainId).address,\n                            parsedAmounts[tokenBIsBNB ? actions/* Field.CURRENCY_A */.gN.CURRENCY_A : actions/* Field.CURRENCY_B */.gN.CURRENCY_B].quotient.toString(),\n                            pair.liquidityToken.address,\n                            maxAmountIn,\n                            minAmountOut,\n                            zapIn.zapInEstimated.isToken0Sold && !tokenBIsBNB\n                        ];\n                        value = parsedAmounts[tokenBIsBNB ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A].quotient.toString();\n                    } else {\n                        method = \"zapInTokenRebalancing\";\n                        args = [\n                            (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], chainId).address,\n                            (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B], chainId).address,\n                            parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].quotient.toString(),\n                            parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].quotient.toString(),\n                            pair.liquidityToken.address,\n                            maxAmountIn,\n                            minAmountOut,\n                            zapIn.zapInEstimated.isToken0Sold\n                        ];\n                    }\n                } else if ((ref = currencies[zapIn.swapTokenField]) === null || ref === void 0 ? void 0 : ref.isNative) {\n                    ;\n                    method = \"zapInBNB\";\n                    args = [\n                        pair.liquidityToken.address,\n                        minAmountOut\n                    ];\n                    amount = (ref5 = parsedAmounts[zapIn.swapTokenField]) === null || ref5 === void 0 ? void 0 : ref5.toSignificant(3);\n                    symbol = (0,getLpSymbol/* getLPSymbol */.z)(pair.token0.symbol, pair.token1.symbol, chainId);\n                    summary = \"Zap in \".concat(amount, \" BNB for \").concat(symbol);\n                    translatableSummary = {\n                        text: \"Zap in %amount% BNB for %symbol%\",\n                        data: {\n                            amount: amount,\n                            symbol: symbol\n                        }\n                    };\n                    value = parsedAmounts[zapIn.swapTokenField].quotient.toString();\n                } else {\n                    ;\n                    method = \"zapInToken\";\n                    args = [\n                        (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[zapIn.swapTokenField], chainId).address,\n                        parsedAmounts[zapIn.swapTokenField].quotient.toString(),\n                        pair.liquidityToken.address,\n                        minAmountOut, \n                    ];\n                    amount1 = (ref6 = parsedAmounts[zapIn.swapTokenField]) === null || ref6 === void 0 ? void 0 : ref6.toSignificant(3);\n                    symbol1 = currencies[zapIn.swapTokenField].symbol;\n                    lpSymbol = (0,getLpSymbol/* getLPSymbol */.z)(pair.token0.symbol, pair.token1.symbol, chainId);\n                    summary = \"Zap in \".concat(amount1, \" \").concat(symbol1, \" for \").concat(lpSymbol);\n                    translatableSummary = {\n                        text: \"Zap in %amount% %symbol% for %lpSymbol%\",\n                        data: {\n                            amount: amount1,\n                            symbol: symbol1,\n                            lpSymbol: lpSymbol\n                        }\n                    };\n                }\n                setLiquidityState({\n                    attemptingTxn: true,\n                    liquidityErrorMessage: undefined,\n                    txHash: undefined\n                });\n                (0,calls/* callWithEstimateGas */.Zj)(zapContract, method, args, value ? {\n                    value: value\n                } : {}).then(function(response) {\n                    setLiquidityState({\n                        attemptingTxn: false,\n                        liquidityErrorMessage: undefined,\n                        txHash: response.hash\n                    });\n                    addTransaction(response, {\n                        summary: summary,\n                        translatableSummary: translatableSummary,\n                        type: \"add-liquidity\"\n                    });\n                    if (pair) {\n                        addPair(pair);\n                    }\n                }).catch(function(err) {\n                    if (err && err.code !== 4001) {\n                        (0,sentry/* logError */.H)(err);\n                        console.error(\"Add Liquidity failed\", err, args, value);\n                    }\n                    setLiquidityState({\n                        attemptingTxn: false,\n                        liquidityErrorMessage: err && err.code !== 4001 ? t(\"Add liquidity failed: %message%\", {\n                            message: (0,transactionErrorToUserReadableMessage/* transactionErrorToUserReadableMessage */.e)(err, t)\n                        }) : undefined,\n                        txHash: undefined\n                    });\n                });\n                return [\n                    2\n                ];\n            });\n        });\n        return _onZapIn.apply(this, arguments);\n    }\n    var ref54 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(components_ConfirmZapInModal, {\n        title: t(\"You will receive\"),\n        customOnDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        hash: txHash,\n        pendingText: pendingText,\n        pair: pair,\n        allowedSlippage: allowedSlippage,\n        onAdd: onZapIn,\n        parsedAmounts: parsedAmounts,\n        currencies: currencies,\n        liquidityErrorMessage: liquidityErrorMessage,\n        price: price,\n        poolTokenPercentage: zapIn.poolTokenPercentage,\n        liquidityMinted: zapIn.liquidityMinted,\n        zapSwapTokenField: zapIn.swapTokenField,\n        zapSwapOutTokenField: zapIn.swapOutTokenField,\n        zapInEstimated: zapIn.zapInEstimated,\n        rebalancing: rebalancing,\n        zapMode: zapModeStatus,\n        toggleZapMode: setTemporarilyZapMode\n    }), true, true, \"zapInModal\"), 1), onPresentZapInModal = ref54[0];\n    var handleEnableZap = function() {\n        if (!zapMode) {\n            setTemporarilyZapMode(!zapMode);\n        }\n    };\n    var isValid = !error;\n    var errorText = error;\n    if (preferZapInstead) {\n        isValid = !error && !zapIn.error;\n        errorText = error !== null && error !== void 0 ? error : zapIn.error;\n    } else {\n        isValid = !error && !addError;\n        errorText = error !== null && error !== void 0 ? error : addError;\n    }\n    var buttonDisabled = !isValid || (zapIn.parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] || !preferZapInstead && zapTokenCheckedA) && approvalA !== useApproveCallback/* ApprovalState.APPROVED */.UK.APPROVED || (zapIn.parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] || !preferZapInstead && zapTokenCheckedB) && approvalB !== useApproveCallback/* ApprovalState.APPROVED */.UK.APPROVED || zapIn.priceSeverity > 3 && preferZapInstead;\n    var showFieldAApproval = (zapTokenCheckedA || !preferZapInstead) && (approvalA === useApproveCallback/* ApprovalState.NOT_APPROVED */.UK.NOT_APPROVED || approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING);\n    var showFieldBApproval = (zapTokenCheckedB || !preferZapInstead) && (approvalB === useApproveCallback/* ApprovalState.NOT_APPROVED */.UK.NOT_APPROVED || approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING);\n    var shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid;\n    var oneCurrencyIsWNATIVE = Boolean(chainId && (currencyA && currencyA.equals(dist/* WNATIVE */.FX[chainId]) || currencyB && currencyB.equals(dist/* WNATIVE */.FX[chainId])));\n    var noAnyInputAmount = !parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && !parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n    var showAddLiquidity = !!currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && !!currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] && steps === Steps.Add || !canZap;\n    var showZapWarning = preferZapInstead && !noAnyInputAmount && (!rebalancing && !(!zapTokenCheckedA && !zapTokenCheckedB) || rebalancing && zapIn.priceSeverity > 3);\n    var showReduceZapTokenButton = preferZapInstead && (zapIn.priceSeverity > 3 || zapIn.zapInEstimatedError) && maxAmounts[zapIn.swapTokenField];\n    var showRebalancingConvert = !showZapWarning && !noAnyInputAmount && !showReduceZapTokenButton && preferZapInstead && zapIn.isDependentAmountGreaterThanMaxAmount && rebalancing;\n    var showZapIsAvailable = !zapMode && !showZapWarning && !noAnyInputAmount && (!zapTokenCheckedA || !zapTokenCheckedB) && !noLiquidity && !(pair && dist/* JSBI.lessThan */.QA.lessThan(pair.reserve0.quotient, dist/* MINIMUM_LIQUIDITY */.Xh) || pair && dist/* JSBI.lessThan */.QA.lessThan(pair.reserve1.quotient, dist/* MINIMUM_LIQUIDITY */.Xh));\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Page/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(App/* AppBody */.j, {\n                children: [\n                    !showAddLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsx)(ChoosePair, {\n                        error: error,\n                        currencyA: currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                        currencyB: currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                        onNext: function() {\n                            return setSteps(Steps.Add);\n                        }\n                    }),\n                    showAddLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(App/* AppHeader */.t, {\n                                title: ((ref10 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref10 === void 0 ? void 0 : ref10.symbol) && ((ref11 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref11 === void 0 ? void 0 : ref11.symbol) ? \"\".concat((0,getLpSymbol/* getLPSymbol */.z)(currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].symbol, currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].symbol, chainId)) : t(\"Add Liquidity\"),\n                                subtitle: t(\"Receive LP tokens and earn 0.17% trading fees\"),\n                                helper: t(\"Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.\"),\n                                backTo: canZap ? function() {\n                                    return setSteps(Steps.Choose);\n                                } : \"/liquidity\"\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardBody/* default */.Z, {\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                                    gap: \"20px\",\n                                    children: [\n                                        noLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* ColumnCenter */.lg, {\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                                variant: \"warning\",\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"div\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            bold: true,\n                                                            mb: \"8px\",\n                                                            children: t(\"You are the first liquidity provider.\")\n                                                        }),\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            mb: \"8px\",\n                                                            children: t(\"The ratio of tokens you add will set the price of this pool.\")\n                                                        }),\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            children: t(\"Once you are happy with the rate click supply to review.\")\n                                                        })\n                                                    ]\n                                                })\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                            disableCurrencySelect: canZap,\n                                            showBUSD: true,\n                                            onInputBlur: canZap ? zapIn.onInputBlurOnce : undefined,\n                                            error: zapIn.priceSeverity > 3 && zapIn.swapTokenField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n                                            disabled: canZap && !zapTokenCheckedA,\n                                            beforeButton: canZap && /*#__PURE__*/ (0,jsx_runtime.jsx)(ZapCheckbox/* ZapCheckbox */.y, {\n                                                disabled: currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref12 = currencyBalances[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref12 === void 0 ? void 0 : ref12.equalTo(0),\n                                                checked: zapTokenCheckedA,\n                                                onChange: function(e) {\n                                                    setZapTokenToggleA(e.target.checked);\n                                                }\n                                            }),\n                                            onCurrencySelect: handleCurrencyASelect,\n                                            zapStyle: canZap ? \"zap\" : \"noZap\",\n                                            value: formattedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                            onUserInput: onFieldAInput,\n                                            onPercentInput: function(percent) {\n                                                if (maxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) {\n                                                    var ref;\n                                                    var ref1;\n                                                    onFieldAInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.multiply(new dist/* Percent */.gG(percent, 100)).toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                                }\n                                            },\n                                            onMax: function() {\n                                                var ref;\n                                                var ref1;\n                                                onFieldAInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                            },\n                                            showQuickInputButton: true,\n                                            showMaxButton: !atMaxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                            currency: currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                            id: \"add-liquidity-input-tokena\",\n                                            showCommonBases: true,\n                                            commonBasesType: types/* CommonBasesType.LIQUIDITY */.L0.LIQUIDITY\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* ColumnCenter */.lg, {\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                                width: \"16px\"\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                            showBUSD: true,\n                                            onInputBlur: canZap ? zapIn.onInputBlurOnce : undefined,\n                                            disabled: canZap && !zapTokenCheckedB,\n                                            error: zapIn.priceSeverity > 3 && zapIn.swapTokenField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B,\n                                            beforeButton: canZap && /*#__PURE__*/ (0,jsx_runtime.jsx)(ZapCheckbox/* ZapCheckbox */.y, {\n                                                disabled: currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref13 = currencyBalances[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref13 === void 0 ? void 0 : ref13.equalTo(0),\n                                                checked: zapTokenCheckedB,\n                                                onChange: function(e) {\n                                                    setZapTokenToggleB(e.target.checked);\n                                                }\n                                            }),\n                                            onCurrencySelect: handleCurrencyBSelect,\n                                            disableCurrencySelect: canZap,\n                                            zapStyle: canZap ? \"zap\" : \"noZap\",\n                                            value: formattedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                            onUserInput: onFieldBInput,\n                                            onPercentInput: function(percent) {\n                                                if (maxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) {\n                                                    var ref;\n                                                    var ref1;\n                                                    onFieldBInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref === void 0 ? void 0 : ref.multiply(new dist/* Percent */.gG(percent, 100)).toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                                }\n                                            },\n                                            onMax: function() {\n                                                var ref;\n                                                var ref1;\n                                                onFieldBInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                            },\n                                            showQuickInputButton: true,\n                                            showMaxButton: !atMaxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                            currency: currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                            id: \"add-liquidity-input-tokenb\",\n                                            showCommonBases: true,\n                                            commonBasesType: types/* CommonBasesType.LIQUIDITY */.L0.LIQUIDITY\n                                        }),\n                                        showZapWarning && /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                            variant: zapIn.priceSeverity > 3 ? \"danger\" : \"warning\",\n                                            children: zapIn.priceSeverity > 3 ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                children: [\n                                                    t(\"Price Impact Too High.\"),\n                                                    \" \",\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"strong\", {\n                                                        children: t(\"Reduce amount of %token% to maximum limit\", {\n                                                            token: (ref14 = currencies[zapIn.swapTokenField]) === null || ref14 === void 0 ? void 0 : ref14.symbol\n                                                        })\n                                                    })\n                                                ]\n                                            }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"strong\", {\n                                                        children: t(\"No %token% input.\", {\n                                                            token: (ref15 = currencies[zapIn.swapOutTokenField]) === null || ref15 === void 0 ? void 0 : ref15.symbol\n                                                        })\n                                                    }),\n                                                    \" \",\n                                                    t(\"Some of your %token0% will be converted to %token1%.\", {\n                                                        token0: (ref16 = currencies[zapIn.swapTokenField]) === null || ref16 === void 0 ? void 0 : ref16.symbol,\n                                                        token1: (ref17 = currencies[zapIn.swapOutTokenField]) === null || ref17 === void 0 ? void 0 : ref17.symbol\n                                                    })\n                                                ]\n                                            })\n                                        }),\n                                        showReduceZapTokenButton && /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowFixed */.DA, {\n                                            style: {\n                                                margin: \"auto\"\n                                            },\n                                            onClick: function() {\n                                                return zapIn.convertToMaxZappable();\n                                            },\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                variant: \"secondary\",\n                                                scale: \"sm\",\n                                                children: t(\"Reduce %token%\", {\n                                                    token: (ref18 = currencies[zapIn.swapTokenField]) === null || ref18 === void 0 ? void 0 : ref18.symbol\n                                                })\n                                            })\n                                        }),\n                                        showZapIsAvailable && /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                            variant: \"warning\",\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                children: [\n                                                    t(\"Zap allows you to add liquidity with only 1 single token. Click\"),\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                        p: \"0 4px\",\n                                                        scale: \"sm\",\n                                                        variant: \"text\",\n                                                        height: \"auto\",\n                                                        onClick: handleEnableZap,\n                                                        children: t(\"here\")\n                                                    }),\n                                                    t(\"to try.\")\n                                                ]\n                                            })\n                                        }),\n                                        showRebalancingConvert && /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                            variant: \"warning\",\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"strong\", {\n                                                            children: t(\"Not enough %token%.\", {\n                                                                token: (ref19 = currencies[zapIn.swapOutTokenField]) === null || ref19 === void 0 ? void 0 : ref19.symbol\n                                                            })\n                                                        }),\n                                                        \" \",\n                                                        zapIn.gasOverhead ? t(\"Some of your %token0% will be converted to %token1% before adding liquidity, but this may cause higher gas fees.\", {\n                                                            token0: (ref20 = currencies[zapIn.swapTokenField]) === null || ref20 === void 0 ? void 0 : ref20.symbol,\n                                                            token1: (ref21 = currencies[zapIn.swapOutTokenField]) === null || ref21 === void 0 ? void 0 : ref21.symbol\n                                                        }) : t(\"Some of your %token0% will be converted to %token1%.\", {\n                                                            token0: (ref22 = currencies[zapIn.swapTokenField]) === null || ref22 === void 0 ? void 0 : ref22.symbol,\n                                                            token1: (ref23 = currencies[zapIn.swapOutTokenField]) === null || ref23 === void 0 ? void 0 : ref23.symbol\n                                                        })\n                                                    ]\n                                                })\n                                            })\n                                        }),\n                                        showRebalancingConvert && /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowFixed */.DA, {\n                                            style: {\n                                                margin: \"auto\"\n                                            },\n                                            onClick: function() {\n                                                if (dependentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A) {\n                                                    var ref;\n                                                    var ref1;\n                                                    onFieldAInput((ref1 = (ref = maxAmounts[dependentField]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                                } else {\n                                                    var ref2;\n                                                    var ref3;\n                                                    onFieldBInput((ref3 = (ref2 = maxAmounts[dependentField]) === null || ref2 === void 0 ? void 0 : ref2.toExact()) !== null && ref3 !== void 0 ? ref3 : \"\");\n                                                }\n                                            },\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                variant: \"secondary\",\n                                                scale: \"sm\",\n                                                children: t(\"Don’t convert\")\n                                            })\n                                        }),\n                                        currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] && pairState !== usePairs/* PairState.INVALID */._G.INVALID && /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* LightCard */.hl, {\n                                                padding: \"0px\",\n                                                borderRadius: \"20px\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowBetween */.m0, {\n                                                        padding: \"1rem\",\n                                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            fontSize: \"14px\",\n                                                            children: noLiquidity ? t(\"Initial prices and pool share\") : t(\"Prices and pool share\")\n                                                        })\n                                                    }),\n                                                    \" \",\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Card/* LightCard */.hl, {\n                                                        padding: \"1rem\",\n                                                        borderRadius: \"20px\",\n                                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(AddLiquidity_PoolPriceBar, {\n                                                            currencies: currencies,\n                                                            poolTokenPercentage: preferZapInstead ? zapIn.poolTokenPercentage : poolTokenPercentage,\n                                                            noLiquidity: noLiquidity,\n                                                            price: price\n                                                        })\n                                                    })\n                                                ]\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                    bold: true,\n                                                    fontSize: \"12px\",\n                                                    color: \"secondary\",\n                                                    children: t(\"Slippage Tolerance\")\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                                    bold: true,\n                                                    color: \"primary\",\n                                                    children: [\n                                                        allowedSlippage / 100,\n                                                        \"%\"\n                                                    ]\n                                                })\n                                            ]\n                                        }),\n                                        pair && poolData && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                                                    ref: targetRef,\n                                                    bold: true,\n                                                    fontSize: \"12px\",\n                                                    color: \"secondary\",\n                                                    children: t(\"LP reward APR\")\n                                                }),\n                                                tooltipVisible && tooltip,\n                                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                                    bold: true,\n                                                    color: \"primary\",\n                                                    children: [\n                                                        (0,formatInfoNumbers/* formatAmount */.d)(poolData.lpApr7d),\n                                                        \"%\"\n                                                    ]\n                                                })\n                                            ]\n                                        }),\n                                        addIsUnsupported || addIsWarning ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                            disabled: true,\n                                            mb: \"4px\",\n                                            children: t(\"Unsupported Asset\")\n                                        }) : !account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {}) : isWrongNetwork ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CommitButton/* CommitButton */.A, {}) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                                            gap: \"md\",\n                                            children: [\n                                                shouldShowApprovalGroup && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                                    style: {\n                                                        gap: \"8px\"\n                                                    },\n                                                    children: [\n                                                        showFieldAApproval && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                            onClick: approveACallback,\n                                                            disabled: approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING,\n                                                            width: \"100%\",\n                                                            children: approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Dots/* default */.Z, {\n                                                                children: t(\"Enabling %asset%\", {\n                                                                    asset: (ref24 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref24 === void 0 ? void 0 : ref24.symbol\n                                                                })\n                                                            }) : t(\"Enable %asset%\", {\n                                                                asset: (ref25 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref25 === void 0 ? void 0 : ref25.symbol\n                                                            })\n                                                        }),\n                                                        showFieldBApproval && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                            onClick: approveBCallback,\n                                                            disabled: approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING,\n                                                            width: \"100%\",\n                                                            children: approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Dots/* default */.Z, {\n                                                                children: t(\"Enabling %asset%\", {\n                                                                    asset: (ref26 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref26 === void 0 ? void 0 : ref26.symbol\n                                                                })\n                                                            }) : t(\"Enable %asset%\", {\n                                                                asset: (ref27 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref27 === void 0 ? void 0 : ref27.symbol\n                                                            })\n                                                        })\n                                                    ]\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(CommitButton/* CommitButton */.A, {\n                                                    isLoading: preferZapInstead && zapInEstimating,\n                                                    variant: !isValid || zapIn.priceSeverity > 2 ? \"danger\" : \"primary\",\n                                                    onClick: function() {\n                                                        if (preferZapInstead) {\n                                                            setLiquidityState({\n                                                                attemptingTxn: false,\n                                                                liquidityErrorMessage: undefined,\n                                                                txHash: undefined\n                                                            });\n                                                            onPresentZapInModal();\n                                                            return;\n                                                        }\n                                                        if (expertMode) {\n                                                            onAdd();\n                                                        } else {\n                                                            setLiquidityState({\n                                                                attemptingTxn: false,\n                                                                liquidityErrorMessage: undefined,\n                                                                txHash: undefined\n                                                            });\n                                                            onPresentAddLiquidityModal();\n                                                        }\n                                                    },\n                                                    disabled: buttonDisabled,\n                                                    children: errorText || t(\"Supply\")\n                                                })\n                                            ]\n                                        })\n                                    ]\n                                })\n                            })\n                        ]\n                    })\n                ]\n            }),\n            !(addIsUnsupported || addIsWarning) ? pair && !noLiquidity && pairState !== usePairs/* PairState.INVALID */._G.INVALID ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n                style: {\n                    minWidth: \"20rem\",\n                    width: \"100%\",\n                    maxWidth: \"400px\",\n                    marginTop: \"1rem\"\n                },\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(PositionCard/* MinimalPositionCard */.WP, {\n                    showUnwrapped: oneCurrencyIsWNATIVE,\n                    pair: pair\n                })\n            }) : null : /*#__PURE__*/ (0,jsx_runtime.jsx)(UnsupportedCurrencyFooter/* default */.Z, {\n                currencies: [\n                    currencies.CURRENCY_A,\n                    currencies.CURRENCY_B\n                ]\n            })\n        ]\n    });\n}\n\n// EXTERNAL MODULE: ./src/views/Swap/StableSwap/hooks/useStableConfig.ts + 3 modules\nvar useStableConfig = __webpack_require__(86849);\n// EXTERNAL MODULE: ./src/views/AddLiquidity/AddStableLiquidity/hooks/useStableLPDerivedMintInfo.tsx\nvar useStableLPDerivedMintInfo = __webpack_require__(70343);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/AddStableLiquidity/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction AddStableLiquidity(param) {\n    var currencyA = param.currencyA, currencyB = param.currencyB;\n    var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;\n    var ref10 = (0,useActiveWeb3React/* default */.Z)(), account = ref10.account, chainId = ref10.chainId, isWrongNetwork = ref10.isWrongNetwork;\n    var expertMode = (0,user_hooks/* useIsExpertMode */.LO)();\n    var t = (0,localization_src/* useTranslation */.$G)().t;\n    // mint state\n    var ref11 = (0,mint_hooks/* useMintState */.OY)(), independentField = ref11.independentField, typedValue = ref11.typedValue, otherTypedValue = ref11.otherTypedValue;\n    var ref12 = (0,useStableLPDerivedMintInfo/* useStableLPDerivedMintInfo */.L)(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined), dependentField = ref12.dependentField, currencies = ref12.currencies, pair = ref12.pair, pairState = ref12.pairState, currencyBalances = ref12.currencyBalances, parsedAmounts = ref12.parsedAmounts, price = ref12.price, noLiquidity = ref12.noLiquidity, liquidityMinted = ref12.liquidityMinted, poolTokenPercentage = ref12.poolTokenPercentage, error = ref12.error, addError = ref12.addError;\n    var ref13 = (0,mint_hooks/* useMintActionHandlers */.OA)(true), onFieldAInput = ref13.onFieldAInput, onFieldBInput = ref13.onFieldBInput;\n    // modal and loading\n    var ref14 = (0,react.useState)({\n        attemptingTxn: false,\n        liquidityErrorMessage: undefined,\n        txHash: undefined\n    }), ref15 = ref14[0], attemptingTxn = ref15.attemptingTxn, liquidityErrorMessage = ref15.liquidityErrorMessage, txHash = ref15.txHash, setLiquidityState = ref14[1];\n    // txn values\n    var ref16 // custom from users\n     = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserSlippageTolerance */.$2)(), 1), allowedSlippage = ref16[0];\n    // get the max amounts user can add\n    var maxAmounts = [\n        actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n        actions/* Field.CURRENCY_B */.gN.CURRENCY_B\n    ].reduce(function(accumulator, field) {\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accumulator), (0,_define_property/* default */.Z)({}, field, (0,maxAmountSpend/* maxAmountSpend */.i)(currencyBalances[field])));\n    }, {});\n    var ref17 = useCurrencySelectRoute(), handleCurrencyASelect = ref17.handleCurrencyASelect, handleCurrencyBSelect = ref17.handleCurrencyBSelect;\n    // get formatted amounts\n    var formattedAmounts = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, independentField, typedValue), (0,_define_property/* default */.Z)(_obj, dependentField, otherTypedValue), _obj;\n    }, [\n        dependentField,\n        independentField,\n        otherTypedValue,\n        typedValue\n    ]);\n    var atMaxAmounts = [\n        actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n        actions/* Field.CURRENCY_B */.gN.CURRENCY_B\n    ].reduce(function(accumulator, field) {\n        var ref;\n        var _field;\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accumulator), (0,_define_property/* default */.Z)({}, field, (ref = maxAmounts[field]) === null || ref === void 0 ? void 0 : ref.equalTo((_field = parsedAmounts[field]) !== null && _field !== void 0 ? _field : \"0\")));\n    }, {});\n    var ref18 = (0,react.useContext)(useStableConfig/* StableConfigContext */.UA), stableSwapContract = ref18.stableSwapContract, stableSwapConfig = ref18.stableSwapConfig;\n    // check whether the user has approved tokens for addling LPs\n    var ref19 = (0,_sliced_to_array/* default */.Z)((0,useApproveCallback/* useApproveCallback */.qL)(parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], stableSwapContract === null || stableSwapContract === void 0 ? void 0 : stableSwapContract.address), 2), approvalA = ref19[0], approveACallback = ref19[1];\n    var ref20 = (0,_sliced_to_array/* default */.Z)((0,useApproveCallback/* useApproveCallback */.qL)(parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B], stableSwapContract === null || stableSwapContract === void 0 ? void 0 : stableSwapContract.address), 2), approvalB = ref20[0], approveBCallback = ref20[1];\n    var addTransaction = (0,transactions_hooks/* useTransactionAdder */.h7)();\n    function onAdd() {\n        return _onAdd.apply(this, arguments);\n    }\n    function _onAdd() {\n        _onAdd = (0,_async_to_generator/* default */.Z)(function() {\n            var ref, ref1, ref2, ref3, ref4, ref5, ref6, parsedAmountA, parsedAmountB, lpMintedSlippage, estimate, method, tokenAmounts, args, value;\n            return (0,tslib_es6.__generator)(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        if (!chainId || !account || !stableSwapContract) return [\n                            2\n                        ];\n                        parsedAmountA = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], parsedAmountB = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n                        if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n                            return [\n                                2\n                            ];\n                        }\n                        lpMintedSlippage = (0,utils_exchange/* calculateSlippageAmount */.uc)(liquidityMinted, noLiquidity ? 0 : allowedSlippage)[0];\n                        estimate = stableSwapContract.estimateGas.add_liquidity;\n                        method = stableSwapContract.add_liquidity;\n                        tokenAmounts = (stableSwapConfig === null || stableSwapConfig === void 0 ? void 0 : (ref = stableSwapConfig.token0) === null || ref === void 0 ? void 0 : ref.address) === (parsedAmountA === null || parsedAmountA === void 0 ? void 0 : (ref1 = parsedAmountA.currency) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.wrapped) === null || ref2 === void 0 ? void 0 : ref2.address) ? [\n                            parsedAmountA === null || parsedAmountA === void 0 ? void 0 : (ref3 = parsedAmountA.quotient) === null || ref3 === void 0 ? void 0 : ref3.toString(),\n                            parsedAmountB === null || parsedAmountB === void 0 ? void 0 : (ref4 = parsedAmountB.quotient) === null || ref4 === void 0 ? void 0 : ref4.toString()\n                        ] : [\n                            parsedAmountB === null || parsedAmountB === void 0 ? void 0 : (ref5 = parsedAmountB.quotient) === null || ref5 === void 0 ? void 0 : ref5.toString(),\n                            parsedAmountA === null || parsedAmountA === void 0 ? void 0 : (ref6 = parsedAmountA.quotient) === null || ref6 === void 0 ? void 0 : ref6.toString()\n                        ];\n                        args = [\n                            tokenAmounts,\n                            lpMintedSlippage === null || lpMintedSlippage === void 0 ? void 0 : lpMintedSlippage.toString()\n                        ];\n                        value = null;\n                        setLiquidityState({\n                            attemptingTxn: true,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined\n                        });\n                        return [\n                            4,\n                            estimate.apply(void 0, (0,_to_consumable_array/* default */.Z)(args).concat([\n                                value ? {\n                                    value: value\n                                } : {}\n                            ])).then(function(estimatedGasLimit) {\n                                return method.apply(void 0, (0,_to_consumable_array/* default */.Z)(args).concat([\n                                    (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, value ? {\n                                        value: value\n                                    } : {}), {\n                                        gasLimit: (0,utils/* calculateGasMargin */.yC)(estimatedGasLimit)\n                                    })\n                                ])).then(function(response) {\n                                    var ref, ref1, ref2, ref3;\n                                    setLiquidityState({\n                                        attemptingTxn: false,\n                                        liquidityErrorMessage: undefined,\n                                        txHash: response.hash\n                                    });\n                                    var symbolA = (ref = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.symbol;\n                                    var amountA = (ref1 = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(3);\n                                    var symbolB = (ref2 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref2 === void 0 ? void 0 : ref2.symbol;\n                                    var amountB = (ref3 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.toSignificant(3);\n                                    addTransaction(response, {\n                                        summary: \"Add \".concat(amountA, \" \").concat(symbolA, \" and \").concat(amountB, \" \").concat(symbolB),\n                                        translatableSummary: {\n                                            text: \"Add %amountA% %symbolA% and %amountB% %symbolB%\",\n                                            data: {\n                                                amountA: amountA,\n                                                symbolA: symbolA,\n                                                amountB: amountB,\n                                                symbolB: symbolB\n                                            }\n                                        },\n                                        type: \"add-liquidity\"\n                                    });\n                                });\n                            }).catch(function(err) {\n                                if (err && err.code !== 4001) {\n                                    (0,sentry/* logError */.H)(err);\n                                    console.error(\"Add Liquidity failed\", err, args, value);\n                                }\n                                setLiquidityState({\n                                    attemptingTxn: false,\n                                    liquidityErrorMessage: err && err.code !== 4001 ? t(\"Add liquidity failed: %message%\", {\n                                        message: (0,transactionErrorToUserReadableMessage/* transactionErrorToUserReadableMessage */.e)(err, t)\n                                    }) : undefined,\n                                    txHash: undefined\n                                });\n                            })\n                        ];\n                    case 1:\n                        _state.sent();\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n        return _onAdd.apply(this, arguments);\n    }\n    var ref21, ref22, ref23, ref24;\n    var pendingText = t(\"Supplying %amountA% %symbolA% and %amountB% %symbolB%\", {\n        amountA: (ref21 = (ref = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toSignificant(6)) !== null && ref21 !== void 0 ? ref21 : \"\",\n        symbolA: (ref22 = (ref1 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.symbol) !== null && ref22 !== void 0 ? ref22 : \"\",\n        amountB: (ref23 = (ref2 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref2 === void 0 ? void 0 : ref2.toSignificant(6)) !== null && ref23 !== void 0 ? ref23 : \"\",\n        symbolB: (ref24 = (ref3 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.symbol) !== null && ref24 !== void 0 ? ref24 : \"\"\n    });\n    var handleDismissConfirmation = (0,react.useCallback)(function() {\n        // if there was a tx hash, we want to clear the input\n        if (txHash) {\n            onFieldAInput(\"\");\n            onFieldBInput(\"\");\n        }\n    }, [\n        onFieldAInput,\n        onFieldBInput,\n        txHash\n    ]);\n    var ref25 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(components_ConfirmAddLiquidityModal, {\n        title: noLiquidity ? t(\"You are creating a pool\") : t(\"You will receive\"),\n        customOnDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        hash: txHash,\n        pendingText: pendingText,\n        currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n        allowedSlippage: allowedSlippage,\n        onAdd: onAdd,\n        parsedAmounts: parsedAmounts,\n        currencies: currencies,\n        liquidityErrorMessage: liquidityErrorMessage,\n        price: price,\n        noLiquidity: noLiquidity,\n        poolTokenPercentage: poolTokenPercentage,\n        liquidityMinted: liquidityMinted,\n        isStable: true\n    }), true, true, \"addLiquidityModal\"), 1), onPresentAddLiquidityModal = ref25[0];\n    var isValid = !error;\n    var errorText = error;\n    isValid = !error && !addError;\n    errorText = error !== null && error !== void 0 ? error : addError;\n    var buttonDisabled = !isValid || approvalA !== useApproveCallback/* ApprovalState.APPROVED */.UK.APPROVED || approvalB !== useApproveCallback/* ApprovalState.APPROVED */.UK.APPROVED;\n    var showFieldAApproval = approvalA === useApproveCallback/* ApprovalState.NOT_APPROVED */.UK.NOT_APPROVED || approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING;\n    var showFieldBApproval = approvalB === useApproveCallback/* ApprovalState.NOT_APPROVED */.UK.NOT_APPROVED || approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING;\n    var shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid;\n    var oneCurrencyIsWNATIVE = Boolean(chainId && (currencyA && currencyA.equals(dist/* WNATIVE */.FX[chainId]) || currencyB && currencyB.equals(dist/* WNATIVE */.FX[chainId])));\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Page/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(App/* AppBody */.j, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(App/* AppHeader */.t, {\n                            title: ((ref4 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref4 === void 0 ? void 0 : ref4.symbol) && ((ref5 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref5 === void 0 ? void 0 : ref5.symbol) ? \"\".concat(currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].symbol, \"-\").concat(currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].symbol, \" Stable LP\") : t(\"Add Stable Liquidity\"),\n                            backTo: \"/liquidity\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(CardBody/* default */.Z, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                                gap: \"20px\",\n                                children: [\n                                    noLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* ColumnCenter */.lg, {\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                            variant: \"warning\",\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                        bold: true,\n                                                        mb: \"8px\",\n                                                        children: t(\"You are the first liquidity provider.\")\n                                                    }),\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                        mb: \"8px\",\n                                                        children: t(\"The ratio of tokens you add will set the price of this pool.\")\n                                                    }),\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                        children: t(\"Once you are happy with the rate click supply to review.\")\n                                                    })\n                                                ]\n                                            })\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                        showBUSD: true,\n                                        onCurrencySelect: handleCurrencyASelect,\n                                        zapStyle: \"noZap\",\n                                        value: formattedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                        onUserInput: onFieldAInput,\n                                        onMax: function() {\n                                            var ref;\n                                            var ref1;\n                                            onFieldAInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                        },\n                                        showMaxButton: !atMaxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                        currency: currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                        id: \"add-liquidity-input-tokena\",\n                                        showCommonBases: true,\n                                        commonBasesType: types/* CommonBasesType.LIQUIDITY */.L0.LIQUIDITY\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* ColumnCenter */.lg, {\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                            width: \"16px\"\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                        showBUSD: true,\n                                        onCurrencySelect: handleCurrencyBSelect,\n                                        zapStyle: \"noZap\",\n                                        value: formattedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                        onUserInput: onFieldBInput,\n                                        onMax: function() {\n                                            var ref;\n                                            var ref1;\n                                            onFieldBInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                        },\n                                        showMaxButton: !atMaxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                        currency: currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                        id: \"add-liquidity-input-tokenb\",\n                                        showCommonBases: true,\n                                        commonBasesType: types/* CommonBasesType.LIQUIDITY */.L0.LIQUIDITY\n                                    }),\n                                    currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] && pairState !== usePairs/* PairState.INVALID */._G.INVALID && /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* LightCard */.hl, {\n                                            padding: \"0px\",\n                                            borderRadius: \"20px\",\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowBetween */.m0, {\n                                                    padding: \"1rem\",\n                                                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                        fontSize: \"14px\",\n                                                        children: noLiquidity ? t(\"Initial prices and pool share\") : t(\"Prices and pool share\")\n                                                    })\n                                                }),\n                                                \" \",\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Card/* LightCard */.hl, {\n                                                    padding: \"1rem\",\n                                                    borderRadius: \"20px\",\n                                                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(AddLiquidity_PoolPriceBar, {\n                                                        currencies: currencies,\n                                                        poolTokenPercentage: poolTokenPercentage,\n                                                        noLiquidity: noLiquidity,\n                                                        price: price\n                                                    })\n                                                })\n                                            ]\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                bold: true,\n                                                fontSize: \"12px\",\n                                                color: \"secondary\",\n                                                children: t(\"Slippage Tolerance\")\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                                bold: true,\n                                                color: \"primary\",\n                                                children: [\n                                                    allowedSlippage / 100,\n                                                    \"%\"\n                                                ]\n                                            })\n                                        ]\n                                    }),\n                                    !account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {}) : isWrongNetwork ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CommitButton/* CommitButton */.A, {}) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                                        gap: \"md\",\n                                        children: [\n                                            shouldShowApprovalGroup && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                                style: {\n                                                    gap: \"8px\"\n                                                },\n                                                children: [\n                                                    showFieldAApproval && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                        onClick: approveACallback,\n                                                        disabled: approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING,\n                                                        width: \"100%\",\n                                                        children: approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Dots/* default */.Z, {\n                                                            children: t(\"Enabling %asset%\", {\n                                                                asset: (ref6 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref6 === void 0 ? void 0 : ref6.symbol\n                                                            })\n                                                        }) : t(\"Enable %asset%\", {\n                                                            asset: (ref7 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref7 === void 0 ? void 0 : ref7.symbol\n                                                        })\n                                                    }),\n                                                    showFieldBApproval && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                        onClick: approveBCallback,\n                                                        disabled: approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING,\n                                                        width: \"100%\",\n                                                        children: approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Dots/* default */.Z, {\n                                                            children: t(\"Enabling %asset%\", {\n                                                                asset: (ref8 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref8 === void 0 ? void 0 : ref8.symbol\n                                                            })\n                                                        }) : t(\"Enable %asset%\", {\n                                                            asset: (ref9 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref9 === void 0 ? void 0 : ref9.symbol\n                                                        })\n                                                    })\n                                                ]\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(CommitButton/* CommitButton */.A, {\n                                                variant: !isValid ? \"danger\" : \"primary\",\n                                                onClick: function() {\n                                                    if (expertMode) {\n                                                        onAdd();\n                                                    } else {\n                                                        setLiquidityState({\n                                                            attemptingTxn: false,\n                                                            liquidityErrorMessage: undefined,\n                                                            txHash: undefined\n                                                        });\n                                                        onPresentAddLiquidityModal();\n                                                    }\n                                                },\n                                                disabled: buttonDisabled,\n                                                children: errorText || t(\"Supply\")\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        })\n                    ]\n                })\n            }),\n            pair && !noLiquidity && pairState !== usePairs/* PairState.INVALID */._G.INVALID ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n                style: {\n                    minWidth: \"20rem\",\n                    width: \"100%\",\n                    maxWidth: \"400px\",\n                    marginTop: \"1rem\"\n                },\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(PositionCard/* MinimalPositionCard */.WP, {\n                    showUnwrapped: oneCurrencyIsWNATIVE,\n                    pair: pair\n                })\n            }) : null\n        ]\n    });\n}\n\n;// CONCATENATED MODULE: ./src/pages/add/[[...currency]].tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddLiquidityPage = function() {\n    var ref, ref1;\n    var router = (0,next_router.useRouter)();\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var dispatch = (0,state/* useAppDispatch */.TL)();\n    var native = (0,useNativeCurrency/* default */.Z)();\n    var ref2;\n    var ref3 = (0,_sliced_to_array/* default */.Z)(router.query.currency || [\n        native.symbol,\n        (ref2 = (ref = src/* CAKE */.cr[chainId]) === null || ref === void 0 ? void 0 : ref.address) !== null && ref2 !== void 0 ? ref2 : (ref1 = src/* USDC */.gn[chainId]) === null || ref1 === void 0 ? void 0 : ref1.address, \n    ], 2), currencyIdA = ref3[0], currencyIdB = ref3[1];\n    var currencyA = (0,Tokens/* useCurrency */.U8)(currencyIdA);\n    var currencyB = (0,Tokens/* useCurrency */.U8)(currencyIdB);\n    var _ref = (0,useStableConfig/* default */.ZP)({\n        tokenA: currencyA,\n        tokenB: currencyB\n    }), stableSwapConfig = _ref.stableSwapConfig, stableConfig = (0,_object_without_properties/* default */.Z)(_ref, [\n        \"stableSwapConfig\"\n    ]);\n    (0,react.useEffect)(function() {\n        if (!currencyIdA && !currencyIdB) {\n            dispatch((0,actions/* resetMintState */.dA)());\n        }\n    }, [\n        dispatch,\n        currencyIdA,\n        currencyIdB\n    ]);\n    return stableSwapConfig ? /*#__PURE__*/ (0,jsx_runtime.jsx)(useStableConfig/* StableConfigContext.Provider */.UA.Provider, {\n        value: (0,_object_spread/* default */.Z)({\n            stableSwapConfig: stableSwapConfig\n        }, stableConfig),\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(AddStableLiquidity, {\n            currencyA: currencyA,\n            currencyB: currencyB\n        })\n    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(AddLiquidity, {\n        currencyA: currencyA,\n        currencyB: currencyB\n    });\n};\nAddLiquidityPage.chains = wagmi/* CHAIN_IDS */.vo;\nvar __N_SSG = true;\n/* harmony default export */ var _currency_ = (AddLiquidityPage);\n\n\n/***/ }),\n\n/***/ 6973:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"i\": function() { return /* binding */ maxAmountSpend; }\n/* harmony export */ });\n/* harmony import */ var _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90902);\n/* harmony import */ var config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(92794);\n\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */ function maxAmountSpend(currencyAmount) {\n    var ref;\n    if (!currencyAmount) return undefined;\n    if ((ref = currencyAmount.currency) === null || ref === void 0 ? void 0 : ref.isNative) {\n        if (_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.greaterThan */ .QA.greaterThan(currencyAmount.quotient, config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__/* .MIN_BNB */ .Uz)) {\n            return _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .CurrencyAmount.fromRawAmount */ .ih.fromRawAmount(currencyAmount.currency, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.subtract */ .QA.subtract(currencyAmount.quotient, config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__/* .MIN_BNB */ .Uz));\n        }\n        return _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .CurrencyAmount.fromRawAmount */ .ih.fromRawAmount(currencyAmount.currency, config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__/* .BIG_INT_ZERO */ .iV);\n    }\n    return currencyAmount;\n}\n\n\n/***/ }),\n\n/***/ 67252:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3411);\n/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78545);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  border-top: 1px solid \",\n        \";\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\nvar CardFooter = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-5ed8a823-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, styled_system__WEBPACK_IMPORTED_MODULE_1__/* .space */ .Dh);\nCardFooter.defaultProps = {\n    p: \"24px\"\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CardFooter);\n\n\n/***/ }),\n\n/***/ 20345:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96670);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n/* harmony import */ var _Svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62923);\n\n\n\n\n\nvar Icon = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Svg__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n        viewBox: \"0 0 24 24\"\n    }, props), {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\"\n        })\n    }));\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Icon);\n\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [1246,4609,4273,6401,3763,8934,7553,2776,9694,9051,3649,5366,6966,6071,9774,2888,179], function() { return __webpack_exec__(9388); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","window","__NEXT_P","__webpack_exports__","d","UnsupportedCurrencyFooter","_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_14__","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_15__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_16__","_pancakeswap_localization__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_10__","components_Layout_Row__WEBPACK_IMPORTED_MODULE_3__","components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__","components_Logo__WEBPACK_IMPORTED_MODULE_5__","hooks_useActiveWeb3React__WEBPACK_IMPORTED_MODULE_6__","utils__WEBPACK_IMPORTED_MODULE_7__","utils_wrappedCurrency__WEBPACK_IMPORTED_MODULE_8__","_hooks_Tokens__WEBPACK_IMPORTED_MODULE_9__","_templateObject","data","Z","DetailsFooter","ZP","div","withConfig","componentId","param","theme","colors","text","invertedContrast","UnsupportedModal","currencies","onDismiss","chainId","t","$G","tokens","map","currency","pu","unsupportedTokens","l6","jsx","title","children","jsxs","Tz","gap","token","ref","Object","keys","includes","address","BA","align","Xw","size","symbol","external","small","color","href","C","concat","onPresentModal","variant","onClick","r","__N_SSG","_currency_","Steps","_object_spread","_object_without_properties","_sliced_to_array","jsx_runtime","src","Tokens","useActiveWeb3React","useNativeCurrency","next_router","react","state","actions","wagmi","_async_to_generator","_define_property","_object_spread_props","_to_consumable_array","tslib_es6","bignumber","dist","useTooltip","useModal","CardBody","Message","Text","Add","Button","TooltipText","sentry","Trades","localization_src","useContract","addressHelpers","CommitButton","getLpSymbol","calls","supportChains","transactionErrorToUserReadableMessage","hooks","exchange","Card","Column","CurrencyInputPanel","App","PositionCard","Row","ConnectWalletButton","usePairs","useApproveCallback","useTransactionDeadline","mint_hooks","transactions_hooks","user_hooks","utils","utils_exchange","maxAmountSpend","wrappedCurrency","Dots","AddLiquidity_PoolPriceBar","ref1","ref2","ref3","ref4","ref5","ref6","ref7","ref8","ref9","ref10","ref11","noLiquidity","poolTokenPercentage","price","justify","toSignificant","fontSize","pt","assetA","gN","CURRENCY_B","assetB","CURRENCY_A","invert","lessThan","IS","toFixed","Page","TransactionConfirmationModal","burn_actions","toNumber","toNumber_default","n","_tagged_template_literal","Box","Svg","Flex","styled_components_browser_esm","Logo","Dot","CircleSvg","_param","_percent","percent","props","width","height","viewBox","fill","xmlns","filter","cx","cy","stroke","strokeWidth","strokeDasharray","transform","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","in2","values","dy","operator","k2","k3","Subtitle","textTransform","bold","PairDistribution","currencyA","currencyB","currencyAValue","currencyBValue","tooltipTargetRef","mr","style","m0","bg","AddLiquidityModalHeader","liquidityMinted","allowedSlippage","slippage","placement","tooltip","tooltipVisible","targetRef","h2","ge","currency0","g","currency1","z","ml","justifyContent","ConfirmAddLiquidityModal","customOnDismiss","attemptingTxn","hash","pendingText","parsedAmounts","liquidityErrorMessage","onAdd","currencyToAdd","isStable","amountCurrencyA","amountCurrencyB","modalHeader","useCallback","modalBottom","mt","confirmationContent","ht","message","pM","topContent","bottomContent","minWidth","content","ArrowDown","useTotalSupply","ZapErrorMessage","ConfirmZapInModal","zapSwapTokenField","zapSwapOutTokenField","pair","zapInEstimated","rebalancing","zapMode","toggleZapMode","totalPoolTokens","liquidityToken","swapInCurrencyAmount","swapOutCurrencyAmount","token0","token1","QA","greaterThanOrEqual","quotient","getLiquidityValue","undefined","token0Deposited","token1Deposited","swapInTokenAmount","useMemo","ih","fromRawAmount","swapAmountIn","toString","swapOutTokenAmount","swapAmountOut","inputPercent","num","Math","min","max","toExact","priceOf","wrapped","tokenDeposited","_obj","equals","DA","Fragment","p","isSingleToken","onModalDismiss","FlexGap","CardFooter","ArrowDropDown","CurrencySearchModal","formatBalance","wallet_hooks","useBUSDPrice","wagmi_dist","CurrencySelect_templateObject","_templateObject1","DropDownHeader","shadows","inset","inputSecondary","input","DropDownContainer","mediaQueries","sm","CurrencySelect","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","commonBasesType","hideBalance","account","Ge","selectedCurrencyBalance","_h","onPresentCurrencyModal","quoted","quote","alignItems","marginRight","length","slice","className","Number","isFinite","uf","formatInfoNumbers","types","currencyId","useCurrencySelectRoute","native","router","useRouter","query","currencyIdA","currencyIdB","handleCurrencyASelect","currencyA_","newCurrencyIdA","replace","shallow","handleCurrencyBSelect","currencyB_","newCurrencyIdB","ChoosePair","error","onNext","isValid","yX","poolData","aT","subtitle","helper","backTo","pb","L0","LIQUIDITY","lpApr7d","A","disabled","ZapCheckbox","zapAddress","_M","AddLiquidity","ref12","ref13","ref14","ref15","ref16","ref17","ref18","ref19","ref20","ref21","ref22","ref23","ref24","ref25","ref26","ref27","ref42","ref45","ref46","ref47","ref48","ref49","ref50","ref51","ref52","ref28","isWrongNetwork","addPair","uB","ref29","$f","expertMode","LO","ref30","useState","temporarilyZapMode","setTemporarilyZapMode","ref31","Choose","steps","setSteps","useEffect","step","zapModeStatus","ref32","OY","independentField","typedValue","otherTypedValue","ref33","Qw","dependentField","pairState","currencyBalances","mintParsedAmounts","addError","ref34","ref35","OA","onFieldAInput","onFieldBInput","ref36","txHash","ref37","setLiquidityState","ref38","zapTokenToggleA","setZapTokenToggleA","ref39","zapTokenToggleB","setZapTokenToggleB","zapTokenCheckedA","greaterThan","zapTokenCheckedB","deadline","ref40","$2","maxAmounts","reduce","accumulator","field","i","canZap","K","reserve0","Xh","reserve1","ref41","_ref","eM","zapInEstimating","zapIn","preferZapInstead","noNeedZap","formattedAmounts","atMaxAmounts","_field","equalTo","ref43","qL","bR","approvalA","approveACallback","ref44","approvalB","approveBCallback","addTransaction","h7","routerContract","Ti","_onAdd","apply","arguments","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","tokenBIsNative","__generator","_state","label","uc","isNative","estimateGas","addLiquidityETH","toHexString","O$","from","addLiquidity","then","estimatedGasLimit","gasLimit","yC","response","symbolA","amountA","symbolB","amountB","summary","translatableSummary","type","catch","err","code","H","console","e","sent","handleDismissConfirmation","addIsUnsupported","mP","addIsWarning","uK","zapContract","n9","onPresentAddLiquidityModal","ref53","_onZapIn","minAmountOut","maxAmountIn","tokenBIsBNB","amount","amount1","symbol1","lpSymbol","mul","isToken0Sold","swapTokenField","Zj","onPresentZapInModal","ref54","swapOutTokenField","handleEnableZap","errorText","buttonDisabled","UK","APPROVED","priceSeverity","showFieldAApproval","NOT_APPROVED","PENDING","showFieldBApproval","shouldShowApprovalGroup","oneCurrencyIsWNATIVE","Boolean","FX","noAnyInputAmount","showAddLiquidity","showZapWarning","showReduceZapTokenButton","zapInEstimatedError","showRebalancingConvert","isDependentAmountGreaterThanMaxAmount","showZapIsAvailable","j","lg","mb","disableCurrencySelect","showBUSD","onInputBlur","onInputBlurOnce","beforeButton","checked","onChange","target","zapStyle","onUserInput","onPercentInput","multiply","gG","onMax","showQuickInputButton","showMaxButton","Y","margin","convertToMaxZappable","scale","gasOverhead","_G","INVALID","hl","padding","borderRadius","asset","isLoading","maxWidth","marginTop","WP","showUnwrapped","useStableConfig","useStableLPDerivedMintInfo","AddStableLiquidity","L","useContext","UA","stableSwapContract","stableSwapConfig","lpMintedSlippage","tokenAmounts","add_liquidity","AddLiquidityPage","dispatch","TL","cr","gn","U8","tokenA","tokenB","stableConfig","dA","Provider","chains","vo","_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__","config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__","currencyAmount","Uz","subtract","iV","styled_components__WEBPACK_IMPORTED_MODULE_2__","styled_system__WEBPACK_IMPORTED_MODULE_1__","cardBorder","Dh","defaultProps","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_Svg__WEBPACK_IMPORTED_MODULE_2__","Icon","O","s","_N_E"],"sourceRoot":""}