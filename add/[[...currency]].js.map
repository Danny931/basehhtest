{"version":3,"file":"../pages/add/[[...currency]].js","mappings":"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eF,IAAI,EAAC;;;;;;;;ACZpB;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://web/./src/components/CommitButton.tsx","webpack://web/./src/components/CurrencyInputPanel/ZapCheckbox.tsx","webpack://web/./src/components/CurrencySelect/index.tsx","webpack://web/./src/components/UnsupportedCurrencyFooter.tsx","webpack://web/./src/hooks/useCurrentBlockTimestamp.ts","webpack://web/./src/hooks/useTransactionDeadline.ts","webpack://web/./src/pages/add/[[...currency]].tsx","webpack://web/./src/views/Farms/hooks/getNonBscVaultFee.ts","webpack://web/./src/utils/calls/farms.ts","webpack://web/./src/utils/calls/estimateGas.ts","webpack://web/./src/utils/calls/pools.ts","webpack://web/./src/utils/calls/index.ts","webpack://web/./src/utils/getLpSymbol.ts","webpack://web/./src/utils/maxAmountSpend.ts","webpack://web/./src/utils/transactionErrorToUserReadableMessage.ts","webpack://web/./src/views/AddLiquidity/AddStableLiquidity/index.tsx","webpack://web/./src/views/AddLiquidity/ChoosePair.tsx","webpack://web/./src/views/AddLiquidity/PoolPriceBar.tsx","webpack://web/./src/views/AddLiquidity/components/ConfirmAddLiquidityModal.tsx","webpack://web/./src/views/AddLiquidity/components/ConfirmZapInModal.tsx","webpack://web/./src/views/AddLiquidity/components/ZapErrorMessage.tsx","webpack://web/./src/views/AddLiquidity/components/common.tsx","webpack://web/./src/views/AddLiquidity/index.tsx","webpack://web/./src/views/AddLiquidity/useCurrencySelectRoute.ts","webpack://web/../../packages/uikit/src/components/Card/CardFooter.tsx","webpack://web/../../packages/uikit/src/components/Svg/Icons/ArrowDropDown.tsx","webpack://web/external commonjs \"@ethersproject/abi\"","webpack://web/external commonjs \"@ethersproject/address\"","webpack://web/external commonjs \"@ethersproject/bignumber\"","webpack://web/external commonjs \"@ethersproject/bytes\"","webpack://web/external commonjs \"@ethersproject/constants\"","webpack://web/external commonjs \"@ethersproject/contracts\"","webpack://web/external commonjs \"@ethersproject/providers\"","webpack://web/external commonjs \"@ethersproject/solidity\"","webpack://web/external commonjs \"@ethersproject/strings\"","webpack://web/external commonjs \"@ethersproject/units\"","webpack://web/external commonjs \"@gelatonetwork/limit-orders-lib\"","webpack://web/external commonjs \"@gnosis.pm/safe-apps-wagmi\"","webpack://web/external commonjs \"@radix-ui/react-slot\"","webpack://web/external commonjs \"@reduxjs/toolkit\"","webpack://web/external commonjs \"@sentry/nextjs\"","webpack://web/external commonjs \"@uniswap/token-lists\"","webpack://web/external commonjs \"@vanilla-extract/recipes/createRuntimeFn\"","webpack://web/external commonjs \"@vanilla-extract/sprinkles/createRuntimeSprinkles\"","webpack://web/external commonjs \"ajv\"","webpack://web/external commonjs \"big.js\"","webpack://web/external commonjs \"bignumber.js\"","webpack://web/external commonjs \"clsx\"","webpack://web/external commonjs \"date-fns\"","webpack://web/external commonjs \"decimal.js-light\"","webpack://web/external commonjs \"fast-json-stable-stringify\"","webpack://web/external commonjs \"graphql-request\"","webpack://web/external commonjs \"jsbi\"","webpack://web/external commonjs \"local-storage\"","webpack://web/external commonjs \"localforage\"","webpack://web/external commonjs \"lodash/chunk\"","webpack://web/external commonjs \"lodash/flatMap\"","webpack://web/external commonjs \"lodash/fromPairs\"","webpack://web/external commonjs \"lodash/get\"","webpack://web/external commonjs \"lodash/groupBy\"","webpack://web/external commonjs \"lodash/isEmpty\"","webpack://web/external commonjs \"lodash/kebabCase\"","webpack://web/external commonjs \"lodash/keyBy\"","webpack://web/external commonjs \"lodash/mapValues\"","webpack://web/external commonjs \"lodash/memoize\"","webpack://web/external commonjs \"lodash/omitBy\"","webpack://web/external commonjs \"lodash/orderBy\"","webpack://web/external commonjs \"lodash/pickBy\"","webpack://web/external commonjs \"lodash/reduce\"","webpack://web/external commonjs \"lodash/times\"","webpack://web/external commonjs \"lodash/toNumber\"","webpack://web/external commonjs \"lodash/uniq\"","webpack://web/external commonjs \"lodash/uniqBy\"","webpack://web/external commonjs \"next-themes\"","webpack://web/external commonjs \"next/dist/shared/lib/app-router-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/head.js\"","webpack://web/external commonjs \"next/dist/shared/lib/i18n/normalize-locale-path.js\"","webpack://web/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://web/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://web/external commonjs \"next/dist/shared/lib/is-plain-object.js\"","webpack://web/external commonjs \"next/dist/shared/lib/mitt.js\"","webpack://web/external commonjs \"next/dist/shared/lib/page-path/denormalize-page-path.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router-context.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/add-path-prefix.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/compare-states.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/format-next-pathname-info.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/format-url.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/get-asset-path-from-route.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/get-next-pathname-info.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/is-bot.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/is-dynamic.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/parse-path.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/parse-relative-url.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/path-has-prefix.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/querystring.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/remove-trailing-slash.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/resolve-rewrites.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/route-matcher.js\"","webpack://web/external commonjs \"next/dist/shared/lib/router/utils/route-regex.js\"","webpack://web/external commonjs \"next/dist/shared/lib/utils.js\"","webpack://web/external commonjs \"next/head\"","webpack://web/external commonjs \"next/router\"","webpack://web/external commonjs \"numeral\"","webpack://web/external commonjs \"qrcode.react\"","webpack://web/external commonjs \"react\"","webpack://web/external commonjs \"react-device-detect\"","webpack://web/external commonjs \"react-dom\"","webpack://web/external commonjs \"react-popper\"","webpack://web/external commonjs \"react-redux\"","webpack://web/external commonjs \"react-window\"","webpack://web/external commonjs \"react/jsx-runtime\"","webpack://web/external commonjs \"redux-persist\"","webpack://web/external commonjs \"redux-persist/lib/storage\"","webpack://web/external commonjs \"styled-components\"","webpack://web/external commonjs \"styled-system\"","webpack://web/external commonjs \"tiny-invariant\"","webpack://web/external commonjs \"tiny-warning\"","webpack://web/external commonjs \"toformat\"","webpack://web/external commonjs \"wagmi\"","webpack://web/external commonjs \"wagmi/chains\"","webpack://web/external commonjs \"wagmi/connectors/coinbaseWallet\"","webpack://web/external commonjs \"wagmi/connectors/injected\"","webpack://web/external commonjs \"wagmi/connectors/metaMask\"","webpack://web/external commonjs \"wagmi/connectors/walletConnect\"","webpack://web/external commonjs \"wagmi/providers/jsonRpc\"","webpack://web/external module \"framer-motion\"","webpack://web/external module \"jotai\"","webpack://web/external module \"jotai/utils\"","webpack://web/external module \"js-cookie\"","webpack://web/external module \"swr\"","webpack://web/external module \"swr/immutable\""],"sourcesContent":["import { Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useSwitchNetworkLoading } from 'hooks/useSwitchNetworkLoading'\nimport { useSetAtom } from 'jotai'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { hideWrongNetworkModalAtom } from './NetworkModal'\nimport Trans from './Trans'\n\nconst wrongNetworkProps: ButtonProps = {\n  variant: 'danger',\n  disabled: false,\n  children: <Trans>Wrong Network</Trans>,\n}\n\nexport const CommitButton = (props: ButtonProps) => {\n  const { isWrongNetwork } = useActiveChainId()\n  const [switchNetworkLoading] = useSwitchNetworkLoading()\n  const setHideWrongNetwork = useSetAtom(hideWrongNetworkModalAtom)\n\n  return (\n    <Button\n      {...props}\n      onClick={(e) => {\n        if (isWrongNetwork) {\n          setHideWrongNetwork(false)\n        } else {\n          props.onClick?.(e)\n        }\n      }}\n      {...(switchNetworkLoading && { disabled: true })}\n      {...(isWrongNetwork && wrongNetworkProps)}\n    />\n  )\n}\n","import { Checkbox } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst ZapCheckBoxWrapper = styled.label`\n  display: grid;\n  place-content: center;\n  background: ${({ theme }) => theme.colors.background};\n  border-radius: 8px 0px 0px 0px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-right: none;\n  width: 40px;\n`\n\nexport const ZapCheckbox = (props) => {\n  return (\n    <ZapCheckBoxWrapper>\n      <Checkbox scale=\"sm\" {...props} />\n    </ZapCheckBoxWrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { ArrowDropDownIcon, Box, Button, Text, useModal, Flex, BoxProps } from '@pancakeswap/uikit'\nimport CurrencySearchModal, { CurrencySearchModalProps } from 'components/SearchModal/CurrencySearchModal'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport useBUSDPrice from 'hooks/useBUSDPrice'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { CurrencyLogo } from '../Logo'\nimport { RowBetween, AutoRow } from '../Layout/Row'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownContainer = styled(Button)`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  .down-icon {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\ninterface CurrencySelectProps extends CurrencySearchModalProps, BoxProps {\n  hideBalance?: boolean\n}\n\nexport const CurrencySelect = ({\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases,\n  commonBasesType,\n  hideBalance,\n  ...props\n}: CurrencySelectProps) => {\n  const { account } = useWeb3React()\n\n  const selectedCurrencyBalance = useCurrencyBalance(\n    account ?? undefined,\n    !hideBalance && selectedCurrency ? selectedCurrency : undefined,\n  )\n\n  const { t } = useTranslation()\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={selectedCurrency}\n      otherSelectedCurrency={otherSelectedCurrency}\n      showCommonBases={showCommonBases}\n      commonBasesType={commonBasesType}\n    />,\n  )\n\n  const price = useBUSDPrice(selectedCurrencyBalance && selectedCurrency ? selectedCurrency : undefined)\n  const quoted = selectedCurrencyBalance && price?.quote(selectedCurrencyBalance)\n\n  return (\n    <Box width=\"100%\" {...props}>\n      <DropDownContainer p={0} onClick={onPresentCurrencyModal}>\n        <DropDownHeader>\n          <Text id=\"pair\" color={!selectedCurrency ? 'text' : undefined}>\n            {!selectedCurrency ? (\n              <>{t('Select')}</>\n            ) : (\n              <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                <CurrencyLogo currency={selectedCurrency} size=\"24px\" style={{ marginRight: '8px' }} />\n                <Text id=\"pair\" bold>\n                  {selectedCurrency && selectedCurrency.symbol && selectedCurrency.symbol.length > 20\n                    ? `${selectedCurrency.symbol.slice(0, 4)}...${selectedCurrency.symbol.slice(\n                        selectedCurrency.symbol.length - 5,\n                        selectedCurrency.symbol.length,\n                      )}`\n                    : selectedCurrency?.symbol}\n                </Text>\n              </Flex>\n            )}\n          </Text>\n        </DropDownHeader>\n        <ArrowDropDownIcon color=\"text\" className=\"down-icon\" />\n      </DropDownContainer>\n      {account && !!selectedCurrency && !hideBalance && (\n        <Box>\n          <AutoRow justify=\"space-between\" gap=\"2px\">\n            <Text color=\"textSubtle\" fontSize=\"12px\">\n              {t('Balance')}:\n            </Text>\n            <Text fontSize=\"12px\">{selectedCurrencyBalance?.toSignificant(6) ?? t('Loading')}</Text>\n          </AutoRow>\n          <RowBetween>\n            <div />\n            {Number.isFinite(+quoted?.toExact()) && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                ~${formatNumber(+quoted.toExact())}\n              </Text>\n            )}\n          </RowBetween>\n        </Box>\n      )}\n    </Box>\n  )\n}\n","import { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBlockExploreLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<React.PropsWithChildren<Props>> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title={t('Unsupported Assets')} onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link\n                    external\n                    small\n                    color=\"primaryDark\"\n                    href={getBlockExploreLink(token.address, 'address', chainId)}\n                  >\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            {t(\n              'Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.',\n            )}\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const { t } = useTranslation()\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        {t('Read more about unsupported assets')}\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { CAKE, USDC } from '@pancakeswap/tokens'\nimport { useCurrency } from 'hooks/Tokens'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport { useAppDispatch } from 'state'\nimport { resetMintState } from 'state/mint/actions'\nimport { CHAIN_IDS } from 'utils/wagmi'\nimport AddLiquidity from 'views/AddLiquidity'\nimport AddStableLiquidity from 'views/AddLiquidity/AddStableLiquidity/index'\nimport useStableConfig, { StableConfigContext } from 'views/Swap/StableSwap/hooks/useStableConfig'\n\nconst AddLiquidityPage = () => {\n  const router = useRouter()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n\n  const native = useNativeCurrency()\n\n  const [currencyIdA, currencyIdB] = router.query.currency || [\n    native.symbol,\n    CAKE[chainId]?.address ?? USDC[chainId]?.address,\n  ]\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const { stableSwapConfig, ...stableConfig } = useStableConfig({\n    tokenA: currencyA,\n    tokenB: currencyB,\n  })\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  return stableSwapConfig ? (\n    <StableConfigContext.Provider value={{ stableSwapConfig, ...stableConfig }}>\n      <AddStableLiquidity currencyA={currencyA} currencyB={currencyB} />\n    </StableConfigContext.Provider>\n  ) : (\n    <AddLiquidity currencyA={currencyA} currencyB={currencyB} />\n  )\n}\n\nAddLiquidityPage.chains = CHAIN_IDS\n\nexport default AddLiquidityPage\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\n\nexport const getStaticPaths: GetStaticPaths = () => {\n  return {\n    paths: [{ params: { currency: [] } }],\n    fallback: true,\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const { currency = [] } = params\n  const [currencyIdA, currencyIdB] = currency\n  const match = currencyIdA?.match(OLD_PATH_STRUCTURE)\n\n  if (match?.length) {\n    return {\n      redirect: {\n        statusCode: 301,\n        destination: `/add/${match[1]}/${match[2]}`,\n      },\n    }\n  }\n\n  if (currencyIdA && currencyIdB && currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return {\n      redirect: {\n        statusCode: 303,\n        destination: `/add/${currencyIdA}`,\n      },\n    }\n  }\n\n  return {\n    props: {},\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getNonBscVaultContract, getCrossFarmingSenderContract } from 'utils/contractHelpers'\n\nexport enum MessageTypes {\n  Deposit = 0,\n  Withdraw = 1,\n  EmergencyWithdraw = 2,\n  Claim = 3,\n}\n\nenum Chains {\n  EVM = 0,\n  BSC = 1,\n}\n\ninterface CalculateTotalFeeProps {\n  pid: number\n  amount: string\n  chainId: number\n  userAddress: string\n  messageType: MessageTypes\n  gasPrice: number\n  oraclePrice: string\n}\n\nconst COMPENSATION_PRECISION = 1e5\nconst ORACLE_PRECISION = 1e18\nconst BNB_CHANGE = 5000000000000000\nconst BUFFER = 1.3\nconst WITHDRAW_BUFFER = 1.4\n\nexport const getNonBscVaultContractFee = async ({\n  pid,\n  amount,\n  chainId,\n  userAddress,\n  messageType,\n  oraclePrice,\n  gasPrice,\n}: CalculateTotalFeeProps) => {\n  try {\n    const nonBscVaultContract = getNonBscVaultContract(null, chainId)\n    const crossFarmingAddress = getCrossFarmingSenderContract(null, chainId)\n    const exchangeRate = new BigNumber(ORACLE_PRECISION).div(oraclePrice).times(ORACLE_PRECISION) // invert into BNB/ETH price\n\n    const getNonce = await crossFarmingAddress.nonces(userAddress, pid)\n    const nonce = new BigNumber(getNonce.toString()).toJSON()\n    const [encodeMessage, hasFirstTime, estimateGaslimit] = await Promise.all([\n      nonBscVaultContract.encodeMessage(userAddress, pid, amount, messageType, nonce),\n      crossFarmingAddress.is1st(userAddress),\n      crossFarmingAddress.estimateGaslimit(Chains.BSC, userAddress, messageType),\n    ])\n    const calcFee = await nonBscVaultContract.calcFee(encodeMessage)\n\n    const msgBusFee = new BigNumber(calcFee.toString())\n    const destTxFee = new BigNumber(gasPrice)\n      .times(estimateGaslimit.toString())\n      .times(exchangeRate)\n      .times(COMPENSATION_PRECISION)\n      .div(new BigNumber(ORACLE_PRECISION).times(COMPENSATION_PRECISION))\n    const totalFee = new BigNumber(msgBusFee).plus(destTxFee)\n\n    if (!hasFirstTime) {\n      const depositFee = new BigNumber(BNB_CHANGE).times(exchangeRate).div(ORACLE_PRECISION)\n      return totalFee.plus(depositFee).times(BUFFER).toFixed(0)\n    }\n\n    if (messageType >= MessageTypes.Withdraw) {\n      const estimateEvmGaslimit = await crossFarmingAddress.estimateGaslimit(Chains.EVM, userAddress, messageType)\n      const fee = msgBusFee.times(exchangeRate).div(ORACLE_PRECISION)\n      const total = new BigNumber(gasPrice).times(estimateEvmGaslimit.toString()).plus(fee)\n      return totalFee.plus(total).times(WITHDRAW_BUFFER).toFixed(0)\n    }\n\n    return totalFee.times(BUFFER).toFixed(0)\n  } catch (error) {\n    console.error('Failed to fetch non BscVault fee', error)\n    return BIG_ZERO.toJSON()\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport BigNumber from 'bignumber.js'\nimport { BOOSTED_FARM_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { getNonBscVaultContractFee, MessageTypes } from 'views/Farms/hooks/getNonBscVaultFee'\n\nconst options = {\n  gasLimit: BOOSTED_FARM_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract: Contract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  return masterChefContract.deposit(pid, value, options)\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  return masterChefContract.withdraw(pid, value, options)\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  return masterChefContract.deposit(pid, '0', options)\n}\n\nexport const nonBscStakeFarm = async (contract, pid, amount, gasPrice, account, oraclePrice, chainId) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const totalFee = await getNonBscVaultContractFee({\n    pid,\n    chainId,\n    gasPrice,\n    oraclePrice,\n    amount: value,\n    userAddress: account,\n    messageType: MessageTypes.Deposit,\n  })\n  console.info(totalFee, 'stake totalFee')\n  return contract.deposit(pid, value, { value: totalFee })\n}\n\nexport const nonBscUnstakeFarm = async (contract, pid, amount, gasPrice, account, oraclePrice, chainId) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const totalFee = await getNonBscVaultContractFee({\n    pid,\n    chainId,\n    gasPrice,\n    oraclePrice,\n    amount: value,\n    userAddress: account,\n    messageType: MessageTypes.Withdraw,\n  })\n  console.info(totalFee, 'unstake totalFee')\n  return contract.withdraw(pid, value, { value: totalFee })\n}\n","import { Contract, PayableOverrides } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { calculateGasMargin } from 'utils'\nimport { ContractMethodName, MaybeContract, ContractMethodParams } from 'utils/types'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async <C extends Contract = Contract, N extends ContractMethodName<C> = any>(\n  contract: MaybeContract<C>,\n  methodName: N,\n  methodArgs: ContractMethodParams<C, N>,\n  overrides: PayableOverrides = {},\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs, overrides)\n  // By convention, BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = calculateGasMargin(rawGasEstimation, gasMarginPer10000)\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async <C extends Contract = Contract, N extends ContractMethodName<C> = any>(\n  contract: MaybeContract<C>,\n  methodName: N,\n  methodArgs: ContractMethodParams<C, N>,\n  overrides: PayableOverrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<TransactionResponse> => {\n  const gasEstimation = await estimateGas(contract, methodName, methodArgs, overrides, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { bscRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = poolsConfig\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await bscRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress, 56),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress, 56),\n    name: 'bonusEndBlock',\n  }))\n  const [startBlocks, endBlocks] = await Promise.all([\n    multicall(sousChefV2, startBlockCalls),\n    multicall(sousChefV2, endBlockCalls),\n  ])\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","export * from './estimateGas'\nexport * from './farms'\nexport * from './pools'\n","import { WNATIVE, NATIVE } from '@pancakeswap/sdk'\n\nexport const getLPSymbol = (token0Symbol: string, token1Symbol: string, chainId: number) => {\n  if (token0Symbol === WNATIVE[chainId].symbol) {\n    return `${NATIVE[chainId].symbol}-${token1Symbol} LP`\n  }\n  if (token1Symbol === WNATIVE[chainId].symbol) {\n    return `${token0Symbol}-${NATIVE[chainId].symbol} LP`\n  }\n  return `${token0Symbol}-${token1Symbol} LP`\n}\n","import { Currency, CurrencyAmount, JSBI } from '@pancakeswap/sdk'\nimport { BIG_INT_ZERO, MIN_BNB } from 'config/constants/exchange'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount<Currency>): CurrencyAmount<Currency> | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency?.isNative) {\n    if (JSBI.greaterThan(currencyAmount.quotient, MIN_BNB)) {\n      return CurrencyAmount.fromRawAmount(currencyAmount.currency, JSBI.subtract(currencyAmount.quotient, MIN_BNB))\n    }\n    return CurrencyAmount.fromRawAmount(currencyAmount.currency, BIG_INT_ZERO)\n  }\n  return currencyAmount\n}\n","import { TranslateFunction } from '@pancakeswap/localization'\n\n/**\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\n * This object seems to be undocumented by ethers.\n * @param error an error from the ethers provider\n * @param t Translation function\n */\nexport function transactionErrorToUserReadableMessage(error: any, t: TranslateFunction) {\n  let reason: string | undefined\n  while (error) {\n    reason = error.reason ?? error.data?.message ?? error.message ?? reason\n    // eslint-disable-next-line no-param-reassign\n    error = error.error ?? error.data?.originalError\n  }\n\n  if (reason?.indexOf('execution reverted: ') === 0) reason = reason.substring('execution reverted: '.length)\n\n  switch (reason) {\n    case 'PancakeRouter: EXPIRED':\n      return t(\n        'The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.',\n      )\n    case 'PancakeRouter: INSUFFICIENT_OUTPUT_AMOUNT':\n    case 'PancakeRouter: EXCESSIVE_INPUT_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_A_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_B_AMOUNT':\n      return t(\n        'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.',\n      )\n    case 'TransferHelper: TRANSFER_FROM_FAILED':\n      return t('The input token cannot be transferred. There may be an issue with the input token.')\n    case 'Pancake: TRANSFER_FAILED':\n      return t('The output token cannot be transferred. There may be an issue with the output token.')\n    default:\n      if (reason?.indexOf('undefined is not an object') !== -1) {\n        console.error(error, reason)\n        return t(\n          'An error occurred when trying to execute this operation. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading.',\n        )\n      }\n      return t('Unknown error%reason%. Try increasing your slippage tolerance.', {\n        reason: reason ? `: \"${reason}\"` : '',\n      })\n  }\n}\n","import { useCallback, useContext, useMemo, useState } from 'react'\nimport { CurrencyAmount, Token, WNATIVE } from '@pancakeswap/sdk'\nimport { Button, Text, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { logError } from 'utils/sentry'\nimport { useTranslation } from '@pancakeswap/localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { CommitButton } from 'components/CommitButton'\nimport { transactionErrorToUserReadableMessage } from 'utils/transactionErrorToUserReadableMessage'\nimport { StableConfigContext } from 'views/Swap/StableSwap/hooks/useStableConfig'\nimport { LightCard } from 'components/Card'\n\nimport { AutoColumn, ColumnCenter } from '../../../components/Layout/Column'\nimport CurrencyInputPanel from '../../../components/CurrencyInputPanel'\nimport ConnectWalletButton from '../../../components/ConnectWalletButton'\n\nimport { PairState } from '../../../hooks/usePairs'\nimport { ApprovalState, useApproveCallback } from '../../../hooks/useApproveCallback'\nimport { Field } from '../../../state/mint/actions'\nimport { useMintActionHandlers, useMintState } from '../../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../../state/user/hooks'\nimport { calculateGasMargin } from '../../../utils'\nimport { calculateSlippageAmount } from '../../../utils/exchange'\nimport { maxAmountSpend } from '../../../utils/maxAmountSpend'\nimport Dots from '../../../components/Loader/Dots'\nimport PoolPriceBar from '../PoolPriceBar'\nimport Page from '../../Page'\nimport ConfirmAddLiquidityModal from '../components/ConfirmAddLiquidityModal'\nimport { useCurrencySelectRoute } from '../useCurrencySelectRoute'\nimport { CommonBasesType } from '../../../components/SearchModal/types'\nimport { AppHeader, AppBody } from '../../../components/App'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { MinimalPositionCard } from '../../../components/PositionCard'\nimport { useStableLPDerivedMintInfo } from './hooks/useStableLPDerivedMintInfo'\n\nexport default function AddStableLiquidity({ currencyA, currencyB }) {\n  const { account, chainId, isWrongNetwork } = useActiveWeb3React()\n\n  const expertMode = useIsExpertMode()\n\n  const { t } = useTranslation()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    addError,\n  } = useStableLPDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(true)\n\n  // modal and loading\n  const [{ attemptingTxn, liquidityErrorMessage, txHash }, setLiquidityState] = useState<{\n    attemptingTxn: boolean\n    liquidityErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    attemptingTxn: false,\n    liquidityErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // txn values\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\n\n  // get formatted amounts\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]: typedValue,\n      [dependentField]: otherTypedValue,\n    }),\n    [dependentField, independentField, otherTypedValue, typedValue],\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  const { stableSwapContract, stableSwapConfig } = useContext(StableConfigContext)\n\n  // check whether the user has approved tokens for addling LPs\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], stableSwapContract?.address)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], stableSwapContract?.address)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !account || !stableSwapContract) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const lpMintedSlippage = calculateSlippageAmount(liquidityMinted, noLiquidity ? 0 : allowedSlippage)[0]\n\n    const estimate = stableSwapContract.estimateGas.add_liquidity\n    const method = stableSwapContract.add_liquidity\n\n    // Ensure the token order [token0, token1]\n    const tokenAmounts =\n      stableSwapConfig?.token0?.address === parsedAmountA?.currency?.wrapped?.address\n        ? [parsedAmountA?.quotient?.toString(), parsedAmountB?.quotient?.toString()]\n        : [parsedAmountB?.quotient?.toString(), parsedAmountA?.quotient?.toString()]\n\n    const args = [tokenAmounts, lpMintedSlippage?.toString()]\n\n    const value = null\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n          const symbolA = currencies[Field.CURRENCY_A]?.symbol\n          const amountA = parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)\n          const symbolB = currencies[Field.CURRENCY_B]?.symbol\n          const amountB = parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)\n          addTransaction(response, {\n            summary: `Add ${amountA} ${symbolA} and ${amountB} ${symbolB}`,\n            translatableSummary: {\n              text: 'Add %amountA% %symbolA% and %amountB% %symbolB%',\n              data: { amountA, symbolA, amountB, symbolB },\n            },\n            type: 'add-liquidity',\n          })\n        }),\n      )\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage:\n            err && err.code !== 4001\n              ? t('Add liquidity failed: %message%', { message: transactionErrorToUserReadableMessage(err, t) })\n              : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      onFieldBInput('')\n    }\n  }, [onFieldAInput, onFieldBInput, txHash])\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <ConfirmAddLiquidityModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n      allowedSlippage={allowedSlippage}\n      onAdd={onAdd}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      noLiquidity={noLiquidity}\n      poolTokenPercentage={poolTokenPercentage}\n      liquidityMinted={liquidityMinted}\n      isStable\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  let isValid = !error\n  let errorText = error\n\n  isValid = !error && !addError\n  errorText = error ?? addError\n\n  const buttonDisabled = !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED\n\n  const showFieldAApproval = approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING\n  const showFieldBApproval = approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING\n\n  const shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid\n\n  const oneCurrencyIsWNATIVE = Boolean(\n    chainId && ((currencyA && currencyA.equals(WNATIVE[chainId])) || (currencyB && currencyB.equals(WNATIVE[chainId]))),\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <>\n          <AppHeader\n            title={\n              currencies[Field.CURRENCY_A]?.symbol && currencies[Field.CURRENCY_B]?.symbol\n                ? `${currencies[Field.CURRENCY_A].symbol}-${currencies[Field.CURRENCY_B].symbol} Stable LP`\n                : t('Add Stable Liquidity')\n            }\n            backTo=\"/liquidity\"\n          />\n          <CardBody>\n            <AutoColumn gap=\"20px\">\n              {noLiquidity && (\n                <ColumnCenter>\n                  <Message variant=\"warning\">\n                    <div>\n                      <Text bold mb=\"8px\">\n                        {t('You are the first liquidity provider.')}\n                      </Text>\n                      <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                      <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                    </div>\n                  </Message>\n                </ColumnCenter>\n              )}\n              <CurrencyInputPanel\n                showBUSD\n                onCurrencySelect={handleCurrencyASelect}\n                zapStyle=\"noZap\"\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onFieldAInput}\n                onMax={() => {\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                currency={currencies[Field.CURRENCY_A]}\n                id=\"add-liquidity-input-tokena\"\n                showCommonBases\n                commonBasesType={CommonBasesType.LIQUIDITY}\n              />\n              <ColumnCenter>\n                <AddIcon width=\"16px\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                showBUSD\n                onCurrencySelect={handleCurrencyBSelect}\n                zapStyle=\"noZap\"\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onFieldBInput}\n                onMax={() => {\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                currency={currencies[Field.CURRENCY_B]}\n                id=\"add-liquidity-input-tokenb\"\n                showCommonBases\n                commonBasesType={CommonBasesType.LIQUIDITY}\n              />\n\n              {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                <>\n                  <LightCard padding=\"0px\" borderRadius=\"20px\">\n                    <RowBetween padding=\"1rem\">\n                      <Text fontSize=\"14px\">\n                        {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                      </Text>\n                    </RowBetween>{' '}\n                    <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                      <PoolPriceBar\n                        currencies={currencies}\n                        poolTokenPercentage={poolTokenPercentage}\n                        noLiquidity={noLiquidity}\n                        price={price}\n                      />\n                    </LightCard>\n                  </LightCard>\n                </>\n              )}\n\n              <RowBetween>\n                <Text bold fontSize=\"12px\" color=\"secondary\">\n                  {t('Slippage Tolerance')}\n                </Text>\n                <Text bold color=\"primary\">\n                  {allowedSlippage / 100}%\n                </Text>\n              </RowBetween>\n\n              {!account ? (\n                <ConnectWalletButton />\n              ) : isWrongNetwork ? (\n                <CommitButton />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  {shouldShowApprovalGroup && (\n                    <RowBetween style={{ gap: '8px' }}>\n                      {showFieldAApproval && (\n                        <Button onClick={approveACallback} disabled={approvalA === ApprovalState.PENDING} width=\"100%\">\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {showFieldBApproval && (\n                        <Button onClick={approveBCallback} disabled={approvalB === ApprovalState.PENDING} width=\"100%\">\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                  <CommitButton\n                    variant={!isValid ? 'danger' : 'primary'}\n                    onClick={() => {\n                      if (expertMode) {\n                        onAdd()\n                      } else {\n                        setLiquidityState({\n                          attemptingTxn: false,\n                          liquidityErrorMessage: undefined,\n                          txHash: undefined,\n                        })\n                        onPresentAddLiquidityModal()\n                      }\n                    }}\n                    disabled={buttonDisabled}\n                  >\n                    {errorText || t('Supply')}\n                  </CommitButton>\n                </AutoColumn>\n              )}\n            </AutoColumn>\n          </CardBody>\n        </>\n      </AppBody>\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWNATIVE} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Page>\n  )\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Currency } from '@pancakeswap/sdk'\nimport { AddIcon, Box, CardBody, CardFooter, Text, TooltipText, useTooltip, FlexGap } from '@pancakeswap/uikit'\nimport { CommitButton } from 'components/CommitButton'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { CurrencySelect } from 'components/CurrencySelect'\nimport { RowBetween } from 'components/Layout/Row'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { usePair } from 'hooks/usePairs'\nimport { useLPApr } from 'state/swap/hooks'\nimport { formatAmount } from 'utils/formatInfoNumbers'\nimport { AppHeader } from '../../components/App'\nimport { CommonBasesType } from '../../components/SearchModal/types'\nimport { useCurrencySelectRoute } from './useCurrencySelectRoute'\n\nexport function ChoosePair({\n  currencyA,\n  currencyB,\n  error,\n  onNext,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  error?: string\n  onNext?: () => void\n}) {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const isValid = !error\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\n  const [, pair] = usePair(currencyA, currencyB)\n  const poolData = useLPApr(pair)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {\n      placement: 'bottom',\n    },\n  )\n\n  return (\n    <>\n      <AppHeader\n        title={t('Add Liquidity')}\n        subtitle={t('Receive LP tokens and earn 0.17% trading fees')}\n        helper={t(\n          'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n        )}\n        backTo=\"/liquidity\"\n      />\n      <CardBody>\n        <Box>\n          <Text textTransform=\"uppercase\" color=\"secondary\" bold small pb=\"24px\">\n            {t('Choose a valid pair')}\n          </Text>\n          <FlexGap gap=\"4px\">\n            <CurrencySelect\n              id=\"add-liquidity-select-tokena\"\n              selectedCurrency={currencyA}\n              onCurrencySelect={handleCurrencyASelect}\n              showCommonBases\n              commonBasesType={CommonBasesType.LIQUIDITY}\n            />\n            <AddIcon color=\"textSubtle\" />\n            <CurrencySelect\n              id=\"add-liquidity-select-tokenb\"\n              selectedCurrency={currencyB}\n              onCurrencySelect={handleCurrencyBSelect}\n              showCommonBases\n              commonBasesType={CommonBasesType.LIQUIDITY}\n            />\n          </FlexGap>\n          {pair && poolData && (\n            <RowBetween mt=\"24px\">\n              <TooltipText ref={targetRef} bold fontSize=\"12px\" color=\"secondary\">\n                {t('LP reward APR')}\n              </TooltipText>\n              {tooltipVisible && tooltip}\n              <Text bold color=\"primary\">\n                {formatAmount(poolData.lpApr7d)}%\n              </Text>\n            </RowBetween>\n          )}\n        </Box>\n      </CardBody>\n      <CardFooter>\n        {!account ? (\n          <ConnectWalletButton width=\"100%\" />\n        ) : (\n          <CommitButton\n            data-test=\"choose-pair-next\"\n            width=\"100%\"\n            variant={!isValid ? 'danger' : 'primary'}\n            onClick={onNext}\n            disabled={!isValid}\n          >\n            {error ?? t('Add Liquidity')}\n          </CommitButton>\n        )}\n      </CardFooter>\n    </>\n  )\n}\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { ONE_BIPS } from 'config/constants/exchange'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price<Currency, Currency>\n}) {\n  const { t } = useTranslation()\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback } from 'react'\nimport { Currency, CurrencyAmount, Fraction, Percent, Token } from '@pancakeswap/sdk'\nimport { InjectedModalProps, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport { Field } from 'state/burn/actions'\nimport _toNumber from 'lodash/toNumber'\nimport { AddLiquidityModalHeader, PairDistribution } from './common'\n\ninterface ConfirmAddLiquidityModalProps {\n  title: string\n  customOnDismiss: () => void\n  attemptingTxn: boolean\n  hash: string\n  pendingText: string\n  currencies: { [field in Field]?: Currency }\n  noLiquidity: boolean\n  allowedSlippage: number\n  liquidityErrorMessage: string\n  price: Fraction\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  onAdd: () => void\n  poolTokenPercentage: Percent\n  liquidityMinted: CurrencyAmount<Token>\n  currencyToAdd: Token\n  isStable?: boolean\n}\n\nconst ConfirmAddLiquidityModal: React.FC<\n  React.PropsWithChildren<InjectedModalProps & ConfirmAddLiquidityModalProps>\n> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  price,\n  currencies,\n  noLiquidity,\n  allowedSlippage,\n  parsedAmounts,\n  liquidityErrorMessage,\n  onAdd,\n  poolTokenPercentage,\n  liquidityMinted,\n  currencyToAdd,\n  isStable,\n}) => {\n  const { t } = useTranslation()\n\n  let percent = 0.5\n\n  // Calculate distribution percentage for display\n  if (isStable && parsedAmounts[Field.CURRENCY_A] && parsedAmounts[Field.CURRENCY_B]) {\n    const amountCurrencyA = _toNumber(parsedAmounts[Field.CURRENCY_A].toSignificant(6))\n    const amountCurrencyB = _toNumber(parsedAmounts[Field.CURRENCY_B].toSignificant(6))\n\n    percent = amountCurrencyA / (amountCurrencyA + amountCurrencyB)\n  }\n\n  const modalHeader = useCallback(() => {\n    return (\n      <AddLiquidityModalHeader\n        allowedSlippage={allowedSlippage}\n        currencies={currencies}\n        liquidityMinted={liquidityMinted}\n        poolTokenPercentage={poolTokenPercentage}\n        price={price}\n        noLiquidity={noLiquidity}\n      >\n        <PairDistribution\n          title={t('Input')}\n          percent={percent}\n          currencyA={currencies[Field.CURRENCY_A]}\n          currencyAValue={parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n          currencyB={currencies[Field.CURRENCY_B]}\n          currencyBValue={parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n        />\n      </AddLiquidityModalHeader>\n    )\n  }, [allowedSlippage, percent, currencies, liquidityMinted, noLiquidity, parsedAmounts, poolTokenPercentage, price, t])\n\n  const modalBottom = useCallback(() => {\n    return (\n      <Button width=\"100%\" onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    )\n  }, [noLiquidity, onAdd, t])\n\n  const confirmationContent = useCallback(\n    () =>\n      liquidityErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={liquidityErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, liquidityErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      minWidth={['100%', , '420px']}\n      title={title}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      currencyToAdd={currencyToAdd}\n      hash={hash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n\nexport default ConfirmAddLiquidityModal\n","import React, { useCallback, useMemo } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Currency, CurrencyAmount, Fraction, JSBI, Pair, Percent, Token } from '@pancakeswap/sdk'\nimport { InjectedModalProps, Text, ArrowDownIcon, Button, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { Field } from 'state/burn/actions'\nimport { CurrencyLogo } from 'components/Logo'\nimport useTotalSupply from 'hooks/useTotalSupply'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairDistribution, AddLiquidityModalHeader } from './common'\nimport { ZapErrorMessages } from './ZapErrorMessage'\n\ninterface ConfirmZapInModalProps {\n  title: string\n  customOnDismiss: () => void\n  attemptingTxn: boolean\n  hash: string\n  pendingText: string\n  currencies: { [field in Field]?: Currency }\n  allowedSlippage: number\n  liquidityErrorMessage: string\n  price: Fraction\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  onAdd: () => void\n  poolTokenPercentage: Percent\n  liquidityMinted: CurrencyAmount<Token>\n  pair: Pair\n  rebalancing?: boolean\n  zapSwapTokenField: Field\n  zapSwapOutTokenField: Field\n  zapInEstimated: {\n    swapAmountIn: BigNumber\n    swapAmountOut: BigNumber\n    isToken0Sold: boolean\n  }\n  zapMode: boolean\n  toggleZapMode: (value: boolean) => void\n}\n\nconst clamp = (num: number, min: number, max: number) => Math.min(Math.max(num, min), max)\n\nconst ConfirmZapInModal: React.FC<React.PropsWithChildren<InjectedModalProps & ConfirmZapInModalProps>> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  price,\n  currencies,\n  zapSwapTokenField,\n  zapSwapOutTokenField,\n  allowedSlippage,\n  parsedAmounts,\n  liquidityErrorMessage,\n  onAdd,\n  poolTokenPercentage,\n  liquidityMinted,\n  pair,\n  zapInEstimated,\n  rebalancing,\n  zapMode,\n  toggleZapMode,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n  const swapInCurrencyAmount = parsedAmounts[zapSwapTokenField]\n  const swapOutCurrencyAmount = parsedAmounts[zapSwapOutTokenField]\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    swapInCurrencyAmount && !swapOutCurrencyAmount\n      ? t('There is no %token1% input. Half of %token0% input is converted into %token1% to add liquidity.', {\n          token0: currencies[zapSwapTokenField]?.symbol,\n          token1: currencies[zapSwapOutTokenField]?.symbol,\n        })\n      : t('There is not enough %token1% input to match 50/50. Some of %token0% will be converted to %token1%', {\n          token0: currencies[zapSwapTokenField]?.symbol,\n          token1: currencies[zapSwapOutTokenField]?.symbol,\n        }),\n    {\n      placement: 'auto-start',\n    },\n  )\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!liquidityMinted &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, liquidityMinted.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, liquidityMinted, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, liquidityMinted, false),\n        ]\n      : [undefined, undefined]\n\n  const swapInTokenAmount = useMemo(\n    () =>\n      zapInEstimated &&\n      CurrencyAmount.fromRawAmount(\n        wrappedCurrency(currencies[zapSwapTokenField], chainId),\n        zapInEstimated.swapAmountIn.toString(),\n      ),\n    [chainId, currencies, zapInEstimated, zapSwapTokenField],\n  )\n\n  const swapOutTokenAmount = useMemo(\n    () =>\n      zapInEstimated?.swapAmountOut &&\n      CurrencyAmount.fromRawAmount(\n        wrappedCurrency(currencies[zapSwapOutTokenField], chainId),\n        zapInEstimated.swapAmountOut.toString(),\n      ),\n    [chainId, currencies, zapInEstimated?.swapAmountOut, zapSwapOutTokenField],\n  )\n\n  const inputPercent = useMemo(() => {\n    return swapInCurrencyAmount && swapOutCurrencyAmount\n      ? clamp(\n          // TODO: avoid use number\n          +swapInCurrencyAmount.toExact() /\n            +swapOutCurrencyAmount.toExact() /\n            (+pair.priceOf(swapOutCurrencyAmount.currency.wrapped).toSignificant() +\n              +swapInCurrencyAmount.toExact() / +swapOutCurrencyAmount.toExact()),\n          0.05,\n          0.95,\n        )\n      : swapInCurrencyAmount && !swapOutCurrencyAmount\n      ? 1\n      : undefined\n  }, [pair, swapInCurrencyAmount, swapOutCurrencyAmount])\n\n  const tokenDeposited = useMemo(\n    () => ({\n      [zapSwapTokenField]:\n        swapInTokenAmount?.currency && pair?.token0\n          ? pair.token0.equals(swapInTokenAmount.currency)\n            ? token0Deposited\n            : token1Deposited\n          : undefined,\n      [zapSwapOutTokenField]:\n        swapOutTokenAmount?.currency && pair?.token1\n          ? pair.token1.equals(swapOutTokenAmount.currency)\n            ? token1Deposited\n            : token0Deposited\n          : undefined,\n    }),\n    [\n      pair.token0,\n      pair.token1,\n      swapInTokenAmount?.currency,\n      swapOutTokenAmount?.currency,\n      token0Deposited,\n      token1Deposited,\n      zapSwapOutTokenField,\n      zapSwapTokenField,\n    ],\n  )\n\n  const modalHeader = useCallback(() => {\n    return (\n      <AddLiquidityModalHeader\n        allowedSlippage={allowedSlippage}\n        currencies={currencies}\n        liquidityMinted={liquidityMinted}\n        poolTokenPercentage={poolTokenPercentage}\n        price={price}\n      >\n        <PairDistribution\n          title={t('Input')}\n          percent={inputPercent}\n          currencyA={swapInCurrencyAmount ? currencies[zapSwapTokenField] : undefined}\n          currencyAValue={swapInCurrencyAmount?.toSignificant(6)}\n          currencyB={swapOutCurrencyAmount ? currencies[zapSwapOutTokenField] : undefined}\n          currencyBValue={swapOutCurrencyAmount?.toSignificant(6)}\n        />\n        {swapOutTokenAmount && swapInTokenAmount && currencies[zapSwapTokenField] && currencies[zapSwapOutTokenField] && (\n          <AutoColumn justify=\"center\" gap=\"16px\">\n            <ArrowDownIcon color=\"textSubtle\" />\n            <AutoRow gap=\"6px\" justify=\"center\">\n              <RowFixed gap=\"2px\">\n                <Text>{swapInTokenAmount?.toSignificant(6)}</Text>\n                <CurrencyLogo currency={currencies[zapSwapTokenField]} />\n                <Text>{currencies[zapSwapTokenField].symbol}</Text>\n              </RowFixed>\n              <Text>{t('to')}</Text>\n              <RowFixed gap=\"2px\">\n                <Text>{swapOutTokenAmount?.toSignificant(6)}</Text>\n                <CurrencyLogo currency={currencies[zapSwapOutTokenField]} />\n                <Text>{currencies[zapSwapOutTokenField].symbol}</Text>\n              </RowFixed>\n            </AutoRow>\n            <ArrowDownIcon color=\"textSubtle\" />\n          </AutoColumn>\n        )}\n        <AutoColumn gap=\"4px\">\n          {tooltipVisible && tooltip}\n          <PairDistribution\n            tooltipTargetRef={targetRef}\n            title={t('Pooled')}\n            percent={0.5}\n            currencyA={currencies[zapSwapTokenField]}\n            currencyAValue={tokenDeposited?.[zapSwapTokenField]?.toSignificant(6)}\n            currencyB={currencies[zapSwapOutTokenField]}\n            currencyBValue={tokenDeposited?.[zapSwapOutTokenField]?.toSignificant(6)}\n          />\n        </AutoColumn>\n      </AddLiquidityModalHeader>\n    )\n  }, [\n    allowedSlippage,\n    currencies,\n    liquidityMinted,\n    poolTokenPercentage,\n    price,\n    t,\n    inputPercent,\n    swapInCurrencyAmount,\n    zapSwapTokenField,\n    swapOutCurrencyAmount,\n    zapSwapOutTokenField,\n    swapOutTokenAmount,\n    swapInTokenAmount,\n    tooltip,\n    tooltipVisible,\n    targetRef,\n    tokenDeposited,\n  ])\n\n  const modalBottom = useCallback(() => {\n    return (\n      <Button width=\"100%\" onClick={onAdd} mt=\"20px\">\n        {t('Confirm Supply')}\n      </Button>\n    )\n  }, [onAdd, t])\n\n  const confirmationContent = useCallback(\n    () =>\n      liquidityErrorMessage ? (\n        <>\n          <ZapErrorMessages\n            isSingleToken={!rebalancing}\n            zapMode={zapMode}\n            toggleZapMode={toggleZapMode}\n            onModalDismiss={onDismiss}\n          />\n          <TransactionErrorContent onDismiss={onDismiss} message={liquidityErrorMessage} />\n        </>\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [liquidityErrorMessage, rebalancing, zapMode, toggleZapMode, onDismiss, modalHeader, modalBottom],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      minWidth={['100%', , '420px']}\n      title={title}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      currencyToAdd={pair?.liquidityToken}\n      hash={hash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n\nexport default ConfirmZapInModal\n","import { memo } from 'react'\nimport { Message, MessageText, Button, Box, Flex, useToast } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface ZapErrorMessagesProps {\n  isSingleToken: boolean\n  zapMode: boolean\n  toggleZapMode: (zapMode: boolean) => void\n  onModalDismiss: () => void\n}\n\nexport const ZapErrorMessages: React.FC<React.PropsWithChildren<ZapErrorMessagesProps>> = memo(\n  ({ isSingleToken, zapMode, toggleZapMode, onModalDismiss }) => {\n    const { t } = useTranslation()\n    const { toastInfo } = useToast()\n\n    const handleCloseButton = () => {\n      onModalDismiss()\n\n      if (zapMode) {\n        toggleZapMode(!zapMode)\n        toastInfo(t('Info'), t('Temporarily disabled Zap'))\n      }\n    }\n\n    return (\n      <Box margin=\"auto\" width={['100%', '100%', '380px']}>\n        <Message variant=\"warning\" mb=\"16px\">\n          <Flex flexDirection=\"column\">\n            <MessageText bold>{t('Currently using Zap for liquidity provisions.')}</MessageText>\n            <MessageText small>\n              {isSingleToken\n                ? t('Zap does NOT support tokens with fees on transfers. If you experience any issues, click')\n                : t(\n                    `Zap does NOT support tokens with fees on transfers. Please choose ’Don't convert’ and retry. If you experience any further issues, click`,\n                  )}\n              <Button p=\"0 4px\" scale=\"sm\" variant=\"text\" height=\"auto\" onClick={handleCloseButton}>\n                {t('here')}\n              </Button>\n              {t('to disable Zap temporarily.')}\n            </MessageText>\n          </Flex>\n        </Message>\n      </Box>\n    )\n  },\n)\n","import React from 'react'\nimport { Currency, Fraction, Percent, CurrencyAmount, Token } from '@pancakeswap/sdk'\nimport { Text, useTooltip, TooltipText, Box, Flex, Svg, SvgProps } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport { Field } from 'state/burn/actions'\nimport { DoubleCurrencyLogo, CurrencyLogo } from 'components/Logo'\nimport { GreyCard } from 'components/Card'\nimport { getLPSymbol } from 'utils/getLpSymbol'\n\nconst Dot = styled(Box)<{ scale?: 'sm' | 'md' }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n`\n\nconst CircleSvg = ({ percent = 1, ...props }: SvgProps & { percent?: number }) => (\n  <Svg width=\"60px\" height=\"60px\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <g filter=\"url(#filter0_i_1147_113741)\">\n      <circle r=\"10\" cx=\"10\" cy=\"10\" fill=\"#7645D9\" />\n      <circle\n        r=\"5\"\n        cx=\"10\"\n        cy=\"10\"\n        fill=\"transparent\"\n        stroke=\"#1FC7D4\"\n        strokeWidth=\"10\"\n        strokeDasharray={`calc(${percent * 100}px * 31.4 / 100) 31.4`}\n        transform=\"rotate(-90) translate(-20)\"\n      />\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_i_1147_113741\"\n        x={0}\n        y={0}\n        width={60}\n        height={60}\n        filterUnits=\"userSpaceOnUse\"\n        colorInterpolationFilters=\"sRGB\"\n      >\n        <feFlood floodOpacity={0} result=\"BackgroundImageFix\" />\n        <feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\n        <feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\n        <feOffset dy={-2} />\n        <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2={-1} k3={1} />\n        <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\" />\n        <feBlend in2=\"shape\" result=\"effect1_innerShadow_1147_113741\" />\n      </filter>\n    </defs>\n  </Svg>\n)\n\nconst Subtitle: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return (\n    <Text fontSize=\"12px\" textTransform=\"uppercase\" bold color=\"secondary\">\n      {children}\n    </Text>\n  )\n}\n\nexport const PairDistribution = ({\n  title,\n  percent,\n  currencyA,\n  currencyB,\n  currencyAValue,\n  currencyBValue,\n  tooltipTargetRef,\n}: {\n  title: React.ReactNode\n  percent?: number\n  currencyA?: Currency\n  currencyB?: Currency\n  currencyAValue?: string\n  currencyBValue?: string\n  tooltipTargetRef?: any\n}) => {\n  return (\n    <AutoColumn gap=\"8px\">\n      <Subtitle>{title}</Subtitle>\n      <Flex>\n        {typeof percent !== 'undefined' && (\n          <div ref={tooltipTargetRef}>\n            <CircleSvg percent={percent} mr=\"34px\" />\n          </div>\n        )}\n        <AutoColumn style={{ width: '100%' }}>\n          {currencyA && (\n            <RowBetween>\n              <AutoRow gap=\"4px\">\n                <Dot bg=\"primary\" />\n                <CurrencyLogo currency={currencyA} />\n                <Text>{currencyA?.symbol}</Text>\n              </AutoRow>\n              <Text>{currencyAValue}</Text>\n            </RowBetween>\n          )}\n\n          {currencyB && (\n            <RowBetween>\n              <AutoRow gap=\"4px\">\n                <Dot bg=\"secondary\" />\n                <CurrencyLogo currency={currencyB} />\n                <Text>{currencyB?.symbol}</Text>\n              </AutoRow>\n              <Text>{currencyBValue}</Text>\n            </RowBetween>\n          )}\n        </AutoColumn>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\ninterface AddLiquidityModalHeaderProps {\n  currencies: { [field in Field]?: Currency }\n  poolTokenPercentage?: Percent\n  liquidityMinted: CurrencyAmount<Token>\n  price: Fraction\n  allowedSlippage: number\n  children: React.ReactNode\n  noLiquidity?: boolean\n}\n\nexport const AddLiquidityModalHeader = ({\n  currencies,\n  poolTokenPercentage,\n  liquidityMinted,\n  price,\n  allowedSlippage,\n  noLiquidity,\n  children,\n}: AddLiquidityModalHeaderProps) => {\n  const { t } = useTranslation()\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\n    t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n      slippage: allowedSlippage / 100,\n    }),\n    { placement: 'auto' },\n  )\n\n  return (\n    <AutoColumn gap=\"24px\">\n      <AutoColumn gap=\"8px\">\n        <Subtitle>{t('You will receive')}</Subtitle>\n        <GreyCard>\n          <RowBetween>\n            <AutoRow gap=\"4px\">\n              <DoubleCurrencyLogo\n                currency0={currencies[Field.CURRENCY_A]}\n                currency1={currencies[Field.CURRENCY_B]}\n                size={24}\n              />\n              <Text color=\"textSubtle\">\n                {currencies[Field.CURRENCY_A]?.symbol &&\n                  currencies[Field.CURRENCY_B]?.symbol &&\n                  getLPSymbol(\n                    currencies[Field.CURRENCY_A]?.symbol,\n                    currencies[Field.CURRENCY_B]?.symbol,\n                    currencies[Field.CURRENCY_A]?.chainId,\n                  )}\n              </Text>\n            </AutoRow>\n            <Text ml=\"8px\">{liquidityMinted?.toSignificant(6)}</Text>\n          </RowBetween>\n        </GreyCard>\n      </AutoColumn>\n      <RowBetween>\n        <Subtitle>{t('Your pool share')}</Subtitle>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <AutoColumn gap=\"8px\">{children}</AutoColumn>\n      <AutoColumn>\n        <RowBetween>\n          <Subtitle>{t('Rates')}</Subtitle>\n          <Text>\n            {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n              currencies[Field.CURRENCY_B]?.symbol\n            }`}\n          </Text>\n        </RowBetween>\n        <RowBetween style={{ justifyContent: 'flex-end' }}>\n          <Text>\n            {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            }`}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n      {!noLiquidity && (\n        <RowBetween>\n          <Subtitle>{t('Slippage Tolerance')}</Subtitle>\n          <TooltipText ref={targetRef}>{allowedSlippage / 100}%</TooltipText>\n          {tooltipVisible && tooltip}\n        </RowBetween>\n      )}\n    </AutoColumn>\n  )\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { JSBI, CurrencyAmount, Token, WNATIVE, MINIMUM_LIQUIDITY, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  AddIcon,\n  CardBody,\n  Message,\n  useModal,\n  TooltipText,\n  useTooltip,\n  MessageText,\n} from '@pancakeswap/uikit'\nimport { logError } from 'utils/sentry'\nimport { useIsTransactionUnsupported, useIsTransactionWarning } from 'hooks/Trades'\nimport { useTranslation } from '@pancakeswap/localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useZapContract } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getZapAddress } from 'utils/addressHelpers'\nimport { CommitButton } from 'components/CommitButton'\nimport { getLPSymbol } from 'utils/getLpSymbol'\nimport { useRouter } from 'next/router'\nimport { callWithEstimateGas } from 'utils/calls'\nimport { SUPPORT_ZAP } from 'config/constants/supportChains'\nimport { ContractMethodName } from 'utils/types'\nimport { transactionErrorToUserReadableMessage } from 'utils/transactionErrorToUserReadableMessage'\nimport { useLPApr } from 'state/swap/hooks'\nimport { ROUTER_ADDRESS } from 'config/constants/exchange'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { PairState } from '../../hooks/usePairs'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState, useZapIn } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, usePairAdder, useUserSlippageTolerance, useZapModeManager } from '../../state/user/hooks'\nimport { calculateGasMargin } from '../../utils'\nimport { calculateSlippageAmount, useRouterContract } from '../../utils/exchange'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\nimport ConfirmAddLiquidityModal from './components/ConfirmAddLiquidityModal'\nimport ConfirmZapInModal from './components/ConfirmZapInModal'\nimport { ChoosePair } from './ChoosePair'\nimport { ZapCheckbox } from '../../components/CurrencyInputPanel/ZapCheckbox'\nimport { formatAmount } from '../../utils/formatInfoNumbers'\nimport { useCurrencySelectRoute } from './useCurrencySelectRoute'\nimport { CommonBasesType } from '../../components/SearchModal/types'\n\nenum Steps {\n  Choose,\n  Add,\n}\n\nconst zapAddress = getZapAddress()\n\nexport default function AddLiquidity({ currencyA, currencyB }) {\n  const router = useRouter()\n  const { account, chainId, isWrongNetwork } = useActiveWeb3React()\n\n  const addPair = usePairAdder()\n  const [zapMode] = useZapModeManager()\n  const expertMode = useIsExpertMode()\n\n  const [temporarilyZapMode, setTemporarilyZapMode] = useState(true)\n\n  const [steps, setSteps] = useState(Steps.Choose)\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (router.query.step === '1') {\n      setSteps(Steps.Add)\n    }\n  }, [router.query])\n\n  const zapModeStatus = useMemo(() => !!zapMode && temporarilyZapMode, [zapMode, temporarilyZapMode])\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts: mintParsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    addError,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const poolData = useLPApr(pair)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {\n      placement: 'bottom',\n    },\n  )\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  // modal and loading\n  const [{ attemptingTxn, liquidityErrorMessage, txHash }, setLiquidityState] = useState<{\n    attemptingTxn: boolean\n    liquidityErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    attemptingTxn: false,\n    liquidityErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // Zap state\n  const [zapTokenToggleA, setZapTokenToggleA] = useState(true)\n  const [zapTokenToggleB, setZapTokenToggleB] = useState(true)\n  const zapTokenCheckedA = zapTokenToggleA && currencyBalances?.[Field.CURRENCY_A]?.greaterThan(0)\n  const zapTokenCheckedB = zapTokenToggleB && currencyBalances?.[Field.CURRENCY_B]?.greaterThan(0)\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const canZap = useMemo(\n    () =>\n      !!zapModeStatus &&\n      !noLiquidity &&\n      SUPPORT_ZAP.includes(chainId) &&\n      !(\n        (pair && JSBI.lessThan(pair.reserve0.quotient, MINIMUM_LIQUIDITY)) ||\n        (pair && JSBI.lessThan(pair.reserve1.quotient, MINIMUM_LIQUIDITY))\n      ),\n    [chainId, noLiquidity, pair, zapModeStatus],\n  )\n\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\n\n  const { zapInEstimating, rebalancing, ...zapIn } = useZapIn({\n    pair,\n    canZap,\n    currencyA,\n    currencyB,\n    currencyBalances,\n    zapTokenCheckedA,\n    zapTokenCheckedB,\n    maxAmounts,\n  })\n\n  const parsedAmounts = canZap ? zapIn.parsedAmounts : mintParsedAmounts\n\n  const preferZapInstead = canZap && !zapIn.noNeedZap\n\n  // get formatted amounts\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]:\n        canZap &&\n        ((independentField === Field.CURRENCY_A && !zapTokenCheckedA) ||\n          (independentField === Field.CURRENCY_B && !zapTokenCheckedB))\n          ? ''\n          : typedValue,\n      [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n    }),\n    [\n      canZap,\n      dependentField,\n      independentField,\n      noLiquidity,\n      otherTypedValue,\n      parsedAmounts,\n      typedValue,\n      zapTokenCheckedA,\n      zapTokenCheckedB,\n    ],\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Token> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_A],\n    preferZapInstead ? zapAddress : ROUTER_ADDRESS[chainId],\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_B],\n    preferZapInstead ? zapAddress : ROUTER_ADDRESS[chainId],\n  )\n\n  const addTransaction = useTransactionAdder()\n\n  const routerContract = useRouterContract()\n\n  async function onAdd() {\n    if (!chainId || !account || !routerContract) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = mintParsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA?.isNative || currencyB?.isNative) {\n      const tokenBIsNative = currencyB?.isNative\n      estimate = routerContract.estimateGas.addLiquidityETH\n      method = routerContract.addLiquidityETH\n      args = [\n        (tokenBIsNative ? currencyA : currencyB)?.wrapped?.address ?? '', // token\n        (tokenBIsNative ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n        amountsMin[tokenBIsNative ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsNative ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsNative ? parsedAmountB : parsedAmountA).quotient.toString())\n    } else {\n      estimate = routerContract.estimateGas.addLiquidity\n      method = routerContract.addLiquidity\n      args = [\n        currencyA?.wrapped?.address ?? '',\n        currencyB?.wrapped?.address ?? '',\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n          const symbolA = currencies[Field.CURRENCY_A]?.symbol\n          const amountA = parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)\n          const symbolB = currencies[Field.CURRENCY_B]?.symbol\n          const amountB = parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)\n          addTransaction(response, {\n            summary: `Add ${amountA} ${symbolA} and ${amountB} ${symbolB}`,\n            translatableSummary: {\n              text: 'Add %amountA% %symbolA% and %amountB% %symbolB%',\n              data: { amountA, symbolA, amountB, symbolB },\n            },\n            type: 'add-liquidity',\n          })\n\n          if (pair) {\n            addPair(pair)\n          }\n        }),\n      )\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage:\n            err && err.code !== 4001\n              ? t('Add liquidity failed: %message%', { message: transactionErrorToUserReadableMessage(err, t) })\n              : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const pendingText = preferZapInstead\n    ? t('Zapping %amountA% %symbolA% and %amountB% %symbolB%', {\n        amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '0',\n        symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n        amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '0',\n        symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n      })\n    : t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n        amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n        symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n        amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n        symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n      })\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n  const addIsWarning = useIsTransactionWarning(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const zapContract = useZapContract(true)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <ConfirmAddLiquidityModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n      allowedSlippage={allowedSlippage}\n      onAdd={onAdd}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      noLiquidity={noLiquidity}\n      poolTokenPercentage={poolTokenPercentage}\n      liquidityMinted={liquidityMinted}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  async function onZapIn() {\n    if (!canZap || !parsedAmounts || !zapIn.zapInEstimated || !chainId || !zapContract) {\n      return\n    }\n\n    let method: ContractMethodName<typeof zapContract>\n    let args\n    let value: BigNumberish | null\n    let summary: string\n    let translatableSummary: { text: string; data?: Record<string, string | number> }\n    const minAmountOut = zapIn.zapInEstimated.swapAmountOut.mul(10000 - allowedSlippage).div(10000)\n    if (rebalancing) {\n      const maxAmountIn = zapIn.zapInEstimated.swapAmountIn.mul(10000 + allowedSlippage).div(10000)\n      const amountA = parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)\n      const symbolA = currencies[Field.CURRENCY_A]?.symbol\n      const amountB = parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)\n      const symbolB = currencies[Field.CURRENCY_B]?.symbol\n      summary = `Zap ${amountA} ${symbolA} and ${amountB} ${symbolB}`\n      translatableSummary = {\n        text: 'Zap %amountA% %symbolA% and %amountB% %symbolB%',\n        data: { amountA, symbolA, amountB, symbolB },\n      }\n      if (currencyA?.isNative || currencyB?.isNative) {\n        const tokenBIsBNB = currencyB?.isNative\n        method = 'zapInBNBRebalancing'\n        args = [\n          wrappedCurrency(currencies[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B], chainId).address, // token1\n          parsedAmounts[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].quotient.toString(), // token1AmountIn\n          pair.liquidityToken.address, // lp\n          maxAmountIn, // tokenAmountInMax\n          minAmountOut, // tokenAmountOutMin\n          zapIn.zapInEstimated.isToken0Sold && !tokenBIsBNB, // isToken0Sold\n        ]\n        value = parsedAmounts[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].quotient.toString()\n      } else {\n        method = 'zapInTokenRebalancing'\n        args = [\n          wrappedCurrency(currencies[Field.CURRENCY_A], chainId).address, // token0\n          wrappedCurrency(currencies[Field.CURRENCY_B], chainId).address, // token1\n          parsedAmounts[Field.CURRENCY_A].quotient.toString(), // token0AmountIn\n          parsedAmounts[Field.CURRENCY_B].quotient.toString(), // token1AmountIn\n          pair.liquidityToken.address, // lp\n          maxAmountIn, // tokenAmountInMax\n          minAmountOut, // tokenAmountOutMin\n          zapIn.zapInEstimated.isToken0Sold, // isToken0Sold\n        ]\n      }\n    } else if (currencies[zapIn.swapTokenField]?.isNative) {\n      method = 'zapInBNB'\n      args = [pair.liquidityToken.address, minAmountOut]\n      const amount = parsedAmounts[zapIn.swapTokenField]?.toSignificant(3)\n      const symbol = getLPSymbol(pair.token0.symbol, pair.token1.symbol, chainId)\n      summary = `Zap in ${amount} BNB for ${symbol}`\n      translatableSummary = {\n        text: 'Zap in %amount% BNB for %symbol%',\n        data: { amount, symbol },\n      }\n      value = parsedAmounts[zapIn.swapTokenField].quotient.toString()\n    } else {\n      method = 'zapInToken'\n      args = [\n        wrappedCurrency(currencies[zapIn.swapTokenField], chainId).address,\n        parsedAmounts[zapIn.swapTokenField].quotient.toString(),\n        pair.liquidityToken.address,\n        minAmountOut,\n      ]\n      const amount = parsedAmounts[zapIn.swapTokenField]?.toSignificant(3)\n      const { symbol } = currencies[zapIn.swapTokenField]\n      const lpSymbol = getLPSymbol(pair.token0.symbol, pair.token1.symbol, chainId)\n      summary = `Zap in ${amount} ${symbol} for ${lpSymbol}`\n      translatableSummary = {\n        text: 'Zap in %amount% %symbol% for %lpSymbol%',\n        data: { amount, symbol, lpSymbol },\n      }\n    }\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n\n    callWithEstimateGas(zapContract, method, args, value ? { value } : {})\n      .then((response) => {\n        setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n        addTransaction(response, {\n          summary,\n          translatableSummary,\n          type: 'add-liquidity',\n        })\n\n        if (pair) {\n          addPair(pair)\n        }\n      })\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage:\n            err && err.code !== 4001\n              ? t('Add liquidity failed: %message%', { message: transactionErrorToUserReadableMessage(err, t) })\n              : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const [onPresentZapInModal] = useModal(\n    <ConfirmZapInModal\n      title={t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      pair={pair}\n      allowedSlippage={allowedSlippage}\n      onAdd={onZapIn}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      poolTokenPercentage={zapIn.poolTokenPercentage}\n      liquidityMinted={zapIn.liquidityMinted}\n      zapSwapTokenField={zapIn.swapTokenField}\n      zapSwapOutTokenField={zapIn.swapOutTokenField}\n      zapInEstimated={zapIn.zapInEstimated}\n      rebalancing={rebalancing}\n      zapMode={zapModeStatus}\n      toggleZapMode={setTemporarilyZapMode}\n    />,\n    true,\n    true,\n    'zapInModal',\n  )\n\n  const handleEnableZap = () => {\n    if (!zapMode) {\n      setTemporarilyZapMode(!zapMode)\n    }\n  }\n\n  let isValid = !error\n  let errorText = error\n\n  if (preferZapInstead) {\n    isValid = !error && !zapIn.error\n    errorText = error ?? zapIn.error\n  } else {\n    isValid = !error && !addError\n    errorText = error ?? addError\n  }\n\n  const buttonDisabled =\n    !isValid ||\n    ((zapIn.parsedAmounts[Field.CURRENCY_A] || (!preferZapInstead && zapTokenCheckedA)) &&\n      approvalA !== ApprovalState.APPROVED) ||\n    ((zapIn.parsedAmounts[Field.CURRENCY_B] || (!preferZapInstead && zapTokenCheckedB)) &&\n      approvalB !== ApprovalState.APPROVED) ||\n    (zapIn.priceSeverity > 3 && preferZapInstead)\n\n  const showFieldAApproval =\n    (zapTokenCheckedA || !preferZapInstead) &&\n    (approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING)\n  const showFieldBApproval =\n    (zapTokenCheckedB || !preferZapInstead) &&\n    (approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING)\n\n  const shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid\n\n  const oneCurrencyIsWNATIVE = Boolean(\n    chainId && ((currencyA && currencyA.equals(WNATIVE[chainId])) || (currencyB && currencyB.equals(WNATIVE[chainId]))),\n  )\n\n  const noAnyInputAmount = !parsedAmounts[Field.CURRENCY_A] && !parsedAmounts[Field.CURRENCY_B]\n\n  const showAddLiquidity =\n    (!!currencies[Field.CURRENCY_A] && !!currencies[Field.CURRENCY_B] && steps === Steps.Add) || !canZap\n\n  const showZapWarning =\n    preferZapInstead &&\n    !noAnyInputAmount &&\n    ((!rebalancing && !(!zapTokenCheckedA && !zapTokenCheckedB)) || (rebalancing && zapIn.priceSeverity > 3))\n\n  const showReduceZapTokenButton =\n    preferZapInstead && (zapIn.priceSeverity > 3 || zapIn.zapInEstimatedError) && maxAmounts[zapIn.swapTokenField]\n\n  const showRebalancingConvert =\n    !showZapWarning &&\n    !noAnyInputAmount &&\n    !showReduceZapTokenButton &&\n    preferZapInstead &&\n    zapIn.isDependentAmountGreaterThanMaxAmount &&\n    rebalancing\n\n  const showZapIsAvailable =\n    !zapMode &&\n    !showZapWarning &&\n    !noAnyInputAmount &&\n    (!zapTokenCheckedA || !zapTokenCheckedB) &&\n    !noLiquidity &&\n    !(\n      (pair && JSBI.lessThan(pair.reserve0.quotient, MINIMUM_LIQUIDITY)) ||\n      (pair && JSBI.lessThan(pair.reserve1.quotient, MINIMUM_LIQUIDITY))\n    )\n\n  return (\n    <Page>\n      <AppBody>\n        {!showAddLiquidity && (\n          <ChoosePair\n            error={error}\n            currencyA={currencies[Field.CURRENCY_A]}\n            currencyB={currencies[Field.CURRENCY_B]}\n            onNext={() => setSteps(Steps.Add)}\n          />\n        )}\n        {showAddLiquidity && (\n          <>\n            <AppHeader\n              title={\n                currencies[Field.CURRENCY_A]?.symbol && currencies[Field.CURRENCY_B]?.symbol\n                  ? `${getLPSymbol(currencies[Field.CURRENCY_A].symbol, currencies[Field.CURRENCY_B].symbol, chainId)}`\n                  : t('Add Liquidity')\n              }\n              subtitle={t('Receive LP tokens and earn 0.17% trading fees')}\n              helper={t(\n                'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n              )}\n              backTo={canZap ? () => setSteps(Steps.Choose) : '/liquidity'}\n            />\n            <CardBody>\n              <AutoColumn gap=\"20px\">\n                {noLiquidity && (\n                  <ColumnCenter>\n                    <Message variant=\"warning\">\n                      <div>\n                        <Text bold mb=\"8px\">\n                          {t('You are the first liquidity provider.')}\n                        </Text>\n                        <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                        <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                      </div>\n                    </Message>\n                  </ColumnCenter>\n                )}\n                <CurrencyInputPanel\n                  disableCurrencySelect={canZap}\n                  showBUSD\n                  onInputBlur={canZap ? zapIn.onInputBlurOnce : undefined}\n                  error={zapIn.priceSeverity > 3 && zapIn.swapTokenField === Field.CURRENCY_A}\n                  disabled={canZap && !zapTokenCheckedA}\n                  beforeButton={\n                    canZap && (\n                      <ZapCheckbox\n                        disabled={currencyBalances?.[Field.CURRENCY_A]?.equalTo(0)}\n                        checked={zapTokenCheckedA}\n                        onChange={(e) => {\n                          setZapTokenToggleA(e.target.checked)\n                        }}\n                      />\n                    )\n                  }\n                  onCurrencySelect={handleCurrencyASelect}\n                  zapStyle={canZap ? 'zap' : 'noZap'}\n                  value={formattedAmounts[Field.CURRENCY_A]}\n                  onUserInput={onFieldAInput}\n                  onPercentInput={(percent) => {\n                    if (maxAmounts[Field.CURRENCY_A]) {\n                      onFieldAInput(maxAmounts[Field.CURRENCY_A]?.multiply(new Percent(percent, 100)).toExact() ?? '')\n                    }\n                  }}\n                  onMax={() => {\n                    onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                  }}\n                  showQuickInputButton\n                  showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                  currency={currencies[Field.CURRENCY_A]}\n                  id=\"add-liquidity-input-tokena\"\n                  showCommonBases\n                  commonBasesType={CommonBasesType.LIQUIDITY}\n                />\n                <ColumnCenter>\n                  <AddIcon width=\"16px\" />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  showBUSD\n                  onInputBlur={canZap ? zapIn.onInputBlurOnce : undefined}\n                  disabled={canZap && !zapTokenCheckedB}\n                  error={zapIn.priceSeverity > 3 && zapIn.swapTokenField === Field.CURRENCY_B}\n                  beforeButton={\n                    canZap && (\n                      <ZapCheckbox\n                        disabled={currencyBalances?.[Field.CURRENCY_B]?.equalTo(0)}\n                        checked={zapTokenCheckedB}\n                        onChange={(e) => {\n                          setZapTokenToggleB(e.target.checked)\n                        }}\n                      />\n                    )\n                  }\n                  onCurrencySelect={handleCurrencyBSelect}\n                  disableCurrencySelect={canZap}\n                  zapStyle={canZap ? 'zap' : 'noZap'}\n                  value={formattedAmounts[Field.CURRENCY_B]}\n                  onUserInput={onFieldBInput}\n                  onPercentInput={(percent) => {\n                    if (maxAmounts[Field.CURRENCY_B]) {\n                      onFieldBInput(maxAmounts[Field.CURRENCY_B]?.multiply(new Percent(percent, 100)).toExact() ?? '')\n                    }\n                  }}\n                  onMax={() => {\n                    onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                  }}\n                  showQuickInputButton\n                  showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                  currency={currencies[Field.CURRENCY_B]}\n                  id=\"add-liquidity-input-tokenb\"\n                  showCommonBases\n                  commonBasesType={CommonBasesType.LIQUIDITY}\n                />\n\n                {showZapWarning && (\n                  <Message variant={zapIn.priceSeverity > 3 ? 'danger' : 'warning'}>\n                    {zapIn.priceSeverity > 3 ? (\n                      <MessageText>\n                        {t('Price Impact Too High.')}{' '}\n                        <strong>\n                          {t('Reduce amount of %token% to maximum limit', {\n                            token: currencies[zapIn.swapTokenField]?.symbol,\n                          })}\n                        </strong>\n                      </MessageText>\n                    ) : (\n                      <MessageText>\n                        <strong>\n                          {t('No %token% input.', { token: currencies[zapIn.swapOutTokenField]?.symbol })}\n                        </strong>{' '}\n                        {t('Some of your %token0% will be converted to %token1%.', {\n                          token0: currencies[zapIn.swapTokenField]?.symbol,\n                          token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                        })}\n                      </MessageText>\n                    )}\n                  </Message>\n                )}\n\n                {showReduceZapTokenButton && (\n                  <RowFixed style={{ margin: 'auto' }} onClick={() => zapIn.convertToMaxZappable()}>\n                    <Button variant=\"secondary\" scale=\"sm\">\n                      {t('Reduce %token%', { token: currencies[zapIn.swapTokenField]?.symbol })}\n                    </Button>\n                  </RowFixed>\n                )}\n\n                {showZapIsAvailable && (\n                  <Message variant=\"warning\">\n                    <MessageText>\n                      {t('Zap allows you to add liquidity with only 1 single token. Click')}\n                      <Button p=\"0 4px\" scale=\"sm\" variant=\"text\" height=\"auto\" onClick={handleEnableZap}>\n                        {t('here')}\n                      </Button>\n                      {t('to try.')}\n                    </MessageText>\n                  </Message>\n                )}\n\n                {showRebalancingConvert && (\n                  <Message variant=\"warning\">\n                    <AutoColumn>\n                      <MessageText>\n                        <strong>\n                          {t('Not enough %token%.', { token: currencies[zapIn.swapOutTokenField]?.symbol })}\n                        </strong>{' '}\n                        {zapIn.gasOverhead\n                          ? t(\n                              'Some of your %token0% will be converted to %token1% before adding liquidity, but this may cause higher gas fees.',\n                              {\n                                token0: currencies[zapIn.swapTokenField]?.symbol,\n                                token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                              },\n                            )\n                          : t('Some of your %token0% will be converted to %token1%.', {\n                              token0: currencies[zapIn.swapTokenField]?.symbol,\n                              token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                            })}\n                      </MessageText>\n                    </AutoColumn>\n                  </Message>\n                )}\n\n                {showRebalancingConvert && (\n                  <RowFixed\n                    style={{ margin: 'auto' }}\n                    onClick={() => {\n                      if (dependentField === Field.CURRENCY_A) {\n                        onFieldAInput(maxAmounts[dependentField]?.toExact() ?? '')\n                      } else {\n                        onFieldBInput(maxAmounts[dependentField]?.toExact() ?? '')\n                      }\n                    }}\n                  >\n                    <Button variant=\"secondary\" scale=\"sm\">\n                      {t('Don’t convert')}\n                    </Button>\n                  </RowFixed>\n                )}\n\n                {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                  <>\n                    <LightCard padding=\"0px\" borderRadius=\"20px\">\n                      <RowBetween padding=\"1rem\">\n                        <Text fontSize=\"14px\">\n                          {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                        </Text>\n                      </RowBetween>{' '}\n                      <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                        <PoolPriceBar\n                          currencies={currencies}\n                          poolTokenPercentage={preferZapInstead ? zapIn.poolTokenPercentage : poolTokenPercentage}\n                          noLiquidity={noLiquidity}\n                          price={price}\n                        />\n                      </LightCard>\n                    </LightCard>\n                  </>\n                )}\n\n                <RowBetween>\n                  <Text bold fontSize=\"12px\" color=\"secondary\">\n                    {t('Slippage Tolerance')}\n                  </Text>\n                  <Text bold color=\"primary\">\n                    {allowedSlippage / 100}%\n                  </Text>\n                </RowBetween>\n\n                {pair && poolData && (\n                  <RowBetween>\n                    <TooltipText ref={targetRef} bold fontSize=\"12px\" color=\"secondary\">\n                      {t('LP reward APR')}\n                    </TooltipText>\n                    {tooltipVisible && tooltip}\n                    <Text bold color=\"primary\">\n                      {formatAmount(poolData.lpApr7d)}%\n                    </Text>\n                  </RowBetween>\n                )}\n\n                {addIsUnsupported || addIsWarning ? (\n                  <Button disabled mb=\"4px\">\n                    {t('Unsupported Asset')}\n                  </Button>\n                ) : !account ? (\n                  <ConnectWalletButton />\n                ) : isWrongNetwork ? (\n                  <CommitButton />\n                ) : (\n                  <AutoColumn gap=\"md\">\n                    {shouldShowApprovalGroup && (\n                      <RowBetween style={{ gap: '8px' }}>\n                        {showFieldAApproval && (\n                          <Button\n                            onClick={approveACallback}\n                            disabled={approvalA === ApprovalState.PENDING}\n                            width=\"100%\"\n                          >\n                            {approvalA === ApprovalState.PENDING ? (\n                              <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                            ) : (\n                              t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                            )}\n                          </Button>\n                        )}\n                        {showFieldBApproval && (\n                          <Button\n                            onClick={approveBCallback}\n                            disabled={approvalB === ApprovalState.PENDING}\n                            width=\"100%\"\n                          >\n                            {approvalB === ApprovalState.PENDING ? (\n                              <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                            ) : (\n                              t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                            )}\n                          </Button>\n                        )}\n                      </RowBetween>\n                    )}\n                    <CommitButton\n                      isLoading={preferZapInstead && zapInEstimating}\n                      variant={!isValid || zapIn.priceSeverity > 2 ? 'danger' : 'primary'}\n                      onClick={() => {\n                        if (preferZapInstead) {\n                          setLiquidityState({\n                            attemptingTxn: false,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined,\n                          })\n                          onPresentZapInModal()\n                          return\n                        }\n                        if (expertMode) {\n                          onAdd()\n                        } else {\n                          setLiquidityState({\n                            attemptingTxn: false,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined,\n                          })\n                          onPresentAddLiquidityModal()\n                        }\n                      }}\n                      disabled={buttonDisabled}\n                    >\n                      {errorText || t('Supply')}\n                    </CommitButton>\n                  </AutoColumn>\n                )}\n              </AutoColumn>\n            </CardBody>\n          </>\n        )}\n      </AppBody>\n      {!(addIsUnsupported || addIsWarning) ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWNATIVE} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { useRouter } from 'next/router'\nimport { useCallback } from 'react'\nimport currencyId from 'utils/currencyId'\n\nexport const useCurrencySelectRoute = () => {\n  const native = useNativeCurrency()\n  const router = useRouter()\n  const [currencyIdA, currencyIdB] = router.query.currency || []\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        router.replace(`/add/${currencyIdB}/${currencyIdA}`, undefined, { shallow: true })\n      } else if (currencyIdB) {\n        router.replace(`/add/${newCurrencyIdA}/${currencyIdB}`, undefined, { shallow: true })\n      } else {\n        router.replace(`/add/${newCurrencyIdA}`, undefined, { shallow: true })\n      }\n    },\n    [currencyIdB, router, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          router.replace(`/add/${currencyIdB}/${newCurrencyIdB}`, undefined, { shallow: true })\n        } else {\n          router.replace(`/add/${newCurrencyIdB}`, undefined, { shallow: true })\n        }\n      } else {\n        router.replace(`/add/${currencyIdA || native.symbol}/${newCurrencyIdB}`, undefined, { shallow: true })\n      }\n    },\n    [currencyIdA, router, currencyIdB, native],\n  )\n\n  return {\n    handleCurrencyASelect,\n    handleCurrencyBSelect,\n  }\n}\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardFooterProps = SpaceProps;\n\nconst CardFooter = styled.div<CardFooterProps>`\n  border-top: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  ${space}\n`;\n\nCardFooter.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardFooter;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","module.exports = require(\"@ethersproject/abi\");","module.exports = require(\"@ethersproject/address\");","module.exports = require(\"@ethersproject/bignumber\");","module.exports = require(\"@ethersproject/bytes\");","module.exports = require(\"@ethersproject/constants\");","module.exports = require(\"@ethersproject/contracts\");","module.exports = require(\"@ethersproject/providers\");","module.exports = require(\"@ethersproject/solidity\");","module.exports = require(\"@ethersproject/strings\");","module.exports = require(\"@ethersproject/units\");","module.exports = require(\"@gelatonetwork/limit-orders-lib\");","module.exports = require(\"@gnosis.pm/safe-apps-wagmi\");","module.exports = require(\"@radix-ui/react-slot\");","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"@uniswap/token-lists\");","module.exports = require(\"@vanilla-extract/recipes/createRuntimeFn\");","module.exports = require(\"@vanilla-extract/sprinkles/createRuntimeSprinkles\");","module.exports = require(\"ajv\");","module.exports = require(\"big.js\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"clsx\");","module.exports = require(\"date-fns\");","module.exports = require(\"decimal.js-light\");","module.exports = require(\"fast-json-stable-stringify\");","module.exports = require(\"graphql-request\");","module.exports = require(\"jsbi\");","module.exports = require(\"local-storage\");","module.exports = require(\"localforage\");","module.exports = require(\"lodash/chunk\");","module.exports = require(\"lodash/flatMap\");","module.exports = require(\"lodash/fromPairs\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash/groupBy\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/kebabCase\");","module.exports = require(\"lodash/keyBy\");","module.exports = require(\"lodash/mapValues\");","module.exports = require(\"lodash/memoize\");","module.exports = require(\"lodash/omitBy\");","module.exports = require(\"lodash/orderBy\");","module.exports = require(\"lodash/pickBy\");","module.exports = require(\"lodash/reduce\");","module.exports = require(\"lodash/times\");","module.exports = require(\"lodash/toNumber\");","module.exports = require(\"lodash/uniq\");","module.exports = require(\"lodash/uniqBy\");","module.exports = require(\"next-themes\");","module.exports = require(\"next/dist/shared/lib/app-router-context.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/head.js\");","module.exports = require(\"next/dist/shared/lib/i18n/normalize-locale-path.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/is-plain-object.js\");","module.exports = require(\"next/dist/shared/lib/mitt.js\");","module.exports = require(\"next/dist/shared/lib/page-path/denormalize-page-path.js\");","module.exports = require(\"next/dist/shared/lib/router-context.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/add-path-prefix.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/compare-states.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/format-next-pathname-info.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/format-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/get-asset-path-from-route.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/get-next-pathname-info.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/is-bot.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/is-dynamic.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/parse-path.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/parse-relative-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/path-has-prefix.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/querystring.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/remove-trailing-slash.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/resolve-rewrites.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/route-matcher.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/route-regex.js\");","module.exports = require(\"next/dist/shared/lib/utils.js\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"numeral\");","module.exports = require(\"qrcode.react\");","module.exports = require(\"react\");","module.exports = require(\"react-device-detect\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-popper\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-window\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"redux-persist\");","module.exports = require(\"redux-persist/lib/storage\");","module.exports = require(\"styled-components\");","module.exports = require(\"styled-system\");","module.exports = require(\"tiny-invariant\");","module.exports = require(\"tiny-warning\");","module.exports = require(\"toformat\");","module.exports = require(\"wagmi\");","module.exports = require(\"wagmi/chains\");","module.exports = require(\"wagmi/connectors/coinbaseWallet\");","module.exports = require(\"wagmi/connectors/injected\");","module.exports = require(\"wagmi/connectors/metaMask\");","module.exports = require(\"wagmi/connectors/walletConnect\");","module.exports = require(\"wagmi/providers/jsonRpc\");","module.exports = import(\"framer-motion\");;","module.exports = import(\"jotai\");;","module.exports = import(\"jotai/utils\");;","module.exports = import(\"js-cookie\");;","module.exports = import(\"swr\");;","module.exports = import(\"swr/immutable\");;"],"names":["Button","useSwitchNetworkLoading","useSetAtom","useActiveChainId","hideWrongNetworkModalAtom","Trans","wrongNetworkProps","variant","disabled","children","CommitButton","props","isWrongNetwork","switchNetworkLoading","setHideWrongNetwork","onClick","e","Checkbox","styled","ZapCheckBoxWrapper","label","theme","colors","background","cardBorder","ZapCheckbox","scale","ArrowDropDownIcon","Box","Text","useModal","Flex","CurrencySearchModal","useTranslation","formatNumber","useCurrencyBalance","useBUSDPrice","useWeb3React","CurrencyLogo","RowBetween","AutoRow","DropDownHeader","div","shadows","inset","inputSecondary","input","DropDownContainer","mediaQueries","sm","CurrencySelect","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","commonBasesType","hideBalance","account","selectedCurrencyBalance","undefined","t","onPresentCurrencyModal","price","quoted","quote","width","p","id","color","alignItems","justifyContent","currency","size","style","marginRight","bold","symbol","length","slice","className","justify","gap","fontSize","toSignificant","Number","isFinite","toExact","Modal","Link","AutoColumn","useActiveWeb3React","getBlockExploreLink","wrappedCurrency","useUnsupportedTokens","DetailsFooter","text","invertedContrast","UnsupportedModal","currencies","onDismiss","chainId","tokens","map","unsupportedTokens","title","token","Object","keys","includes","address","align","external","small","href","concat","UnsupportedCurrencyFooter","onPresentModal","useSingleCallResult","useMulticallContract","useCurrentBlockTimestamp","multicall","result","useMemo","useSelector","useTransactionDeadline","ttl","state","user","userDeadline","blockTimestamp","add","CAKE","USDC","useCurrency","useNativeCurrency","useRouter","useEffect","useAppDispatch","resetMintState","CHAIN_IDS","AddLiquidity","AddStableLiquidity","useStableConfig","StableConfigContext","AddLiquidityPage","router","dispatch","native","currencyIdA","currencyIdB","query","currencyA","currencyB","stableSwapConfig","stableConfig","tokenA","tokenB","Provider","value","chains","OLD_PATH_STRUCTURE","getStaticPaths","paths","params","fallback","getStaticProps","match","redirect","statusCode","destination","toLowerCase","BigNumber","BIG_ZERO","getNonBscVaultContract","getCrossFarmingSenderContract","MessageTypes","Deposit","Withdraw","EmergencyWithdraw","Claim","Chains","EVM","BSC","COMPENSATION_PRECISION","ORACLE_PRECISION","BNB_CHANGE","BUFFER","WITHDRAW_BUFFER","getNonBscVaultContractFee","pid","amount","userAddress","messageType","oraclePrice","gasPrice","nonBscVaultContract","crossFarmingAddress","exchangeRate","times","getNonce","nonces","nonce","toString","toJSON","encodeMessage","hasFirstTime","estimateGaslimit","Promise","all","is1st","calcFee","msgBusFee","destTxFee","totalFee","plus","depositFee","toFixed","estimateEvmGaslimit","fee","total","error","console","BOOSTED_FARM_GAS_LIMIT","DEFAULT_TOKEN_DECIMAL","options","gasLimit","stakeFarm","masterChefContract","deposit","unstakeFarm","withdraw","harvestFarm","nonBscStakeFarm","contract","info","nonBscUnstakeFarm","calculateGasMargin","estimateGas","methodName","methodArgs","overrides","gasMarginPer10000","Error","rawGasEstimation","gasEstimation","callWithEstimateGas","tx","poolsConfig","sousChefV2","bscRpcProvider","getAddress","getActivePools","block","eligiblePools","filter","pool","sousId","isFinished","blockNumber","getBlockNumber","startBlockCalls","contractAddress","name","endBlockCalls","startBlocks","endBlocks","reduce","accum","poolCheck","index","startBlock","endBlock","gte","lte","WNATIVE","NATIVE","getLPSymbol","token0Symbol","token1Symbol","CurrencyAmount","JSBI","BIG_INT_ZERO","MIN_BNB","maxAmountSpend","currencyAmount","isNative","greaterThan","quotient","fromRawAmount","subtract","transactionErrorToUserReadableMessage","reason","data","message","originalError","indexOf","substring","useCallback","useContext","useState","AddIcon","CardBody","Message","logError","LightCard","ColumnCenter","CurrencyInputPanel","ConnectWalletButton","PairState","ApprovalState","useApproveCallback","Field","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","calculateSlippageAmount","Dots","PoolPriceBar","Page","ConfirmAddLiquidityModal","useCurrencySelectRoute","CommonBasesType","AppHeader","AppBody","MinimalPositionCard","useStableLPDerivedMintInfo","expertMode","independentField","typedValue","otherTypedValue","dependentField","pair","pairState","currencyBalances","parsedAmounts","noLiquidity","liquidityMinted","poolTokenPercentage","addError","onFieldAInput","onFieldBInput","attemptingTxn","liquidityErrorMessage","txHash","setLiquidityState","allowedSlippage","maxAmounts","CURRENCY_A","CURRENCY_B","accumulator","field","handleCurrencyASelect","handleCurrencyBSelect","formattedAmounts","atMaxAmounts","equalTo","stableSwapContract","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","parsedAmountA","parsedAmountB","lpMintedSlippage","estimate","add_liquidity","method","tokenAmounts","token0","wrapped","args","then","estimatedGasLimit","response","hash","symbolA","amountA","symbolB","amountB","summary","translatableSummary","type","catch","err","code","pendingText","handleDismissConfirmation","onPresentAddLiquidityModal","customOnDismiss","currencyToAdd","liquidityToken","isStable","isValid","errorText","buttonDisabled","APPROVED","showFieldAApproval","NOT_APPROVED","PENDING","showFieldBApproval","shouldShowApprovalGroup","oneCurrencyIsWNATIVE","Boolean","equals","backTo","mb","showBUSD","zapStyle","onUserInput","onMax","showMaxButton","LIQUIDITY","INVALID","padding","borderRadius","asset","minWidth","maxWidth","marginTop","showUnwrapped","CardFooter","TooltipText","useTooltip","FlexGap","usePair","useLPApr","formatAmount","ChoosePair","onNext","poolData","targetRef","tooltip","tooltipVisible","placement","subtitle","helper","textTransform","pb","mt","ref","lpApr7d","data-test","ONE_BIPS","pt","assetA","assetB","invert","lessThan","React","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","_toNumber","AddLiquidityModalHeader","PairDistribution","percent","amountCurrencyA","amountCurrencyB","modalHeader","currencyAValue","currencyBValue","modalBottom","confirmationContent","topContent","bottomContent","content","ArrowDownIcon","RowFixed","useTotalSupply","ZapErrorMessages","clamp","num","min","max","Math","ConfirmZapInModal","zapSwapTokenField","zapSwapOutTokenField","zapInEstimated","rebalancing","zapMode","toggleZapMode","totalPoolTokens","swapInCurrencyAmount","swapOutCurrencyAmount","token1","token0Deposited","token1Deposited","greaterThanOrEqual","getLiquidityValue","swapInTokenAmount","swapAmountIn","swapOutTokenAmount","swapAmountOut","inputPercent","priceOf","tokenDeposited","tooltipTargetRef","isSingleToken","onModalDismiss","memo","MessageText","useToast","toastInfo","handleCloseButton","margin","flexDirection","height","Svg","DoubleCurrencyLogo","GreyCard","Dot","CircleSvg","viewBox","fill","xmlns","g","circle","r","cx","cy","stroke","strokeWidth","strokeDasharray","transform","defs","x","y","filterUnits","colorInterpolationFilters","feFlood","floodOpacity","feBlend","in","in2","feColorMatrix","values","feOffset","dy","feComposite","operator","k2","k3","Subtitle","mr","bg","slippage","currency0","currency1","ml","MINIMUM_LIQUIDITY","Percent","useIsTransactionUnsupported","useIsTransactionWarning","useZapContract","getZapAddress","SUPPORT_ZAP","ROUTER_ADDRESS","useDerivedMintInfo","useZapIn","usePairAdder","useZapModeManager","useRouterContract","Steps","Choose","Add","zapAddress","addPair","temporarilyZapMode","setTemporarilyZapMode","steps","setSteps","step","zapModeStatus","mintParsedAmounts","zapTokenToggleA","setZapTokenToggleA","zapTokenToggleB","setZapTokenToggleB","zapTokenCheckedA","zapTokenCheckedB","deadline","canZap","reserve0","reserve1","zapInEstimating","zapIn","preferZapInstead","noNeedZap","routerContract","amountsMin","tokenBIsNative","addLiquidityETH","toHexString","from","addLiquidity","addIsUnsupported","addIsWarning","zapContract","onZapIn","minAmountOut","mul","maxAmountIn","tokenBIsBNB","isToken0Sold","swapTokenField","lpSymbol","onPresentZapInModal","swapOutTokenField","handleEnableZap","priceSeverity","noAnyInputAmount","showAddLiquidity","showZapWarning","showReduceZapTokenButton","zapInEstimatedError","showRebalancingConvert","isDependentAmountGreaterThanMaxAmount","showZapIsAvailable","disableCurrencySelect","onInputBlur","onInputBlurOnce","beforeButton","checked","onChange","target","onPercentInput","multiply","showQuickInputButton","strong","convertToMaxZappable","gasOverhead","isLoading","currencyId","currencyA_","newCurrencyIdA","replace","shallow","currencyB_","newCurrencyIdB","space","defaultProps","Icon","path","d"],"sourceRoot":""}